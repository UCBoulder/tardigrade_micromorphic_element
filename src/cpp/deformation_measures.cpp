/*!===========================================================================
   |                                                                         |
   |                        deformation_measures.cpp                         |
   |                                                                         |
   ===========================================================================
   | The source file for a wrapper that converts variables and their         |
   | gradients generated by MOOSE into deformation measures which can be     |
   | used to compute the micromorphic stress measures and their tangents.    |
   | This is done to avoid any possible assumptions of symmetry which could  |
   | be present in the Tensor Mechanics physics module.                      |
   ===========================================================================
   | Dependencies:                                                           |
   |     Eigen: A matrix library available at eigen.tuxfamily.org            |
   ===========================================================================
   */

#include<deformation_measures.h>

namespace deformation_measures

{

    void get_deformation_gradient(const double (&_grad_u)[3][3], Matrix_3x3 &F){

        /*!==================================
           |    get_deformation_gradient    |
           ==================================

           Compute the deformation gradient from the 
           gradients of the displacements. The deformation 
           gradient can be computed via

           Finv(i,j) = eye(i,j) - _grad_u[i][j]

           where Finv is the inverse of the deformation gradient.

        */

        for (int i=0; i<3; i++){

            for (int j=0; j<3; j++){

                F(i,j) = -_grad_u[i][j];

            }

        }

        for (int i=0; i<3; i++){F(i,i) += 1;}

        F = F.inverse().eval();

        return;
    }

    void assemble_chi(const double (&_phi)[9], Matrix_3x3 &chi){

        /*!======================
           |    assemble_chi    |
           ======================

           Assemble the micro-deformation 
           tensor chi from the phi degrees of 
           freedom.

           _phi is assumed to be organized in 
           Voigt notation form i.e.

           phi_11, phi_22, phi_33, phi_23, phi_13, phi_12, phi_32, phi_31, phi_21

        */

        chi(0,0) = 1. + _phi[0];
        chi(1,1) = 1. + _phi[1];
        chi(2,2) = 1. + _phi[2];
        chi(1,2) = _phi[3];
        chi(0,2) = _phi[4];
        chi(0,1) = _phi[5];
        chi(2,1) = _phi[6];
        chi(2,0) = _phi[7];
        chi(1,0) = _phi[8];

    }

    void assemble_grad_chi(const double (&_grad_phi)[9][3], const Matrix_3x3 &F, Matrix_3x9 &grad_chi){

        /*!==========================
          |    assemble_grad_chi    |
          ===========================

          Assemble the gradient of chi w.r.t. the 
          reference coordinates.

          _grad_phi is assumed to be organized

          _grad_phi[I][k] = phi_iI,k

          where I is a ``super'' index which has the form

               0  1  2  3  4  5  6  7  8
          I = 11,22,33,23,13,12,32,31,21

          and k ranges from

              0  1  2
          k = 1, 2, 3

          We will map _phi_iI,k back to the reference 
          coordinates via

          _phi_iI,J = _phi_iI,k F_kJ

          and then assemble it into the required matrix form.


        */


        //We map the gradient from the current configuration to 
        //the reference configuration.
        double _grad_phi_map[9][3];

        for (int I=0; I<9; I++){

            for (int J=0; J<3; J++){

                _grad_phi_map[I][J] = 0.;

                for (int k=0; k<3; k++){

                    _grad_phi_map[I][J] += _grad_phi[I][k]*F(k,J);

                }

            }

        }

        grad_chi(0,0) = _grad_phi_map[0][0]; //111
        grad_chi(0,1) = _grad_phi_map[5][1]; //122
        grad_chi(0,2) = _grad_phi_map[4][2]; //133
        grad_chi(0,3) = _grad_phi_map[5][2]; //123
        grad_chi(0,4) = _grad_phi_map[0][2]; //113
        grad_chi(0,5) = _grad_phi_map[0][1]; //112
        grad_chi(0,6) = _grad_phi_map[4][1]; //132
        grad_chi(0,7) = _grad_phi_map[4][0]; //131
        grad_chi(0,8) = _grad_phi_map[5][0]; //121
        
        grad_chi(1,0) = _grad_phi_map[8][0]; //211
        grad_chi(1,1) = _grad_phi_map[1][1]; //222
        grad_chi(1,2) = _grad_phi_map[3][2]; //233
        grad_chi(1,3) = _grad_phi_map[1][2]; //223
        grad_chi(1,4) = _grad_phi_map[8][2]; //213
        grad_chi(1,5) = _grad_phi_map[8][1]; //212
        grad_chi(1,6) = _grad_phi_map[3][1]; //232
        grad_chi(1,7) = _grad_phi_map[3][0]; //231
        grad_chi(1,8) = _grad_phi_map[1][0]; //221

        grad_chi(2,0) = _grad_phi_map[7][0]; //311
        grad_chi(2,1) = _grad_phi_map[6][1]; //322
        grad_chi(2,2) = _grad_phi_map[2][2]; //333
        grad_chi(2,3) = _grad_phi_map[6][2]; //323
        grad_chi(2,4) = _grad_phi_map[7][2]; //313
        grad_chi(2,5) = _grad_phi_map[7][1]; //312
        grad_chi(2,6) = _grad_phi_map[2][1]; //332
        grad_chi(2,7) = _grad_phi_map[2][0]; //331
        grad_chi(2,8) = _grad_phi_map[6][0]; //321

        return;

    }

    void get_right_cauchy_green(const Matrix_3x3 &F, Matrix_3x3 &RCG){
        /*!================================
           |    get_right_cauchy_green    |
           ================================

           Get the right Cauchy-Green deformation 
           tensor.

           C_IJ = F_iI F_iJ

        */

        RCG = F.transpose()*F;
        return;
    }

    void get_left_cauchy_green(const Matrix_3x3 &F, Matrix_3x3 &LCG){

        /*!===============================
           |    get_left_cauchy_green    |
           ===============================

           Get the left Cauchy-Green deformation
           tensor.

           b_ij = F_iI F_jI

        */

        LCG = F*F.transpose();
        return;
    }

    void get_lagrange_strain(const Matrix_3x3 &F, Matrix_3x3& E){

        /*!=============================
           |    get_lagrange_strain    |
           =============================

           Get the lagrange strain tensor.

           E_IJ = 0.5*(F_iI F_iJ - I_IJ)

        */

        E = 0.5*F.transpose()*F;
        for (int i=0; i<3; i++){E(i,i) -= 0.5;}

        return;
    }

    void get_almansi_strain(const Matrix_3x3 &F, Matrix_3x3 &e){
        /*!============================
           |    get_almansi_strain    |
           ============================

           Compute the almansi strain.

           e_ij = 0.5*(I_ij - (F_iI F_jI)**-1)

        */

        e = -0.5*(F*F.transpose()).inverse();
        for (int i=0; i<3; i++){e(i,i) += 0.5;}
        return;
    }

    void get_small_strain(const double (&_grad_u)[3][3], Matrix_3x3 &epsilon){
         /*!=========================
           |    get_small_strain    |
           ==========================

           Compute the small strain tensor.

           epsilon(i,j) = 0.5*(_grad_u[i][j] + _grad_u[j][i])

         */

         for (int i=0; i<3; i++){

             for (int j=0; j<3; j++){

                 epsilon(i,j) = 0.5*(_grad_u[i][j] + _grad_u[j][i]);

             }
         }
             
         return;
    }

    void get_psi(const Matrix_3x3 &F, const Matrix_3x3 &chi, Matrix_3x3 &psi){
        /*!=================
           |    get_psi    |
           =================

           Compute the mixed deformation measure psi.

           psi_IJ = F_iI chi_iJ

        */

        psi = F.transpose()*chi;

        return;
    }

    void get_micro_strain(const Matrix_3x3 &psi, Matrix_3x3 &E_micro){
        /*==========================
          |    get_micro_strain    |
          ==========================

          Compute the micromorphic strain.

          E_micro_IJ = psi_IJ - eye_IJ

        */

        E_micro = psi - Matrix_3x3::Identity();

        return;
    }

    void get_gamma(const Matrix_3x3 &F, const Matrix_3x9 &grad_chi, Matrix_3x9 &gamma){
        /*!===================
           |    get_gamma    |
           ===================

           Compute the value of the mixed deformation measure gamma.

           gamma_IJK = F_iI chi_iJ,K

           The form provided here is gamma_IJ

           where
                0   1   2   3   4   5   6   7   8
           J = 11, 22, 33, 23, 13, 12, 32, 31, 21

        */

        gamma = F.transpose()*grad_chi;

        return;
    }

    void voigt_3x3_symm_tensor(const Matrix_3x3 &A, Vector_6 &v){
        /*!==============================
           |    voigt_3x3_symm_tensor   |
           ==============================

           Create the voigt notation of a symmetric second order tensor.

        */

        v(0) = A(0,0);
        v(1) = A(1,1);
        v(2) = A(2,2);
        v(3) = A(1,2);
        v(4) = A(0,2);
        v(5) = A(0,1);

        return;
    }

    void voigt_3x3_tensor(const Matrix_3x3 &A, Vector_9 &v){
        /*!=========================
           |    voigt_3x3_tensor   |
           =========================

           Create the voigt notation of a general second order tensor.

        */

        v(0) = A(0,0);
        v(1) = A(1,1);
        v(2) = A(2,2);
        v(3) = A(1,2);
        v(4) = A(0,2);
        v(5) = A(0,1);
        v(6) = A(2,1);
        v(7) = A(2,0);
        v(8) = A(1,0);

        return;
    }
    
    void undo_voigt_3x3_tensor(const Vector_9 &v, Matrix_3x3 &A){
        /*!===============================
           |    undo_voigt_3x3_tensor    |
           ===============================
        
           Undo the voigt notation on a vector of length 9.
        
        */
        
        A(0,0) = v(0);
        A(1,1) = v(1);
        A(2,2) = v(2);
        A(1,2) = v(3);
        A(0,2) = v(4);
        A(0,1) = v(5);
        A(2,1) = v(6);
        A(2,0) = v(7);
        A(1,0) = v(8);
    }

    void voigt_3x9_tensor(const Matrix_3x9 &A, Vector_27 &v){
        /*!==========================
           |    voigt_3x9_tensor    |
           ==========================

           Create the voigt notation of a general third order tensor
           which has the second two indices are in voigt notation already.

        */

        for (int i=0; i<3; i++){

            for (int j=0; j<9; j++){
                v(i*9 + j) = A(i,j); 
            }

        }
        return;
    }
    
    void undo_voigt_3x9_tensor(const Vector_27 &v, Matrix_3x9 &A){
        /*!===============================
           |    undo_voigt_3x9_tensor    |
           ===============================

           Undo the voigt notation of a general third order tensor
           which has the second two indices are in voigt notation already.

        */

        for (int i=0; i<3; i++){

            for (int j=0; j<9; j++){
                A(i,j) = v(i*9 + j);
            }

        }
        return;
    }
    
    void perform_left_positive_cyclic_permutation(Vector_27 &A){
        /*!==========================================
           |    perform_left_cyclic_permutation    |
           ==========================================
          
           Perform a left positive cyclic permutation on a third order tensor in vector form i.e.
           
           A_ijk -> A_jki
        
        */
        
        Vector_27 swap;
        
        swap[0] = A[0];
        swap[1] = A[14];
        swap[2] = A[22];
        swap[3] = A[23];
        swap[4] = A[18];
        swap[5] = A[9];
        swap[6] = A[13];
        swap[7] = A[4];
        swap[8] = A[5];
        swap[9] = A[8];
        swap[10] = A[10];
        swap[11] = A[21];
        swap[12] = A[19];
        swap[13] = A[26];
        swap[14] = A[17];
        swap[15] = A[12];
        swap[16] = A[3];
        swap[17] = A[1];
        swap[18] = A[7];
        swap[19] = A[15];
        swap[20] = A[20];
        swap[21] = A[24];
        swap[22] = A[25];
        swap[23] = A[16];
        swap[24] = A[11];
        swap[25] = A[2];
        swap[26] = A[6];
        
        A = swap;
        
    }

    void perform_right_positive_cyclic_permutation(Vector_27 &A){
        /*!==========================================
           |    perform_right_cyclic_permutation    |
           ==========================================
          
           Perform a right positive cyclic permutation on a third order tensor in vector form i.e.
           
           A_ijk -> A_kij
        
        */
        
        Vector_27 swap;
        
        swap[0] = A[0];
        swap[1] = A[17];
        swap[2] = A[25];
        swap[3] = A[16];
        swap[4] = A[7];
        swap[5] = A[8];
        swap[6] = A[26];
        swap[7] = A[18];
        swap[8] = A[9];
        swap[9] = A[5];
        swap[10] = A[10];
        swap[11] = A[24];
        swap[12] = A[15];
        swap[13] = A[6];
        swap[14] = A[1];
        swap[15] = A[19];
        swap[16] = A[23];
        swap[17] = A[14];
        swap[18] = A[4];
        swap[19] = A[12];
        swap[20] = A[20];
        swap[21] = A[11];
        swap[22] = A[2];
        swap[23] = A[3];
        swap[24] = A[21];
        swap[25] = A[22];
        swap[26] = A[13];
        
        A = swap;
        
    }
    
    void dot_2ot_4ot(const int &i, const int &mode, const Matrix_3x3 &sot, const Matrix_9x9 &fot, Matrix_9x9 &result){
        /*!==================
        |    dot_2ot_4ot    |
        =====================
        
        Compute the dot product of a second order tensor and a fourth order tensor at index i+1 i.e.
        
        index = 0, mode=0
        
        result_ijkl = sot_im fot_mjkl
        
        index = 1, mode=0
        
        result_ijkl = sot_im fot_jmkl
        
        index = 0, mode=1
        
        result_ijkl = sot_jm fot_mikl
        
        index = 1, mode=1
        
        result_ijkl = sot_jm fot_imkl
        
        */
        //Extract the second order tensor
        double sot11 = sot(0,0);
        double sot12 = sot(0,1);
        double sot13 = sot(0,2);
        double sot21 = sot(1,0);
        double sot22 = sot(1,1);
        double sot23 = sot(1,2);
        double sot31 = sot(2,0);
        double sot32 = sot(2,1);
        double sot33 = sot(2,2);

        //Extract the fourth order tensor
        double fot1111 = fot(0,0);
        double fot1112 = fot(0,5);
        double fot1113 = fot(0,4);
        double fot1121 = fot(0,8);
        double fot1122 = fot(0,1);
        double fot1123 = fot(0,3);
        double fot1131 = fot(0,7);
        double fot1132 = fot(0,6);
        double fot1133 = fot(0,2);
        double fot1211 = fot(5,0);
        double fot1212 = fot(5,5);
        double fot1213 = fot(5,4);
        double fot1221 = fot(5,8);
        double fot1222 = fot(5,1);
        double fot1223 = fot(5,3);
        double fot1231 = fot(5,7);
        double fot1232 = fot(5,6);
        double fot1233 = fot(5,2);
        double fot1311 = fot(4,0);
        double fot1312 = fot(4,5);
        double fot1313 = fot(4,4);
        double fot1321 = fot(4,8);
        double fot1322 = fot(4,1);
        double fot1323 = fot(4,3);
        double fot1331 = fot(4,7);
        double fot1332 = fot(4,6);
        double fot1333 = fot(4,2);
        double fot2111 = fot(8,0);
        double fot2112 = fot(8,5);
        double fot2113 = fot(8,4);
        double fot2121 = fot(8,8);
        double fot2122 = fot(8,1);
        double fot2123 = fot(8,3);
        double fot2131 = fot(8,7);
        double fot2132 = fot(8,6);
        double fot2133 = fot(8,2);
        double fot2211 = fot(1,0);
        double fot2212 = fot(1,5);
        double fot2213 = fot(1,4);
        double fot2221 = fot(1,8);
        double fot2222 = fot(1,1);
        double fot2223 = fot(1,3);
        double fot2231 = fot(1,7);
        double fot2232 = fot(1,6);
        double fot2233 = fot(1,2);
        double fot2311 = fot(3,0);
        double fot2312 = fot(3,5);
        double fot2313 = fot(3,4);
        double fot2321 = fot(3,8);
        double fot2322 = fot(3,1);
        double fot2323 = fot(3,3);
        double fot2331 = fot(3,7);
        double fot2332 = fot(3,6);
        double fot2333 = fot(3,2);
        double fot3111 = fot(7,0);
        double fot3112 = fot(7,5);
        double fot3113 = fot(7,4);
        double fot3121 = fot(7,8);
        double fot3122 = fot(7,1);
        double fot3123 = fot(7,3);
        double fot3131 = fot(7,7);
        double fot3132 = fot(7,6);
        double fot3133 = fot(7,2);
        double fot3211 = fot(6,0);
        double fot3212 = fot(6,5);
        double fot3213 = fot(6,4);
        double fot3221 = fot(6,8);
        double fot3222 = fot(6,1);
        double fot3223 = fot(6,3);
        double fot3231 = fot(6,7);
        double fot3232 = fot(6,6);
        double fot3233 = fot(6,2);
        double fot3311 = fot(2,0);
        double fot3312 = fot(2,5);
        double fot3313 = fot(2,4);
        double fot3321 = fot(2,8);
        double fot3322 = fot(2,1);
        double fot3323 = fot(2,3);
        double fot3331 = fot(2,7);
        double fot3332 = fot(2,6);
        double fot3333 = fot(2,2);

        //Compute the dot product
        if (i==0){
                result(0,0) = fot1111*sot11 + fot2111*sot12 + fot3111*sot13;
                result(0,1) = fot1122*sot11 + fot2122*sot12 + fot3122*sot13;
                result(0,2) = fot1133*sot11 + fot2133*sot12 + fot3133*sot13;
                result(0,3) = fot1123*sot11 + fot2123*sot12 + fot3123*sot13;
                result(0,4) = fot1113*sot11 + fot2113*sot12 + fot3113*sot13;
                result(0,5) = fot1112*sot11 + fot2112*sot12 + fot3112*sot13;
                result(0,6) = fot1132*sot11 + fot2132*sot12 + fot3132*sot13;
                result(0,7) = fot1131*sot11 + fot2131*sot12 + fot3131*sot13;
                result(0,8) = fot1121*sot11 + fot2121*sot12 + fot3121*sot13;
                result(1,0) = fot1211*sot21 + fot2211*sot22 + fot3211*sot23;
                result(1,1) = fot1222*sot21 + fot2222*sot22 + fot3222*sot23;
                result(1,2) = fot1233*sot21 + fot2233*sot22 + fot3233*sot23;
                result(1,3) = fot1223*sot21 + fot2223*sot22 + fot3223*sot23;
                result(1,4) = fot1213*sot21 + fot2213*sot22 + fot3213*sot23;
                result(1,5) = fot1212*sot21 + fot2212*sot22 + fot3212*sot23;
                result(1,6) = fot1232*sot21 + fot2232*sot22 + fot3232*sot23;
                result(1,7) = fot1231*sot21 + fot2231*sot22 + fot3231*sot23;
                result(1,8) = fot1221*sot21 + fot2221*sot22 + fot3221*sot23;
                result(2,0) = fot1311*sot31 + fot2311*sot32 + fot3311*sot33;
                result(2,1) = fot1322*sot31 + fot2322*sot32 + fot3322*sot33;
                result(2,2) = fot1333*sot31 + fot2333*sot32 + fot3333*sot33;
                result(2,3) = fot1323*sot31 + fot2323*sot32 + fot3323*sot33;
                result(2,4) = fot1313*sot31 + fot2313*sot32 + fot3313*sot33;
                result(2,5) = fot1312*sot31 + fot2312*sot32 + fot3312*sot33;
                result(2,6) = fot1332*sot31 + fot2332*sot32 + fot3332*sot33;
                result(2,7) = fot1331*sot31 + fot2331*sot32 + fot3331*sot33;
                result(2,8) = fot1321*sot31 + fot2321*sot32 + fot3321*sot33;
                result(3,0) = fot1311*sot21 + fot2311*sot22 + fot3311*sot23;
                result(3,1) = fot1322*sot21 + fot2322*sot22 + fot3322*sot23;
                result(3,2) = fot1333*sot21 + fot2333*sot22 + fot3333*sot23;
                result(3,3) = fot1323*sot21 + fot2323*sot22 + fot3323*sot23;
                result(3,4) = fot1313*sot21 + fot2313*sot22 + fot3313*sot23;
                result(3,5) = fot1312*sot21 + fot2312*sot22 + fot3312*sot23;
                result(3,6) = fot1332*sot21 + fot2332*sot22 + fot3332*sot23;
                result(3,7) = fot1331*sot21 + fot2331*sot22 + fot3331*sot23;
                result(3,8) = fot1321*sot21 + fot2321*sot22 + fot3321*sot23;
                result(4,0) = fot1311*sot11 + fot2311*sot12 + fot3311*sot13;
                result(4,1) = fot1322*sot11 + fot2322*sot12 + fot3322*sot13;
                result(4,2) = fot1333*sot11 + fot2333*sot12 + fot3333*sot13;
                result(4,3) = fot1323*sot11 + fot2323*sot12 + fot3323*sot13;
                result(4,4) = fot1313*sot11 + fot2313*sot12 + fot3313*sot13;
                result(4,5) = fot1312*sot11 + fot2312*sot12 + fot3312*sot13;
                result(4,6) = fot1332*sot11 + fot2332*sot12 + fot3332*sot13;
                result(4,7) = fot1331*sot11 + fot2331*sot12 + fot3331*sot13;
                result(4,8) = fot1321*sot11 + fot2321*sot12 + fot3321*sot13;
                result(5,0) = fot1211*sot11 + fot2211*sot12 + fot3211*sot13;
                result(5,1) = fot1222*sot11 + fot2222*sot12 + fot3222*sot13;
                result(5,2) = fot1233*sot11 + fot2233*sot12 + fot3233*sot13;
                result(5,3) = fot1223*sot11 + fot2223*sot12 + fot3223*sot13;
                result(5,4) = fot1213*sot11 + fot2213*sot12 + fot3213*sot13;
                result(5,5) = fot1212*sot11 + fot2212*sot12 + fot3212*sot13;
                result(5,6) = fot1232*sot11 + fot2232*sot12 + fot3232*sot13;
                result(5,7) = fot1231*sot11 + fot2231*sot12 + fot3231*sot13;
                result(5,8) = fot1221*sot11 + fot2221*sot12 + fot3221*sot13;
                result(6,0) = fot1211*sot31 + fot2211*sot32 + fot3211*sot33;
                result(6,1) = fot1222*sot31 + fot2222*sot32 + fot3222*sot33;
                result(6,2) = fot1233*sot31 + fot2233*sot32 + fot3233*sot33;
                result(6,3) = fot1223*sot31 + fot2223*sot32 + fot3223*sot33;
                result(6,4) = fot1213*sot31 + fot2213*sot32 + fot3213*sot33;
                result(6,5) = fot1212*sot31 + fot2212*sot32 + fot3212*sot33;
                result(6,6) = fot1232*sot31 + fot2232*sot32 + fot3232*sot33;
                result(6,7) = fot1231*sot31 + fot2231*sot32 + fot3231*sot33;
                result(6,8) = fot1221*sot31 + fot2221*sot32 + fot3221*sot33;
                result(7,0) = fot1111*sot31 + fot2111*sot32 + fot3111*sot33;
                result(7,1) = fot1122*sot31 + fot2122*sot32 + fot3122*sot33;
                result(7,2) = fot1133*sot31 + fot2133*sot32 + fot3133*sot33;
                result(7,3) = fot1123*sot31 + fot2123*sot32 + fot3123*sot33;
                result(7,4) = fot1113*sot31 + fot2113*sot32 + fot3113*sot33;
                result(7,5) = fot1112*sot31 + fot2112*sot32 + fot3112*sot33;
                result(7,6) = fot1132*sot31 + fot2132*sot32 + fot3132*sot33;
                result(7,7) = fot1131*sot31 + fot2131*sot32 + fot3131*sot33;
                result(7,8) = fot1121*sot31 + fot2121*sot32 + fot3121*sot33;
                result(8,0) = fot1111*sot21 + fot2111*sot22 + fot3111*sot23;
                result(8,1) = fot1122*sot21 + fot2122*sot22 + fot3122*sot23;
                result(8,2) = fot1133*sot21 + fot2133*sot22 + fot3133*sot23;
                result(8,3) = fot1123*sot21 + fot2123*sot22 + fot3123*sot23;
                result(8,4) = fot1113*sot21 + fot2113*sot22 + fot3113*sot23;
                result(8,5) = fot1112*sot21 + fot2112*sot22 + fot3112*sot23;
                result(8,6) = fot1132*sot21 + fot2132*sot22 + fot3132*sot23;
                result(8,7) = fot1131*sot21 + fot2131*sot22 + fot3131*sot23;
                result(8,8) = fot1121*sot21 + fot2121*sot22 + fot3121*sot23;
        }
        else if(i==1){
                result(0,0) = fot1111*sot11 + fot1211*sot12 + fot1311*sot13;
                result(0,1) = fot1122*sot11 + fot1222*sot12 + fot1322*sot13;
                result(0,2) = fot1133*sot11 + fot1233*sot12 + fot1333*sot13;
                result(0,3) = fot1123*sot11 + fot1223*sot12 + fot1323*sot13;
                result(0,4) = fot1113*sot11 + fot1213*sot12 + fot1313*sot13;
                result(0,5) = fot1112*sot11 + fot1212*sot12 + fot1312*sot13;
                result(0,6) = fot1132*sot11 + fot1232*sot12 + fot1332*sot13;
                result(0,7) = fot1131*sot11 + fot1231*sot12 + fot1331*sot13;
                result(0,8) = fot1121*sot11 + fot1221*sot12 + fot1321*sot13;
                result(1,0) = fot2111*sot21 + fot2211*sot22 + fot2311*sot23;
                result(1,1) = fot2122*sot21 + fot2222*sot22 + fot2322*sot23;
                result(1,2) = fot2133*sot21 + fot2233*sot22 + fot2333*sot23;
                result(1,3) = fot2123*sot21 + fot2223*sot22 + fot2323*sot23;
                result(1,4) = fot2113*sot21 + fot2213*sot22 + fot2313*sot23;
                result(1,5) = fot2112*sot21 + fot2212*sot22 + fot2312*sot23;
                result(1,6) = fot2132*sot21 + fot2232*sot22 + fot2332*sot23;
                result(1,7) = fot2131*sot21 + fot2231*sot22 + fot2331*sot23;
                result(1,8) = fot2121*sot21 + fot2221*sot22 + fot2321*sot23;
                result(2,0) = fot3111*sot31 + fot3211*sot32 + fot3311*sot33;
                result(2,1) = fot3122*sot31 + fot3222*sot32 + fot3322*sot33;
                result(2,2) = fot3133*sot31 + fot3233*sot32 + fot3333*sot33;
                result(2,3) = fot3123*sot31 + fot3223*sot32 + fot3323*sot33;
                result(2,4) = fot3113*sot31 + fot3213*sot32 + fot3313*sot33;
                result(2,5) = fot3112*sot31 + fot3212*sot32 + fot3312*sot33;
                result(2,6) = fot3132*sot31 + fot3232*sot32 + fot3332*sot33;
                result(2,7) = fot3131*sot31 + fot3231*sot32 + fot3331*sot33;
                result(2,8) = fot3121*sot31 + fot3221*sot32 + fot3321*sot33;
                result(3,0) = fot3111*sot21 + fot3211*sot22 + fot3311*sot23;
                result(3,1) = fot3122*sot21 + fot3222*sot22 + fot3322*sot23;
                result(3,2) = fot3133*sot21 + fot3233*sot22 + fot3333*sot23;
                result(3,3) = fot3123*sot21 + fot3223*sot22 + fot3323*sot23;
                result(3,4) = fot3113*sot21 + fot3213*sot22 + fot3313*sot23;
                result(3,5) = fot3112*sot21 + fot3212*sot22 + fot3312*sot23;
                result(3,6) = fot3132*sot21 + fot3232*sot22 + fot3332*sot23;
                result(3,7) = fot3131*sot21 + fot3231*sot22 + fot3331*sot23;
                result(3,8) = fot3121*sot21 + fot3221*sot22 + fot3321*sot23;
                result(4,0) = fot3111*sot11 + fot3211*sot12 + fot3311*sot13;
                result(4,1) = fot3122*sot11 + fot3222*sot12 + fot3322*sot13;
                result(4,2) = fot3133*sot11 + fot3233*sot12 + fot3333*sot13;
                result(4,3) = fot3123*sot11 + fot3223*sot12 + fot3323*sot13;
                result(4,4) = fot3113*sot11 + fot3213*sot12 + fot3313*sot13;
                result(4,5) = fot3112*sot11 + fot3212*sot12 + fot3312*sot13;
                result(4,6) = fot3132*sot11 + fot3232*sot12 + fot3332*sot13;
                result(4,7) = fot3131*sot11 + fot3231*sot12 + fot3331*sot13;
                result(4,8) = fot3121*sot11 + fot3221*sot12 + fot3321*sot13;
                result(5,0) = fot2111*sot11 + fot2211*sot12 + fot2311*sot13;
                result(5,1) = fot2122*sot11 + fot2222*sot12 + fot2322*sot13;
                result(5,2) = fot2133*sot11 + fot2233*sot12 + fot2333*sot13;
                result(5,3) = fot2123*sot11 + fot2223*sot12 + fot2323*sot13;
                result(5,4) = fot2113*sot11 + fot2213*sot12 + fot2313*sot13;
                result(5,5) = fot2112*sot11 + fot2212*sot12 + fot2312*sot13;
                result(5,6) = fot2132*sot11 + fot2232*sot12 + fot2332*sot13;
                result(5,7) = fot2131*sot11 + fot2231*sot12 + fot2331*sot13;
                result(5,8) = fot2121*sot11 + fot2221*sot12 + fot2321*sot13;
                result(6,0) = fot2111*sot31 + fot2211*sot32 + fot2311*sot33;
                result(6,1) = fot2122*sot31 + fot2222*sot32 + fot2322*sot33;
                result(6,2) = fot2133*sot31 + fot2233*sot32 + fot2333*sot33;
                result(6,3) = fot2123*sot31 + fot2223*sot32 + fot2323*sot33;
                result(6,4) = fot2113*sot31 + fot2213*sot32 + fot2313*sot33;
                result(6,5) = fot2112*sot31 + fot2212*sot32 + fot2312*sot33;
                result(6,6) = fot2132*sot31 + fot2232*sot32 + fot2332*sot33;
                result(6,7) = fot2131*sot31 + fot2231*sot32 + fot2331*sot33;
                result(6,8) = fot2121*sot31 + fot2221*sot32 + fot2321*sot33;
                result(7,0) = fot1111*sot31 + fot1211*sot32 + fot1311*sot33;
                result(7,1) = fot1122*sot31 + fot1222*sot32 + fot1322*sot33;
                result(7,2) = fot1133*sot31 + fot1233*sot32 + fot1333*sot33;
                result(7,3) = fot1123*sot31 + fot1223*sot32 + fot1323*sot33;
                result(7,4) = fot1113*sot31 + fot1213*sot32 + fot1313*sot33;
                result(7,5) = fot1112*sot31 + fot1212*sot32 + fot1312*sot33;
                result(7,6) = fot1132*sot31 + fot1232*sot32 + fot1332*sot33;
                result(7,7) = fot1131*sot31 + fot1231*sot32 + fot1331*sot33;
                result(7,8) = fot1121*sot31 + fot1221*sot32 + fot1321*sot33;
                result(8,0) = fot1111*sot21 + fot1211*sot22 + fot1311*sot23;
                result(8,1) = fot1122*sot21 + fot1222*sot22 + fot1322*sot23;
                result(8,2) = fot1133*sot21 + fot1233*sot22 + fot1333*sot23;
                result(8,3) = fot1123*sot21 + fot1223*sot22 + fot1323*sot23;
                result(8,4) = fot1113*sot21 + fot1213*sot22 + fot1313*sot23;
                result(8,5) = fot1112*sot21 + fot1212*sot22 + fot1312*sot23;
                result(8,6) = fot1132*sot21 + fot1232*sot22 + fot1332*sot23;
                result(8,7) = fot1131*sot21 + fot1231*sot22 + fot1331*sot23;
                result(8,8) = fot1121*sot21 + fot1221*sot22 + fot1321*sot23;
        }
        else if(i==2){
                result(0,0) = fot1111*sot11 + fot1121*sot12 + fot1131*sot13;
                result(0,1) = fot1212*sot11 + fot1222*sot12 + fot1232*sot13;
                result(0,2) = fot1313*sot11 + fot1323*sot12 + fot1333*sot13;
                result(0,3) = fot1213*sot11 + fot1223*sot12 + fot1233*sot13;
                result(0,4) = fot1113*sot11 + fot1123*sot12 + fot1133*sot13;
                result(0,5) = fot1112*sot11 + fot1122*sot12 + fot1132*sot13;
                result(0,6) = fot1312*sot11 + fot1322*sot12 + fot1332*sot13;
                result(0,7) = fot1311*sot11 + fot1321*sot12 + fot1331*sot13;
                result(0,8) = fot1211*sot11 + fot1221*sot12 + fot1231*sot13;
                result(1,0) = fot2111*sot21 + fot2121*sot22 + fot2131*sot23;
                result(1,1) = fot2212*sot21 + fot2222*sot22 + fot2232*sot23;
                result(1,2) = fot2313*sot21 + fot2323*sot22 + fot2333*sot23;
                result(1,3) = fot2213*sot21 + fot2223*sot22 + fot2233*sot23;
                result(1,4) = fot2113*sot21 + fot2123*sot22 + fot2133*sot23;
                result(1,5) = fot2112*sot21 + fot2122*sot22 + fot2132*sot23;
                result(1,6) = fot2312*sot21 + fot2322*sot22 + fot2332*sot23;
                result(1,7) = fot2311*sot21 + fot2321*sot22 + fot2331*sot23;
                result(1,8) = fot2211*sot21 + fot2221*sot22 + fot2231*sot23;
                result(2,0) = fot3111*sot31 + fot3121*sot32 + fot3131*sot33;
                result(2,1) = fot3212*sot31 + fot3222*sot32 + fot3232*sot33;
                result(2,2) = fot3313*sot31 + fot3323*sot32 + fot3333*sot33;
                result(2,3) = fot3213*sot31 + fot3223*sot32 + fot3233*sot33;
                result(2,4) = fot3113*sot31 + fot3123*sot32 + fot3133*sot33;
                result(2,5) = fot3112*sot31 + fot3122*sot32 + fot3132*sot33;
                result(2,6) = fot3312*sot31 + fot3322*sot32 + fot3332*sot33;
                result(2,7) = fot3311*sot31 + fot3321*sot32 + fot3331*sot33;
                result(2,8) = fot3211*sot31 + fot3221*sot32 + fot3231*sot33;
                result(3,0) = fot3111*sot21 + fot3121*sot22 + fot3131*sot23;
                result(3,1) = fot3212*sot21 + fot3222*sot22 + fot3232*sot23;
                result(3,2) = fot3313*sot21 + fot3323*sot22 + fot3333*sot23;
                result(3,3) = fot3213*sot21 + fot3223*sot22 + fot3233*sot23;
                result(3,4) = fot3113*sot21 + fot3123*sot22 + fot3133*sot23;
                result(3,5) = fot3112*sot21 + fot3122*sot22 + fot3132*sot23;
                result(3,6) = fot3312*sot21 + fot3322*sot22 + fot3332*sot23;
                result(3,7) = fot3311*sot21 + fot3321*sot22 + fot3331*sot23;
                result(3,8) = fot3211*sot21 + fot3221*sot22 + fot3231*sot23;
                result(4,0) = fot3111*sot11 + fot3121*sot12 + fot3131*sot13;
                result(4,1) = fot3212*sot11 + fot3222*sot12 + fot3232*sot13;
                result(4,2) = fot3313*sot11 + fot3323*sot12 + fot3333*sot13;
                result(4,3) = fot3213*sot11 + fot3223*sot12 + fot3233*sot13;
                result(4,4) = fot3113*sot11 + fot3123*sot12 + fot3133*sot13;
                result(4,5) = fot3112*sot11 + fot3122*sot12 + fot3132*sot13;
                result(4,6) = fot3312*sot11 + fot3322*sot12 + fot3332*sot13;
                result(4,7) = fot3311*sot11 + fot3321*sot12 + fot3331*sot13;
                result(4,8) = fot3211*sot11 + fot3221*sot12 + fot3231*sot13;
                result(5,0) = fot2111*sot11 + fot2121*sot12 + fot2131*sot13;
                result(5,1) = fot2212*sot11 + fot2222*sot12 + fot2232*sot13;
                result(5,2) = fot2313*sot11 + fot2323*sot12 + fot2333*sot13;
                result(5,3) = fot2213*sot11 + fot2223*sot12 + fot2233*sot13;
                result(5,4) = fot2113*sot11 + fot2123*sot12 + fot2133*sot13;
                result(5,5) = fot2112*sot11 + fot2122*sot12 + fot2132*sot13;
                result(5,6) = fot2312*sot11 + fot2322*sot12 + fot2332*sot13;
                result(5,7) = fot2311*sot11 + fot2321*sot12 + fot2331*sot13;
                result(5,8) = fot2211*sot11 + fot2221*sot12 + fot2231*sot13;
                result(6,0) = fot2111*sot31 + fot2121*sot32 + fot2131*sot33;
                result(6,1) = fot2212*sot31 + fot2222*sot32 + fot2232*sot33;
                result(6,2) = fot2313*sot31 + fot2323*sot32 + fot2333*sot33;
                result(6,3) = fot2213*sot31 + fot2223*sot32 + fot2233*sot33;
                result(6,4) = fot2113*sot31 + fot2123*sot32 + fot2133*sot33;
                result(6,5) = fot2112*sot31 + fot2122*sot32 + fot2132*sot33;
                result(6,6) = fot2312*sot31 + fot2322*sot32 + fot2332*sot33;
                result(6,7) = fot2311*sot31 + fot2321*sot32 + fot2331*sot33;
                result(6,8) = fot2211*sot31 + fot2221*sot32 + fot2231*sot33;
                result(7,0) = fot1111*sot31 + fot1121*sot32 + fot1131*sot33;
                result(7,1) = fot1212*sot31 + fot1222*sot32 + fot1232*sot33;
                result(7,2) = fot1313*sot31 + fot1323*sot32 + fot1333*sot33;
                result(7,3) = fot1213*sot31 + fot1223*sot32 + fot1233*sot33;
                result(7,4) = fot1113*sot31 + fot1123*sot32 + fot1133*sot33;
                result(7,5) = fot1112*sot31 + fot1122*sot32 + fot1132*sot33;
                result(7,6) = fot1312*sot31 + fot1322*sot32 + fot1332*sot33;
                result(7,7) = fot1311*sot31 + fot1321*sot32 + fot1331*sot33;
                result(7,8) = fot1211*sot31 + fot1221*sot32 + fot1231*sot33;
                result(8,0) = fot1111*sot21 + fot1121*sot22 + fot1131*sot23;
                result(8,1) = fot1212*sot21 + fot1222*sot22 + fot1232*sot23;
                result(8,2) = fot1313*sot21 + fot1323*sot22 + fot1333*sot23;
                result(8,3) = fot1213*sot21 + fot1223*sot22 + fot1233*sot23;
                result(8,4) = fot1113*sot21 + fot1123*sot22 + fot1133*sot23;
                result(8,5) = fot1112*sot21 + fot1122*sot22 + fot1132*sot23;
                result(8,6) = fot1312*sot21 + fot1322*sot22 + fot1332*sot23;
                result(8,7) = fot1311*sot21 + fot1321*sot22 + fot1331*sot23;
                result(8,8) = fot1211*sot21 + fot1221*sot22 + fot1231*sot23;
        }
        else if(i==3){
                result(0,0) = fot1111*sot11 + fot1112*sot12 + fot1113*sot13;
                result(0,1) = fot1221*sot11 + fot1222*sot12 + fot1223*sot13;
                result(0,2) = fot1331*sot11 + fot1332*sot12 + fot1333*sot13;
                result(0,3) = fot1231*sot11 + fot1232*sot12 + fot1233*sot13;
                result(0,4) = fot1131*sot11 + fot1132*sot12 + fot1133*sot13;
                result(0,5) = fot1121*sot11 + fot1122*sot12 + fot1123*sot13;
                result(0,6) = fot1321*sot11 + fot1322*sot12 + fot1323*sot13;
                result(0,7) = fot1311*sot11 + fot1312*sot12 + fot1313*sot13;
                result(0,8) = fot1211*sot11 + fot1212*sot12 + fot1213*sot13;
                result(1,0) = fot2111*sot21 + fot2112*sot22 + fot2113*sot23;
                result(1,1) = fot2221*sot21 + fot2222*sot22 + fot2223*sot23;
                result(1,2) = fot2331*sot21 + fot2332*sot22 + fot2333*sot23;
                result(1,3) = fot2231*sot21 + fot2232*sot22 + fot2233*sot23;
                result(1,4) = fot2131*sot21 + fot2132*sot22 + fot2133*sot23;
                result(1,5) = fot2121*sot21 + fot2122*sot22 + fot2123*sot23;
                result(1,6) = fot2321*sot21 + fot2322*sot22 + fot2323*sot23;
                result(1,7) = fot2311*sot21 + fot2312*sot22 + fot2313*sot23;
                result(1,8) = fot2211*sot21 + fot2212*sot22 + fot2213*sot23;
                result(2,0) = fot3111*sot31 + fot3112*sot32 + fot3113*sot33;
                result(2,1) = fot3221*sot31 + fot3222*sot32 + fot3223*sot33;
                result(2,2) = fot3331*sot31 + fot3332*sot32 + fot3333*sot33;
                result(2,3) = fot3231*sot31 + fot3232*sot32 + fot3233*sot33;
                result(2,4) = fot3131*sot31 + fot3132*sot32 + fot3133*sot33;
                result(2,5) = fot3121*sot31 + fot3122*sot32 + fot3123*sot33;
                result(2,6) = fot3321*sot31 + fot3322*sot32 + fot3323*sot33;
                result(2,7) = fot3311*sot31 + fot3312*sot32 + fot3313*sot33;
                result(2,8) = fot3211*sot31 + fot3212*sot32 + fot3213*sot33;
                result(3,0) = fot3111*sot21 + fot3112*sot22 + fot3113*sot23;
                result(3,1) = fot3221*sot21 + fot3222*sot22 + fot3223*sot23;
                result(3,2) = fot3331*sot21 + fot3332*sot22 + fot3333*sot23;
                result(3,3) = fot3231*sot21 + fot3232*sot22 + fot3233*sot23;
                result(3,4) = fot3131*sot21 + fot3132*sot22 + fot3133*sot23;
                result(3,5) = fot3121*sot21 + fot3122*sot22 + fot3123*sot23;
                result(3,6) = fot3321*sot21 + fot3322*sot22 + fot3323*sot23;
                result(3,7) = fot3311*sot21 + fot3312*sot22 + fot3313*sot23;
                result(3,8) = fot3211*sot21 + fot3212*sot22 + fot3213*sot23;
                result(4,0) = fot3111*sot11 + fot3112*sot12 + fot3113*sot13;
                result(4,1) = fot3221*sot11 + fot3222*sot12 + fot3223*sot13;
                result(4,2) = fot3331*sot11 + fot3332*sot12 + fot3333*sot13;
                result(4,3) = fot3231*sot11 + fot3232*sot12 + fot3233*sot13;
                result(4,4) = fot3131*sot11 + fot3132*sot12 + fot3133*sot13;
                result(4,5) = fot3121*sot11 + fot3122*sot12 + fot3123*sot13;
                result(4,6) = fot3321*sot11 + fot3322*sot12 + fot3323*sot13;
                result(4,7) = fot3311*sot11 + fot3312*sot12 + fot3313*sot13;
                result(4,8) = fot3211*sot11 + fot3212*sot12 + fot3213*sot13;
                result(5,0) = fot2111*sot11 + fot2112*sot12 + fot2113*sot13;
                result(5,1) = fot2221*sot11 + fot2222*sot12 + fot2223*sot13;
                result(5,2) = fot2331*sot11 + fot2332*sot12 + fot2333*sot13;
                result(5,3) = fot2231*sot11 + fot2232*sot12 + fot2233*sot13;
                result(5,4) = fot2131*sot11 + fot2132*sot12 + fot2133*sot13;
                result(5,5) = fot2121*sot11 + fot2122*sot12 + fot2123*sot13;
                result(5,6) = fot2321*sot11 + fot2322*sot12 + fot2323*sot13;
                result(5,7) = fot2311*sot11 + fot2312*sot12 + fot2313*sot13;
                result(5,8) = fot2211*sot11 + fot2212*sot12 + fot2213*sot13;
                result(6,0) = fot2111*sot31 + fot2112*sot32 + fot2113*sot33;
                result(6,1) = fot2221*sot31 + fot2222*sot32 + fot2223*sot33;
                result(6,2) = fot2331*sot31 + fot2332*sot32 + fot2333*sot33;
                result(6,3) = fot2231*sot31 + fot2232*sot32 + fot2233*sot33;
                result(6,4) = fot2131*sot31 + fot2132*sot32 + fot2133*sot33;
                result(6,5) = fot2121*sot31 + fot2122*sot32 + fot2123*sot33;
                result(6,6) = fot2321*sot31 + fot2322*sot32 + fot2323*sot33;
                result(6,7) = fot2311*sot31 + fot2312*sot32 + fot2313*sot33;
                result(6,8) = fot2211*sot31 + fot2212*sot32 + fot2213*sot33;
                result(7,0) = fot1111*sot31 + fot1112*sot32 + fot1113*sot33;
                result(7,1) = fot1221*sot31 + fot1222*sot32 + fot1223*sot33;
                result(7,2) = fot1331*sot31 + fot1332*sot32 + fot1333*sot33;
                result(7,3) = fot1231*sot31 + fot1232*sot32 + fot1233*sot33;
                result(7,4) = fot1131*sot31 + fot1132*sot32 + fot1133*sot33;
                result(7,5) = fot1121*sot31 + fot1122*sot32 + fot1123*sot33;
                result(7,6) = fot1321*sot31 + fot1322*sot32 + fot1323*sot33;
                result(7,7) = fot1311*sot31 + fot1312*sot32 + fot1313*sot33;
                result(7,8) = fot1211*sot31 + fot1212*sot32 + fot1213*sot33;
                result(8,0) = fot1111*sot21 + fot1112*sot22 + fot1113*sot23;
                result(8,1) = fot1221*sot21 + fot1222*sot22 + fot1223*sot23;
                result(8,2) = fot1331*sot21 + fot1332*sot22 + fot1333*sot23;
                result(8,3) = fot1231*sot21 + fot1232*sot22 + fot1233*sot23;
                result(8,4) = fot1131*sot21 + fot1132*sot22 + fot1133*sot23;
                result(8,5) = fot1121*sot21 + fot1122*sot22 + fot1123*sot23;
                result(8,6) = fot1321*sot21 + fot1322*sot22 + fot1323*sot23;
                result(8,7) = fot1311*sot21 + fot1312*sot22 + fot1313*sot23;
                result(8,8) = fot1211*sot21 + fot1212*sot22 + fot1213*sot23;
        }
        else {
            std::cout << "Error: Index out of range\n";
            assert(1==0); //TODO: Replace with better error handling
        }
        if (mode == 1){
            result.row(3).swap(result.row(6));
            result.row(4).swap(result.row(7));
            result.row(5).swap(result.row(8));
        }
        return;
    }

    void dot_2ot_5ot(const int &i, const Matrix_3x3 &sot, const Matrix_9x27 &fot, Matrix_9x27 &result){
        /*!==================
        |    dot_2ot_5ot    |
        =====================
        
        Compute the dot product of a second order tensor and a fifth order tensor at index i+1 i.e.
        
        index = 0
        
        result_ijklm = sot_in fot_njklm
        
        index = 1
        
        result_ijklm = sot_im fot_jnklm
        
        */
        
        //Extract the second order tensor
        double sot11 = sot(0,0);
        double sot12 = sot(0,1);
        double sot13 = sot(0,2);
        double sot21 = sot(1,0);
        double sot22 = sot(1,1);
        double sot23 = sot(1,2);
        double sot31 = sot(2,0);
        double sot32 = sot(2,1);
        double sot33 = sot(2,2);

        //Extract the fifth order tensor
        double fot11111 = fot(0,0);
        double fot11112 = fot(0,5);
        double fot11113 = fot(0,4);
        double fot11121 = fot(0,8);
        double fot11122 = fot(0,1);
        double fot11123 = fot(0,3);
        double fot11131 = fot(0,7);
        double fot11132 = fot(0,6);
        double fot11133 = fot(0,2);
        double fot11211 = fot(0,9);
        double fot11212 = fot(0,14);
        double fot11213 = fot(0,13);
        double fot11221 = fot(0,17);
        double fot11222 = fot(0,10);
        double fot11223 = fot(0,12);
        double fot11231 = fot(0,16);
        double fot11232 = fot(0,15);
        double fot11233 = fot(0,11);
        double fot11311 = fot(0,18);
        double fot11312 = fot(0,23);
        double fot11313 = fot(0,22);
        double fot11321 = fot(0,26);
        double fot11322 = fot(0,19);
        double fot11323 = fot(0,21);
        double fot11331 = fot(0,25);
        double fot11332 = fot(0,24);
        double fot11333 = fot(0,20);
        double fot12111 = fot(5,0);
        double fot12112 = fot(5,5);
        double fot12113 = fot(5,4);
        double fot12121 = fot(5,8);
        double fot12122 = fot(5,1);
        double fot12123 = fot(5,3);
        double fot12131 = fot(5,7);
        double fot12132 = fot(5,6);
        double fot12133 = fot(5,2);
        double fot12211 = fot(5,9);
        double fot12212 = fot(5,14);
        double fot12213 = fot(5,13);
        double fot12221 = fot(5,17);
        double fot12222 = fot(5,10);
        double fot12223 = fot(5,12);
        double fot12231 = fot(5,16);
        double fot12232 = fot(5,15);
        double fot12233 = fot(5,11);
        double fot12311 = fot(5,18);
        double fot12312 = fot(5,23);
        double fot12313 = fot(5,22);
        double fot12321 = fot(5,26);
        double fot12322 = fot(5,19);
        double fot12323 = fot(5,21);
        double fot12331 = fot(5,25);
        double fot12332 = fot(5,24);
        double fot12333 = fot(5,20);
        double fot13111 = fot(4,0);
        double fot13112 = fot(4,5);
        double fot13113 = fot(4,4);
        double fot13121 = fot(4,8);
        double fot13122 = fot(4,1);
        double fot13123 = fot(4,3);
        double fot13131 = fot(4,7);
        double fot13132 = fot(4,6);
        double fot13133 = fot(4,2);
        double fot13211 = fot(4,9);
        double fot13212 = fot(4,14);
        double fot13213 = fot(4,13);
        double fot13221 = fot(4,17);
        double fot13222 = fot(4,10);
        double fot13223 = fot(4,12);
        double fot13231 = fot(4,16);
        double fot13232 = fot(4,15);
        double fot13233 = fot(4,11);
        double fot13311 = fot(4,18);
        double fot13312 = fot(4,23);
        double fot13313 = fot(4,22);
        double fot13321 = fot(4,26);
        double fot13322 = fot(4,19);
        double fot13323 = fot(4,21);
        double fot13331 = fot(4,25);
        double fot13332 = fot(4,24);
        double fot13333 = fot(4,20);
        double fot21111 = fot(8,0);
        double fot21112 = fot(8,5);
        double fot21113 = fot(8,4);
        double fot21121 = fot(8,8);
        double fot21122 = fot(8,1);
        double fot21123 = fot(8,3);
        double fot21131 = fot(8,7);
        double fot21132 = fot(8,6);
        double fot21133 = fot(8,2);
        double fot21211 = fot(8,9);
        double fot21212 = fot(8,14);
        double fot21213 = fot(8,13);
        double fot21221 = fot(8,17);
        double fot21222 = fot(8,10);
        double fot21223 = fot(8,12);
        double fot21231 = fot(8,16);
        double fot21232 = fot(8,15);
        double fot21233 = fot(8,11);
        double fot21311 = fot(8,18);
        double fot21312 = fot(8,23);
        double fot21313 = fot(8,22);
        double fot21321 = fot(8,26);
        double fot21322 = fot(8,19);
        double fot21323 = fot(8,21);
        double fot21331 = fot(8,25);
        double fot21332 = fot(8,24);
        double fot21333 = fot(8,20);
        double fot22111 = fot(1,0);
        double fot22112 = fot(1,5);
        double fot22113 = fot(1,4);
        double fot22121 = fot(1,8);
        double fot22122 = fot(1,1);
        double fot22123 = fot(1,3);
        double fot22131 = fot(1,7);
        double fot22132 = fot(1,6);
        double fot22133 = fot(1,2);
        double fot22211 = fot(1,9);
        double fot22212 = fot(1,14);
        double fot22213 = fot(1,13);
        double fot22221 = fot(1,17);
        double fot22222 = fot(1,10);
        double fot22223 = fot(1,12);
        double fot22231 = fot(1,16);
        double fot22232 = fot(1,15);
        double fot22233 = fot(1,11);
        double fot22311 = fot(1,18);
        double fot22312 = fot(1,23);
        double fot22313 = fot(1,22);
        double fot22321 = fot(1,26);
        double fot22322 = fot(1,19);
        double fot22323 = fot(1,21);
        double fot22331 = fot(1,25);
        double fot22332 = fot(1,24);
        double fot22333 = fot(1,20);
        double fot23111 = fot(3,0);
        double fot23112 = fot(3,5);
        double fot23113 = fot(3,4);
        double fot23121 = fot(3,8);
        double fot23122 = fot(3,1);
        double fot23123 = fot(3,3);
        double fot23131 = fot(3,7);
        double fot23132 = fot(3,6);
        double fot23133 = fot(3,2);
        double fot23211 = fot(3,9);
        double fot23212 = fot(3,14);
        double fot23213 = fot(3,13);
        double fot23221 = fot(3,17);
        double fot23222 = fot(3,10);
        double fot23223 = fot(3,12);
        double fot23231 = fot(3,16);
        double fot23232 = fot(3,15);
        double fot23233 = fot(3,11);
        double fot23311 = fot(3,18);
        double fot23312 = fot(3,23);
        double fot23313 = fot(3,22);
        double fot23321 = fot(3,26);
        double fot23322 = fot(3,19);
        double fot23323 = fot(3,21);
        double fot23331 = fot(3,25);
        double fot23332 = fot(3,24);
        double fot23333 = fot(3,20);
        double fot31111 = fot(7,0);
        double fot31112 = fot(7,5);
        double fot31113 = fot(7,4);
        double fot31121 = fot(7,8);
        double fot31122 = fot(7,1);
        double fot31123 = fot(7,3);
        double fot31131 = fot(7,7);
        double fot31132 = fot(7,6);
        double fot31133 = fot(7,2);
        double fot31211 = fot(7,9);
        double fot31212 = fot(7,14);
        double fot31213 = fot(7,13);
        double fot31221 = fot(7,17);
        double fot31222 = fot(7,10);
        double fot31223 = fot(7,12);
        double fot31231 = fot(7,16);
        double fot31232 = fot(7,15);
        double fot31233 = fot(7,11);
        double fot31311 = fot(7,18);
        double fot31312 = fot(7,23);
        double fot31313 = fot(7,22);
        double fot31321 = fot(7,26);
        double fot31322 = fot(7,19);
        double fot31323 = fot(7,21);
        double fot31331 = fot(7,25);
        double fot31332 = fot(7,24);
        double fot31333 = fot(7,20);
        double fot32111 = fot(6,0);
        double fot32112 = fot(6,5);
        double fot32113 = fot(6,4);
        double fot32121 = fot(6,8);
        double fot32122 = fot(6,1);
        double fot32123 = fot(6,3);
        double fot32131 = fot(6,7);
        double fot32132 = fot(6,6);
        double fot32133 = fot(6,2);
        double fot32211 = fot(6,9);
        double fot32212 = fot(6,14);
        double fot32213 = fot(6,13);
        double fot32221 = fot(6,17);
        double fot32222 = fot(6,10);
        double fot32223 = fot(6,12);
        double fot32231 = fot(6,16);
        double fot32232 = fot(6,15);
        double fot32233 = fot(6,11);
        double fot32311 = fot(6,18);
        double fot32312 = fot(6,23);
        double fot32313 = fot(6,22);
        double fot32321 = fot(6,26);
        double fot32322 = fot(6,19);
        double fot32323 = fot(6,21);
        double fot32331 = fot(6,25);
        double fot32332 = fot(6,24);
        double fot32333 = fot(6,20);
        double fot33111 = fot(2,0);
        double fot33112 = fot(2,5);
        double fot33113 = fot(2,4);
        double fot33121 = fot(2,8);
        double fot33122 = fot(2,1);
        double fot33123 = fot(2,3);
        double fot33131 = fot(2,7);
        double fot33132 = fot(2,6);
        double fot33133 = fot(2,2);
        double fot33211 = fot(2,9);
        double fot33212 = fot(2,14);
        double fot33213 = fot(2,13);
        double fot33221 = fot(2,17);
        double fot33222 = fot(2,10);
        double fot33223 = fot(2,12);
        double fot33231 = fot(2,16);
        double fot33232 = fot(2,15);
        double fot33233 = fot(2,11);
        double fot33311 = fot(2,18);
        double fot33312 = fot(2,23);
        double fot33313 = fot(2,22);
        double fot33321 = fot(2,26);
        double fot33322 = fot(2,19);
        double fot33323 = fot(2,21);
        double fot33331 = fot(2,25);
        double fot33332 = fot(2,24);
        double fot33333 = fot(2,20);

        //Compute the dot product
        if (i==0){
                result(0,0) = fot11111*sot11 + fot21111*sot12 + fot31111*sot13;
                result(0,1) = fot11122*sot11 + fot21122*sot12 + fot31122*sot13;
                result(0,2) = fot11133*sot11 + fot21133*sot12 + fot31133*sot13;
                result(0,3) = fot11123*sot11 + fot21123*sot12 + fot31123*sot13;
                result(0,4) = fot11113*sot11 + fot21113*sot12 + fot31113*sot13;
                result(0,5) = fot11112*sot11 + fot21112*sot12 + fot31112*sot13;
                result(0,6) = fot11132*sot11 + fot21132*sot12 + fot31132*sot13;
                result(0,7) = fot11131*sot11 + fot21131*sot12 + fot31131*sot13;
                result(0,8) = fot11121*sot11 + fot21121*sot12 + fot31121*sot13;
                result(0,9) = fot11211*sot11 + fot21211*sot12 + fot31211*sot13;
                result(0,10) = fot11222*sot11 + fot21222*sot12 + fot31222*sot13;
                result(0,11) = fot11233*sot11 + fot21233*sot12 + fot31233*sot13;
                result(0,12) = fot11223*sot11 + fot21223*sot12 + fot31223*sot13;
                result(0,13) = fot11213*sot11 + fot21213*sot12 + fot31213*sot13;
                result(0,14) = fot11212*sot11 + fot21212*sot12 + fot31212*sot13;
                result(0,15) = fot11232*sot11 + fot21232*sot12 + fot31232*sot13;
                result(0,16) = fot11231*sot11 + fot21231*sot12 + fot31231*sot13;
                result(0,17) = fot11221*sot11 + fot21221*sot12 + fot31221*sot13;
                result(0,18) = fot11311*sot11 + fot21311*sot12 + fot31311*sot13;
                result(0,19) = fot11322*sot11 + fot21322*sot12 + fot31322*sot13;
                result(0,20) = fot11333*sot11 + fot21333*sot12 + fot31333*sot13;
                result(0,21) = fot11323*sot11 + fot21323*sot12 + fot31323*sot13;
                result(0,22) = fot11313*sot11 + fot21313*sot12 + fot31313*sot13;
                result(0,23) = fot11312*sot11 + fot21312*sot12 + fot31312*sot13;
                result(0,24) = fot11332*sot11 + fot21332*sot12 + fot31332*sot13;
                result(0,25) = fot11331*sot11 + fot21331*sot12 + fot31331*sot13;
                result(0,26) = fot11321*sot11 + fot21321*sot12 + fot31321*sot13;
                result(1,0) = fot12111*sot21 + fot22111*sot22 + fot32111*sot23;
                result(1,1) = fot12122*sot21 + fot22122*sot22 + fot32122*sot23;
                result(1,2) = fot12133*sot21 + fot22133*sot22 + fot32133*sot23;
                result(1,3) = fot12123*sot21 + fot22123*sot22 + fot32123*sot23;
                result(1,4) = fot12113*sot21 + fot22113*sot22 + fot32113*sot23;
                result(1,5) = fot12112*sot21 + fot22112*sot22 + fot32112*sot23;
                result(1,6) = fot12132*sot21 + fot22132*sot22 + fot32132*sot23;
                result(1,7) = fot12131*sot21 + fot22131*sot22 + fot32131*sot23;
                result(1,8) = fot12121*sot21 + fot22121*sot22 + fot32121*sot23;
                result(1,9) = fot12211*sot21 + fot22211*sot22 + fot32211*sot23;
                result(1,10) = fot12222*sot21 + fot22222*sot22 + fot32222*sot23;
                result(1,11) = fot12233*sot21 + fot22233*sot22 + fot32233*sot23;
                result(1,12) = fot12223*sot21 + fot22223*sot22 + fot32223*sot23;
                result(1,13) = fot12213*sot21 + fot22213*sot22 + fot32213*sot23;
                result(1,14) = fot12212*sot21 + fot22212*sot22 + fot32212*sot23;
                result(1,15) = fot12232*sot21 + fot22232*sot22 + fot32232*sot23;
                result(1,16) = fot12231*sot21 + fot22231*sot22 + fot32231*sot23;
                result(1,17) = fot12221*sot21 + fot22221*sot22 + fot32221*sot23;
                result(1,18) = fot12311*sot21 + fot22311*sot22 + fot32311*sot23;
                result(1,19) = fot12322*sot21 + fot22322*sot22 + fot32322*sot23;
                result(1,20) = fot12333*sot21 + fot22333*sot22 + fot32333*sot23;
                result(1,21) = fot12323*sot21 + fot22323*sot22 + fot32323*sot23;
                result(1,22) = fot12313*sot21 + fot22313*sot22 + fot32313*sot23;
                result(1,23) = fot12312*sot21 + fot22312*sot22 + fot32312*sot23;
                result(1,24) = fot12332*sot21 + fot22332*sot22 + fot32332*sot23;
                result(1,25) = fot12331*sot21 + fot22331*sot22 + fot32331*sot23;
                result(1,26) = fot12321*sot21 + fot22321*sot22 + fot32321*sot23;
                result(2,0) = fot13111*sot31 + fot23111*sot32 + fot33111*sot33;
                result(2,1) = fot13122*sot31 + fot23122*sot32 + fot33122*sot33;
                result(2,2) = fot13133*sot31 + fot23133*sot32 + fot33133*sot33;
                result(2,3) = fot13123*sot31 + fot23123*sot32 + fot33123*sot33;
                result(2,4) = fot13113*sot31 + fot23113*sot32 + fot33113*sot33;
                result(2,5) = fot13112*sot31 + fot23112*sot32 + fot33112*sot33;
                result(2,6) = fot13132*sot31 + fot23132*sot32 + fot33132*sot33;
                result(2,7) = fot13131*sot31 + fot23131*sot32 + fot33131*sot33;
                result(2,8) = fot13121*sot31 + fot23121*sot32 + fot33121*sot33;
                result(2,9) = fot13211*sot31 + fot23211*sot32 + fot33211*sot33;
                result(2,10) = fot13222*sot31 + fot23222*sot32 + fot33222*sot33;
                result(2,11) = fot13233*sot31 + fot23233*sot32 + fot33233*sot33;
                result(2,12) = fot13223*sot31 + fot23223*sot32 + fot33223*sot33;
                result(2,13) = fot13213*sot31 + fot23213*sot32 + fot33213*sot33;
                result(2,14) = fot13212*sot31 + fot23212*sot32 + fot33212*sot33;
                result(2,15) = fot13232*sot31 + fot23232*sot32 + fot33232*sot33;
                result(2,16) = fot13231*sot31 + fot23231*sot32 + fot33231*sot33;
                result(2,17) = fot13221*sot31 + fot23221*sot32 + fot33221*sot33;
                result(2,18) = fot13311*sot31 + fot23311*sot32 + fot33311*sot33;
                result(2,19) = fot13322*sot31 + fot23322*sot32 + fot33322*sot33;
                result(2,20) = fot13333*sot31 + fot23333*sot32 + fot33333*sot33;
                result(2,21) = fot13323*sot31 + fot23323*sot32 + fot33323*sot33;
                result(2,22) = fot13313*sot31 + fot23313*sot32 + fot33313*sot33;
                result(2,23) = fot13312*sot31 + fot23312*sot32 + fot33312*sot33;
                result(2,24) = fot13332*sot31 + fot23332*sot32 + fot33332*sot33;
                result(2,25) = fot13331*sot31 + fot23331*sot32 + fot33331*sot33;
                result(2,26) = fot13321*sot31 + fot23321*sot32 + fot33321*sot33;
                result(3,0) = fot13111*sot21 + fot23111*sot22 + fot33111*sot23;
                result(3,1) = fot13122*sot21 + fot23122*sot22 + fot33122*sot23;
                result(3,2) = fot13133*sot21 + fot23133*sot22 + fot33133*sot23;
                result(3,3) = fot13123*sot21 + fot23123*sot22 + fot33123*sot23;
                result(3,4) = fot13113*sot21 + fot23113*sot22 + fot33113*sot23;
                result(3,5) = fot13112*sot21 + fot23112*sot22 + fot33112*sot23;
                result(3,6) = fot13132*sot21 + fot23132*sot22 + fot33132*sot23;
                result(3,7) = fot13131*sot21 + fot23131*sot22 + fot33131*sot23;
                result(3,8) = fot13121*sot21 + fot23121*sot22 + fot33121*sot23;
                result(3,9) = fot13211*sot21 + fot23211*sot22 + fot33211*sot23;
                result(3,10) = fot13222*sot21 + fot23222*sot22 + fot33222*sot23;
                result(3,11) = fot13233*sot21 + fot23233*sot22 + fot33233*sot23;
                result(3,12) = fot13223*sot21 + fot23223*sot22 + fot33223*sot23;
                result(3,13) = fot13213*sot21 + fot23213*sot22 + fot33213*sot23;
                result(3,14) = fot13212*sot21 + fot23212*sot22 + fot33212*sot23;
                result(3,15) = fot13232*sot21 + fot23232*sot22 + fot33232*sot23;
                result(3,16) = fot13231*sot21 + fot23231*sot22 + fot33231*sot23;
                result(3,17) = fot13221*sot21 + fot23221*sot22 + fot33221*sot23;
                result(3,18) = fot13311*sot21 + fot23311*sot22 + fot33311*sot23;
                result(3,19) = fot13322*sot21 + fot23322*sot22 + fot33322*sot23;
                result(3,20) = fot13333*sot21 + fot23333*sot22 + fot33333*sot23;
                result(3,21) = fot13323*sot21 + fot23323*sot22 + fot33323*sot23;
                result(3,22) = fot13313*sot21 + fot23313*sot22 + fot33313*sot23;
                result(3,23) = fot13312*sot21 + fot23312*sot22 + fot33312*sot23;
                result(3,24) = fot13332*sot21 + fot23332*sot22 + fot33332*sot23;
                result(3,25) = fot13331*sot21 + fot23331*sot22 + fot33331*sot23;
                result(3,26) = fot13321*sot21 + fot23321*sot22 + fot33321*sot23;
                result(4,0) = fot13111*sot11 + fot23111*sot12 + fot33111*sot13;
                result(4,1) = fot13122*sot11 + fot23122*sot12 + fot33122*sot13;
                result(4,2) = fot13133*sot11 + fot23133*sot12 + fot33133*sot13;
                result(4,3) = fot13123*sot11 + fot23123*sot12 + fot33123*sot13;
                result(4,4) = fot13113*sot11 + fot23113*sot12 + fot33113*sot13;
                result(4,5) = fot13112*sot11 + fot23112*sot12 + fot33112*sot13;
                result(4,6) = fot13132*sot11 + fot23132*sot12 + fot33132*sot13;
                result(4,7) = fot13131*sot11 + fot23131*sot12 + fot33131*sot13;
                result(4,8) = fot13121*sot11 + fot23121*sot12 + fot33121*sot13;
                result(4,9) = fot13211*sot11 + fot23211*sot12 + fot33211*sot13;
                result(4,10) = fot13222*sot11 + fot23222*sot12 + fot33222*sot13;
                result(4,11) = fot13233*sot11 + fot23233*sot12 + fot33233*sot13;
                result(4,12) = fot13223*sot11 + fot23223*sot12 + fot33223*sot13;
                result(4,13) = fot13213*sot11 + fot23213*sot12 + fot33213*sot13;
                result(4,14) = fot13212*sot11 + fot23212*sot12 + fot33212*sot13;
                result(4,15) = fot13232*sot11 + fot23232*sot12 + fot33232*sot13;
                result(4,16) = fot13231*sot11 + fot23231*sot12 + fot33231*sot13;
                result(4,17) = fot13221*sot11 + fot23221*sot12 + fot33221*sot13;
                result(4,18) = fot13311*sot11 + fot23311*sot12 + fot33311*sot13;
                result(4,19) = fot13322*sot11 + fot23322*sot12 + fot33322*sot13;
                result(4,20) = fot13333*sot11 + fot23333*sot12 + fot33333*sot13;
                result(4,21) = fot13323*sot11 + fot23323*sot12 + fot33323*sot13;
                result(4,22) = fot13313*sot11 + fot23313*sot12 + fot33313*sot13;
                result(4,23) = fot13312*sot11 + fot23312*sot12 + fot33312*sot13;
                result(4,24) = fot13332*sot11 + fot23332*sot12 + fot33332*sot13;
                result(4,25) = fot13331*sot11 + fot23331*sot12 + fot33331*sot13;
                result(4,26) = fot13321*sot11 + fot23321*sot12 + fot33321*sot13;
                result(5,0) = fot12111*sot11 + fot22111*sot12 + fot32111*sot13;
                result(5,1) = fot12122*sot11 + fot22122*sot12 + fot32122*sot13;
                result(5,2) = fot12133*sot11 + fot22133*sot12 + fot32133*sot13;
                result(5,3) = fot12123*sot11 + fot22123*sot12 + fot32123*sot13;
                result(5,4) = fot12113*sot11 + fot22113*sot12 + fot32113*sot13;
                result(5,5) = fot12112*sot11 + fot22112*sot12 + fot32112*sot13;
                result(5,6) = fot12132*sot11 + fot22132*sot12 + fot32132*sot13;
                result(5,7) = fot12131*sot11 + fot22131*sot12 + fot32131*sot13;
                result(5,8) = fot12121*sot11 + fot22121*sot12 + fot32121*sot13;
                result(5,9) = fot12211*sot11 + fot22211*sot12 + fot32211*sot13;
                result(5,10) = fot12222*sot11 + fot22222*sot12 + fot32222*sot13;
                result(5,11) = fot12233*sot11 + fot22233*sot12 + fot32233*sot13;
                result(5,12) = fot12223*sot11 + fot22223*sot12 + fot32223*sot13;
                result(5,13) = fot12213*sot11 + fot22213*sot12 + fot32213*sot13;
                result(5,14) = fot12212*sot11 + fot22212*sot12 + fot32212*sot13;
                result(5,15) = fot12232*sot11 + fot22232*sot12 + fot32232*sot13;
                result(5,16) = fot12231*sot11 + fot22231*sot12 + fot32231*sot13;
                result(5,17) = fot12221*sot11 + fot22221*sot12 + fot32221*sot13;
                result(5,18) = fot12311*sot11 + fot22311*sot12 + fot32311*sot13;
                result(5,19) = fot12322*sot11 + fot22322*sot12 + fot32322*sot13;
                result(5,20) = fot12333*sot11 + fot22333*sot12 + fot32333*sot13;
                result(5,21) = fot12323*sot11 + fot22323*sot12 + fot32323*sot13;
                result(5,22) = fot12313*sot11 + fot22313*sot12 + fot32313*sot13;
                result(5,23) = fot12312*sot11 + fot22312*sot12 + fot32312*sot13;
                result(5,24) = fot12332*sot11 + fot22332*sot12 + fot32332*sot13;
                result(5,25) = fot12331*sot11 + fot22331*sot12 + fot32331*sot13;
                result(5,26) = fot12321*sot11 + fot22321*sot12 + fot32321*sot13;
                result(6,0) = fot12111*sot31 + fot22111*sot32 + fot32111*sot33;
                result(6,1) = fot12122*sot31 + fot22122*sot32 + fot32122*sot33;
                result(6,2) = fot12133*sot31 + fot22133*sot32 + fot32133*sot33;
                result(6,3) = fot12123*sot31 + fot22123*sot32 + fot32123*sot33;
                result(6,4) = fot12113*sot31 + fot22113*sot32 + fot32113*sot33;
                result(6,5) = fot12112*sot31 + fot22112*sot32 + fot32112*sot33;
                result(6,6) = fot12132*sot31 + fot22132*sot32 + fot32132*sot33;
                result(6,7) = fot12131*sot31 + fot22131*sot32 + fot32131*sot33;
                result(6,8) = fot12121*sot31 + fot22121*sot32 + fot32121*sot33;
                result(6,9) = fot12211*sot31 + fot22211*sot32 + fot32211*sot33;
                result(6,10) = fot12222*sot31 + fot22222*sot32 + fot32222*sot33;
                result(6,11) = fot12233*sot31 + fot22233*sot32 + fot32233*sot33;
                result(6,12) = fot12223*sot31 + fot22223*sot32 + fot32223*sot33;
                result(6,13) = fot12213*sot31 + fot22213*sot32 + fot32213*sot33;
                result(6,14) = fot12212*sot31 + fot22212*sot32 + fot32212*sot33;
                result(6,15) = fot12232*sot31 + fot22232*sot32 + fot32232*sot33;
                result(6,16) = fot12231*sot31 + fot22231*sot32 + fot32231*sot33;
                result(6,17) = fot12221*sot31 + fot22221*sot32 + fot32221*sot33;
                result(6,18) = fot12311*sot31 + fot22311*sot32 + fot32311*sot33;
                result(6,19) = fot12322*sot31 + fot22322*sot32 + fot32322*sot33;
                result(6,20) = fot12333*sot31 + fot22333*sot32 + fot32333*sot33;
                result(6,21) = fot12323*sot31 + fot22323*sot32 + fot32323*sot33;
                result(6,22) = fot12313*sot31 + fot22313*sot32 + fot32313*sot33;
                result(6,23) = fot12312*sot31 + fot22312*sot32 + fot32312*sot33;
                result(6,24) = fot12332*sot31 + fot22332*sot32 + fot32332*sot33;
                result(6,25) = fot12331*sot31 + fot22331*sot32 + fot32331*sot33;
                result(6,26) = fot12321*sot31 + fot22321*sot32 + fot32321*sot33;
                result(7,0) = fot11111*sot31 + fot21111*sot32 + fot31111*sot33;
                result(7,1) = fot11122*sot31 + fot21122*sot32 + fot31122*sot33;
                result(7,2) = fot11133*sot31 + fot21133*sot32 + fot31133*sot33;
                result(7,3) = fot11123*sot31 + fot21123*sot32 + fot31123*sot33;
                result(7,4) = fot11113*sot31 + fot21113*sot32 + fot31113*sot33;
                result(7,5) = fot11112*sot31 + fot21112*sot32 + fot31112*sot33;
                result(7,6) = fot11132*sot31 + fot21132*sot32 + fot31132*sot33;
                result(7,7) = fot11131*sot31 + fot21131*sot32 + fot31131*sot33;
                result(7,8) = fot11121*sot31 + fot21121*sot32 + fot31121*sot33;
                result(7,9) = fot11211*sot31 + fot21211*sot32 + fot31211*sot33;
                result(7,10) = fot11222*sot31 + fot21222*sot32 + fot31222*sot33;
                result(7,11) = fot11233*sot31 + fot21233*sot32 + fot31233*sot33;
                result(7,12) = fot11223*sot31 + fot21223*sot32 + fot31223*sot33;
                result(7,13) = fot11213*sot31 + fot21213*sot32 + fot31213*sot33;
                result(7,14) = fot11212*sot31 + fot21212*sot32 + fot31212*sot33;
                result(7,15) = fot11232*sot31 + fot21232*sot32 + fot31232*sot33;
                result(7,16) = fot11231*sot31 + fot21231*sot32 + fot31231*sot33;
                result(7,17) = fot11221*sot31 + fot21221*sot32 + fot31221*sot33;
                result(7,18) = fot11311*sot31 + fot21311*sot32 + fot31311*sot33;
                result(7,19) = fot11322*sot31 + fot21322*sot32 + fot31322*sot33;
                result(7,20) = fot11333*sot31 + fot21333*sot32 + fot31333*sot33;
                result(7,21) = fot11323*sot31 + fot21323*sot32 + fot31323*sot33;
                result(7,22) = fot11313*sot31 + fot21313*sot32 + fot31313*sot33;
                result(7,23) = fot11312*sot31 + fot21312*sot32 + fot31312*sot33;
                result(7,24) = fot11332*sot31 + fot21332*sot32 + fot31332*sot33;
                result(7,25) = fot11331*sot31 + fot21331*sot32 + fot31331*sot33;
                result(7,26) = fot11321*sot31 + fot21321*sot32 + fot31321*sot33;
                result(8,0) = fot11111*sot21 + fot21111*sot22 + fot31111*sot23;
                result(8,1) = fot11122*sot21 + fot21122*sot22 + fot31122*sot23;
                result(8,2) = fot11133*sot21 + fot21133*sot22 + fot31133*sot23;
                result(8,3) = fot11123*sot21 + fot21123*sot22 + fot31123*sot23;
                result(8,4) = fot11113*sot21 + fot21113*sot22 + fot31113*sot23;
                result(8,5) = fot11112*sot21 + fot21112*sot22 + fot31112*sot23;
                result(8,6) = fot11132*sot21 + fot21132*sot22 + fot31132*sot23;
                result(8,7) = fot11131*sot21 + fot21131*sot22 + fot31131*sot23;
                result(8,8) = fot11121*sot21 + fot21121*sot22 + fot31121*sot23;
                result(8,9) = fot11211*sot21 + fot21211*sot22 + fot31211*sot23;
                result(8,10) = fot11222*sot21 + fot21222*sot22 + fot31222*sot23;
                result(8,11) = fot11233*sot21 + fot21233*sot22 + fot31233*sot23;
                result(8,12) = fot11223*sot21 + fot21223*sot22 + fot31223*sot23;
                result(8,13) = fot11213*sot21 + fot21213*sot22 + fot31213*sot23;
                result(8,14) = fot11212*sot21 + fot21212*sot22 + fot31212*sot23;
                result(8,15) = fot11232*sot21 + fot21232*sot22 + fot31232*sot23;
                result(8,16) = fot11231*sot21 + fot21231*sot22 + fot31231*sot23;
                result(8,17) = fot11221*sot21 + fot21221*sot22 + fot31221*sot23;
                result(8,18) = fot11311*sot21 + fot21311*sot22 + fot31311*sot23;
                result(8,19) = fot11322*sot21 + fot21322*sot22 + fot31322*sot23;
                result(8,20) = fot11333*sot21 + fot21333*sot22 + fot31333*sot23;
                result(8,21) = fot11323*sot21 + fot21323*sot22 + fot31323*sot23;
                result(8,22) = fot11313*sot21 + fot21313*sot22 + fot31313*sot23;
                result(8,23) = fot11312*sot21 + fot21312*sot22 + fot31312*sot23;
                result(8,24) = fot11332*sot21 + fot21332*sot22 + fot31332*sot23;
                result(8,25) = fot11331*sot21 + fot21331*sot22 + fot31331*sot23;
                result(8,26) = fot11321*sot21 + fot21321*sot22 + fot31321*sot23;
        }
        else if(i==1){
                result(0,0) = fot11111*sot11 + fot12111*sot12 + fot13111*sot13;
                result(0,1) = fot11122*sot11 + fot12122*sot12 + fot13122*sot13;
                result(0,2) = fot11133*sot11 + fot12133*sot12 + fot13133*sot13;
                result(0,3) = fot11123*sot11 + fot12123*sot12 + fot13123*sot13;
                result(0,4) = fot11113*sot11 + fot12113*sot12 + fot13113*sot13;
                result(0,5) = fot11112*sot11 + fot12112*sot12 + fot13112*sot13;
                result(0,6) = fot11132*sot11 + fot12132*sot12 + fot13132*sot13;
                result(0,7) = fot11131*sot11 + fot12131*sot12 + fot13131*sot13;
                result(0,8) = fot11121*sot11 + fot12121*sot12 + fot13121*sot13;
                result(0,9) = fot11211*sot11 + fot12211*sot12 + fot13211*sot13;
                result(0,10) = fot11222*sot11 + fot12222*sot12 + fot13222*sot13;
                result(0,11) = fot11233*sot11 + fot12233*sot12 + fot13233*sot13;
                result(0,12) = fot11223*sot11 + fot12223*sot12 + fot13223*sot13;
                result(0,13) = fot11213*sot11 + fot12213*sot12 + fot13213*sot13;
                result(0,14) = fot11212*sot11 + fot12212*sot12 + fot13212*sot13;
                result(0,15) = fot11232*sot11 + fot12232*sot12 + fot13232*sot13;
                result(0,16) = fot11231*sot11 + fot12231*sot12 + fot13231*sot13;
                result(0,17) = fot11221*sot11 + fot12221*sot12 + fot13221*sot13;
                result(0,18) = fot11311*sot11 + fot12311*sot12 + fot13311*sot13;
                result(0,19) = fot11322*sot11 + fot12322*sot12 + fot13322*sot13;
                result(0,20) = fot11333*sot11 + fot12333*sot12 + fot13333*sot13;
                result(0,21) = fot11323*sot11 + fot12323*sot12 + fot13323*sot13;
                result(0,22) = fot11313*sot11 + fot12313*sot12 + fot13313*sot13;
                result(0,23) = fot11312*sot11 + fot12312*sot12 + fot13312*sot13;
                result(0,24) = fot11332*sot11 + fot12332*sot12 + fot13332*sot13;
                result(0,25) = fot11331*sot11 + fot12331*sot12 + fot13331*sot13;
                result(0,26) = fot11321*sot11 + fot12321*sot12 + fot13321*sot13;
                result(1,0) = fot21111*sot21 + fot22111*sot22 + fot23111*sot23;
                result(1,1) = fot21122*sot21 + fot22122*sot22 + fot23122*sot23;
                result(1,2) = fot21133*sot21 + fot22133*sot22 + fot23133*sot23;
                result(1,3) = fot21123*sot21 + fot22123*sot22 + fot23123*sot23;
                result(1,4) = fot21113*sot21 + fot22113*sot22 + fot23113*sot23;
                result(1,5) = fot21112*sot21 + fot22112*sot22 + fot23112*sot23;
                result(1,6) = fot21132*sot21 + fot22132*sot22 + fot23132*sot23;
                result(1,7) = fot21131*sot21 + fot22131*sot22 + fot23131*sot23;
                result(1,8) = fot21121*sot21 + fot22121*sot22 + fot23121*sot23;
                result(1,9) = fot21211*sot21 + fot22211*sot22 + fot23211*sot23;
                result(1,10) = fot21222*sot21 + fot22222*sot22 + fot23222*sot23;
                result(1,11) = fot21233*sot21 + fot22233*sot22 + fot23233*sot23;
                result(1,12) = fot21223*sot21 + fot22223*sot22 + fot23223*sot23;
                result(1,13) = fot21213*sot21 + fot22213*sot22 + fot23213*sot23;
                result(1,14) = fot21212*sot21 + fot22212*sot22 + fot23212*sot23;
                result(1,15) = fot21232*sot21 + fot22232*sot22 + fot23232*sot23;
                result(1,16) = fot21231*sot21 + fot22231*sot22 + fot23231*sot23;
                result(1,17) = fot21221*sot21 + fot22221*sot22 + fot23221*sot23;
                result(1,18) = fot21311*sot21 + fot22311*sot22 + fot23311*sot23;
                result(1,19) = fot21322*sot21 + fot22322*sot22 + fot23322*sot23;
                result(1,20) = fot21333*sot21 + fot22333*sot22 + fot23333*sot23;
                result(1,21) = fot21323*sot21 + fot22323*sot22 + fot23323*sot23;
                result(1,22) = fot21313*sot21 + fot22313*sot22 + fot23313*sot23;
                result(1,23) = fot21312*sot21 + fot22312*sot22 + fot23312*sot23;
                result(1,24) = fot21332*sot21 + fot22332*sot22 + fot23332*sot23;
                result(1,25) = fot21331*sot21 + fot22331*sot22 + fot23331*sot23;
                result(1,26) = fot21321*sot21 + fot22321*sot22 + fot23321*sot23;
                result(2,0) = fot31111*sot31 + fot32111*sot32 + fot33111*sot33;
                result(2,1) = fot31122*sot31 + fot32122*sot32 + fot33122*sot33;
                result(2,2) = fot31133*sot31 + fot32133*sot32 + fot33133*sot33;
                result(2,3) = fot31123*sot31 + fot32123*sot32 + fot33123*sot33;
                result(2,4) = fot31113*sot31 + fot32113*sot32 + fot33113*sot33;
                result(2,5) = fot31112*sot31 + fot32112*sot32 + fot33112*sot33;
                result(2,6) = fot31132*sot31 + fot32132*sot32 + fot33132*sot33;
                result(2,7) = fot31131*sot31 + fot32131*sot32 + fot33131*sot33;
                result(2,8) = fot31121*sot31 + fot32121*sot32 + fot33121*sot33;
                result(2,9) = fot31211*sot31 + fot32211*sot32 + fot33211*sot33;
                result(2,10) = fot31222*sot31 + fot32222*sot32 + fot33222*sot33;
                result(2,11) = fot31233*sot31 + fot32233*sot32 + fot33233*sot33;
                result(2,12) = fot31223*sot31 + fot32223*sot32 + fot33223*sot33;
                result(2,13) = fot31213*sot31 + fot32213*sot32 + fot33213*sot33;
                result(2,14) = fot31212*sot31 + fot32212*sot32 + fot33212*sot33;
                result(2,15) = fot31232*sot31 + fot32232*sot32 + fot33232*sot33;
                result(2,16) = fot31231*sot31 + fot32231*sot32 + fot33231*sot33;
                result(2,17) = fot31221*sot31 + fot32221*sot32 + fot33221*sot33;
                result(2,18) = fot31311*sot31 + fot32311*sot32 + fot33311*sot33;
                result(2,19) = fot31322*sot31 + fot32322*sot32 + fot33322*sot33;
                result(2,20) = fot31333*sot31 + fot32333*sot32 + fot33333*sot33;
                result(2,21) = fot31323*sot31 + fot32323*sot32 + fot33323*sot33;
                result(2,22) = fot31313*sot31 + fot32313*sot32 + fot33313*sot33;
                result(2,23) = fot31312*sot31 + fot32312*sot32 + fot33312*sot33;
                result(2,24) = fot31332*sot31 + fot32332*sot32 + fot33332*sot33;
                result(2,25) = fot31331*sot31 + fot32331*sot32 + fot33331*sot33;
                result(2,26) = fot31321*sot31 + fot32321*sot32 + fot33321*sot33;
                result(3,0) = fot31111*sot21 + fot32111*sot22 + fot33111*sot23;
                result(3,1) = fot31122*sot21 + fot32122*sot22 + fot33122*sot23;
                result(3,2) = fot31133*sot21 + fot32133*sot22 + fot33133*sot23;
                result(3,3) = fot31123*sot21 + fot32123*sot22 + fot33123*sot23;
                result(3,4) = fot31113*sot21 + fot32113*sot22 + fot33113*sot23;
                result(3,5) = fot31112*sot21 + fot32112*sot22 + fot33112*sot23;
                result(3,6) = fot31132*sot21 + fot32132*sot22 + fot33132*sot23;
                result(3,7) = fot31131*sot21 + fot32131*sot22 + fot33131*sot23;
                result(3,8) = fot31121*sot21 + fot32121*sot22 + fot33121*sot23;
                result(3,9) = fot31211*sot21 + fot32211*sot22 + fot33211*sot23;
                result(3,10) = fot31222*sot21 + fot32222*sot22 + fot33222*sot23;
                result(3,11) = fot31233*sot21 + fot32233*sot22 + fot33233*sot23;
                result(3,12) = fot31223*sot21 + fot32223*sot22 + fot33223*sot23;
                result(3,13) = fot31213*sot21 + fot32213*sot22 + fot33213*sot23;
                result(3,14) = fot31212*sot21 + fot32212*sot22 + fot33212*sot23;
                result(3,15) = fot31232*sot21 + fot32232*sot22 + fot33232*sot23;
                result(3,16) = fot31231*sot21 + fot32231*sot22 + fot33231*sot23;
                result(3,17) = fot31221*sot21 + fot32221*sot22 + fot33221*sot23;
                result(3,18) = fot31311*sot21 + fot32311*sot22 + fot33311*sot23;
                result(3,19) = fot31322*sot21 + fot32322*sot22 + fot33322*sot23;
                result(3,20) = fot31333*sot21 + fot32333*sot22 + fot33333*sot23;
                result(3,21) = fot31323*sot21 + fot32323*sot22 + fot33323*sot23;
                result(3,22) = fot31313*sot21 + fot32313*sot22 + fot33313*sot23;
                result(3,23) = fot31312*sot21 + fot32312*sot22 + fot33312*sot23;
                result(3,24) = fot31332*sot21 + fot32332*sot22 + fot33332*sot23;
                result(3,25) = fot31331*sot21 + fot32331*sot22 + fot33331*sot23;
                result(3,26) = fot31321*sot21 + fot32321*sot22 + fot33321*sot23;
                result(4,0) = fot31111*sot11 + fot32111*sot12 + fot33111*sot13;
                result(4,1) = fot31122*sot11 + fot32122*sot12 + fot33122*sot13;
                result(4,2) = fot31133*sot11 + fot32133*sot12 + fot33133*sot13;
                result(4,3) = fot31123*sot11 + fot32123*sot12 + fot33123*sot13;
                result(4,4) = fot31113*sot11 + fot32113*sot12 + fot33113*sot13;
                result(4,5) = fot31112*sot11 + fot32112*sot12 + fot33112*sot13;
                result(4,6) = fot31132*sot11 + fot32132*sot12 + fot33132*sot13;
                result(4,7) = fot31131*sot11 + fot32131*sot12 + fot33131*sot13;
                result(4,8) = fot31121*sot11 + fot32121*sot12 + fot33121*sot13;
                result(4,9) = fot31211*sot11 + fot32211*sot12 + fot33211*sot13;
                result(4,10) = fot31222*sot11 + fot32222*sot12 + fot33222*sot13;
                result(4,11) = fot31233*sot11 + fot32233*sot12 + fot33233*sot13;
                result(4,12) = fot31223*sot11 + fot32223*sot12 + fot33223*sot13;
                result(4,13) = fot31213*sot11 + fot32213*sot12 + fot33213*sot13;
                result(4,14) = fot31212*sot11 + fot32212*sot12 + fot33212*sot13;
                result(4,15) = fot31232*sot11 + fot32232*sot12 + fot33232*sot13;
                result(4,16) = fot31231*sot11 + fot32231*sot12 + fot33231*sot13;
                result(4,17) = fot31221*sot11 + fot32221*sot12 + fot33221*sot13;
                result(4,18) = fot31311*sot11 + fot32311*sot12 + fot33311*sot13;
                result(4,19) = fot31322*sot11 + fot32322*sot12 + fot33322*sot13;
                result(4,20) = fot31333*sot11 + fot32333*sot12 + fot33333*sot13;
                result(4,21) = fot31323*sot11 + fot32323*sot12 + fot33323*sot13;
                result(4,22) = fot31313*sot11 + fot32313*sot12 + fot33313*sot13;
                result(4,23) = fot31312*sot11 + fot32312*sot12 + fot33312*sot13;
                result(4,24) = fot31332*sot11 + fot32332*sot12 + fot33332*sot13;
                result(4,25) = fot31331*sot11 + fot32331*sot12 + fot33331*sot13;
                result(4,26) = fot31321*sot11 + fot32321*sot12 + fot33321*sot13;
                result(5,0) = fot21111*sot11 + fot22111*sot12 + fot23111*sot13;
                result(5,1) = fot21122*sot11 + fot22122*sot12 + fot23122*sot13;
                result(5,2) = fot21133*sot11 + fot22133*sot12 + fot23133*sot13;
                result(5,3) = fot21123*sot11 + fot22123*sot12 + fot23123*sot13;
                result(5,4) = fot21113*sot11 + fot22113*sot12 + fot23113*sot13;
                result(5,5) = fot21112*sot11 + fot22112*sot12 + fot23112*sot13;
                result(5,6) = fot21132*sot11 + fot22132*sot12 + fot23132*sot13;
                result(5,7) = fot21131*sot11 + fot22131*sot12 + fot23131*sot13;
                result(5,8) = fot21121*sot11 + fot22121*sot12 + fot23121*sot13;
                result(5,9) = fot21211*sot11 + fot22211*sot12 + fot23211*sot13;
                result(5,10) = fot21222*sot11 + fot22222*sot12 + fot23222*sot13;
                result(5,11) = fot21233*sot11 + fot22233*sot12 + fot23233*sot13;
                result(5,12) = fot21223*sot11 + fot22223*sot12 + fot23223*sot13;
                result(5,13) = fot21213*sot11 + fot22213*sot12 + fot23213*sot13;
                result(5,14) = fot21212*sot11 + fot22212*sot12 + fot23212*sot13;
                result(5,15) = fot21232*sot11 + fot22232*sot12 + fot23232*sot13;
                result(5,16) = fot21231*sot11 + fot22231*sot12 + fot23231*sot13;
                result(5,17) = fot21221*sot11 + fot22221*sot12 + fot23221*sot13;
                result(5,18) = fot21311*sot11 + fot22311*sot12 + fot23311*sot13;
                result(5,19) = fot21322*sot11 + fot22322*sot12 + fot23322*sot13;
                result(5,20) = fot21333*sot11 + fot22333*sot12 + fot23333*sot13;
                result(5,21) = fot21323*sot11 + fot22323*sot12 + fot23323*sot13;
                result(5,22) = fot21313*sot11 + fot22313*sot12 + fot23313*sot13;
                result(5,23) = fot21312*sot11 + fot22312*sot12 + fot23312*sot13;
                result(5,24) = fot21332*sot11 + fot22332*sot12 + fot23332*sot13;
                result(5,25) = fot21331*sot11 + fot22331*sot12 + fot23331*sot13;
                result(5,26) = fot21321*sot11 + fot22321*sot12 + fot23321*sot13;
                result(6,0) = fot21111*sot31 + fot22111*sot32 + fot23111*sot33;
                result(6,1) = fot21122*sot31 + fot22122*sot32 + fot23122*sot33;
                result(6,2) = fot21133*sot31 + fot22133*sot32 + fot23133*sot33;
                result(6,3) = fot21123*sot31 + fot22123*sot32 + fot23123*sot33;
                result(6,4) = fot21113*sot31 + fot22113*sot32 + fot23113*sot33;
                result(6,5) = fot21112*sot31 + fot22112*sot32 + fot23112*sot33;
                result(6,6) = fot21132*sot31 + fot22132*sot32 + fot23132*sot33;
                result(6,7) = fot21131*sot31 + fot22131*sot32 + fot23131*sot33;
                result(6,8) = fot21121*sot31 + fot22121*sot32 + fot23121*sot33;
                result(6,9) = fot21211*sot31 + fot22211*sot32 + fot23211*sot33;
                result(6,10) = fot21222*sot31 + fot22222*sot32 + fot23222*sot33;
                result(6,11) = fot21233*sot31 + fot22233*sot32 + fot23233*sot33;
                result(6,12) = fot21223*sot31 + fot22223*sot32 + fot23223*sot33;
                result(6,13) = fot21213*sot31 + fot22213*sot32 + fot23213*sot33;
                result(6,14) = fot21212*sot31 + fot22212*sot32 + fot23212*sot33;
                result(6,15) = fot21232*sot31 + fot22232*sot32 + fot23232*sot33;
                result(6,16) = fot21231*sot31 + fot22231*sot32 + fot23231*sot33;
                result(6,17) = fot21221*sot31 + fot22221*sot32 + fot23221*sot33;
                result(6,18) = fot21311*sot31 + fot22311*sot32 + fot23311*sot33;
                result(6,19) = fot21322*sot31 + fot22322*sot32 + fot23322*sot33;
                result(6,20) = fot21333*sot31 + fot22333*sot32 + fot23333*sot33;
                result(6,21) = fot21323*sot31 + fot22323*sot32 + fot23323*sot33;
                result(6,22) = fot21313*sot31 + fot22313*sot32 + fot23313*sot33;
                result(6,23) = fot21312*sot31 + fot22312*sot32 + fot23312*sot33;
                result(6,24) = fot21332*sot31 + fot22332*sot32 + fot23332*sot33;
                result(6,25) = fot21331*sot31 + fot22331*sot32 + fot23331*sot33;
                result(6,26) = fot21321*sot31 + fot22321*sot32 + fot23321*sot33;
                result(7,0) = fot11111*sot31 + fot12111*sot32 + fot13111*sot33;
                result(7,1) = fot11122*sot31 + fot12122*sot32 + fot13122*sot33;
                result(7,2) = fot11133*sot31 + fot12133*sot32 + fot13133*sot33;
                result(7,3) = fot11123*sot31 + fot12123*sot32 + fot13123*sot33;
                result(7,4) = fot11113*sot31 + fot12113*sot32 + fot13113*sot33;
                result(7,5) = fot11112*sot31 + fot12112*sot32 + fot13112*sot33;
                result(7,6) = fot11132*sot31 + fot12132*sot32 + fot13132*sot33;
                result(7,7) = fot11131*sot31 + fot12131*sot32 + fot13131*sot33;
                result(7,8) = fot11121*sot31 + fot12121*sot32 + fot13121*sot33;
                result(7,9) = fot11211*sot31 + fot12211*sot32 + fot13211*sot33;
                result(7,10) = fot11222*sot31 + fot12222*sot32 + fot13222*sot33;
                result(7,11) = fot11233*sot31 + fot12233*sot32 + fot13233*sot33;
                result(7,12) = fot11223*sot31 + fot12223*sot32 + fot13223*sot33;
                result(7,13) = fot11213*sot31 + fot12213*sot32 + fot13213*sot33;
                result(7,14) = fot11212*sot31 + fot12212*sot32 + fot13212*sot33;
                result(7,15) = fot11232*sot31 + fot12232*sot32 + fot13232*sot33;
                result(7,16) = fot11231*sot31 + fot12231*sot32 + fot13231*sot33;
                result(7,17) = fot11221*sot31 + fot12221*sot32 + fot13221*sot33;
                result(7,18) = fot11311*sot31 + fot12311*sot32 + fot13311*sot33;
                result(7,19) = fot11322*sot31 + fot12322*sot32 + fot13322*sot33;
                result(7,20) = fot11333*sot31 + fot12333*sot32 + fot13333*sot33;
                result(7,21) = fot11323*sot31 + fot12323*sot32 + fot13323*sot33;
                result(7,22) = fot11313*sot31 + fot12313*sot32 + fot13313*sot33;
                result(7,23) = fot11312*sot31 + fot12312*sot32 + fot13312*sot33;
                result(7,24) = fot11332*sot31 + fot12332*sot32 + fot13332*sot33;
                result(7,25) = fot11331*sot31 + fot12331*sot32 + fot13331*sot33;
                result(7,26) = fot11321*sot31 + fot12321*sot32 + fot13321*sot33;
                result(8,0) = fot11111*sot21 + fot12111*sot22 + fot13111*sot23;
                result(8,1) = fot11122*sot21 + fot12122*sot22 + fot13122*sot23;
                result(8,2) = fot11133*sot21 + fot12133*sot22 + fot13133*sot23;
                result(8,3) = fot11123*sot21 + fot12123*sot22 + fot13123*sot23;
                result(8,4) = fot11113*sot21 + fot12113*sot22 + fot13113*sot23;
                result(8,5) = fot11112*sot21 + fot12112*sot22 + fot13112*sot23;
                result(8,6) = fot11132*sot21 + fot12132*sot22 + fot13132*sot23;
                result(8,7) = fot11131*sot21 + fot12131*sot22 + fot13131*sot23;
                result(8,8) = fot11121*sot21 + fot12121*sot22 + fot13121*sot23;
                result(8,9) = fot11211*sot21 + fot12211*sot22 + fot13211*sot23;
                result(8,10) = fot11222*sot21 + fot12222*sot22 + fot13222*sot23;
                result(8,11) = fot11233*sot21 + fot12233*sot22 + fot13233*sot23;
                result(8,12) = fot11223*sot21 + fot12223*sot22 + fot13223*sot23;
                result(8,13) = fot11213*sot21 + fot12213*sot22 + fot13213*sot23;
                result(8,14) = fot11212*sot21 + fot12212*sot22 + fot13212*sot23;
                result(8,15) = fot11232*sot21 + fot12232*sot22 + fot13232*sot23;
                result(8,16) = fot11231*sot21 + fot12231*sot22 + fot13231*sot23;
                result(8,17) = fot11221*sot21 + fot12221*sot22 + fot13221*sot23;
                result(8,18) = fot11311*sot21 + fot12311*sot22 + fot13311*sot23;
                result(8,19) = fot11322*sot21 + fot12322*sot22 + fot13322*sot23;
                result(8,20) = fot11333*sot21 + fot12333*sot22 + fot13333*sot23;
                result(8,21) = fot11323*sot21 + fot12323*sot22 + fot13323*sot23;
                result(8,22) = fot11313*sot21 + fot12313*sot22 + fot13313*sot23;
                result(8,23) = fot11312*sot21 + fot12312*sot22 + fot13312*sot23;
                result(8,24) = fot11332*sot21 + fot12332*sot22 + fot13332*sot23;
                result(8,25) = fot11331*sot21 + fot12331*sot22 + fot13331*sot23;
                result(8,26) = fot11321*sot21 + fot12321*sot22 + fot13321*sot23;
        }
        else if(i==2){
                result(0,0) = fot11111*sot11 + fot11211*sot12 + fot11311*sot13;
                result(0,1) = fot11122*sot11 + fot11222*sot12 + fot11322*sot13;
                result(0,2) = fot11133*sot11 + fot11233*sot12 + fot11333*sot13;
                result(0,3) = fot11123*sot11 + fot11223*sot12 + fot11323*sot13;
                result(0,4) = fot11113*sot11 + fot11213*sot12 + fot11313*sot13;
                result(0,5) = fot11112*sot11 + fot11212*sot12 + fot11312*sot13;
                result(0,6) = fot11132*sot11 + fot11232*sot12 + fot11332*sot13;
                result(0,7) = fot11131*sot11 + fot11231*sot12 + fot11331*sot13;
                result(0,8) = fot11121*sot11 + fot11221*sot12 + fot11321*sot13;
                result(0,9) = fot12111*sot11 + fot12211*sot12 + fot12311*sot13;
                result(0,10) = fot12122*sot11 + fot12222*sot12 + fot12322*sot13;
                result(0,11) = fot12133*sot11 + fot12233*sot12 + fot12333*sot13;
                result(0,12) = fot12123*sot11 + fot12223*sot12 + fot12323*sot13;
                result(0,13) = fot12113*sot11 + fot12213*sot12 + fot12313*sot13;
                result(0,14) = fot12112*sot11 + fot12212*sot12 + fot12312*sot13;
                result(0,15) = fot12132*sot11 + fot12232*sot12 + fot12332*sot13;
                result(0,16) = fot12131*sot11 + fot12231*sot12 + fot12331*sot13;
                result(0,17) = fot12121*sot11 + fot12221*sot12 + fot12321*sot13;
                result(0,18) = fot13111*sot11 + fot13211*sot12 + fot13311*sot13;
                result(0,19) = fot13122*sot11 + fot13222*sot12 + fot13322*sot13;
                result(0,20) = fot13133*sot11 + fot13233*sot12 + fot13333*sot13;
                result(0,21) = fot13123*sot11 + fot13223*sot12 + fot13323*sot13;
                result(0,22) = fot13113*sot11 + fot13213*sot12 + fot13313*sot13;
                result(0,23) = fot13112*sot11 + fot13212*sot12 + fot13312*sot13;
                result(0,24) = fot13132*sot11 + fot13232*sot12 + fot13332*sot13;
                result(0,25) = fot13131*sot11 + fot13231*sot12 + fot13331*sot13;
                result(0,26) = fot13121*sot11 + fot13221*sot12 + fot13321*sot13;
                result(1,0) = fot21111*sot21 + fot21211*sot22 + fot21311*sot23;
                result(1,1) = fot21122*sot21 + fot21222*sot22 + fot21322*sot23;
                result(1,2) = fot21133*sot21 + fot21233*sot22 + fot21333*sot23;
                result(1,3) = fot21123*sot21 + fot21223*sot22 + fot21323*sot23;
                result(1,4) = fot21113*sot21 + fot21213*sot22 + fot21313*sot23;
                result(1,5) = fot21112*sot21 + fot21212*sot22 + fot21312*sot23;
                result(1,6) = fot21132*sot21 + fot21232*sot22 + fot21332*sot23;
                result(1,7) = fot21131*sot21 + fot21231*sot22 + fot21331*sot23;
                result(1,8) = fot21121*sot21 + fot21221*sot22 + fot21321*sot23;
                result(1,9) = fot22111*sot21 + fot22211*sot22 + fot22311*sot23;
                result(1,10) = fot22122*sot21 + fot22222*sot22 + fot22322*sot23;
                result(1,11) = fot22133*sot21 + fot22233*sot22 + fot22333*sot23;
                result(1,12) = fot22123*sot21 + fot22223*sot22 + fot22323*sot23;
                result(1,13) = fot22113*sot21 + fot22213*sot22 + fot22313*sot23;
                result(1,14) = fot22112*sot21 + fot22212*sot22 + fot22312*sot23;
                result(1,15) = fot22132*sot21 + fot22232*sot22 + fot22332*sot23;
                result(1,16) = fot22131*sot21 + fot22231*sot22 + fot22331*sot23;
                result(1,17) = fot22121*sot21 + fot22221*sot22 + fot22321*sot23;
                result(1,18) = fot23111*sot21 + fot23211*sot22 + fot23311*sot23;
                result(1,19) = fot23122*sot21 + fot23222*sot22 + fot23322*sot23;
                result(1,20) = fot23133*sot21 + fot23233*sot22 + fot23333*sot23;
                result(1,21) = fot23123*sot21 + fot23223*sot22 + fot23323*sot23;
                result(1,22) = fot23113*sot21 + fot23213*sot22 + fot23313*sot23;
                result(1,23) = fot23112*sot21 + fot23212*sot22 + fot23312*sot23;
                result(1,24) = fot23132*sot21 + fot23232*sot22 + fot23332*sot23;
                result(1,25) = fot23131*sot21 + fot23231*sot22 + fot23331*sot23;
                result(1,26) = fot23121*sot21 + fot23221*sot22 + fot23321*sot23;
                result(2,0) = fot31111*sot31 + fot31211*sot32 + fot31311*sot33;
                result(2,1) = fot31122*sot31 + fot31222*sot32 + fot31322*sot33;
                result(2,2) = fot31133*sot31 + fot31233*sot32 + fot31333*sot33;
                result(2,3) = fot31123*sot31 + fot31223*sot32 + fot31323*sot33;
                result(2,4) = fot31113*sot31 + fot31213*sot32 + fot31313*sot33;
                result(2,5) = fot31112*sot31 + fot31212*sot32 + fot31312*sot33;
                result(2,6) = fot31132*sot31 + fot31232*sot32 + fot31332*sot33;
                result(2,7) = fot31131*sot31 + fot31231*sot32 + fot31331*sot33;
                result(2,8) = fot31121*sot31 + fot31221*sot32 + fot31321*sot33;
                result(2,9) = fot32111*sot31 + fot32211*sot32 + fot32311*sot33;
                result(2,10) = fot32122*sot31 + fot32222*sot32 + fot32322*sot33;
                result(2,11) = fot32133*sot31 + fot32233*sot32 + fot32333*sot33;
                result(2,12) = fot32123*sot31 + fot32223*sot32 + fot32323*sot33;
                result(2,13) = fot32113*sot31 + fot32213*sot32 + fot32313*sot33;
                result(2,14) = fot32112*sot31 + fot32212*sot32 + fot32312*sot33;
                result(2,15) = fot32132*sot31 + fot32232*sot32 + fot32332*sot33;
                result(2,16) = fot32131*sot31 + fot32231*sot32 + fot32331*sot33;
                result(2,17) = fot32121*sot31 + fot32221*sot32 + fot32321*sot33;
                result(2,18) = fot33111*sot31 + fot33211*sot32 + fot33311*sot33;
                result(2,19) = fot33122*sot31 + fot33222*sot32 + fot33322*sot33;
                result(2,20) = fot33133*sot31 + fot33233*sot32 + fot33333*sot33;
                result(2,21) = fot33123*sot31 + fot33223*sot32 + fot33323*sot33;
                result(2,22) = fot33113*sot31 + fot33213*sot32 + fot33313*sot33;
                result(2,23) = fot33112*sot31 + fot33212*sot32 + fot33312*sot33;
                result(2,24) = fot33132*sot31 + fot33232*sot32 + fot33332*sot33;
                result(2,25) = fot33131*sot31 + fot33231*sot32 + fot33331*sot33;
                result(2,26) = fot33121*sot31 + fot33221*sot32 + fot33321*sot33;
                result(3,0) = fot31111*sot21 + fot31211*sot22 + fot31311*sot23;
                result(3,1) = fot31122*sot21 + fot31222*sot22 + fot31322*sot23;
                result(3,2) = fot31133*sot21 + fot31233*sot22 + fot31333*sot23;
                result(3,3) = fot31123*sot21 + fot31223*sot22 + fot31323*sot23;
                result(3,4) = fot31113*sot21 + fot31213*sot22 + fot31313*sot23;
                result(3,5) = fot31112*sot21 + fot31212*sot22 + fot31312*sot23;
                result(3,6) = fot31132*sot21 + fot31232*sot22 + fot31332*sot23;
                result(3,7) = fot31131*sot21 + fot31231*sot22 + fot31331*sot23;
                result(3,8) = fot31121*sot21 + fot31221*sot22 + fot31321*sot23;
                result(3,9) = fot32111*sot21 + fot32211*sot22 + fot32311*sot23;
                result(3,10) = fot32122*sot21 + fot32222*sot22 + fot32322*sot23;
                result(3,11) = fot32133*sot21 + fot32233*sot22 + fot32333*sot23;
                result(3,12) = fot32123*sot21 + fot32223*sot22 + fot32323*sot23;
                result(3,13) = fot32113*sot21 + fot32213*sot22 + fot32313*sot23;
                result(3,14) = fot32112*sot21 + fot32212*sot22 + fot32312*sot23;
                result(3,15) = fot32132*sot21 + fot32232*sot22 + fot32332*sot23;
                result(3,16) = fot32131*sot21 + fot32231*sot22 + fot32331*sot23;
                result(3,17) = fot32121*sot21 + fot32221*sot22 + fot32321*sot23;
                result(3,18) = fot33111*sot21 + fot33211*sot22 + fot33311*sot23;
                result(3,19) = fot33122*sot21 + fot33222*sot22 + fot33322*sot23;
                result(3,20) = fot33133*sot21 + fot33233*sot22 + fot33333*sot23;
                result(3,21) = fot33123*sot21 + fot33223*sot22 + fot33323*sot23;
                result(3,22) = fot33113*sot21 + fot33213*sot22 + fot33313*sot23;
                result(3,23) = fot33112*sot21 + fot33212*sot22 + fot33312*sot23;
                result(3,24) = fot33132*sot21 + fot33232*sot22 + fot33332*sot23;
                result(3,25) = fot33131*sot21 + fot33231*sot22 + fot33331*sot23;
                result(3,26) = fot33121*sot21 + fot33221*sot22 + fot33321*sot23;
                result(4,0) = fot31111*sot11 + fot31211*sot12 + fot31311*sot13;
                result(4,1) = fot31122*sot11 + fot31222*sot12 + fot31322*sot13;
                result(4,2) = fot31133*sot11 + fot31233*sot12 + fot31333*sot13;
                result(4,3) = fot31123*sot11 + fot31223*sot12 + fot31323*sot13;
                result(4,4) = fot31113*sot11 + fot31213*sot12 + fot31313*sot13;
                result(4,5) = fot31112*sot11 + fot31212*sot12 + fot31312*sot13;
                result(4,6) = fot31132*sot11 + fot31232*sot12 + fot31332*sot13;
                result(4,7) = fot31131*sot11 + fot31231*sot12 + fot31331*sot13;
                result(4,8) = fot31121*sot11 + fot31221*sot12 + fot31321*sot13;
                result(4,9) = fot32111*sot11 + fot32211*sot12 + fot32311*sot13;
                result(4,10) = fot32122*sot11 + fot32222*sot12 + fot32322*sot13;
                result(4,11) = fot32133*sot11 + fot32233*sot12 + fot32333*sot13;
                result(4,12) = fot32123*sot11 + fot32223*sot12 + fot32323*sot13;
                result(4,13) = fot32113*sot11 + fot32213*sot12 + fot32313*sot13;
                result(4,14) = fot32112*sot11 + fot32212*sot12 + fot32312*sot13;
                result(4,15) = fot32132*sot11 + fot32232*sot12 + fot32332*sot13;
                result(4,16) = fot32131*sot11 + fot32231*sot12 + fot32331*sot13;
                result(4,17) = fot32121*sot11 + fot32221*sot12 + fot32321*sot13;
                result(4,18) = fot33111*sot11 + fot33211*sot12 + fot33311*sot13;
                result(4,19) = fot33122*sot11 + fot33222*sot12 + fot33322*sot13;
                result(4,20) = fot33133*sot11 + fot33233*sot12 + fot33333*sot13;
                result(4,21) = fot33123*sot11 + fot33223*sot12 + fot33323*sot13;
                result(4,22) = fot33113*sot11 + fot33213*sot12 + fot33313*sot13;
                result(4,23) = fot33112*sot11 + fot33212*sot12 + fot33312*sot13;
                result(4,24) = fot33132*sot11 + fot33232*sot12 + fot33332*sot13;
                result(4,25) = fot33131*sot11 + fot33231*sot12 + fot33331*sot13;
                result(4,26) = fot33121*sot11 + fot33221*sot12 + fot33321*sot13;
                result(5,0) = fot21111*sot11 + fot21211*sot12 + fot21311*sot13;
                result(5,1) = fot21122*sot11 + fot21222*sot12 + fot21322*sot13;
                result(5,2) = fot21133*sot11 + fot21233*sot12 + fot21333*sot13;
                result(5,3) = fot21123*sot11 + fot21223*sot12 + fot21323*sot13;
                result(5,4) = fot21113*sot11 + fot21213*sot12 + fot21313*sot13;
                result(5,5) = fot21112*sot11 + fot21212*sot12 + fot21312*sot13;
                result(5,6) = fot21132*sot11 + fot21232*sot12 + fot21332*sot13;
                result(5,7) = fot21131*sot11 + fot21231*sot12 + fot21331*sot13;
                result(5,8) = fot21121*sot11 + fot21221*sot12 + fot21321*sot13;
                result(5,9) = fot22111*sot11 + fot22211*sot12 + fot22311*sot13;
                result(5,10) = fot22122*sot11 + fot22222*sot12 + fot22322*sot13;
                result(5,11) = fot22133*sot11 + fot22233*sot12 + fot22333*sot13;
                result(5,12) = fot22123*sot11 + fot22223*sot12 + fot22323*sot13;
                result(5,13) = fot22113*sot11 + fot22213*sot12 + fot22313*sot13;
                result(5,14) = fot22112*sot11 + fot22212*sot12 + fot22312*sot13;
                result(5,15) = fot22132*sot11 + fot22232*sot12 + fot22332*sot13;
                result(5,16) = fot22131*sot11 + fot22231*sot12 + fot22331*sot13;
                result(5,17) = fot22121*sot11 + fot22221*sot12 + fot22321*sot13;
                result(5,18) = fot23111*sot11 + fot23211*sot12 + fot23311*sot13;
                result(5,19) = fot23122*sot11 + fot23222*sot12 + fot23322*sot13;
                result(5,20) = fot23133*sot11 + fot23233*sot12 + fot23333*sot13;
                result(5,21) = fot23123*sot11 + fot23223*sot12 + fot23323*sot13;
                result(5,22) = fot23113*sot11 + fot23213*sot12 + fot23313*sot13;
                result(5,23) = fot23112*sot11 + fot23212*sot12 + fot23312*sot13;
                result(5,24) = fot23132*sot11 + fot23232*sot12 + fot23332*sot13;
                result(5,25) = fot23131*sot11 + fot23231*sot12 + fot23331*sot13;
                result(5,26) = fot23121*sot11 + fot23221*sot12 + fot23321*sot13;
                result(6,0) = fot21111*sot31 + fot21211*sot32 + fot21311*sot33;
                result(6,1) = fot21122*sot31 + fot21222*sot32 + fot21322*sot33;
                result(6,2) = fot21133*sot31 + fot21233*sot32 + fot21333*sot33;
                result(6,3) = fot21123*sot31 + fot21223*sot32 + fot21323*sot33;
                result(6,4) = fot21113*sot31 + fot21213*sot32 + fot21313*sot33;
                result(6,5) = fot21112*sot31 + fot21212*sot32 + fot21312*sot33;
                result(6,6) = fot21132*sot31 + fot21232*sot32 + fot21332*sot33;
                result(6,7) = fot21131*sot31 + fot21231*sot32 + fot21331*sot33;
                result(6,8) = fot21121*sot31 + fot21221*sot32 + fot21321*sot33;
                result(6,9) = fot22111*sot31 + fot22211*sot32 + fot22311*sot33;
                result(6,10) = fot22122*sot31 + fot22222*sot32 + fot22322*sot33;
                result(6,11) = fot22133*sot31 + fot22233*sot32 + fot22333*sot33;
                result(6,12) = fot22123*sot31 + fot22223*sot32 + fot22323*sot33;
                result(6,13) = fot22113*sot31 + fot22213*sot32 + fot22313*sot33;
                result(6,14) = fot22112*sot31 + fot22212*sot32 + fot22312*sot33;
                result(6,15) = fot22132*sot31 + fot22232*sot32 + fot22332*sot33;
                result(6,16) = fot22131*sot31 + fot22231*sot32 + fot22331*sot33;
                result(6,17) = fot22121*sot31 + fot22221*sot32 + fot22321*sot33;
                result(6,18) = fot23111*sot31 + fot23211*sot32 + fot23311*sot33;
                result(6,19) = fot23122*sot31 + fot23222*sot32 + fot23322*sot33;
                result(6,20) = fot23133*sot31 + fot23233*sot32 + fot23333*sot33;
                result(6,21) = fot23123*sot31 + fot23223*sot32 + fot23323*sot33;
                result(6,22) = fot23113*sot31 + fot23213*sot32 + fot23313*sot33;
                result(6,23) = fot23112*sot31 + fot23212*sot32 + fot23312*sot33;
                result(6,24) = fot23132*sot31 + fot23232*sot32 + fot23332*sot33;
                result(6,25) = fot23131*sot31 + fot23231*sot32 + fot23331*sot33;
                result(6,26) = fot23121*sot31 + fot23221*sot32 + fot23321*sot33;
                result(7,0) = fot11111*sot31 + fot11211*sot32 + fot11311*sot33;
                result(7,1) = fot11122*sot31 + fot11222*sot32 + fot11322*sot33;
                result(7,2) = fot11133*sot31 + fot11233*sot32 + fot11333*sot33;
                result(7,3) = fot11123*sot31 + fot11223*sot32 + fot11323*sot33;
                result(7,4) = fot11113*sot31 + fot11213*sot32 + fot11313*sot33;
                result(7,5) = fot11112*sot31 + fot11212*sot32 + fot11312*sot33;
                result(7,6) = fot11132*sot31 + fot11232*sot32 + fot11332*sot33;
                result(7,7) = fot11131*sot31 + fot11231*sot32 + fot11331*sot33;
                result(7,8) = fot11121*sot31 + fot11221*sot32 + fot11321*sot33;
                result(7,9) = fot12111*sot31 + fot12211*sot32 + fot12311*sot33;
                result(7,10) = fot12122*sot31 + fot12222*sot32 + fot12322*sot33;
                result(7,11) = fot12133*sot31 + fot12233*sot32 + fot12333*sot33;
                result(7,12) = fot12123*sot31 + fot12223*sot32 + fot12323*sot33;
                result(7,13) = fot12113*sot31 + fot12213*sot32 + fot12313*sot33;
                result(7,14) = fot12112*sot31 + fot12212*sot32 + fot12312*sot33;
                result(7,15) = fot12132*sot31 + fot12232*sot32 + fot12332*sot33;
                result(7,16) = fot12131*sot31 + fot12231*sot32 + fot12331*sot33;
                result(7,17) = fot12121*sot31 + fot12221*sot32 + fot12321*sot33;
                result(7,18) = fot13111*sot31 + fot13211*sot32 + fot13311*sot33;
                result(7,19) = fot13122*sot31 + fot13222*sot32 + fot13322*sot33;
                result(7,20) = fot13133*sot31 + fot13233*sot32 + fot13333*sot33;
                result(7,21) = fot13123*sot31 + fot13223*sot32 + fot13323*sot33;
                result(7,22) = fot13113*sot31 + fot13213*sot32 + fot13313*sot33;
                result(7,23) = fot13112*sot31 + fot13212*sot32 + fot13312*sot33;
                result(7,24) = fot13132*sot31 + fot13232*sot32 + fot13332*sot33;
                result(7,25) = fot13131*sot31 + fot13231*sot32 + fot13331*sot33;
                result(7,26) = fot13121*sot31 + fot13221*sot32 + fot13321*sot33;
                result(8,0) = fot11111*sot21 + fot11211*sot22 + fot11311*sot23;
                result(8,1) = fot11122*sot21 + fot11222*sot22 + fot11322*sot23;
                result(8,2) = fot11133*sot21 + fot11233*sot22 + fot11333*sot23;
                result(8,3) = fot11123*sot21 + fot11223*sot22 + fot11323*sot23;
                result(8,4) = fot11113*sot21 + fot11213*sot22 + fot11313*sot23;
                result(8,5) = fot11112*sot21 + fot11212*sot22 + fot11312*sot23;
                result(8,6) = fot11132*sot21 + fot11232*sot22 + fot11332*sot23;
                result(8,7) = fot11131*sot21 + fot11231*sot22 + fot11331*sot23;
                result(8,8) = fot11121*sot21 + fot11221*sot22 + fot11321*sot23;
                result(8,9) = fot12111*sot21 + fot12211*sot22 + fot12311*sot23;
                result(8,10) = fot12122*sot21 + fot12222*sot22 + fot12322*sot23;
                result(8,11) = fot12133*sot21 + fot12233*sot22 + fot12333*sot23;
                result(8,12) = fot12123*sot21 + fot12223*sot22 + fot12323*sot23;
                result(8,13) = fot12113*sot21 + fot12213*sot22 + fot12313*sot23;
                result(8,14) = fot12112*sot21 + fot12212*sot22 + fot12312*sot23;
                result(8,15) = fot12132*sot21 + fot12232*sot22 + fot12332*sot23;
                result(8,16) = fot12131*sot21 + fot12231*sot22 + fot12331*sot23;
                result(8,17) = fot12121*sot21 + fot12221*sot22 + fot12321*sot23;
                result(8,18) = fot13111*sot21 + fot13211*sot22 + fot13311*sot23;
                result(8,19) = fot13122*sot21 + fot13222*sot22 + fot13322*sot23;
                result(8,20) = fot13133*sot21 + fot13233*sot22 + fot13333*sot23;
                result(8,21) = fot13123*sot21 + fot13223*sot22 + fot13323*sot23;
                result(8,22) = fot13113*sot21 + fot13213*sot22 + fot13313*sot23;
                result(8,23) = fot13112*sot21 + fot13212*sot22 + fot13312*sot23;
                result(8,24) = fot13132*sot21 + fot13232*sot22 + fot13332*sot23;
                result(8,25) = fot13131*sot21 + fot13231*sot22 + fot13331*sot23;
                result(8,26) = fot13121*sot21 + fot13221*sot22 + fot13321*sot23;
        }
        else if(i==3){
                result(0,0) = fot11111*sot11 + fot11121*sot12 + fot11131*sot13;
                result(0,1) = fot11212*sot11 + fot11222*sot12 + fot11232*sot13;
                result(0,2) = fot11313*sot11 + fot11323*sot12 + fot11333*sot13;
                result(0,3) = fot11213*sot11 + fot11223*sot12 + fot11233*sot13;
                result(0,4) = fot11113*sot11 + fot11123*sot12 + fot11133*sot13;
                result(0,5) = fot11112*sot11 + fot11122*sot12 + fot11132*sot13;
                result(0,6) = fot11312*sot11 + fot11322*sot12 + fot11332*sot13;
                result(0,7) = fot11311*sot11 + fot11321*sot12 + fot11331*sot13;
                result(0,8) = fot11211*sot11 + fot11221*sot12 + fot11231*sot13;
                result(0,9) = fot12111*sot11 + fot12121*sot12 + fot12131*sot13;
                result(0,10) = fot12212*sot11 + fot12222*sot12 + fot12232*sot13;
                result(0,11) = fot12313*sot11 + fot12323*sot12 + fot12333*sot13;
                result(0,12) = fot12213*sot11 + fot12223*sot12 + fot12233*sot13;
                result(0,13) = fot12113*sot11 + fot12123*sot12 + fot12133*sot13;
                result(0,14) = fot12112*sot11 + fot12122*sot12 + fot12132*sot13;
                result(0,15) = fot12312*sot11 + fot12322*sot12 + fot12332*sot13;
                result(0,16) = fot12311*sot11 + fot12321*sot12 + fot12331*sot13;
                result(0,17) = fot12211*sot11 + fot12221*sot12 + fot12231*sot13;
                result(0,18) = fot13111*sot11 + fot13121*sot12 + fot13131*sot13;
                result(0,19) = fot13212*sot11 + fot13222*sot12 + fot13232*sot13;
                result(0,20) = fot13313*sot11 + fot13323*sot12 + fot13333*sot13;
                result(0,21) = fot13213*sot11 + fot13223*sot12 + fot13233*sot13;
                result(0,22) = fot13113*sot11 + fot13123*sot12 + fot13133*sot13;
                result(0,23) = fot13112*sot11 + fot13122*sot12 + fot13132*sot13;
                result(0,24) = fot13312*sot11 + fot13322*sot12 + fot13332*sot13;
                result(0,25) = fot13311*sot11 + fot13321*sot12 + fot13331*sot13;
                result(0,26) = fot13211*sot11 + fot13221*sot12 + fot13231*sot13;
                result(1,0) = fot21111*sot21 + fot21121*sot22 + fot21131*sot23;
                result(1,1) = fot21212*sot21 + fot21222*sot22 + fot21232*sot23;
                result(1,2) = fot21313*sot21 + fot21323*sot22 + fot21333*sot23;
                result(1,3) = fot21213*sot21 + fot21223*sot22 + fot21233*sot23;
                result(1,4) = fot21113*sot21 + fot21123*sot22 + fot21133*sot23;
                result(1,5) = fot21112*sot21 + fot21122*sot22 + fot21132*sot23;
                result(1,6) = fot21312*sot21 + fot21322*sot22 + fot21332*sot23;
                result(1,7) = fot21311*sot21 + fot21321*sot22 + fot21331*sot23;
                result(1,8) = fot21211*sot21 + fot21221*sot22 + fot21231*sot23;
                result(1,9) = fot22111*sot21 + fot22121*sot22 + fot22131*sot23;
                result(1,10) = fot22212*sot21 + fot22222*sot22 + fot22232*sot23;
                result(1,11) = fot22313*sot21 + fot22323*sot22 + fot22333*sot23;
                result(1,12) = fot22213*sot21 + fot22223*sot22 + fot22233*sot23;
                result(1,13) = fot22113*sot21 + fot22123*sot22 + fot22133*sot23;
                result(1,14) = fot22112*sot21 + fot22122*sot22 + fot22132*sot23;
                result(1,15) = fot22312*sot21 + fot22322*sot22 + fot22332*sot23;
                result(1,16) = fot22311*sot21 + fot22321*sot22 + fot22331*sot23;
                result(1,17) = fot22211*sot21 + fot22221*sot22 + fot22231*sot23;
                result(1,18) = fot23111*sot21 + fot23121*sot22 + fot23131*sot23;
                result(1,19) = fot23212*sot21 + fot23222*sot22 + fot23232*sot23;
                result(1,20) = fot23313*sot21 + fot23323*sot22 + fot23333*sot23;
                result(1,21) = fot23213*sot21 + fot23223*sot22 + fot23233*sot23;
                result(1,22) = fot23113*sot21 + fot23123*sot22 + fot23133*sot23;
                result(1,23) = fot23112*sot21 + fot23122*sot22 + fot23132*sot23;
                result(1,24) = fot23312*sot21 + fot23322*sot22 + fot23332*sot23;
                result(1,25) = fot23311*sot21 + fot23321*sot22 + fot23331*sot23;
                result(1,26) = fot23211*sot21 + fot23221*sot22 + fot23231*sot23;
                result(2,0) = fot31111*sot31 + fot31121*sot32 + fot31131*sot33;
                result(2,1) = fot31212*sot31 + fot31222*sot32 + fot31232*sot33;
                result(2,2) = fot31313*sot31 + fot31323*sot32 + fot31333*sot33;
                result(2,3) = fot31213*sot31 + fot31223*sot32 + fot31233*sot33;
                result(2,4) = fot31113*sot31 + fot31123*sot32 + fot31133*sot33;
                result(2,5) = fot31112*sot31 + fot31122*sot32 + fot31132*sot33;
                result(2,6) = fot31312*sot31 + fot31322*sot32 + fot31332*sot33;
                result(2,7) = fot31311*sot31 + fot31321*sot32 + fot31331*sot33;
                result(2,8) = fot31211*sot31 + fot31221*sot32 + fot31231*sot33;
                result(2,9) = fot32111*sot31 + fot32121*sot32 + fot32131*sot33;
                result(2,10) = fot32212*sot31 + fot32222*sot32 + fot32232*sot33;
                result(2,11) = fot32313*sot31 + fot32323*sot32 + fot32333*sot33;
                result(2,12) = fot32213*sot31 + fot32223*sot32 + fot32233*sot33;
                result(2,13) = fot32113*sot31 + fot32123*sot32 + fot32133*sot33;
                result(2,14) = fot32112*sot31 + fot32122*sot32 + fot32132*sot33;
                result(2,15) = fot32312*sot31 + fot32322*sot32 + fot32332*sot33;
                result(2,16) = fot32311*sot31 + fot32321*sot32 + fot32331*sot33;
                result(2,17) = fot32211*sot31 + fot32221*sot32 + fot32231*sot33;
                result(2,18) = fot33111*sot31 + fot33121*sot32 + fot33131*sot33;
                result(2,19) = fot33212*sot31 + fot33222*sot32 + fot33232*sot33;
                result(2,20) = fot33313*sot31 + fot33323*sot32 + fot33333*sot33;
                result(2,21) = fot33213*sot31 + fot33223*sot32 + fot33233*sot33;
                result(2,22) = fot33113*sot31 + fot33123*sot32 + fot33133*sot33;
                result(2,23) = fot33112*sot31 + fot33122*sot32 + fot33132*sot33;
                result(2,24) = fot33312*sot31 + fot33322*sot32 + fot33332*sot33;
                result(2,25) = fot33311*sot31 + fot33321*sot32 + fot33331*sot33;
                result(2,26) = fot33211*sot31 + fot33221*sot32 + fot33231*sot33;
                result(3,0) = fot31111*sot21 + fot31121*sot22 + fot31131*sot23;
                result(3,1) = fot31212*sot21 + fot31222*sot22 + fot31232*sot23;
                result(3,2) = fot31313*sot21 + fot31323*sot22 + fot31333*sot23;
                result(3,3) = fot31213*sot21 + fot31223*sot22 + fot31233*sot23;
                result(3,4) = fot31113*sot21 + fot31123*sot22 + fot31133*sot23;
                result(3,5) = fot31112*sot21 + fot31122*sot22 + fot31132*sot23;
                result(3,6) = fot31312*sot21 + fot31322*sot22 + fot31332*sot23;
                result(3,7) = fot31311*sot21 + fot31321*sot22 + fot31331*sot23;
                result(3,8) = fot31211*sot21 + fot31221*sot22 + fot31231*sot23;
                result(3,9) = fot32111*sot21 + fot32121*sot22 + fot32131*sot23;
                result(3,10) = fot32212*sot21 + fot32222*sot22 + fot32232*sot23;
                result(3,11) = fot32313*sot21 + fot32323*sot22 + fot32333*sot23;
                result(3,12) = fot32213*sot21 + fot32223*sot22 + fot32233*sot23;
                result(3,13) = fot32113*sot21 + fot32123*sot22 + fot32133*sot23;
                result(3,14) = fot32112*sot21 + fot32122*sot22 + fot32132*sot23;
                result(3,15) = fot32312*sot21 + fot32322*sot22 + fot32332*sot23;
                result(3,16) = fot32311*sot21 + fot32321*sot22 + fot32331*sot23;
                result(3,17) = fot32211*sot21 + fot32221*sot22 + fot32231*sot23;
                result(3,18) = fot33111*sot21 + fot33121*sot22 + fot33131*sot23;
                result(3,19) = fot33212*sot21 + fot33222*sot22 + fot33232*sot23;
                result(3,20) = fot33313*sot21 + fot33323*sot22 + fot33333*sot23;
                result(3,21) = fot33213*sot21 + fot33223*sot22 + fot33233*sot23;
                result(3,22) = fot33113*sot21 + fot33123*sot22 + fot33133*sot23;
                result(3,23) = fot33112*sot21 + fot33122*sot22 + fot33132*sot23;
                result(3,24) = fot33312*sot21 + fot33322*sot22 + fot33332*sot23;
                result(3,25) = fot33311*sot21 + fot33321*sot22 + fot33331*sot23;
                result(3,26) = fot33211*sot21 + fot33221*sot22 + fot33231*sot23;
                result(4,0) = fot31111*sot11 + fot31121*sot12 + fot31131*sot13;
                result(4,1) = fot31212*sot11 + fot31222*sot12 + fot31232*sot13;
                result(4,2) = fot31313*sot11 + fot31323*sot12 + fot31333*sot13;
                result(4,3) = fot31213*sot11 + fot31223*sot12 + fot31233*sot13;
                result(4,4) = fot31113*sot11 + fot31123*sot12 + fot31133*sot13;
                result(4,5) = fot31112*sot11 + fot31122*sot12 + fot31132*sot13;
                result(4,6) = fot31312*sot11 + fot31322*sot12 + fot31332*sot13;
                result(4,7) = fot31311*sot11 + fot31321*sot12 + fot31331*sot13;
                result(4,8) = fot31211*sot11 + fot31221*sot12 + fot31231*sot13;
                result(4,9) = fot32111*sot11 + fot32121*sot12 + fot32131*sot13;
                result(4,10) = fot32212*sot11 + fot32222*sot12 + fot32232*sot13;
                result(4,11) = fot32313*sot11 + fot32323*sot12 + fot32333*sot13;
                result(4,12) = fot32213*sot11 + fot32223*sot12 + fot32233*sot13;
                result(4,13) = fot32113*sot11 + fot32123*sot12 + fot32133*sot13;
                result(4,14) = fot32112*sot11 + fot32122*sot12 + fot32132*sot13;
                result(4,15) = fot32312*sot11 + fot32322*sot12 + fot32332*sot13;
                result(4,16) = fot32311*sot11 + fot32321*sot12 + fot32331*sot13;
                result(4,17) = fot32211*sot11 + fot32221*sot12 + fot32231*sot13;
                result(4,18) = fot33111*sot11 + fot33121*sot12 + fot33131*sot13;
                result(4,19) = fot33212*sot11 + fot33222*sot12 + fot33232*sot13;
                result(4,20) = fot33313*sot11 + fot33323*sot12 + fot33333*sot13;
                result(4,21) = fot33213*sot11 + fot33223*sot12 + fot33233*sot13;
                result(4,22) = fot33113*sot11 + fot33123*sot12 + fot33133*sot13;
                result(4,23) = fot33112*sot11 + fot33122*sot12 + fot33132*sot13;
                result(4,24) = fot33312*sot11 + fot33322*sot12 + fot33332*sot13;
                result(4,25) = fot33311*sot11 + fot33321*sot12 + fot33331*sot13;
                result(4,26) = fot33211*sot11 + fot33221*sot12 + fot33231*sot13;
                result(5,0) = fot21111*sot11 + fot21121*sot12 + fot21131*sot13;
                result(5,1) = fot21212*sot11 + fot21222*sot12 + fot21232*sot13;
                result(5,2) = fot21313*sot11 + fot21323*sot12 + fot21333*sot13;
                result(5,3) = fot21213*sot11 + fot21223*sot12 + fot21233*sot13;
                result(5,4) = fot21113*sot11 + fot21123*sot12 + fot21133*sot13;
                result(5,5) = fot21112*sot11 + fot21122*sot12 + fot21132*sot13;
                result(5,6) = fot21312*sot11 + fot21322*sot12 + fot21332*sot13;
                result(5,7) = fot21311*sot11 + fot21321*sot12 + fot21331*sot13;
                result(5,8) = fot21211*sot11 + fot21221*sot12 + fot21231*sot13;
                result(5,9) = fot22111*sot11 + fot22121*sot12 + fot22131*sot13;
                result(5,10) = fot22212*sot11 + fot22222*sot12 + fot22232*sot13;
                result(5,11) = fot22313*sot11 + fot22323*sot12 + fot22333*sot13;
                result(5,12) = fot22213*sot11 + fot22223*sot12 + fot22233*sot13;
                result(5,13) = fot22113*sot11 + fot22123*sot12 + fot22133*sot13;
                result(5,14) = fot22112*sot11 + fot22122*sot12 + fot22132*sot13;
                result(5,15) = fot22312*sot11 + fot22322*sot12 + fot22332*sot13;
                result(5,16) = fot22311*sot11 + fot22321*sot12 + fot22331*sot13;
                result(5,17) = fot22211*sot11 + fot22221*sot12 + fot22231*sot13;
                result(5,18) = fot23111*sot11 + fot23121*sot12 + fot23131*sot13;
                result(5,19) = fot23212*sot11 + fot23222*sot12 + fot23232*sot13;
                result(5,20) = fot23313*sot11 + fot23323*sot12 + fot23333*sot13;
                result(5,21) = fot23213*sot11 + fot23223*sot12 + fot23233*sot13;
                result(5,22) = fot23113*sot11 + fot23123*sot12 + fot23133*sot13;
                result(5,23) = fot23112*sot11 + fot23122*sot12 + fot23132*sot13;
                result(5,24) = fot23312*sot11 + fot23322*sot12 + fot23332*sot13;
                result(5,25) = fot23311*sot11 + fot23321*sot12 + fot23331*sot13;
                result(5,26) = fot23211*sot11 + fot23221*sot12 + fot23231*sot13;
                result(6,0) = fot21111*sot31 + fot21121*sot32 + fot21131*sot33;
                result(6,1) = fot21212*sot31 + fot21222*sot32 + fot21232*sot33;
                result(6,2) = fot21313*sot31 + fot21323*sot32 + fot21333*sot33;
                result(6,3) = fot21213*sot31 + fot21223*sot32 + fot21233*sot33;
                result(6,4) = fot21113*sot31 + fot21123*sot32 + fot21133*sot33;
                result(6,5) = fot21112*sot31 + fot21122*sot32 + fot21132*sot33;
                result(6,6) = fot21312*sot31 + fot21322*sot32 + fot21332*sot33;
                result(6,7) = fot21311*sot31 + fot21321*sot32 + fot21331*sot33;
                result(6,8) = fot21211*sot31 + fot21221*sot32 + fot21231*sot33;
                result(6,9) = fot22111*sot31 + fot22121*sot32 + fot22131*sot33;
                result(6,10) = fot22212*sot31 + fot22222*sot32 + fot22232*sot33;
                result(6,11) = fot22313*sot31 + fot22323*sot32 + fot22333*sot33;
                result(6,12) = fot22213*sot31 + fot22223*sot32 + fot22233*sot33;
                result(6,13) = fot22113*sot31 + fot22123*sot32 + fot22133*sot33;
                result(6,14) = fot22112*sot31 + fot22122*sot32 + fot22132*sot33;
                result(6,15) = fot22312*sot31 + fot22322*sot32 + fot22332*sot33;
                result(6,16) = fot22311*sot31 + fot22321*sot32 + fot22331*sot33;
                result(6,17) = fot22211*sot31 + fot22221*sot32 + fot22231*sot33;
                result(6,18) = fot23111*sot31 + fot23121*sot32 + fot23131*sot33;
                result(6,19) = fot23212*sot31 + fot23222*sot32 + fot23232*sot33;
                result(6,20) = fot23313*sot31 + fot23323*sot32 + fot23333*sot33;
                result(6,21) = fot23213*sot31 + fot23223*sot32 + fot23233*sot33;
                result(6,22) = fot23113*sot31 + fot23123*sot32 + fot23133*sot33;
                result(6,23) = fot23112*sot31 + fot23122*sot32 + fot23132*sot33;
                result(6,24) = fot23312*sot31 + fot23322*sot32 + fot23332*sot33;
                result(6,25) = fot23311*sot31 + fot23321*sot32 + fot23331*sot33;
                result(6,26) = fot23211*sot31 + fot23221*sot32 + fot23231*sot33;
                result(7,0) = fot11111*sot31 + fot11121*sot32 + fot11131*sot33;
                result(7,1) = fot11212*sot31 + fot11222*sot32 + fot11232*sot33;
                result(7,2) = fot11313*sot31 + fot11323*sot32 + fot11333*sot33;
                result(7,3) = fot11213*sot31 + fot11223*sot32 + fot11233*sot33;
                result(7,4) = fot11113*sot31 + fot11123*sot32 + fot11133*sot33;
                result(7,5) = fot11112*sot31 + fot11122*sot32 + fot11132*sot33;
                result(7,6) = fot11312*sot31 + fot11322*sot32 + fot11332*sot33;
                result(7,7) = fot11311*sot31 + fot11321*sot32 + fot11331*sot33;
                result(7,8) = fot11211*sot31 + fot11221*sot32 + fot11231*sot33;
                result(7,9) = fot12111*sot31 + fot12121*sot32 + fot12131*sot33;
                result(7,10) = fot12212*sot31 + fot12222*sot32 + fot12232*sot33;
                result(7,11) = fot12313*sot31 + fot12323*sot32 + fot12333*sot33;
                result(7,12) = fot12213*sot31 + fot12223*sot32 + fot12233*sot33;
                result(7,13) = fot12113*sot31 + fot12123*sot32 + fot12133*sot33;
                result(7,14) = fot12112*sot31 + fot12122*sot32 + fot12132*sot33;
                result(7,15) = fot12312*sot31 + fot12322*sot32 + fot12332*sot33;
                result(7,16) = fot12311*sot31 + fot12321*sot32 + fot12331*sot33;
                result(7,17) = fot12211*sot31 + fot12221*sot32 + fot12231*sot33;
                result(7,18) = fot13111*sot31 + fot13121*sot32 + fot13131*sot33;
                result(7,19) = fot13212*sot31 + fot13222*sot32 + fot13232*sot33;
                result(7,20) = fot13313*sot31 + fot13323*sot32 + fot13333*sot33;
                result(7,21) = fot13213*sot31 + fot13223*sot32 + fot13233*sot33;
                result(7,22) = fot13113*sot31 + fot13123*sot32 + fot13133*sot33;
                result(7,23) = fot13112*sot31 + fot13122*sot32 + fot13132*sot33;
                result(7,24) = fot13312*sot31 + fot13322*sot32 + fot13332*sot33;
                result(7,25) = fot13311*sot31 + fot13321*sot32 + fot13331*sot33;
                result(7,26) = fot13211*sot31 + fot13221*sot32 + fot13231*sot33;
                result(8,0) = fot11111*sot21 + fot11121*sot22 + fot11131*sot23;
                result(8,1) = fot11212*sot21 + fot11222*sot22 + fot11232*sot23;
                result(8,2) = fot11313*sot21 + fot11323*sot22 + fot11333*sot23;
                result(8,3) = fot11213*sot21 + fot11223*sot22 + fot11233*sot23;
                result(8,4) = fot11113*sot21 + fot11123*sot22 + fot11133*sot23;
                result(8,5) = fot11112*sot21 + fot11122*sot22 + fot11132*sot23;
                result(8,6) = fot11312*sot21 + fot11322*sot22 + fot11332*sot23;
                result(8,7) = fot11311*sot21 + fot11321*sot22 + fot11331*sot23;
                result(8,8) = fot11211*sot21 + fot11221*sot22 + fot11231*sot23;
                result(8,9) = fot12111*sot21 + fot12121*sot22 + fot12131*sot23;
                result(8,10) = fot12212*sot21 + fot12222*sot22 + fot12232*sot23;
                result(8,11) = fot12313*sot21 + fot12323*sot22 + fot12333*sot23;
                result(8,12) = fot12213*sot21 + fot12223*sot22 + fot12233*sot23;
                result(8,13) = fot12113*sot21 + fot12123*sot22 + fot12133*sot23;
                result(8,14) = fot12112*sot21 + fot12122*sot22 + fot12132*sot23;
                result(8,15) = fot12312*sot21 + fot12322*sot22 + fot12332*sot23;
                result(8,16) = fot12311*sot21 + fot12321*sot22 + fot12331*sot23;
                result(8,17) = fot12211*sot21 + fot12221*sot22 + fot12231*sot23;
                result(8,18) = fot13111*sot21 + fot13121*sot22 + fot13131*sot23;
                result(8,19) = fot13212*sot21 + fot13222*sot22 + fot13232*sot23;
                result(8,20) = fot13313*sot21 + fot13323*sot22 + fot13333*sot23;
                result(8,21) = fot13213*sot21 + fot13223*sot22 + fot13233*sot23;
                result(8,22) = fot13113*sot21 + fot13123*sot22 + fot13133*sot23;
                result(8,23) = fot13112*sot21 + fot13122*sot22 + fot13132*sot23;
                result(8,24) = fot13312*sot21 + fot13322*sot22 + fot13332*sot23;
                result(8,25) = fot13311*sot21 + fot13321*sot22 + fot13331*sot23;
                result(8,26) = fot13211*sot21 + fot13221*sot22 + fot13231*sot23;
        }
        else if(i==4){
                result(0,0) = fot11111*sot11 + fot11112*sot12 + fot11113*sot13;
                result(0,1) = fot11221*sot11 + fot11222*sot12 + fot11223*sot13;
                result(0,2) = fot11331*sot11 + fot11332*sot12 + fot11333*sot13;
                result(0,3) = fot11231*sot11 + fot11232*sot12 + fot11233*sot13;
                result(0,4) = fot11131*sot11 + fot11132*sot12 + fot11133*sot13;
                result(0,5) = fot11121*sot11 + fot11122*sot12 + fot11123*sot13;
                result(0,6) = fot11321*sot11 + fot11322*sot12 + fot11323*sot13;
                result(0,7) = fot11311*sot11 + fot11312*sot12 + fot11313*sot13;
                result(0,8) = fot11211*sot11 + fot11212*sot12 + fot11213*sot13;
                result(0,9) = fot12111*sot11 + fot12112*sot12 + fot12113*sot13;
                result(0,10) = fot12221*sot11 + fot12222*sot12 + fot12223*sot13;
                result(0,11) = fot12331*sot11 + fot12332*sot12 + fot12333*sot13;
                result(0,12) = fot12231*sot11 + fot12232*sot12 + fot12233*sot13;
                result(0,13) = fot12131*sot11 + fot12132*sot12 + fot12133*sot13;
                result(0,14) = fot12121*sot11 + fot12122*sot12 + fot12123*sot13;
                result(0,15) = fot12321*sot11 + fot12322*sot12 + fot12323*sot13;
                result(0,16) = fot12311*sot11 + fot12312*sot12 + fot12313*sot13;
                result(0,17) = fot12211*sot11 + fot12212*sot12 + fot12213*sot13;
                result(0,18) = fot13111*sot11 + fot13112*sot12 + fot13113*sot13;
                result(0,19) = fot13221*sot11 + fot13222*sot12 + fot13223*sot13;
                result(0,20) = fot13331*sot11 + fot13332*sot12 + fot13333*sot13;
                result(0,21) = fot13231*sot11 + fot13232*sot12 + fot13233*sot13;
                result(0,22) = fot13131*sot11 + fot13132*sot12 + fot13133*sot13;
                result(0,23) = fot13121*sot11 + fot13122*sot12 + fot13123*sot13;
                result(0,24) = fot13321*sot11 + fot13322*sot12 + fot13323*sot13;
                result(0,25) = fot13311*sot11 + fot13312*sot12 + fot13313*sot13;
                result(0,26) = fot13211*sot11 + fot13212*sot12 + fot13213*sot13;
                result(1,0) = fot21111*sot21 + fot21112*sot22 + fot21113*sot23;
                result(1,1) = fot21221*sot21 + fot21222*sot22 + fot21223*sot23;
                result(1,2) = fot21331*sot21 + fot21332*sot22 + fot21333*sot23;
                result(1,3) = fot21231*sot21 + fot21232*sot22 + fot21233*sot23;
                result(1,4) = fot21131*sot21 + fot21132*sot22 + fot21133*sot23;
                result(1,5) = fot21121*sot21 + fot21122*sot22 + fot21123*sot23;
                result(1,6) = fot21321*sot21 + fot21322*sot22 + fot21323*sot23;
                result(1,7) = fot21311*sot21 + fot21312*sot22 + fot21313*sot23;
                result(1,8) = fot21211*sot21 + fot21212*sot22 + fot21213*sot23;
                result(1,9) = fot22111*sot21 + fot22112*sot22 + fot22113*sot23;
                result(1,10) = fot22221*sot21 + fot22222*sot22 + fot22223*sot23;
                result(1,11) = fot22331*sot21 + fot22332*sot22 + fot22333*sot23;
                result(1,12) = fot22231*sot21 + fot22232*sot22 + fot22233*sot23;
                result(1,13) = fot22131*sot21 + fot22132*sot22 + fot22133*sot23;
                result(1,14) = fot22121*sot21 + fot22122*sot22 + fot22123*sot23;
                result(1,15) = fot22321*sot21 + fot22322*sot22 + fot22323*sot23;
                result(1,16) = fot22311*sot21 + fot22312*sot22 + fot22313*sot23;
                result(1,17) = fot22211*sot21 + fot22212*sot22 + fot22213*sot23;
                result(1,18) = fot23111*sot21 + fot23112*sot22 + fot23113*sot23;
                result(1,19) = fot23221*sot21 + fot23222*sot22 + fot23223*sot23;
                result(1,20) = fot23331*sot21 + fot23332*sot22 + fot23333*sot23;
                result(1,21) = fot23231*sot21 + fot23232*sot22 + fot23233*sot23;
                result(1,22) = fot23131*sot21 + fot23132*sot22 + fot23133*sot23;
                result(1,23) = fot23121*sot21 + fot23122*sot22 + fot23123*sot23;
                result(1,24) = fot23321*sot21 + fot23322*sot22 + fot23323*sot23;
                result(1,25) = fot23311*sot21 + fot23312*sot22 + fot23313*sot23;
                result(1,26) = fot23211*sot21 + fot23212*sot22 + fot23213*sot23;
                result(2,0) = fot31111*sot31 + fot31112*sot32 + fot31113*sot33;
                result(2,1) = fot31221*sot31 + fot31222*sot32 + fot31223*sot33;
                result(2,2) = fot31331*sot31 + fot31332*sot32 + fot31333*sot33;
                result(2,3) = fot31231*sot31 + fot31232*sot32 + fot31233*sot33;
                result(2,4) = fot31131*sot31 + fot31132*sot32 + fot31133*sot33;
                result(2,5) = fot31121*sot31 + fot31122*sot32 + fot31123*sot33;
                result(2,6) = fot31321*sot31 + fot31322*sot32 + fot31323*sot33;
                result(2,7) = fot31311*sot31 + fot31312*sot32 + fot31313*sot33;
                result(2,8) = fot31211*sot31 + fot31212*sot32 + fot31213*sot33;
                result(2,9) = fot32111*sot31 + fot32112*sot32 + fot32113*sot33;
                result(2,10) = fot32221*sot31 + fot32222*sot32 + fot32223*sot33;
                result(2,11) = fot32331*sot31 + fot32332*sot32 + fot32333*sot33;
                result(2,12) = fot32231*sot31 + fot32232*sot32 + fot32233*sot33;
                result(2,13) = fot32131*sot31 + fot32132*sot32 + fot32133*sot33;
                result(2,14) = fot32121*sot31 + fot32122*sot32 + fot32123*sot33;
                result(2,15) = fot32321*sot31 + fot32322*sot32 + fot32323*sot33;
                result(2,16) = fot32311*sot31 + fot32312*sot32 + fot32313*sot33;
                result(2,17) = fot32211*sot31 + fot32212*sot32 + fot32213*sot33;
                result(2,18) = fot33111*sot31 + fot33112*sot32 + fot33113*sot33;
                result(2,19) = fot33221*sot31 + fot33222*sot32 + fot33223*sot33;
                result(2,20) = fot33331*sot31 + fot33332*sot32 + fot33333*sot33;
                result(2,21) = fot33231*sot31 + fot33232*sot32 + fot33233*sot33;
                result(2,22) = fot33131*sot31 + fot33132*sot32 + fot33133*sot33;
                result(2,23) = fot33121*sot31 + fot33122*sot32 + fot33123*sot33;
                result(2,24) = fot33321*sot31 + fot33322*sot32 + fot33323*sot33;
                result(2,25) = fot33311*sot31 + fot33312*sot32 + fot33313*sot33;
                result(2,26) = fot33211*sot31 + fot33212*sot32 + fot33213*sot33;
                result(3,0) = fot31111*sot21 + fot31112*sot22 + fot31113*sot23;
                result(3,1) = fot31221*sot21 + fot31222*sot22 + fot31223*sot23;
                result(3,2) = fot31331*sot21 + fot31332*sot22 + fot31333*sot23;
                result(3,3) = fot31231*sot21 + fot31232*sot22 + fot31233*sot23;
                result(3,4) = fot31131*sot21 + fot31132*sot22 + fot31133*sot23;
                result(3,5) = fot31121*sot21 + fot31122*sot22 + fot31123*sot23;
                result(3,6) = fot31321*sot21 + fot31322*sot22 + fot31323*sot23;
                result(3,7) = fot31311*sot21 + fot31312*sot22 + fot31313*sot23;
                result(3,8) = fot31211*sot21 + fot31212*sot22 + fot31213*sot23;
                result(3,9) = fot32111*sot21 + fot32112*sot22 + fot32113*sot23;
                result(3,10) = fot32221*sot21 + fot32222*sot22 + fot32223*sot23;
                result(3,11) = fot32331*sot21 + fot32332*sot22 + fot32333*sot23;
                result(3,12) = fot32231*sot21 + fot32232*sot22 + fot32233*sot23;
                result(3,13) = fot32131*sot21 + fot32132*sot22 + fot32133*sot23;
                result(3,14) = fot32121*sot21 + fot32122*sot22 + fot32123*sot23;
                result(3,15) = fot32321*sot21 + fot32322*sot22 + fot32323*sot23;
                result(3,16) = fot32311*sot21 + fot32312*sot22 + fot32313*sot23;
                result(3,17) = fot32211*sot21 + fot32212*sot22 + fot32213*sot23;
                result(3,18) = fot33111*sot21 + fot33112*sot22 + fot33113*sot23;
                result(3,19) = fot33221*sot21 + fot33222*sot22 + fot33223*sot23;
                result(3,20) = fot33331*sot21 + fot33332*sot22 + fot33333*sot23;
                result(3,21) = fot33231*sot21 + fot33232*sot22 + fot33233*sot23;
                result(3,22) = fot33131*sot21 + fot33132*sot22 + fot33133*sot23;
                result(3,23) = fot33121*sot21 + fot33122*sot22 + fot33123*sot23;
                result(3,24) = fot33321*sot21 + fot33322*sot22 + fot33323*sot23;
                result(3,25) = fot33311*sot21 + fot33312*sot22 + fot33313*sot23;
                result(3,26) = fot33211*sot21 + fot33212*sot22 + fot33213*sot23;
                result(4,0) = fot31111*sot11 + fot31112*sot12 + fot31113*sot13;
                result(4,1) = fot31221*sot11 + fot31222*sot12 + fot31223*sot13;
                result(4,2) = fot31331*sot11 + fot31332*sot12 + fot31333*sot13;
                result(4,3) = fot31231*sot11 + fot31232*sot12 + fot31233*sot13;
                result(4,4) = fot31131*sot11 + fot31132*sot12 + fot31133*sot13;
                result(4,5) = fot31121*sot11 + fot31122*sot12 + fot31123*sot13;
                result(4,6) = fot31321*sot11 + fot31322*sot12 + fot31323*sot13;
                result(4,7) = fot31311*sot11 + fot31312*sot12 + fot31313*sot13;
                result(4,8) = fot31211*sot11 + fot31212*sot12 + fot31213*sot13;
                result(4,9) = fot32111*sot11 + fot32112*sot12 + fot32113*sot13;
                result(4,10) = fot32221*sot11 + fot32222*sot12 + fot32223*sot13;
                result(4,11) = fot32331*sot11 + fot32332*sot12 + fot32333*sot13;
                result(4,12) = fot32231*sot11 + fot32232*sot12 + fot32233*sot13;
                result(4,13) = fot32131*sot11 + fot32132*sot12 + fot32133*sot13;
                result(4,14) = fot32121*sot11 + fot32122*sot12 + fot32123*sot13;
                result(4,15) = fot32321*sot11 + fot32322*sot12 + fot32323*sot13;
                result(4,16) = fot32311*sot11 + fot32312*sot12 + fot32313*sot13;
                result(4,17) = fot32211*sot11 + fot32212*sot12 + fot32213*sot13;
                result(4,18) = fot33111*sot11 + fot33112*sot12 + fot33113*sot13;
                result(4,19) = fot33221*sot11 + fot33222*sot12 + fot33223*sot13;
                result(4,20) = fot33331*sot11 + fot33332*sot12 + fot33333*sot13;
                result(4,21) = fot33231*sot11 + fot33232*sot12 + fot33233*sot13;
                result(4,22) = fot33131*sot11 + fot33132*sot12 + fot33133*sot13;
                result(4,23) = fot33121*sot11 + fot33122*sot12 + fot33123*sot13;
                result(4,24) = fot33321*sot11 + fot33322*sot12 + fot33323*sot13;
                result(4,25) = fot33311*sot11 + fot33312*sot12 + fot33313*sot13;
                result(4,26) = fot33211*sot11 + fot33212*sot12 + fot33213*sot13;
                result(5,0) = fot21111*sot11 + fot21112*sot12 + fot21113*sot13;
                result(5,1) = fot21221*sot11 + fot21222*sot12 + fot21223*sot13;
                result(5,2) = fot21331*sot11 + fot21332*sot12 + fot21333*sot13;
                result(5,3) = fot21231*sot11 + fot21232*sot12 + fot21233*sot13;
                result(5,4) = fot21131*sot11 + fot21132*sot12 + fot21133*sot13;
                result(5,5) = fot21121*sot11 + fot21122*sot12 + fot21123*sot13;
                result(5,6) = fot21321*sot11 + fot21322*sot12 + fot21323*sot13;
                result(5,7) = fot21311*sot11 + fot21312*sot12 + fot21313*sot13;
                result(5,8) = fot21211*sot11 + fot21212*sot12 + fot21213*sot13;
                result(5,9) = fot22111*sot11 + fot22112*sot12 + fot22113*sot13;
                result(5,10) = fot22221*sot11 + fot22222*sot12 + fot22223*sot13;
                result(5,11) = fot22331*sot11 + fot22332*sot12 + fot22333*sot13;
                result(5,12) = fot22231*sot11 + fot22232*sot12 + fot22233*sot13;
                result(5,13) = fot22131*sot11 + fot22132*sot12 + fot22133*sot13;
                result(5,14) = fot22121*sot11 + fot22122*sot12 + fot22123*sot13;
                result(5,15) = fot22321*sot11 + fot22322*sot12 + fot22323*sot13;
                result(5,16) = fot22311*sot11 + fot22312*sot12 + fot22313*sot13;
                result(5,17) = fot22211*sot11 + fot22212*sot12 + fot22213*sot13;
                result(5,18) = fot23111*sot11 + fot23112*sot12 + fot23113*sot13;
                result(5,19) = fot23221*sot11 + fot23222*sot12 + fot23223*sot13;
                result(5,20) = fot23331*sot11 + fot23332*sot12 + fot23333*sot13;
                result(5,21) = fot23231*sot11 + fot23232*sot12 + fot23233*sot13;
                result(5,22) = fot23131*sot11 + fot23132*sot12 + fot23133*sot13;
                result(5,23) = fot23121*sot11 + fot23122*sot12 + fot23123*sot13;
                result(5,24) = fot23321*sot11 + fot23322*sot12 + fot23323*sot13;
                result(5,25) = fot23311*sot11 + fot23312*sot12 + fot23313*sot13;
                result(5,26) = fot23211*sot11 + fot23212*sot12 + fot23213*sot13;
                result(6,0) = fot21111*sot31 + fot21112*sot32 + fot21113*sot33;
                result(6,1) = fot21221*sot31 + fot21222*sot32 + fot21223*sot33;
                result(6,2) = fot21331*sot31 + fot21332*sot32 + fot21333*sot33;
                result(6,3) = fot21231*sot31 + fot21232*sot32 + fot21233*sot33;
                result(6,4) = fot21131*sot31 + fot21132*sot32 + fot21133*sot33;
                result(6,5) = fot21121*sot31 + fot21122*sot32 + fot21123*sot33;
                result(6,6) = fot21321*sot31 + fot21322*sot32 + fot21323*sot33;
                result(6,7) = fot21311*sot31 + fot21312*sot32 + fot21313*sot33;
                result(6,8) = fot21211*sot31 + fot21212*sot32 + fot21213*sot33;
                result(6,9) = fot22111*sot31 + fot22112*sot32 + fot22113*sot33;
                result(6,10) = fot22221*sot31 + fot22222*sot32 + fot22223*sot33;
                result(6,11) = fot22331*sot31 + fot22332*sot32 + fot22333*sot33;
                result(6,12) = fot22231*sot31 + fot22232*sot32 + fot22233*sot33;
                result(6,13) = fot22131*sot31 + fot22132*sot32 + fot22133*sot33;
                result(6,14) = fot22121*sot31 + fot22122*sot32 + fot22123*sot33;
                result(6,15) = fot22321*sot31 + fot22322*sot32 + fot22323*sot33;
                result(6,16) = fot22311*sot31 + fot22312*sot32 + fot22313*sot33;
                result(6,17) = fot22211*sot31 + fot22212*sot32 + fot22213*sot33;
                result(6,18) = fot23111*sot31 + fot23112*sot32 + fot23113*sot33;
                result(6,19) = fot23221*sot31 + fot23222*sot32 + fot23223*sot33;
                result(6,20) = fot23331*sot31 + fot23332*sot32 + fot23333*sot33;
                result(6,21) = fot23231*sot31 + fot23232*sot32 + fot23233*sot33;
                result(6,22) = fot23131*sot31 + fot23132*sot32 + fot23133*sot33;
                result(6,23) = fot23121*sot31 + fot23122*sot32 + fot23123*sot33;
                result(6,24) = fot23321*sot31 + fot23322*sot32 + fot23323*sot33;
                result(6,25) = fot23311*sot31 + fot23312*sot32 + fot23313*sot33;
                result(6,26) = fot23211*sot31 + fot23212*sot32 + fot23213*sot33;
                result(7,0) = fot11111*sot31 + fot11112*sot32 + fot11113*sot33;
                result(7,1) = fot11221*sot31 + fot11222*sot32 + fot11223*sot33;
                result(7,2) = fot11331*sot31 + fot11332*sot32 + fot11333*sot33;
                result(7,3) = fot11231*sot31 + fot11232*sot32 + fot11233*sot33;
                result(7,4) = fot11131*sot31 + fot11132*sot32 + fot11133*sot33;
                result(7,5) = fot11121*sot31 + fot11122*sot32 + fot11123*sot33;
                result(7,6) = fot11321*sot31 + fot11322*sot32 + fot11323*sot33;
                result(7,7) = fot11311*sot31 + fot11312*sot32 + fot11313*sot33;
                result(7,8) = fot11211*sot31 + fot11212*sot32 + fot11213*sot33;
                result(7,9) = fot12111*sot31 + fot12112*sot32 + fot12113*sot33;
                result(7,10) = fot12221*sot31 + fot12222*sot32 + fot12223*sot33;
                result(7,11) = fot12331*sot31 + fot12332*sot32 + fot12333*sot33;
                result(7,12) = fot12231*sot31 + fot12232*sot32 + fot12233*sot33;
                result(7,13) = fot12131*sot31 + fot12132*sot32 + fot12133*sot33;
                result(7,14) = fot12121*sot31 + fot12122*sot32 + fot12123*sot33;
                result(7,15) = fot12321*sot31 + fot12322*sot32 + fot12323*sot33;
                result(7,16) = fot12311*sot31 + fot12312*sot32 + fot12313*sot33;
                result(7,17) = fot12211*sot31 + fot12212*sot32 + fot12213*sot33;
                result(7,18) = fot13111*sot31 + fot13112*sot32 + fot13113*sot33;
                result(7,19) = fot13221*sot31 + fot13222*sot32 + fot13223*sot33;
                result(7,20) = fot13331*sot31 + fot13332*sot32 + fot13333*sot33;
                result(7,21) = fot13231*sot31 + fot13232*sot32 + fot13233*sot33;
                result(7,22) = fot13131*sot31 + fot13132*sot32 + fot13133*sot33;
                result(7,23) = fot13121*sot31 + fot13122*sot32 + fot13123*sot33;
                result(7,24) = fot13321*sot31 + fot13322*sot32 + fot13323*sot33;
                result(7,25) = fot13311*sot31 + fot13312*sot32 + fot13313*sot33;
                result(7,26) = fot13211*sot31 + fot13212*sot32 + fot13213*sot33;
                result(8,0) = fot11111*sot21 + fot11112*sot22 + fot11113*sot23;
                result(8,1) = fot11221*sot21 + fot11222*sot22 + fot11223*sot23;
                result(8,2) = fot11331*sot21 + fot11332*sot22 + fot11333*sot23;
                result(8,3) = fot11231*sot21 + fot11232*sot22 + fot11233*sot23;
                result(8,4) = fot11131*sot21 + fot11132*sot22 + fot11133*sot23;
                result(8,5) = fot11121*sot21 + fot11122*sot22 + fot11123*sot23;
                result(8,6) = fot11321*sot21 + fot11322*sot22 + fot11323*sot23;
                result(8,7) = fot11311*sot21 + fot11312*sot22 + fot11313*sot23;
                result(8,8) = fot11211*sot21 + fot11212*sot22 + fot11213*sot23;
                result(8,9) = fot12111*sot21 + fot12112*sot22 + fot12113*sot23;
                result(8,10) = fot12221*sot21 + fot12222*sot22 + fot12223*sot23;
                result(8,11) = fot12331*sot21 + fot12332*sot22 + fot12333*sot23;
                result(8,12) = fot12231*sot21 + fot12232*sot22 + fot12233*sot23;
                result(8,13) = fot12131*sot21 + fot12132*sot22 + fot12133*sot23;
                result(8,14) = fot12121*sot21 + fot12122*sot22 + fot12123*sot23;
                result(8,15) = fot12321*sot21 + fot12322*sot22 + fot12323*sot23;
                result(8,16) = fot12311*sot21 + fot12312*sot22 + fot12313*sot23;
                result(8,17) = fot12211*sot21 + fot12212*sot22 + fot12213*sot23;
                result(8,18) = fot13111*sot21 + fot13112*sot22 + fot13113*sot23;
                result(8,19) = fot13221*sot21 + fot13222*sot22 + fot13223*sot23;
                result(8,20) = fot13331*sot21 + fot13332*sot22 + fot13333*sot23;
                result(8,21) = fot13231*sot21 + fot13232*sot22 + fot13233*sot23;
                result(8,22) = fot13131*sot21 + fot13132*sot22 + fot13133*sot23;
                result(8,23) = fot13121*sot21 + fot13122*sot22 + fot13123*sot23;
                result(8,24) = fot13321*sot21 + fot13322*sot22 + fot13323*sot23;
                result(8,25) = fot13311*sot21 + fot13312*sot22 + fot13313*sot23;
                result(8,26) = fot13211*sot21 + fot13212*sot22 + fot13213*sot23;
        }
        else {
            std::cout << "Error: Index out of range\n";
            assert(1==0); //TODO: Replace with better error handling.
        }
        return;  
    }
    
    void dot_2ot_5ot(const int &i, const Matrix_3x3 &sot, const Matrix_27x9 &fot, Matrix_27x9 &result){
        /*!==================
        |    dot_2ot_5ot    |
        =====================
        
        Compute the dot product of a second order tensor and a fifth order tensor at index i+1 i.e.
        
        index = 0
        
        result_ijklm = sot_in fot_njklm
        
        index = 1
        
        result_ijklm = sot_im fot_jnklm
        
        */
    
        //Extract the second order tensor
        double sot11 = sot(0,0);
        double sot12 = sot(0,1);
        double sot13 = sot(0,2);
        double sot21 = sot(1,0);
        double sot22 = sot(1,1);
        double sot23 = sot(1,2);
        double sot31 = sot(2,0);
        double sot32 = sot(2,1);
        double sot33 = sot(2,2);

        //Extract the fifth order tensor
        double fot11111 = fot(0,0);
        double fot11112 = fot(0,5);
        double fot11113 = fot(0,4);
        double fot11121 = fot(0,8);
        double fot11122 = fot(0,1);
        double fot11123 = fot(0,3);
        double fot11131 = fot(0,7);
        double fot11132 = fot(0,6);
        double fot11133 = fot(0,2);
        double fot11211 = fot(5,0);
        double fot11212 = fot(5,5);
        double fot11213 = fot(5,4);
        double fot11221 = fot(5,8);
        double fot11222 = fot(5,1);
        double fot11223 = fot(5,3);
        double fot11231 = fot(5,7);
        double fot11232 = fot(5,6);
        double fot11233 = fot(5,2);
        double fot11311 = fot(4,0);
        double fot11312 = fot(4,5);
        double fot11313 = fot(4,4);
        double fot11321 = fot(4,8);
        double fot11322 = fot(4,1);
        double fot11323 = fot(4,3);
        double fot11331 = fot(4,7);
        double fot11332 = fot(4,6);
        double fot11333 = fot(4,2);
        double fot12111 = fot(8,0);
        double fot12112 = fot(8,5);
        double fot12113 = fot(8,4);
        double fot12121 = fot(8,8);
        double fot12122 = fot(8,1);
        double fot12123 = fot(8,3);
        double fot12131 = fot(8,7);
        double fot12132 = fot(8,6);
        double fot12133 = fot(8,2);
        double fot12211 = fot(1,0);
        double fot12212 = fot(1,5);
        double fot12213 = fot(1,4);
        double fot12221 = fot(1,8);
        double fot12222 = fot(1,1);
        double fot12223 = fot(1,3);
        double fot12231 = fot(1,7);
        double fot12232 = fot(1,6);
        double fot12233 = fot(1,2);
        double fot12311 = fot(3,0);
        double fot12312 = fot(3,5);
        double fot12313 = fot(3,4);
        double fot12321 = fot(3,8);
        double fot12322 = fot(3,1);
        double fot12323 = fot(3,3);
        double fot12331 = fot(3,7);
        double fot12332 = fot(3,6);
        double fot12333 = fot(3,2);
        double fot13111 = fot(7,0);
        double fot13112 = fot(7,5);
        double fot13113 = fot(7,4);
        double fot13121 = fot(7,8);
        double fot13122 = fot(7,1);
        double fot13123 = fot(7,3);
        double fot13131 = fot(7,7);
        double fot13132 = fot(7,6);
        double fot13133 = fot(7,2);
        double fot13211 = fot(6,0);
        double fot13212 = fot(6,5);
        double fot13213 = fot(6,4);
        double fot13221 = fot(6,8);
        double fot13222 = fot(6,1);
        double fot13223 = fot(6,3);
        double fot13231 = fot(6,7);
        double fot13232 = fot(6,6);
        double fot13233 = fot(6,2);
        double fot13311 = fot(2,0);
        double fot13312 = fot(2,5);
        double fot13313 = fot(2,4);
        double fot13321 = fot(2,8);
        double fot13322 = fot(2,1);
        double fot13323 = fot(2,3);
        double fot13331 = fot(2,7);
        double fot13332 = fot(2,6);
        double fot13333 = fot(2,2);
        double fot21111 = fot(9,0);
        double fot21112 = fot(9,5);
        double fot21113 = fot(9,4);
        double fot21121 = fot(9,8);
        double fot21122 = fot(9,1);
        double fot21123 = fot(9,3);
        double fot21131 = fot(9,7);
        double fot21132 = fot(9,6);
        double fot21133 = fot(9,2);
        double fot21211 = fot(14,0);
        double fot21212 = fot(14,5);
        double fot21213 = fot(14,4);
        double fot21221 = fot(14,8);
        double fot21222 = fot(14,1);
        double fot21223 = fot(14,3);
        double fot21231 = fot(14,7);
        double fot21232 = fot(14,6);
        double fot21233 = fot(14,2);
        double fot21311 = fot(13,0);
        double fot21312 = fot(13,5);
        double fot21313 = fot(13,4);
        double fot21321 = fot(13,8);
        double fot21322 = fot(13,1);
        double fot21323 = fot(13,3);
        double fot21331 = fot(13,7);
        double fot21332 = fot(13,6);
        double fot21333 = fot(13,2);
        double fot22111 = fot(17,0);
        double fot22112 = fot(17,5);
        double fot22113 = fot(17,4);
        double fot22121 = fot(17,8);
        double fot22122 = fot(17,1);
        double fot22123 = fot(17,3);
        double fot22131 = fot(17,7);
        double fot22132 = fot(17,6);
        double fot22133 = fot(17,2);
        double fot22211 = fot(10,0);
        double fot22212 = fot(10,5);
        double fot22213 = fot(10,4);
        double fot22221 = fot(10,8);
        double fot22222 = fot(10,1);
        double fot22223 = fot(10,3);
        double fot22231 = fot(10,7);
        double fot22232 = fot(10,6);
        double fot22233 = fot(10,2);
        double fot22311 = fot(12,0);
        double fot22312 = fot(12,5);
        double fot22313 = fot(12,4);
        double fot22321 = fot(12,8);
        double fot22322 = fot(12,1);
        double fot22323 = fot(12,3);
        double fot22331 = fot(12,7);
        double fot22332 = fot(12,6);
        double fot22333 = fot(12,2);
        double fot23111 = fot(16,0);
        double fot23112 = fot(16,5);
        double fot23113 = fot(16,4);
        double fot23121 = fot(16,8);
        double fot23122 = fot(16,1);
        double fot23123 = fot(16,3);
        double fot23131 = fot(16,7);
        double fot23132 = fot(16,6);
        double fot23133 = fot(16,2);
        double fot23211 = fot(15,0);
        double fot23212 = fot(15,5);
        double fot23213 = fot(15,4);
        double fot23221 = fot(15,8);
        double fot23222 = fot(15,1);
        double fot23223 = fot(15,3);
        double fot23231 = fot(15,7);
        double fot23232 = fot(15,6);
        double fot23233 = fot(15,2);
        double fot23311 = fot(11,0);
        double fot23312 = fot(11,5);
        double fot23313 = fot(11,4);
        double fot23321 = fot(11,8);
        double fot23322 = fot(11,1);
        double fot23323 = fot(11,3);
        double fot23331 = fot(11,7);
        double fot23332 = fot(11,6);
        double fot23333 = fot(11,2);
        double fot31111 = fot(18,0);
        double fot31112 = fot(18,5);
        double fot31113 = fot(18,4);
        double fot31121 = fot(18,8);
        double fot31122 = fot(18,1);
        double fot31123 = fot(18,3);
        double fot31131 = fot(18,7);
        double fot31132 = fot(18,6);
        double fot31133 = fot(18,2);
        double fot31211 = fot(23,0);
        double fot31212 = fot(23,5);
        double fot31213 = fot(23,4);
        double fot31221 = fot(23,8);
        double fot31222 = fot(23,1);
        double fot31223 = fot(23,3);
        double fot31231 = fot(23,7);
        double fot31232 = fot(23,6);
        double fot31233 = fot(23,2);
        double fot31311 = fot(22,0);
        double fot31312 = fot(22,5);
        double fot31313 = fot(22,4);
        double fot31321 = fot(22,8);
        double fot31322 = fot(22,1);
        double fot31323 = fot(22,3);
        double fot31331 = fot(22,7);
        double fot31332 = fot(22,6);
        double fot31333 = fot(22,2);
        double fot32111 = fot(26,0);
        double fot32112 = fot(26,5);
        double fot32113 = fot(26,4);
        double fot32121 = fot(26,8);
        double fot32122 = fot(26,1);
        double fot32123 = fot(26,3);
        double fot32131 = fot(26,7);
        double fot32132 = fot(26,6);
        double fot32133 = fot(26,2);
        double fot32211 = fot(19,0);
        double fot32212 = fot(19,5);
        double fot32213 = fot(19,4);
        double fot32221 = fot(19,8);
        double fot32222 = fot(19,1);
        double fot32223 = fot(19,3);
        double fot32231 = fot(19,7);
        double fot32232 = fot(19,6);
        double fot32233 = fot(19,2);
        double fot32311 = fot(21,0);
        double fot32312 = fot(21,5);
        double fot32313 = fot(21,4);
        double fot32321 = fot(21,8);
        double fot32322 = fot(21,1);
        double fot32323 = fot(21,3);
        double fot32331 = fot(21,7);
        double fot32332 = fot(21,6);
        double fot32333 = fot(21,2);
        double fot33111 = fot(25,0);
        double fot33112 = fot(25,5);
        double fot33113 = fot(25,4);
        double fot33121 = fot(25,8);
        double fot33122 = fot(25,1);
        double fot33123 = fot(25,3);
        double fot33131 = fot(25,7);
        double fot33132 = fot(25,6);
        double fot33133 = fot(25,2);
        double fot33211 = fot(24,0);
        double fot33212 = fot(24,5);
        double fot33213 = fot(24,4);
        double fot33221 = fot(24,8);
        double fot33222 = fot(24,1);
        double fot33223 = fot(24,3);
        double fot33231 = fot(24,7);
        double fot33232 = fot(24,6);
        double fot33233 = fot(24,2);
        double fot33311 = fot(20,0);
        double fot33312 = fot(20,5);
        double fot33313 = fot(20,4);
        double fot33321 = fot(20,8);
        double fot33322 = fot(20,1);
        double fot33323 = fot(20,3);
        double fot33331 = fot(20,7);
        double fot33332 = fot(20,6);
        double fot33333 = fot(20,2);

        //Compute the dot product
        if (i==0){
                result(0,0) = fot11111*sot11 + fot21111*sot12 + fot31111*sot13;
                result(0,1) = fot11122*sot11 + fot21122*sot12 + fot31122*sot13;
                result(0,2) = fot11133*sot11 + fot21133*sot12 + fot31133*sot13;
                result(0,3) = fot11123*sot11 + fot21123*sot12 + fot31123*sot13;
                result(0,4) = fot11113*sot11 + fot21113*sot12 + fot31113*sot13;
                result(0,5) = fot11112*sot11 + fot21112*sot12 + fot31112*sot13;
                result(0,6) = fot11132*sot11 + fot21132*sot12 + fot31132*sot13;
                result(0,7) = fot11131*sot11 + fot21131*sot12 + fot31131*sot13;
                result(0,8) = fot11121*sot11 + fot21121*sot12 + fot31121*sot13;
                result(1,0) = fot12211*sot11 + fot22211*sot12 + fot32211*sot13;
                result(1,1) = fot12222*sot11 + fot22222*sot12 + fot32222*sot13;
                result(1,2) = fot12233*sot11 + fot22233*sot12 + fot32233*sot13;
                result(1,3) = fot12223*sot11 + fot22223*sot12 + fot32223*sot13;
                result(1,4) = fot12213*sot11 + fot22213*sot12 + fot32213*sot13;
                result(1,5) = fot12212*sot11 + fot22212*sot12 + fot32212*sot13;
                result(1,6) = fot12232*sot11 + fot22232*sot12 + fot32232*sot13;
                result(1,7) = fot12231*sot11 + fot22231*sot12 + fot32231*sot13;
                result(1,8) = fot12221*sot11 + fot22221*sot12 + fot32221*sot13;
                result(2,0) = fot13311*sot11 + fot23311*sot12 + fot33311*sot13;
                result(2,1) = fot13322*sot11 + fot23322*sot12 + fot33322*sot13;
                result(2,2) = fot13333*sot11 + fot23333*sot12 + fot33333*sot13;
                result(2,3) = fot13323*sot11 + fot23323*sot12 + fot33323*sot13;
                result(2,4) = fot13313*sot11 + fot23313*sot12 + fot33313*sot13;
                result(2,5) = fot13312*sot11 + fot23312*sot12 + fot33312*sot13;
                result(2,6) = fot13332*sot11 + fot23332*sot12 + fot33332*sot13;
                result(2,7) = fot13331*sot11 + fot23331*sot12 + fot33331*sot13;
                result(2,8) = fot13321*sot11 + fot23321*sot12 + fot33321*sot13;
                result(3,0) = fot12311*sot11 + fot22311*sot12 + fot32311*sot13;
                result(3,1) = fot12322*sot11 + fot22322*sot12 + fot32322*sot13;
                result(3,2) = fot12333*sot11 + fot22333*sot12 + fot32333*sot13;
                result(3,3) = fot12323*sot11 + fot22323*sot12 + fot32323*sot13;
                result(3,4) = fot12313*sot11 + fot22313*sot12 + fot32313*sot13;
                result(3,5) = fot12312*sot11 + fot22312*sot12 + fot32312*sot13;
                result(3,6) = fot12332*sot11 + fot22332*sot12 + fot32332*sot13;
                result(3,7) = fot12331*sot11 + fot22331*sot12 + fot32331*sot13;
                result(3,8) = fot12321*sot11 + fot22321*sot12 + fot32321*sot13;
                result(4,0) = fot11311*sot11 + fot21311*sot12 + fot31311*sot13;
                result(4,1) = fot11322*sot11 + fot21322*sot12 + fot31322*sot13;
                result(4,2) = fot11333*sot11 + fot21333*sot12 + fot31333*sot13;
                result(4,3) = fot11323*sot11 + fot21323*sot12 + fot31323*sot13;
                result(4,4) = fot11313*sot11 + fot21313*sot12 + fot31313*sot13;
                result(4,5) = fot11312*sot11 + fot21312*sot12 + fot31312*sot13;
                result(4,6) = fot11332*sot11 + fot21332*sot12 + fot31332*sot13;
                result(4,7) = fot11331*sot11 + fot21331*sot12 + fot31331*sot13;
                result(4,8) = fot11321*sot11 + fot21321*sot12 + fot31321*sot13;
                result(5,0) = fot11211*sot11 + fot21211*sot12 + fot31211*sot13;
                result(5,1) = fot11222*sot11 + fot21222*sot12 + fot31222*sot13;
                result(5,2) = fot11233*sot11 + fot21233*sot12 + fot31233*sot13;
                result(5,3) = fot11223*sot11 + fot21223*sot12 + fot31223*sot13;
                result(5,4) = fot11213*sot11 + fot21213*sot12 + fot31213*sot13;
                result(5,5) = fot11212*sot11 + fot21212*sot12 + fot31212*sot13;
                result(5,6) = fot11232*sot11 + fot21232*sot12 + fot31232*sot13;
                result(5,7) = fot11231*sot11 + fot21231*sot12 + fot31231*sot13;
                result(5,8) = fot11221*sot11 + fot21221*sot12 + fot31221*sot13;
                result(6,0) = fot13211*sot11 + fot23211*sot12 + fot33211*sot13;
                result(6,1) = fot13222*sot11 + fot23222*sot12 + fot33222*sot13;
                result(6,2) = fot13233*sot11 + fot23233*sot12 + fot33233*sot13;
                result(6,3) = fot13223*sot11 + fot23223*sot12 + fot33223*sot13;
                result(6,4) = fot13213*sot11 + fot23213*sot12 + fot33213*sot13;
                result(6,5) = fot13212*sot11 + fot23212*sot12 + fot33212*sot13;
                result(6,6) = fot13232*sot11 + fot23232*sot12 + fot33232*sot13;
                result(6,7) = fot13231*sot11 + fot23231*sot12 + fot33231*sot13;
                result(6,8) = fot13221*sot11 + fot23221*sot12 + fot33221*sot13;
                result(7,0) = fot13111*sot11 + fot23111*sot12 + fot33111*sot13;
                result(7,1) = fot13122*sot11 + fot23122*sot12 + fot33122*sot13;
                result(7,2) = fot13133*sot11 + fot23133*sot12 + fot33133*sot13;
                result(7,3) = fot13123*sot11 + fot23123*sot12 + fot33123*sot13;
                result(7,4) = fot13113*sot11 + fot23113*sot12 + fot33113*sot13;
                result(7,5) = fot13112*sot11 + fot23112*sot12 + fot33112*sot13;
                result(7,6) = fot13132*sot11 + fot23132*sot12 + fot33132*sot13;
                result(7,7) = fot13131*sot11 + fot23131*sot12 + fot33131*sot13;
                result(7,8) = fot13121*sot11 + fot23121*sot12 + fot33121*sot13;
                result(8,0) = fot12111*sot11 + fot22111*sot12 + fot32111*sot13;
                result(8,1) = fot12122*sot11 + fot22122*sot12 + fot32122*sot13;
                result(8,2) = fot12133*sot11 + fot22133*sot12 + fot32133*sot13;
                result(8,3) = fot12123*sot11 + fot22123*sot12 + fot32123*sot13;
                result(8,4) = fot12113*sot11 + fot22113*sot12 + fot32113*sot13;
                result(8,5) = fot12112*sot11 + fot22112*sot12 + fot32112*sot13;
                result(8,6) = fot12132*sot11 + fot22132*sot12 + fot32132*sot13;
                result(8,7) = fot12131*sot11 + fot22131*sot12 + fot32131*sot13;
                result(8,8) = fot12121*sot11 + fot22121*sot12 + fot32121*sot13;
                result(9,0) = fot11111*sot21 + fot21111*sot22 + fot31111*sot23;
                result(9,1) = fot11122*sot21 + fot21122*sot22 + fot31122*sot23;
                result(9,2) = fot11133*sot21 + fot21133*sot22 + fot31133*sot23;
                result(9,3) = fot11123*sot21 + fot21123*sot22 + fot31123*sot23;
                result(9,4) = fot11113*sot21 + fot21113*sot22 + fot31113*sot23;
                result(9,5) = fot11112*sot21 + fot21112*sot22 + fot31112*sot23;
                result(9,6) = fot11132*sot21 + fot21132*sot22 + fot31132*sot23;
                result(9,7) = fot11131*sot21 + fot21131*sot22 + fot31131*sot23;
                result(9,8) = fot11121*sot21 + fot21121*sot22 + fot31121*sot23;
                result(10,0) = fot12211*sot21 + fot22211*sot22 + fot32211*sot23;
                result(10,1) = fot12222*sot21 + fot22222*sot22 + fot32222*sot23;
                result(10,2) = fot12233*sot21 + fot22233*sot22 + fot32233*sot23;
                result(10,3) = fot12223*sot21 + fot22223*sot22 + fot32223*sot23;
                result(10,4) = fot12213*sot21 + fot22213*sot22 + fot32213*sot23;
                result(10,5) = fot12212*sot21 + fot22212*sot22 + fot32212*sot23;
                result(10,6) = fot12232*sot21 + fot22232*sot22 + fot32232*sot23;
                result(10,7) = fot12231*sot21 + fot22231*sot22 + fot32231*sot23;
                result(10,8) = fot12221*sot21 + fot22221*sot22 + fot32221*sot23;
                result(11,0) = fot13311*sot21 + fot23311*sot22 + fot33311*sot23;
                result(11,1) = fot13322*sot21 + fot23322*sot22 + fot33322*sot23;
                result(11,2) = fot13333*sot21 + fot23333*sot22 + fot33333*sot23;
                result(11,3) = fot13323*sot21 + fot23323*sot22 + fot33323*sot23;
                result(11,4) = fot13313*sot21 + fot23313*sot22 + fot33313*sot23;
                result(11,5) = fot13312*sot21 + fot23312*sot22 + fot33312*sot23;
                result(11,6) = fot13332*sot21 + fot23332*sot22 + fot33332*sot23;
                result(11,7) = fot13331*sot21 + fot23331*sot22 + fot33331*sot23;
                result(11,8) = fot13321*sot21 + fot23321*sot22 + fot33321*sot23;
                result(12,0) = fot12311*sot21 + fot22311*sot22 + fot32311*sot23;
                result(12,1) = fot12322*sot21 + fot22322*sot22 + fot32322*sot23;
                result(12,2) = fot12333*sot21 + fot22333*sot22 + fot32333*sot23;
                result(12,3) = fot12323*sot21 + fot22323*sot22 + fot32323*sot23;
                result(12,4) = fot12313*sot21 + fot22313*sot22 + fot32313*sot23;
                result(12,5) = fot12312*sot21 + fot22312*sot22 + fot32312*sot23;
                result(12,6) = fot12332*sot21 + fot22332*sot22 + fot32332*sot23;
                result(12,7) = fot12331*sot21 + fot22331*sot22 + fot32331*sot23;
                result(12,8) = fot12321*sot21 + fot22321*sot22 + fot32321*sot23;
                result(13,0) = fot11311*sot21 + fot21311*sot22 + fot31311*sot23;
                result(13,1) = fot11322*sot21 + fot21322*sot22 + fot31322*sot23;
                result(13,2) = fot11333*sot21 + fot21333*sot22 + fot31333*sot23;
                result(13,3) = fot11323*sot21 + fot21323*sot22 + fot31323*sot23;
                result(13,4) = fot11313*sot21 + fot21313*sot22 + fot31313*sot23;
                result(13,5) = fot11312*sot21 + fot21312*sot22 + fot31312*sot23;
                result(13,6) = fot11332*sot21 + fot21332*sot22 + fot31332*sot23;
                result(13,7) = fot11331*sot21 + fot21331*sot22 + fot31331*sot23;
                result(13,8) = fot11321*sot21 + fot21321*sot22 + fot31321*sot23;
                result(14,0) = fot11211*sot21 + fot21211*sot22 + fot31211*sot23;
                result(14,1) = fot11222*sot21 + fot21222*sot22 + fot31222*sot23;
                result(14,2) = fot11233*sot21 + fot21233*sot22 + fot31233*sot23;
                result(14,3) = fot11223*sot21 + fot21223*sot22 + fot31223*sot23;
                result(14,4) = fot11213*sot21 + fot21213*sot22 + fot31213*sot23;
                result(14,5) = fot11212*sot21 + fot21212*sot22 + fot31212*sot23;
                result(14,6) = fot11232*sot21 + fot21232*sot22 + fot31232*sot23;
                result(14,7) = fot11231*sot21 + fot21231*sot22 + fot31231*sot23;
                result(14,8) = fot11221*sot21 + fot21221*sot22 + fot31221*sot23;
                result(15,0) = fot13211*sot21 + fot23211*sot22 + fot33211*sot23;
                result(15,1) = fot13222*sot21 + fot23222*sot22 + fot33222*sot23;
                result(15,2) = fot13233*sot21 + fot23233*sot22 + fot33233*sot23;
                result(15,3) = fot13223*sot21 + fot23223*sot22 + fot33223*sot23;
                result(15,4) = fot13213*sot21 + fot23213*sot22 + fot33213*sot23;
                result(15,5) = fot13212*sot21 + fot23212*sot22 + fot33212*sot23;
                result(15,6) = fot13232*sot21 + fot23232*sot22 + fot33232*sot23;
                result(15,7) = fot13231*sot21 + fot23231*sot22 + fot33231*sot23;
                result(15,8) = fot13221*sot21 + fot23221*sot22 + fot33221*sot23;
                result(16,0) = fot13111*sot21 + fot23111*sot22 + fot33111*sot23;
                result(16,1) = fot13122*sot21 + fot23122*sot22 + fot33122*sot23;
                result(16,2) = fot13133*sot21 + fot23133*sot22 + fot33133*sot23;
                result(16,3) = fot13123*sot21 + fot23123*sot22 + fot33123*sot23;
                result(16,4) = fot13113*sot21 + fot23113*sot22 + fot33113*sot23;
                result(16,5) = fot13112*sot21 + fot23112*sot22 + fot33112*sot23;
                result(16,6) = fot13132*sot21 + fot23132*sot22 + fot33132*sot23;
                result(16,7) = fot13131*sot21 + fot23131*sot22 + fot33131*sot23;
                result(16,8) = fot13121*sot21 + fot23121*sot22 + fot33121*sot23;
                result(17,0) = fot12111*sot21 + fot22111*sot22 + fot32111*sot23;
                result(17,1) = fot12122*sot21 + fot22122*sot22 + fot32122*sot23;
                result(17,2) = fot12133*sot21 + fot22133*sot22 + fot32133*sot23;
                result(17,3) = fot12123*sot21 + fot22123*sot22 + fot32123*sot23;
                result(17,4) = fot12113*sot21 + fot22113*sot22 + fot32113*sot23;
                result(17,5) = fot12112*sot21 + fot22112*sot22 + fot32112*sot23;
                result(17,6) = fot12132*sot21 + fot22132*sot22 + fot32132*sot23;
                result(17,7) = fot12131*sot21 + fot22131*sot22 + fot32131*sot23;
                result(17,8) = fot12121*sot21 + fot22121*sot22 + fot32121*sot23;
                result(18,0) = fot11111*sot31 + fot21111*sot32 + fot31111*sot33;
                result(18,1) = fot11122*sot31 + fot21122*sot32 + fot31122*sot33;
                result(18,2) = fot11133*sot31 + fot21133*sot32 + fot31133*sot33;
                result(18,3) = fot11123*sot31 + fot21123*sot32 + fot31123*sot33;
                result(18,4) = fot11113*sot31 + fot21113*sot32 + fot31113*sot33;
                result(18,5) = fot11112*sot31 + fot21112*sot32 + fot31112*sot33;
                result(18,6) = fot11132*sot31 + fot21132*sot32 + fot31132*sot33;
                result(18,7) = fot11131*sot31 + fot21131*sot32 + fot31131*sot33;
                result(18,8) = fot11121*sot31 + fot21121*sot32 + fot31121*sot33;
                result(19,0) = fot12211*sot31 + fot22211*sot32 + fot32211*sot33;
                result(19,1) = fot12222*sot31 + fot22222*sot32 + fot32222*sot33;
                result(19,2) = fot12233*sot31 + fot22233*sot32 + fot32233*sot33;
                result(19,3) = fot12223*sot31 + fot22223*sot32 + fot32223*sot33;
                result(19,4) = fot12213*sot31 + fot22213*sot32 + fot32213*sot33;
                result(19,5) = fot12212*sot31 + fot22212*sot32 + fot32212*sot33;
                result(19,6) = fot12232*sot31 + fot22232*sot32 + fot32232*sot33;
                result(19,7) = fot12231*sot31 + fot22231*sot32 + fot32231*sot33;
                result(19,8) = fot12221*sot31 + fot22221*sot32 + fot32221*sot33;
                result(20,0) = fot13311*sot31 + fot23311*sot32 + fot33311*sot33;
                result(20,1) = fot13322*sot31 + fot23322*sot32 + fot33322*sot33;
                result(20,2) = fot13333*sot31 + fot23333*sot32 + fot33333*sot33;
                result(20,3) = fot13323*sot31 + fot23323*sot32 + fot33323*sot33;
                result(20,4) = fot13313*sot31 + fot23313*sot32 + fot33313*sot33;
                result(20,5) = fot13312*sot31 + fot23312*sot32 + fot33312*sot33;
                result(20,6) = fot13332*sot31 + fot23332*sot32 + fot33332*sot33;
                result(20,7) = fot13331*sot31 + fot23331*sot32 + fot33331*sot33;
                result(20,8) = fot13321*sot31 + fot23321*sot32 + fot33321*sot33;
                result(21,0) = fot12311*sot31 + fot22311*sot32 + fot32311*sot33;
                result(21,1) = fot12322*sot31 + fot22322*sot32 + fot32322*sot33;
                result(21,2) = fot12333*sot31 + fot22333*sot32 + fot32333*sot33;
                result(21,3) = fot12323*sot31 + fot22323*sot32 + fot32323*sot33;
                result(21,4) = fot12313*sot31 + fot22313*sot32 + fot32313*sot33;
                result(21,5) = fot12312*sot31 + fot22312*sot32 + fot32312*sot33;
                result(21,6) = fot12332*sot31 + fot22332*sot32 + fot32332*sot33;
                result(21,7) = fot12331*sot31 + fot22331*sot32 + fot32331*sot33;
                result(21,8) = fot12321*sot31 + fot22321*sot32 + fot32321*sot33;
                result(22,0) = fot11311*sot31 + fot21311*sot32 + fot31311*sot33;
                result(22,1) = fot11322*sot31 + fot21322*sot32 + fot31322*sot33;
                result(22,2) = fot11333*sot31 + fot21333*sot32 + fot31333*sot33;
                result(22,3) = fot11323*sot31 + fot21323*sot32 + fot31323*sot33;
                result(22,4) = fot11313*sot31 + fot21313*sot32 + fot31313*sot33;
                result(22,5) = fot11312*sot31 + fot21312*sot32 + fot31312*sot33;
                result(22,6) = fot11332*sot31 + fot21332*sot32 + fot31332*sot33;
                result(22,7) = fot11331*sot31 + fot21331*sot32 + fot31331*sot33;
                result(22,8) = fot11321*sot31 + fot21321*sot32 + fot31321*sot33;
                result(23,0) = fot11211*sot31 + fot21211*sot32 + fot31211*sot33;
                result(23,1) = fot11222*sot31 + fot21222*sot32 + fot31222*sot33;
                result(23,2) = fot11233*sot31 + fot21233*sot32 + fot31233*sot33;
                result(23,3) = fot11223*sot31 + fot21223*sot32 + fot31223*sot33;
                result(23,4) = fot11213*sot31 + fot21213*sot32 + fot31213*sot33;
                result(23,5) = fot11212*sot31 + fot21212*sot32 + fot31212*sot33;
                result(23,6) = fot11232*sot31 + fot21232*sot32 + fot31232*sot33;
                result(23,7) = fot11231*sot31 + fot21231*sot32 + fot31231*sot33;
                result(23,8) = fot11221*sot31 + fot21221*sot32 + fot31221*sot33;
                result(24,0) = fot13211*sot31 + fot23211*sot32 + fot33211*sot33;
                result(24,1) = fot13222*sot31 + fot23222*sot32 + fot33222*sot33;
                result(24,2) = fot13233*sot31 + fot23233*sot32 + fot33233*sot33;
                result(24,3) = fot13223*sot31 + fot23223*sot32 + fot33223*sot33;
                result(24,4) = fot13213*sot31 + fot23213*sot32 + fot33213*sot33;
                result(24,5) = fot13212*sot31 + fot23212*sot32 + fot33212*sot33;
                result(24,6) = fot13232*sot31 + fot23232*sot32 + fot33232*sot33;
                result(24,7) = fot13231*sot31 + fot23231*sot32 + fot33231*sot33;
                result(24,8) = fot13221*sot31 + fot23221*sot32 + fot33221*sot33;
                result(25,0) = fot13111*sot31 + fot23111*sot32 + fot33111*sot33;
                result(25,1) = fot13122*sot31 + fot23122*sot32 + fot33122*sot33;
                result(25,2) = fot13133*sot31 + fot23133*sot32 + fot33133*sot33;
                result(25,3) = fot13123*sot31 + fot23123*sot32 + fot33123*sot33;
                result(25,4) = fot13113*sot31 + fot23113*sot32 + fot33113*sot33;
                result(25,5) = fot13112*sot31 + fot23112*sot32 + fot33112*sot33;
                result(25,6) = fot13132*sot31 + fot23132*sot32 + fot33132*sot33;
                result(25,7) = fot13131*sot31 + fot23131*sot32 + fot33131*sot33;
                result(25,8) = fot13121*sot31 + fot23121*sot32 + fot33121*sot33;
                result(26,0) = fot12111*sot31 + fot22111*sot32 + fot32111*sot33;
                result(26,1) = fot12122*sot31 + fot22122*sot32 + fot32122*sot33;
                result(26,2) = fot12133*sot31 + fot22133*sot32 + fot32133*sot33;
                result(26,3) = fot12123*sot31 + fot22123*sot32 + fot32123*sot33;
                result(26,4) = fot12113*sot31 + fot22113*sot32 + fot32113*sot33;
                result(26,5) = fot12112*sot31 + fot22112*sot32 + fot32112*sot33;
                result(26,6) = fot12132*sot31 + fot22132*sot32 + fot32132*sot33;
                result(26,7) = fot12131*sot31 + fot22131*sot32 + fot32131*sot33;
                result(26,8) = fot12121*sot31 + fot22121*sot32 + fot32121*sot33;
        }
        else if(i==1){
                result(0,0) = fot11111*sot11 + fot12111*sot12 + fot13111*sot13;
                result(0,1) = fot11122*sot11 + fot12122*sot12 + fot13122*sot13;
                result(0,2) = fot11133*sot11 + fot12133*sot12 + fot13133*sot13;
                result(0,3) = fot11123*sot11 + fot12123*sot12 + fot13123*sot13;
                result(0,4) = fot11113*sot11 + fot12113*sot12 + fot13113*sot13;
                result(0,5) = fot11112*sot11 + fot12112*sot12 + fot13112*sot13;
                result(0,6) = fot11132*sot11 + fot12132*sot12 + fot13132*sot13;
                result(0,7) = fot11131*sot11 + fot12131*sot12 + fot13131*sot13;
                result(0,8) = fot11121*sot11 + fot12121*sot12 + fot13121*sot13;
                result(1,0) = fot21211*sot11 + fot22211*sot12 + fot23211*sot13;
                result(1,1) = fot21222*sot11 + fot22222*sot12 + fot23222*sot13;
                result(1,2) = fot21233*sot11 + fot22233*sot12 + fot23233*sot13;
                result(1,3) = fot21223*sot11 + fot22223*sot12 + fot23223*sot13;
                result(1,4) = fot21213*sot11 + fot22213*sot12 + fot23213*sot13;
                result(1,5) = fot21212*sot11 + fot22212*sot12 + fot23212*sot13;
                result(1,6) = fot21232*sot11 + fot22232*sot12 + fot23232*sot13;
                result(1,7) = fot21231*sot11 + fot22231*sot12 + fot23231*sot13;
                result(1,8) = fot21221*sot11 + fot22221*sot12 + fot23221*sot13;
                result(2,0) = fot31311*sot11 + fot32311*sot12 + fot33311*sot13;
                result(2,1) = fot31322*sot11 + fot32322*sot12 + fot33322*sot13;
                result(2,2) = fot31333*sot11 + fot32333*sot12 + fot33333*sot13;
                result(2,3) = fot31323*sot11 + fot32323*sot12 + fot33323*sot13;
                result(2,4) = fot31313*sot11 + fot32313*sot12 + fot33313*sot13;
                result(2,5) = fot31312*sot11 + fot32312*sot12 + fot33312*sot13;
                result(2,6) = fot31332*sot11 + fot32332*sot12 + fot33332*sot13;
                result(2,7) = fot31331*sot11 + fot32331*sot12 + fot33331*sot13;
                result(2,8) = fot31321*sot11 + fot32321*sot12 + fot33321*sot13;
                result(3,0) = fot21311*sot11 + fot22311*sot12 + fot23311*sot13;
                result(3,1) = fot21322*sot11 + fot22322*sot12 + fot23322*sot13;
                result(3,2) = fot21333*sot11 + fot22333*sot12 + fot23333*sot13;
                result(3,3) = fot21323*sot11 + fot22323*sot12 + fot23323*sot13;
                result(3,4) = fot21313*sot11 + fot22313*sot12 + fot23313*sot13;
                result(3,5) = fot21312*sot11 + fot22312*sot12 + fot23312*sot13;
                result(3,6) = fot21332*sot11 + fot22332*sot12 + fot23332*sot13;
                result(3,7) = fot21331*sot11 + fot22331*sot12 + fot23331*sot13;
                result(3,8) = fot21321*sot11 + fot22321*sot12 + fot23321*sot13;
                result(4,0) = fot11311*sot11 + fot12311*sot12 + fot13311*sot13;
                result(4,1) = fot11322*sot11 + fot12322*sot12 + fot13322*sot13;
                result(4,2) = fot11333*sot11 + fot12333*sot12 + fot13333*sot13;
                result(4,3) = fot11323*sot11 + fot12323*sot12 + fot13323*sot13;
                result(4,4) = fot11313*sot11 + fot12313*sot12 + fot13313*sot13;
                result(4,5) = fot11312*sot11 + fot12312*sot12 + fot13312*sot13;
                result(4,6) = fot11332*sot11 + fot12332*sot12 + fot13332*sot13;
                result(4,7) = fot11331*sot11 + fot12331*sot12 + fot13331*sot13;
                result(4,8) = fot11321*sot11 + fot12321*sot12 + fot13321*sot13;
                result(5,0) = fot11211*sot11 + fot12211*sot12 + fot13211*sot13;
                result(5,1) = fot11222*sot11 + fot12222*sot12 + fot13222*sot13;
                result(5,2) = fot11233*sot11 + fot12233*sot12 + fot13233*sot13;
                result(5,3) = fot11223*sot11 + fot12223*sot12 + fot13223*sot13;
                result(5,4) = fot11213*sot11 + fot12213*sot12 + fot13213*sot13;
                result(5,5) = fot11212*sot11 + fot12212*sot12 + fot13212*sot13;
                result(5,6) = fot11232*sot11 + fot12232*sot12 + fot13232*sot13;
                result(5,7) = fot11231*sot11 + fot12231*sot12 + fot13231*sot13;
                result(5,8) = fot11221*sot11 + fot12221*sot12 + fot13221*sot13;
                result(6,0) = fot31211*sot11 + fot32211*sot12 + fot33211*sot13;
                result(6,1) = fot31222*sot11 + fot32222*sot12 + fot33222*sot13;
                result(6,2) = fot31233*sot11 + fot32233*sot12 + fot33233*sot13;
                result(6,3) = fot31223*sot11 + fot32223*sot12 + fot33223*sot13;
                result(6,4) = fot31213*sot11 + fot32213*sot12 + fot33213*sot13;
                result(6,5) = fot31212*sot11 + fot32212*sot12 + fot33212*sot13;
                result(6,6) = fot31232*sot11 + fot32232*sot12 + fot33232*sot13;
                result(6,7) = fot31231*sot11 + fot32231*sot12 + fot33231*sot13;
                result(6,8) = fot31221*sot11 + fot32221*sot12 + fot33221*sot13;
                result(7,0) = fot31111*sot11 + fot32111*sot12 + fot33111*sot13;
                result(7,1) = fot31122*sot11 + fot32122*sot12 + fot33122*sot13;
                result(7,2) = fot31133*sot11 + fot32133*sot12 + fot33133*sot13;
                result(7,3) = fot31123*sot11 + fot32123*sot12 + fot33123*sot13;
                result(7,4) = fot31113*sot11 + fot32113*sot12 + fot33113*sot13;
                result(7,5) = fot31112*sot11 + fot32112*sot12 + fot33112*sot13;
                result(7,6) = fot31132*sot11 + fot32132*sot12 + fot33132*sot13;
                result(7,7) = fot31131*sot11 + fot32131*sot12 + fot33131*sot13;
                result(7,8) = fot31121*sot11 + fot32121*sot12 + fot33121*sot13;
                result(8,0) = fot21111*sot11 + fot22111*sot12 + fot23111*sot13;
                result(8,1) = fot21122*sot11 + fot22122*sot12 + fot23122*sot13;
                result(8,2) = fot21133*sot11 + fot22133*sot12 + fot23133*sot13;
                result(8,3) = fot21123*sot11 + fot22123*sot12 + fot23123*sot13;
                result(8,4) = fot21113*sot11 + fot22113*sot12 + fot23113*sot13;
                result(8,5) = fot21112*sot11 + fot22112*sot12 + fot23112*sot13;
                result(8,6) = fot21132*sot11 + fot22132*sot12 + fot23132*sot13;
                result(8,7) = fot21131*sot11 + fot22131*sot12 + fot23131*sot13;
                result(8,8) = fot21121*sot11 + fot22121*sot12 + fot23121*sot13;
                result(9,0) = fot11111*sot21 + fot12111*sot22 + fot13111*sot23;
                result(9,1) = fot11122*sot21 + fot12122*sot22 + fot13122*sot23;
                result(9,2) = fot11133*sot21 + fot12133*sot22 + fot13133*sot23;
                result(9,3) = fot11123*sot21 + fot12123*sot22 + fot13123*sot23;
                result(9,4) = fot11113*sot21 + fot12113*sot22 + fot13113*sot23;
                result(9,5) = fot11112*sot21 + fot12112*sot22 + fot13112*sot23;
                result(9,6) = fot11132*sot21 + fot12132*sot22 + fot13132*sot23;
                result(9,7) = fot11131*sot21 + fot12131*sot22 + fot13131*sot23;
                result(9,8) = fot11121*sot21 + fot12121*sot22 + fot13121*sot23;
                result(10,0) = fot21211*sot21 + fot22211*sot22 + fot23211*sot23;
                result(10,1) = fot21222*sot21 + fot22222*sot22 + fot23222*sot23;
                result(10,2) = fot21233*sot21 + fot22233*sot22 + fot23233*sot23;
                result(10,3) = fot21223*sot21 + fot22223*sot22 + fot23223*sot23;
                result(10,4) = fot21213*sot21 + fot22213*sot22 + fot23213*sot23;
                result(10,5) = fot21212*sot21 + fot22212*sot22 + fot23212*sot23;
                result(10,6) = fot21232*sot21 + fot22232*sot22 + fot23232*sot23;
                result(10,7) = fot21231*sot21 + fot22231*sot22 + fot23231*sot23;
                result(10,8) = fot21221*sot21 + fot22221*sot22 + fot23221*sot23;
                result(11,0) = fot31311*sot21 + fot32311*sot22 + fot33311*sot23;
                result(11,1) = fot31322*sot21 + fot32322*sot22 + fot33322*sot23;
                result(11,2) = fot31333*sot21 + fot32333*sot22 + fot33333*sot23;
                result(11,3) = fot31323*sot21 + fot32323*sot22 + fot33323*sot23;
                result(11,4) = fot31313*sot21 + fot32313*sot22 + fot33313*sot23;
                result(11,5) = fot31312*sot21 + fot32312*sot22 + fot33312*sot23;
                result(11,6) = fot31332*sot21 + fot32332*sot22 + fot33332*sot23;
                result(11,7) = fot31331*sot21 + fot32331*sot22 + fot33331*sot23;
                result(11,8) = fot31321*sot21 + fot32321*sot22 + fot33321*sot23;
                result(12,0) = fot21311*sot21 + fot22311*sot22 + fot23311*sot23;
                result(12,1) = fot21322*sot21 + fot22322*sot22 + fot23322*sot23;
                result(12,2) = fot21333*sot21 + fot22333*sot22 + fot23333*sot23;
                result(12,3) = fot21323*sot21 + fot22323*sot22 + fot23323*sot23;
                result(12,4) = fot21313*sot21 + fot22313*sot22 + fot23313*sot23;
                result(12,5) = fot21312*sot21 + fot22312*sot22 + fot23312*sot23;
                result(12,6) = fot21332*sot21 + fot22332*sot22 + fot23332*sot23;
                result(12,7) = fot21331*sot21 + fot22331*sot22 + fot23331*sot23;
                result(12,8) = fot21321*sot21 + fot22321*sot22 + fot23321*sot23;
                result(13,0) = fot11311*sot21 + fot12311*sot22 + fot13311*sot23;
                result(13,1) = fot11322*sot21 + fot12322*sot22 + fot13322*sot23;
                result(13,2) = fot11333*sot21 + fot12333*sot22 + fot13333*sot23;
                result(13,3) = fot11323*sot21 + fot12323*sot22 + fot13323*sot23;
                result(13,4) = fot11313*sot21 + fot12313*sot22 + fot13313*sot23;
                result(13,5) = fot11312*sot21 + fot12312*sot22 + fot13312*sot23;
                result(13,6) = fot11332*sot21 + fot12332*sot22 + fot13332*sot23;
                result(13,7) = fot11331*sot21 + fot12331*sot22 + fot13331*sot23;
                result(13,8) = fot11321*sot21 + fot12321*sot22 + fot13321*sot23;
                result(14,0) = fot11211*sot21 + fot12211*sot22 + fot13211*sot23;
                result(14,1) = fot11222*sot21 + fot12222*sot22 + fot13222*sot23;
                result(14,2) = fot11233*sot21 + fot12233*sot22 + fot13233*sot23;
                result(14,3) = fot11223*sot21 + fot12223*sot22 + fot13223*sot23;
                result(14,4) = fot11213*sot21 + fot12213*sot22 + fot13213*sot23;
                result(14,5) = fot11212*sot21 + fot12212*sot22 + fot13212*sot23;
                result(14,6) = fot11232*sot21 + fot12232*sot22 + fot13232*sot23;
                result(14,7) = fot11231*sot21 + fot12231*sot22 + fot13231*sot23;
                result(14,8) = fot11221*sot21 + fot12221*sot22 + fot13221*sot23;
                result(15,0) = fot31211*sot21 + fot32211*sot22 + fot33211*sot23;
                result(15,1) = fot31222*sot21 + fot32222*sot22 + fot33222*sot23;
                result(15,2) = fot31233*sot21 + fot32233*sot22 + fot33233*sot23;
                result(15,3) = fot31223*sot21 + fot32223*sot22 + fot33223*sot23;
                result(15,4) = fot31213*sot21 + fot32213*sot22 + fot33213*sot23;
                result(15,5) = fot31212*sot21 + fot32212*sot22 + fot33212*sot23;
                result(15,6) = fot31232*sot21 + fot32232*sot22 + fot33232*sot23;
                result(15,7) = fot31231*sot21 + fot32231*sot22 + fot33231*sot23;
                result(15,8) = fot31221*sot21 + fot32221*sot22 + fot33221*sot23;
                result(16,0) = fot31111*sot21 + fot32111*sot22 + fot33111*sot23;
                result(16,1) = fot31122*sot21 + fot32122*sot22 + fot33122*sot23;
                result(16,2) = fot31133*sot21 + fot32133*sot22 + fot33133*sot23;
                result(16,3) = fot31123*sot21 + fot32123*sot22 + fot33123*sot23;
                result(16,4) = fot31113*sot21 + fot32113*sot22 + fot33113*sot23;
                result(16,5) = fot31112*sot21 + fot32112*sot22 + fot33112*sot23;
                result(16,6) = fot31132*sot21 + fot32132*sot22 + fot33132*sot23;
                result(16,7) = fot31131*sot21 + fot32131*sot22 + fot33131*sot23;
                result(16,8) = fot31121*sot21 + fot32121*sot22 + fot33121*sot23;
                result(17,0) = fot21111*sot21 + fot22111*sot22 + fot23111*sot23;
                result(17,1) = fot21122*sot21 + fot22122*sot22 + fot23122*sot23;
                result(17,2) = fot21133*sot21 + fot22133*sot22 + fot23133*sot23;
                result(17,3) = fot21123*sot21 + fot22123*sot22 + fot23123*sot23;
                result(17,4) = fot21113*sot21 + fot22113*sot22 + fot23113*sot23;
                result(17,5) = fot21112*sot21 + fot22112*sot22 + fot23112*sot23;
                result(17,6) = fot21132*sot21 + fot22132*sot22 + fot23132*sot23;
                result(17,7) = fot21131*sot21 + fot22131*sot22 + fot23131*sot23;
                result(17,8) = fot21121*sot21 + fot22121*sot22 + fot23121*sot23;
                result(18,0) = fot11111*sot31 + fot12111*sot32 + fot13111*sot33;
                result(18,1) = fot11122*sot31 + fot12122*sot32 + fot13122*sot33;
                result(18,2) = fot11133*sot31 + fot12133*sot32 + fot13133*sot33;
                result(18,3) = fot11123*sot31 + fot12123*sot32 + fot13123*sot33;
                result(18,4) = fot11113*sot31 + fot12113*sot32 + fot13113*sot33;
                result(18,5) = fot11112*sot31 + fot12112*sot32 + fot13112*sot33;
                result(18,6) = fot11132*sot31 + fot12132*sot32 + fot13132*sot33;
                result(18,7) = fot11131*sot31 + fot12131*sot32 + fot13131*sot33;
                result(18,8) = fot11121*sot31 + fot12121*sot32 + fot13121*sot33;
                result(19,0) = fot21211*sot31 + fot22211*sot32 + fot23211*sot33;
                result(19,1) = fot21222*sot31 + fot22222*sot32 + fot23222*sot33;
                result(19,2) = fot21233*sot31 + fot22233*sot32 + fot23233*sot33;
                result(19,3) = fot21223*sot31 + fot22223*sot32 + fot23223*sot33;
                result(19,4) = fot21213*sot31 + fot22213*sot32 + fot23213*sot33;
                result(19,5) = fot21212*sot31 + fot22212*sot32 + fot23212*sot33;
                result(19,6) = fot21232*sot31 + fot22232*sot32 + fot23232*sot33;
                result(19,7) = fot21231*sot31 + fot22231*sot32 + fot23231*sot33;
                result(19,8) = fot21221*sot31 + fot22221*sot32 + fot23221*sot33;
                result(20,0) = fot31311*sot31 + fot32311*sot32 + fot33311*sot33;
                result(20,1) = fot31322*sot31 + fot32322*sot32 + fot33322*sot33;
                result(20,2) = fot31333*sot31 + fot32333*sot32 + fot33333*sot33;
                result(20,3) = fot31323*sot31 + fot32323*sot32 + fot33323*sot33;
                result(20,4) = fot31313*sot31 + fot32313*sot32 + fot33313*sot33;
                result(20,5) = fot31312*sot31 + fot32312*sot32 + fot33312*sot33;
                result(20,6) = fot31332*sot31 + fot32332*sot32 + fot33332*sot33;
                result(20,7) = fot31331*sot31 + fot32331*sot32 + fot33331*sot33;
                result(20,8) = fot31321*sot31 + fot32321*sot32 + fot33321*sot33;
                result(21,0) = fot21311*sot31 + fot22311*sot32 + fot23311*sot33;
                result(21,1) = fot21322*sot31 + fot22322*sot32 + fot23322*sot33;
                result(21,2) = fot21333*sot31 + fot22333*sot32 + fot23333*sot33;
                result(21,3) = fot21323*sot31 + fot22323*sot32 + fot23323*sot33;
                result(21,4) = fot21313*sot31 + fot22313*sot32 + fot23313*sot33;
                result(21,5) = fot21312*sot31 + fot22312*sot32 + fot23312*sot33;
                result(21,6) = fot21332*sot31 + fot22332*sot32 + fot23332*sot33;
                result(21,7) = fot21331*sot31 + fot22331*sot32 + fot23331*sot33;
                result(21,8) = fot21321*sot31 + fot22321*sot32 + fot23321*sot33;
                result(22,0) = fot11311*sot31 + fot12311*sot32 + fot13311*sot33;
                result(22,1) = fot11322*sot31 + fot12322*sot32 + fot13322*sot33;
                result(22,2) = fot11333*sot31 + fot12333*sot32 + fot13333*sot33;
                result(22,3) = fot11323*sot31 + fot12323*sot32 + fot13323*sot33;
                result(22,4) = fot11313*sot31 + fot12313*sot32 + fot13313*sot33;
                result(22,5) = fot11312*sot31 + fot12312*sot32 + fot13312*sot33;
                result(22,6) = fot11332*sot31 + fot12332*sot32 + fot13332*sot33;
                result(22,7) = fot11331*sot31 + fot12331*sot32 + fot13331*sot33;
                result(22,8) = fot11321*sot31 + fot12321*sot32 + fot13321*sot33;
                result(23,0) = fot11211*sot31 + fot12211*sot32 + fot13211*sot33;
                result(23,1) = fot11222*sot31 + fot12222*sot32 + fot13222*sot33;
                result(23,2) = fot11233*sot31 + fot12233*sot32 + fot13233*sot33;
                result(23,3) = fot11223*sot31 + fot12223*sot32 + fot13223*sot33;
                result(23,4) = fot11213*sot31 + fot12213*sot32 + fot13213*sot33;
                result(23,5) = fot11212*sot31 + fot12212*sot32 + fot13212*sot33;
                result(23,6) = fot11232*sot31 + fot12232*sot32 + fot13232*sot33;
                result(23,7) = fot11231*sot31 + fot12231*sot32 + fot13231*sot33;
                result(23,8) = fot11221*sot31 + fot12221*sot32 + fot13221*sot33;
                result(24,0) = fot31211*sot31 + fot32211*sot32 + fot33211*sot33;
                result(24,1) = fot31222*sot31 + fot32222*sot32 + fot33222*sot33;
                result(24,2) = fot31233*sot31 + fot32233*sot32 + fot33233*sot33;
                result(24,3) = fot31223*sot31 + fot32223*sot32 + fot33223*sot33;
                result(24,4) = fot31213*sot31 + fot32213*sot32 + fot33213*sot33;
                result(24,5) = fot31212*sot31 + fot32212*sot32 + fot33212*sot33;
                result(24,6) = fot31232*sot31 + fot32232*sot32 + fot33232*sot33;
                result(24,7) = fot31231*sot31 + fot32231*sot32 + fot33231*sot33;
                result(24,8) = fot31221*sot31 + fot32221*sot32 + fot33221*sot33;
                result(25,0) = fot31111*sot31 + fot32111*sot32 + fot33111*sot33;
                result(25,1) = fot31122*sot31 + fot32122*sot32 + fot33122*sot33;
                result(25,2) = fot31133*sot31 + fot32133*sot32 + fot33133*sot33;
                result(25,3) = fot31123*sot31 + fot32123*sot32 + fot33123*sot33;
                result(25,4) = fot31113*sot31 + fot32113*sot32 + fot33113*sot33;
                result(25,5) = fot31112*sot31 + fot32112*sot32 + fot33112*sot33;
                result(25,6) = fot31132*sot31 + fot32132*sot32 + fot33132*sot33;
                result(25,7) = fot31131*sot31 + fot32131*sot32 + fot33131*sot33;
                result(25,8) = fot31121*sot31 + fot32121*sot32 + fot33121*sot33;
                result(26,0) = fot21111*sot31 + fot22111*sot32 + fot23111*sot33;
                result(26,1) = fot21122*sot31 + fot22122*sot32 + fot23122*sot33;
                result(26,2) = fot21133*sot31 + fot22133*sot32 + fot23133*sot33;
                result(26,3) = fot21123*sot31 + fot22123*sot32 + fot23123*sot33;
                result(26,4) = fot21113*sot31 + fot22113*sot32 + fot23113*sot33;
                result(26,5) = fot21112*sot31 + fot22112*sot32 + fot23112*sot33;
                result(26,6) = fot21132*sot31 + fot22132*sot32 + fot23132*sot33;
                result(26,7) = fot21131*sot31 + fot22131*sot32 + fot23131*sot33;
                result(26,8) = fot21121*sot31 + fot22121*sot32 + fot23121*sot33;
        }
        else if(i==2){
                result(0,0) = fot11111*sot11 + fot11211*sot12 + fot11311*sot13;
                result(0,1) = fot11122*sot11 + fot11222*sot12 + fot11322*sot13;
                result(0,2) = fot11133*sot11 + fot11233*sot12 + fot11333*sot13;
                result(0,3) = fot11123*sot11 + fot11223*sot12 + fot11323*sot13;
                result(0,4) = fot11113*sot11 + fot11213*sot12 + fot11313*sot13;
                result(0,5) = fot11112*sot11 + fot11212*sot12 + fot11312*sot13;
                result(0,6) = fot11132*sot11 + fot11232*sot12 + fot11332*sot13;
                result(0,7) = fot11131*sot11 + fot11231*sot12 + fot11331*sot13;
                result(0,8) = fot11121*sot11 + fot11221*sot12 + fot11321*sot13;
                result(1,0) = fot22111*sot11 + fot22211*sot12 + fot22311*sot13;
                result(1,1) = fot22122*sot11 + fot22222*sot12 + fot22322*sot13;
                result(1,2) = fot22133*sot11 + fot22233*sot12 + fot22333*sot13;
                result(1,3) = fot22123*sot11 + fot22223*sot12 + fot22323*sot13;
                result(1,4) = fot22113*sot11 + fot22213*sot12 + fot22313*sot13;
                result(1,5) = fot22112*sot11 + fot22212*sot12 + fot22312*sot13;
                result(1,6) = fot22132*sot11 + fot22232*sot12 + fot22332*sot13;
                result(1,7) = fot22131*sot11 + fot22231*sot12 + fot22331*sot13;
                result(1,8) = fot22121*sot11 + fot22221*sot12 + fot22321*sot13;
                result(2,0) = fot33111*sot11 + fot33211*sot12 + fot33311*sot13;
                result(2,1) = fot33122*sot11 + fot33222*sot12 + fot33322*sot13;
                result(2,2) = fot33133*sot11 + fot33233*sot12 + fot33333*sot13;
                result(2,3) = fot33123*sot11 + fot33223*sot12 + fot33323*sot13;
                result(2,4) = fot33113*sot11 + fot33213*sot12 + fot33313*sot13;
                result(2,5) = fot33112*sot11 + fot33212*sot12 + fot33312*sot13;
                result(2,6) = fot33132*sot11 + fot33232*sot12 + fot33332*sot13;
                result(2,7) = fot33131*sot11 + fot33231*sot12 + fot33331*sot13;
                result(2,8) = fot33121*sot11 + fot33221*sot12 + fot33321*sot13;
                result(3,0) = fot23111*sot11 + fot23211*sot12 + fot23311*sot13;
                result(3,1) = fot23122*sot11 + fot23222*sot12 + fot23322*sot13;
                result(3,2) = fot23133*sot11 + fot23233*sot12 + fot23333*sot13;
                result(3,3) = fot23123*sot11 + fot23223*sot12 + fot23323*sot13;
                result(3,4) = fot23113*sot11 + fot23213*sot12 + fot23313*sot13;
                result(3,5) = fot23112*sot11 + fot23212*sot12 + fot23312*sot13;
                result(3,6) = fot23132*sot11 + fot23232*sot12 + fot23332*sot13;
                result(3,7) = fot23131*sot11 + fot23231*sot12 + fot23331*sot13;
                result(3,8) = fot23121*sot11 + fot23221*sot12 + fot23321*sot13;
                result(4,0) = fot13111*sot11 + fot13211*sot12 + fot13311*sot13;
                result(4,1) = fot13122*sot11 + fot13222*sot12 + fot13322*sot13;
                result(4,2) = fot13133*sot11 + fot13233*sot12 + fot13333*sot13;
                result(4,3) = fot13123*sot11 + fot13223*sot12 + fot13323*sot13;
                result(4,4) = fot13113*sot11 + fot13213*sot12 + fot13313*sot13;
                result(4,5) = fot13112*sot11 + fot13212*sot12 + fot13312*sot13;
                result(4,6) = fot13132*sot11 + fot13232*sot12 + fot13332*sot13;
                result(4,7) = fot13131*sot11 + fot13231*sot12 + fot13331*sot13;
                result(4,8) = fot13121*sot11 + fot13221*sot12 + fot13321*sot13;
                result(5,0) = fot12111*sot11 + fot12211*sot12 + fot12311*sot13;
                result(5,1) = fot12122*sot11 + fot12222*sot12 + fot12322*sot13;
                result(5,2) = fot12133*sot11 + fot12233*sot12 + fot12333*sot13;
                result(5,3) = fot12123*sot11 + fot12223*sot12 + fot12323*sot13;
                result(5,4) = fot12113*sot11 + fot12213*sot12 + fot12313*sot13;
                result(5,5) = fot12112*sot11 + fot12212*sot12 + fot12312*sot13;
                result(5,6) = fot12132*sot11 + fot12232*sot12 + fot12332*sot13;
                result(5,7) = fot12131*sot11 + fot12231*sot12 + fot12331*sot13;
                result(5,8) = fot12121*sot11 + fot12221*sot12 + fot12321*sot13;
                result(6,0) = fot32111*sot11 + fot32211*sot12 + fot32311*sot13;
                result(6,1) = fot32122*sot11 + fot32222*sot12 + fot32322*sot13;
                result(6,2) = fot32133*sot11 + fot32233*sot12 + fot32333*sot13;
                result(6,3) = fot32123*sot11 + fot32223*sot12 + fot32323*sot13;
                result(6,4) = fot32113*sot11 + fot32213*sot12 + fot32313*sot13;
                result(6,5) = fot32112*sot11 + fot32212*sot12 + fot32312*sot13;
                result(6,6) = fot32132*sot11 + fot32232*sot12 + fot32332*sot13;
                result(6,7) = fot32131*sot11 + fot32231*sot12 + fot32331*sot13;
                result(6,8) = fot32121*sot11 + fot32221*sot12 + fot32321*sot13;
                result(7,0) = fot31111*sot11 + fot31211*sot12 + fot31311*sot13;
                result(7,1) = fot31122*sot11 + fot31222*sot12 + fot31322*sot13;
                result(7,2) = fot31133*sot11 + fot31233*sot12 + fot31333*sot13;
                result(7,3) = fot31123*sot11 + fot31223*sot12 + fot31323*sot13;
                result(7,4) = fot31113*sot11 + fot31213*sot12 + fot31313*sot13;
                result(7,5) = fot31112*sot11 + fot31212*sot12 + fot31312*sot13;
                result(7,6) = fot31132*sot11 + fot31232*sot12 + fot31332*sot13;
                result(7,7) = fot31131*sot11 + fot31231*sot12 + fot31331*sot13;
                result(7,8) = fot31121*sot11 + fot31221*sot12 + fot31321*sot13;
                result(8,0) = fot21111*sot11 + fot21211*sot12 + fot21311*sot13;
                result(8,1) = fot21122*sot11 + fot21222*sot12 + fot21322*sot13;
                result(8,2) = fot21133*sot11 + fot21233*sot12 + fot21333*sot13;
                result(8,3) = fot21123*sot11 + fot21223*sot12 + fot21323*sot13;
                result(8,4) = fot21113*sot11 + fot21213*sot12 + fot21313*sot13;
                result(8,5) = fot21112*sot11 + fot21212*sot12 + fot21312*sot13;
                result(8,6) = fot21132*sot11 + fot21232*sot12 + fot21332*sot13;
                result(8,7) = fot21131*sot11 + fot21231*sot12 + fot21331*sot13;
                result(8,8) = fot21121*sot11 + fot21221*sot12 + fot21321*sot13;
                result(9,0) = fot11111*sot21 + fot11211*sot22 + fot11311*sot23;
                result(9,1) = fot11122*sot21 + fot11222*sot22 + fot11322*sot23;
                result(9,2) = fot11133*sot21 + fot11233*sot22 + fot11333*sot23;
                result(9,3) = fot11123*sot21 + fot11223*sot22 + fot11323*sot23;
                result(9,4) = fot11113*sot21 + fot11213*sot22 + fot11313*sot23;
                result(9,5) = fot11112*sot21 + fot11212*sot22 + fot11312*sot23;
                result(9,6) = fot11132*sot21 + fot11232*sot22 + fot11332*sot23;
                result(9,7) = fot11131*sot21 + fot11231*sot22 + fot11331*sot23;
                result(9,8) = fot11121*sot21 + fot11221*sot22 + fot11321*sot23;
                result(10,0) = fot22111*sot21 + fot22211*sot22 + fot22311*sot23;
                result(10,1) = fot22122*sot21 + fot22222*sot22 + fot22322*sot23;
                result(10,2) = fot22133*sot21 + fot22233*sot22 + fot22333*sot23;
                result(10,3) = fot22123*sot21 + fot22223*sot22 + fot22323*sot23;
                result(10,4) = fot22113*sot21 + fot22213*sot22 + fot22313*sot23;
                result(10,5) = fot22112*sot21 + fot22212*sot22 + fot22312*sot23;
                result(10,6) = fot22132*sot21 + fot22232*sot22 + fot22332*sot23;
                result(10,7) = fot22131*sot21 + fot22231*sot22 + fot22331*sot23;
                result(10,8) = fot22121*sot21 + fot22221*sot22 + fot22321*sot23;
                result(11,0) = fot33111*sot21 + fot33211*sot22 + fot33311*sot23;
                result(11,1) = fot33122*sot21 + fot33222*sot22 + fot33322*sot23;
                result(11,2) = fot33133*sot21 + fot33233*sot22 + fot33333*sot23;
                result(11,3) = fot33123*sot21 + fot33223*sot22 + fot33323*sot23;
                result(11,4) = fot33113*sot21 + fot33213*sot22 + fot33313*sot23;
                result(11,5) = fot33112*sot21 + fot33212*sot22 + fot33312*sot23;
                result(11,6) = fot33132*sot21 + fot33232*sot22 + fot33332*sot23;
                result(11,7) = fot33131*sot21 + fot33231*sot22 + fot33331*sot23;
                result(11,8) = fot33121*sot21 + fot33221*sot22 + fot33321*sot23;
                result(12,0) = fot23111*sot21 + fot23211*sot22 + fot23311*sot23;
                result(12,1) = fot23122*sot21 + fot23222*sot22 + fot23322*sot23;
                result(12,2) = fot23133*sot21 + fot23233*sot22 + fot23333*sot23;
                result(12,3) = fot23123*sot21 + fot23223*sot22 + fot23323*sot23;
                result(12,4) = fot23113*sot21 + fot23213*sot22 + fot23313*sot23;
                result(12,5) = fot23112*sot21 + fot23212*sot22 + fot23312*sot23;
                result(12,6) = fot23132*sot21 + fot23232*sot22 + fot23332*sot23;
                result(12,7) = fot23131*sot21 + fot23231*sot22 + fot23331*sot23;
                result(12,8) = fot23121*sot21 + fot23221*sot22 + fot23321*sot23;
                result(13,0) = fot13111*sot21 + fot13211*sot22 + fot13311*sot23;
                result(13,1) = fot13122*sot21 + fot13222*sot22 + fot13322*sot23;
                result(13,2) = fot13133*sot21 + fot13233*sot22 + fot13333*sot23;
                result(13,3) = fot13123*sot21 + fot13223*sot22 + fot13323*sot23;
                result(13,4) = fot13113*sot21 + fot13213*sot22 + fot13313*sot23;
                result(13,5) = fot13112*sot21 + fot13212*sot22 + fot13312*sot23;
                result(13,6) = fot13132*sot21 + fot13232*sot22 + fot13332*sot23;
                result(13,7) = fot13131*sot21 + fot13231*sot22 + fot13331*sot23;
                result(13,8) = fot13121*sot21 + fot13221*sot22 + fot13321*sot23;
                result(14,0) = fot12111*sot21 + fot12211*sot22 + fot12311*sot23;
                result(14,1) = fot12122*sot21 + fot12222*sot22 + fot12322*sot23;
                result(14,2) = fot12133*sot21 + fot12233*sot22 + fot12333*sot23;
                result(14,3) = fot12123*sot21 + fot12223*sot22 + fot12323*sot23;
                result(14,4) = fot12113*sot21 + fot12213*sot22 + fot12313*sot23;
                result(14,5) = fot12112*sot21 + fot12212*sot22 + fot12312*sot23;
                result(14,6) = fot12132*sot21 + fot12232*sot22 + fot12332*sot23;
                result(14,7) = fot12131*sot21 + fot12231*sot22 + fot12331*sot23;
                result(14,8) = fot12121*sot21 + fot12221*sot22 + fot12321*sot23;
                result(15,0) = fot32111*sot21 + fot32211*sot22 + fot32311*sot23;
                result(15,1) = fot32122*sot21 + fot32222*sot22 + fot32322*sot23;
                result(15,2) = fot32133*sot21 + fot32233*sot22 + fot32333*sot23;
                result(15,3) = fot32123*sot21 + fot32223*sot22 + fot32323*sot23;
                result(15,4) = fot32113*sot21 + fot32213*sot22 + fot32313*sot23;
                result(15,5) = fot32112*sot21 + fot32212*sot22 + fot32312*sot23;
                result(15,6) = fot32132*sot21 + fot32232*sot22 + fot32332*sot23;
                result(15,7) = fot32131*sot21 + fot32231*sot22 + fot32331*sot23;
                result(15,8) = fot32121*sot21 + fot32221*sot22 + fot32321*sot23;
                result(16,0) = fot31111*sot21 + fot31211*sot22 + fot31311*sot23;
                result(16,1) = fot31122*sot21 + fot31222*sot22 + fot31322*sot23;
                result(16,2) = fot31133*sot21 + fot31233*sot22 + fot31333*sot23;
                result(16,3) = fot31123*sot21 + fot31223*sot22 + fot31323*sot23;
                result(16,4) = fot31113*sot21 + fot31213*sot22 + fot31313*sot23;
                result(16,5) = fot31112*sot21 + fot31212*sot22 + fot31312*sot23;
                result(16,6) = fot31132*sot21 + fot31232*sot22 + fot31332*sot23;
                result(16,7) = fot31131*sot21 + fot31231*sot22 + fot31331*sot23;
                result(16,8) = fot31121*sot21 + fot31221*sot22 + fot31321*sot23;
                result(17,0) = fot21111*sot21 + fot21211*sot22 + fot21311*sot23;
                result(17,1) = fot21122*sot21 + fot21222*sot22 + fot21322*sot23;
                result(17,2) = fot21133*sot21 + fot21233*sot22 + fot21333*sot23;
                result(17,3) = fot21123*sot21 + fot21223*sot22 + fot21323*sot23;
                result(17,4) = fot21113*sot21 + fot21213*sot22 + fot21313*sot23;
                result(17,5) = fot21112*sot21 + fot21212*sot22 + fot21312*sot23;
                result(17,6) = fot21132*sot21 + fot21232*sot22 + fot21332*sot23;
                result(17,7) = fot21131*sot21 + fot21231*sot22 + fot21331*sot23;
                result(17,8) = fot21121*sot21 + fot21221*sot22 + fot21321*sot23;
                result(18,0) = fot11111*sot31 + fot11211*sot32 + fot11311*sot33;
                result(18,1) = fot11122*sot31 + fot11222*sot32 + fot11322*sot33;
                result(18,2) = fot11133*sot31 + fot11233*sot32 + fot11333*sot33;
                result(18,3) = fot11123*sot31 + fot11223*sot32 + fot11323*sot33;
                result(18,4) = fot11113*sot31 + fot11213*sot32 + fot11313*sot33;
                result(18,5) = fot11112*sot31 + fot11212*sot32 + fot11312*sot33;
                result(18,6) = fot11132*sot31 + fot11232*sot32 + fot11332*sot33;
                result(18,7) = fot11131*sot31 + fot11231*sot32 + fot11331*sot33;
                result(18,8) = fot11121*sot31 + fot11221*sot32 + fot11321*sot33;
                result(19,0) = fot22111*sot31 + fot22211*sot32 + fot22311*sot33;
                result(19,1) = fot22122*sot31 + fot22222*sot32 + fot22322*sot33;
                result(19,2) = fot22133*sot31 + fot22233*sot32 + fot22333*sot33;
                result(19,3) = fot22123*sot31 + fot22223*sot32 + fot22323*sot33;
                result(19,4) = fot22113*sot31 + fot22213*sot32 + fot22313*sot33;
                result(19,5) = fot22112*sot31 + fot22212*sot32 + fot22312*sot33;
                result(19,6) = fot22132*sot31 + fot22232*sot32 + fot22332*sot33;
                result(19,7) = fot22131*sot31 + fot22231*sot32 + fot22331*sot33;
                result(19,8) = fot22121*sot31 + fot22221*sot32 + fot22321*sot33;
                result(20,0) = fot33111*sot31 + fot33211*sot32 + fot33311*sot33;
                result(20,1) = fot33122*sot31 + fot33222*sot32 + fot33322*sot33;
                result(20,2) = fot33133*sot31 + fot33233*sot32 + fot33333*sot33;
                result(20,3) = fot33123*sot31 + fot33223*sot32 + fot33323*sot33;
                result(20,4) = fot33113*sot31 + fot33213*sot32 + fot33313*sot33;
                result(20,5) = fot33112*sot31 + fot33212*sot32 + fot33312*sot33;
                result(20,6) = fot33132*sot31 + fot33232*sot32 + fot33332*sot33;
                result(20,7) = fot33131*sot31 + fot33231*sot32 + fot33331*sot33;
                result(20,8) = fot33121*sot31 + fot33221*sot32 + fot33321*sot33;
                result(21,0) = fot23111*sot31 + fot23211*sot32 + fot23311*sot33;
                result(21,1) = fot23122*sot31 + fot23222*sot32 + fot23322*sot33;
                result(21,2) = fot23133*sot31 + fot23233*sot32 + fot23333*sot33;
                result(21,3) = fot23123*sot31 + fot23223*sot32 + fot23323*sot33;
                result(21,4) = fot23113*sot31 + fot23213*sot32 + fot23313*sot33;
                result(21,5) = fot23112*sot31 + fot23212*sot32 + fot23312*sot33;
                result(21,6) = fot23132*sot31 + fot23232*sot32 + fot23332*sot33;
                result(21,7) = fot23131*sot31 + fot23231*sot32 + fot23331*sot33;
                result(21,8) = fot23121*sot31 + fot23221*sot32 + fot23321*sot33;
                result(22,0) = fot13111*sot31 + fot13211*sot32 + fot13311*sot33;
                result(22,1) = fot13122*sot31 + fot13222*sot32 + fot13322*sot33;
                result(22,2) = fot13133*sot31 + fot13233*sot32 + fot13333*sot33;
                result(22,3) = fot13123*sot31 + fot13223*sot32 + fot13323*sot33;
                result(22,4) = fot13113*sot31 + fot13213*sot32 + fot13313*sot33;
                result(22,5) = fot13112*sot31 + fot13212*sot32 + fot13312*sot33;
                result(22,6) = fot13132*sot31 + fot13232*sot32 + fot13332*sot33;
                result(22,7) = fot13131*sot31 + fot13231*sot32 + fot13331*sot33;
                result(22,8) = fot13121*sot31 + fot13221*sot32 + fot13321*sot33;
                result(23,0) = fot12111*sot31 + fot12211*sot32 + fot12311*sot33;
                result(23,1) = fot12122*sot31 + fot12222*sot32 + fot12322*sot33;
                result(23,2) = fot12133*sot31 + fot12233*sot32 + fot12333*sot33;
                result(23,3) = fot12123*sot31 + fot12223*sot32 + fot12323*sot33;
                result(23,4) = fot12113*sot31 + fot12213*sot32 + fot12313*sot33;
                result(23,5) = fot12112*sot31 + fot12212*sot32 + fot12312*sot33;
                result(23,6) = fot12132*sot31 + fot12232*sot32 + fot12332*sot33;
                result(23,7) = fot12131*sot31 + fot12231*sot32 + fot12331*sot33;
                result(23,8) = fot12121*sot31 + fot12221*sot32 + fot12321*sot33;
                result(24,0) = fot32111*sot31 + fot32211*sot32 + fot32311*sot33;
                result(24,1) = fot32122*sot31 + fot32222*sot32 + fot32322*sot33;
                result(24,2) = fot32133*sot31 + fot32233*sot32 + fot32333*sot33;
                result(24,3) = fot32123*sot31 + fot32223*sot32 + fot32323*sot33;
                result(24,4) = fot32113*sot31 + fot32213*sot32 + fot32313*sot33;
                result(24,5) = fot32112*sot31 + fot32212*sot32 + fot32312*sot33;
                result(24,6) = fot32132*sot31 + fot32232*sot32 + fot32332*sot33;
                result(24,7) = fot32131*sot31 + fot32231*sot32 + fot32331*sot33;
                result(24,8) = fot32121*sot31 + fot32221*sot32 + fot32321*sot33;
                result(25,0) = fot31111*sot31 + fot31211*sot32 + fot31311*sot33;
                result(25,1) = fot31122*sot31 + fot31222*sot32 + fot31322*sot33;
                result(25,2) = fot31133*sot31 + fot31233*sot32 + fot31333*sot33;
                result(25,3) = fot31123*sot31 + fot31223*sot32 + fot31323*sot33;
                result(25,4) = fot31113*sot31 + fot31213*sot32 + fot31313*sot33;
                result(25,5) = fot31112*sot31 + fot31212*sot32 + fot31312*sot33;
                result(25,6) = fot31132*sot31 + fot31232*sot32 + fot31332*sot33;
                result(25,7) = fot31131*sot31 + fot31231*sot32 + fot31331*sot33;
                result(25,8) = fot31121*sot31 + fot31221*sot32 + fot31321*sot33;
                result(26,0) = fot21111*sot31 + fot21211*sot32 + fot21311*sot33;
                result(26,1) = fot21122*sot31 + fot21222*sot32 + fot21322*sot33;
                result(26,2) = fot21133*sot31 + fot21233*sot32 + fot21333*sot33;
                result(26,3) = fot21123*sot31 + fot21223*sot32 + fot21323*sot33;
                result(26,4) = fot21113*sot31 + fot21213*sot32 + fot21313*sot33;
                result(26,5) = fot21112*sot31 + fot21212*sot32 + fot21312*sot33;
                result(26,6) = fot21132*sot31 + fot21232*sot32 + fot21332*sot33;
                result(26,7) = fot21131*sot31 + fot21231*sot32 + fot21331*sot33;
                result(26,8) = fot21121*sot31 + fot21221*sot32 + fot21321*sot33;
        }
        else if(i==3){
                result(0,0) = fot11111*sot11 + fot11121*sot12 + fot11131*sot13;
                result(0,1) = fot11212*sot11 + fot11222*sot12 + fot11232*sot13;
                result(0,2) = fot11313*sot11 + fot11323*sot12 + fot11333*sot13;
                result(0,3) = fot11213*sot11 + fot11223*sot12 + fot11233*sot13;
                result(0,4) = fot11113*sot11 + fot11123*sot12 + fot11133*sot13;
                result(0,5) = fot11112*sot11 + fot11122*sot12 + fot11132*sot13;
                result(0,6) = fot11312*sot11 + fot11322*sot12 + fot11332*sot13;
                result(0,7) = fot11311*sot11 + fot11321*sot12 + fot11331*sot13;
                result(0,8) = fot11211*sot11 + fot11221*sot12 + fot11231*sot13;
                result(1,0) = fot22111*sot11 + fot22121*sot12 + fot22131*sot13;
                result(1,1) = fot22212*sot11 + fot22222*sot12 + fot22232*sot13;
                result(1,2) = fot22313*sot11 + fot22323*sot12 + fot22333*sot13;
                result(1,3) = fot22213*sot11 + fot22223*sot12 + fot22233*sot13;
                result(1,4) = fot22113*sot11 + fot22123*sot12 + fot22133*sot13;
                result(1,5) = fot22112*sot11 + fot22122*sot12 + fot22132*sot13;
                result(1,6) = fot22312*sot11 + fot22322*sot12 + fot22332*sot13;
                result(1,7) = fot22311*sot11 + fot22321*sot12 + fot22331*sot13;
                result(1,8) = fot22211*sot11 + fot22221*sot12 + fot22231*sot13;
                result(2,0) = fot33111*sot11 + fot33121*sot12 + fot33131*sot13;
                result(2,1) = fot33212*sot11 + fot33222*sot12 + fot33232*sot13;
                result(2,2) = fot33313*sot11 + fot33323*sot12 + fot33333*sot13;
                result(2,3) = fot33213*sot11 + fot33223*sot12 + fot33233*sot13;
                result(2,4) = fot33113*sot11 + fot33123*sot12 + fot33133*sot13;
                result(2,5) = fot33112*sot11 + fot33122*sot12 + fot33132*sot13;
                result(2,6) = fot33312*sot11 + fot33322*sot12 + fot33332*sot13;
                result(2,7) = fot33311*sot11 + fot33321*sot12 + fot33331*sot13;
                result(2,8) = fot33211*sot11 + fot33221*sot12 + fot33231*sot13;
                result(3,0) = fot23111*sot11 + fot23121*sot12 + fot23131*sot13;
                result(3,1) = fot23212*sot11 + fot23222*sot12 + fot23232*sot13;
                result(3,2) = fot23313*sot11 + fot23323*sot12 + fot23333*sot13;
                result(3,3) = fot23213*sot11 + fot23223*sot12 + fot23233*sot13;
                result(3,4) = fot23113*sot11 + fot23123*sot12 + fot23133*sot13;
                result(3,5) = fot23112*sot11 + fot23122*sot12 + fot23132*sot13;
                result(3,6) = fot23312*sot11 + fot23322*sot12 + fot23332*sot13;
                result(3,7) = fot23311*sot11 + fot23321*sot12 + fot23331*sot13;
                result(3,8) = fot23211*sot11 + fot23221*sot12 + fot23231*sot13;
                result(4,0) = fot13111*sot11 + fot13121*sot12 + fot13131*sot13;
                result(4,1) = fot13212*sot11 + fot13222*sot12 + fot13232*sot13;
                result(4,2) = fot13313*sot11 + fot13323*sot12 + fot13333*sot13;
                result(4,3) = fot13213*sot11 + fot13223*sot12 + fot13233*sot13;
                result(4,4) = fot13113*sot11 + fot13123*sot12 + fot13133*sot13;
                result(4,5) = fot13112*sot11 + fot13122*sot12 + fot13132*sot13;
                result(4,6) = fot13312*sot11 + fot13322*sot12 + fot13332*sot13;
                result(4,7) = fot13311*sot11 + fot13321*sot12 + fot13331*sot13;
                result(4,8) = fot13211*sot11 + fot13221*sot12 + fot13231*sot13;
                result(5,0) = fot12111*sot11 + fot12121*sot12 + fot12131*sot13;
                result(5,1) = fot12212*sot11 + fot12222*sot12 + fot12232*sot13;
                result(5,2) = fot12313*sot11 + fot12323*sot12 + fot12333*sot13;
                result(5,3) = fot12213*sot11 + fot12223*sot12 + fot12233*sot13;
                result(5,4) = fot12113*sot11 + fot12123*sot12 + fot12133*sot13;
                result(5,5) = fot12112*sot11 + fot12122*sot12 + fot12132*sot13;
                result(5,6) = fot12312*sot11 + fot12322*sot12 + fot12332*sot13;
                result(5,7) = fot12311*sot11 + fot12321*sot12 + fot12331*sot13;
                result(5,8) = fot12211*sot11 + fot12221*sot12 + fot12231*sot13;
                result(6,0) = fot32111*sot11 + fot32121*sot12 + fot32131*sot13;
                result(6,1) = fot32212*sot11 + fot32222*sot12 + fot32232*sot13;
                result(6,2) = fot32313*sot11 + fot32323*sot12 + fot32333*sot13;
                result(6,3) = fot32213*sot11 + fot32223*sot12 + fot32233*sot13;
                result(6,4) = fot32113*sot11 + fot32123*sot12 + fot32133*sot13;
                result(6,5) = fot32112*sot11 + fot32122*sot12 + fot32132*sot13;
                result(6,6) = fot32312*sot11 + fot32322*sot12 + fot32332*sot13;
                result(6,7) = fot32311*sot11 + fot32321*sot12 + fot32331*sot13;
                result(6,8) = fot32211*sot11 + fot32221*sot12 + fot32231*sot13;
                result(7,0) = fot31111*sot11 + fot31121*sot12 + fot31131*sot13;
                result(7,1) = fot31212*sot11 + fot31222*sot12 + fot31232*sot13;
                result(7,2) = fot31313*sot11 + fot31323*sot12 + fot31333*sot13;
                result(7,3) = fot31213*sot11 + fot31223*sot12 + fot31233*sot13;
                result(7,4) = fot31113*sot11 + fot31123*sot12 + fot31133*sot13;
                result(7,5) = fot31112*sot11 + fot31122*sot12 + fot31132*sot13;
                result(7,6) = fot31312*sot11 + fot31322*sot12 + fot31332*sot13;
                result(7,7) = fot31311*sot11 + fot31321*sot12 + fot31331*sot13;
                result(7,8) = fot31211*sot11 + fot31221*sot12 + fot31231*sot13;
                result(8,0) = fot21111*sot11 + fot21121*sot12 + fot21131*sot13;
                result(8,1) = fot21212*sot11 + fot21222*sot12 + fot21232*sot13;
                result(8,2) = fot21313*sot11 + fot21323*sot12 + fot21333*sot13;
                result(8,3) = fot21213*sot11 + fot21223*sot12 + fot21233*sot13;
                result(8,4) = fot21113*sot11 + fot21123*sot12 + fot21133*sot13;
                result(8,5) = fot21112*sot11 + fot21122*sot12 + fot21132*sot13;
                result(8,6) = fot21312*sot11 + fot21322*sot12 + fot21332*sot13;
                result(8,7) = fot21311*sot11 + fot21321*sot12 + fot21331*sot13;
                result(8,8) = fot21211*sot11 + fot21221*sot12 + fot21231*sot13;
                result(9,0) = fot11111*sot21 + fot11121*sot22 + fot11131*sot23;
                result(9,1) = fot11212*sot21 + fot11222*sot22 + fot11232*sot23;
                result(9,2) = fot11313*sot21 + fot11323*sot22 + fot11333*sot23;
                result(9,3) = fot11213*sot21 + fot11223*sot22 + fot11233*sot23;
                result(9,4) = fot11113*sot21 + fot11123*sot22 + fot11133*sot23;
                result(9,5) = fot11112*sot21 + fot11122*sot22 + fot11132*sot23;
                result(9,6) = fot11312*sot21 + fot11322*sot22 + fot11332*sot23;
                result(9,7) = fot11311*sot21 + fot11321*sot22 + fot11331*sot23;
                result(9,8) = fot11211*sot21 + fot11221*sot22 + fot11231*sot23;
                result(10,0) = fot22111*sot21 + fot22121*sot22 + fot22131*sot23;
                result(10,1) = fot22212*sot21 + fot22222*sot22 + fot22232*sot23;
                result(10,2) = fot22313*sot21 + fot22323*sot22 + fot22333*sot23;
                result(10,3) = fot22213*sot21 + fot22223*sot22 + fot22233*sot23;
                result(10,4) = fot22113*sot21 + fot22123*sot22 + fot22133*sot23;
                result(10,5) = fot22112*sot21 + fot22122*sot22 + fot22132*sot23;
                result(10,6) = fot22312*sot21 + fot22322*sot22 + fot22332*sot23;
                result(10,7) = fot22311*sot21 + fot22321*sot22 + fot22331*sot23;
                result(10,8) = fot22211*sot21 + fot22221*sot22 + fot22231*sot23;
                result(11,0) = fot33111*sot21 + fot33121*sot22 + fot33131*sot23;
                result(11,1) = fot33212*sot21 + fot33222*sot22 + fot33232*sot23;
                result(11,2) = fot33313*sot21 + fot33323*sot22 + fot33333*sot23;
                result(11,3) = fot33213*sot21 + fot33223*sot22 + fot33233*sot23;
                result(11,4) = fot33113*sot21 + fot33123*sot22 + fot33133*sot23;
                result(11,5) = fot33112*sot21 + fot33122*sot22 + fot33132*sot23;
                result(11,6) = fot33312*sot21 + fot33322*sot22 + fot33332*sot23;
                result(11,7) = fot33311*sot21 + fot33321*sot22 + fot33331*sot23;
                result(11,8) = fot33211*sot21 + fot33221*sot22 + fot33231*sot23;
                result(12,0) = fot23111*sot21 + fot23121*sot22 + fot23131*sot23;
                result(12,1) = fot23212*sot21 + fot23222*sot22 + fot23232*sot23;
                result(12,2) = fot23313*sot21 + fot23323*sot22 + fot23333*sot23;
                result(12,3) = fot23213*sot21 + fot23223*sot22 + fot23233*sot23;
                result(12,4) = fot23113*sot21 + fot23123*sot22 + fot23133*sot23;
                result(12,5) = fot23112*sot21 + fot23122*sot22 + fot23132*sot23;
                result(12,6) = fot23312*sot21 + fot23322*sot22 + fot23332*sot23;
                result(12,7) = fot23311*sot21 + fot23321*sot22 + fot23331*sot23;
                result(12,8) = fot23211*sot21 + fot23221*sot22 + fot23231*sot23;
                result(13,0) = fot13111*sot21 + fot13121*sot22 + fot13131*sot23;
                result(13,1) = fot13212*sot21 + fot13222*sot22 + fot13232*sot23;
                result(13,2) = fot13313*sot21 + fot13323*sot22 + fot13333*sot23;
                result(13,3) = fot13213*sot21 + fot13223*sot22 + fot13233*sot23;
                result(13,4) = fot13113*sot21 + fot13123*sot22 + fot13133*sot23;
                result(13,5) = fot13112*sot21 + fot13122*sot22 + fot13132*sot23;
                result(13,6) = fot13312*sot21 + fot13322*sot22 + fot13332*sot23;
                result(13,7) = fot13311*sot21 + fot13321*sot22 + fot13331*sot23;
                result(13,8) = fot13211*sot21 + fot13221*sot22 + fot13231*sot23;
                result(14,0) = fot12111*sot21 + fot12121*sot22 + fot12131*sot23;
                result(14,1) = fot12212*sot21 + fot12222*sot22 + fot12232*sot23;
                result(14,2) = fot12313*sot21 + fot12323*sot22 + fot12333*sot23;
                result(14,3) = fot12213*sot21 + fot12223*sot22 + fot12233*sot23;
                result(14,4) = fot12113*sot21 + fot12123*sot22 + fot12133*sot23;
                result(14,5) = fot12112*sot21 + fot12122*sot22 + fot12132*sot23;
                result(14,6) = fot12312*sot21 + fot12322*sot22 + fot12332*sot23;
                result(14,7) = fot12311*sot21 + fot12321*sot22 + fot12331*sot23;
                result(14,8) = fot12211*sot21 + fot12221*sot22 + fot12231*sot23;
                result(15,0) = fot32111*sot21 + fot32121*sot22 + fot32131*sot23;
                result(15,1) = fot32212*sot21 + fot32222*sot22 + fot32232*sot23;
                result(15,2) = fot32313*sot21 + fot32323*sot22 + fot32333*sot23;
                result(15,3) = fot32213*sot21 + fot32223*sot22 + fot32233*sot23;
                result(15,4) = fot32113*sot21 + fot32123*sot22 + fot32133*sot23;
                result(15,5) = fot32112*sot21 + fot32122*sot22 + fot32132*sot23;
                result(15,6) = fot32312*sot21 + fot32322*sot22 + fot32332*sot23;
                result(15,7) = fot32311*sot21 + fot32321*sot22 + fot32331*sot23;
                result(15,8) = fot32211*sot21 + fot32221*sot22 + fot32231*sot23;
                result(16,0) = fot31111*sot21 + fot31121*sot22 + fot31131*sot23;
                result(16,1) = fot31212*sot21 + fot31222*sot22 + fot31232*sot23;
                result(16,2) = fot31313*sot21 + fot31323*sot22 + fot31333*sot23;
                result(16,3) = fot31213*sot21 + fot31223*sot22 + fot31233*sot23;
                result(16,4) = fot31113*sot21 + fot31123*sot22 + fot31133*sot23;
                result(16,5) = fot31112*sot21 + fot31122*sot22 + fot31132*sot23;
                result(16,6) = fot31312*sot21 + fot31322*sot22 + fot31332*sot23;
                result(16,7) = fot31311*sot21 + fot31321*sot22 + fot31331*sot23;
                result(16,8) = fot31211*sot21 + fot31221*sot22 + fot31231*sot23;
                result(17,0) = fot21111*sot21 + fot21121*sot22 + fot21131*sot23;
                result(17,1) = fot21212*sot21 + fot21222*sot22 + fot21232*sot23;
                result(17,2) = fot21313*sot21 + fot21323*sot22 + fot21333*sot23;
                result(17,3) = fot21213*sot21 + fot21223*sot22 + fot21233*sot23;
                result(17,4) = fot21113*sot21 + fot21123*sot22 + fot21133*sot23;
                result(17,5) = fot21112*sot21 + fot21122*sot22 + fot21132*sot23;
                result(17,6) = fot21312*sot21 + fot21322*sot22 + fot21332*sot23;
                result(17,7) = fot21311*sot21 + fot21321*sot22 + fot21331*sot23;
                result(17,8) = fot21211*sot21 + fot21221*sot22 + fot21231*sot23;
                result(18,0) = fot11111*sot31 + fot11121*sot32 + fot11131*sot33;
                result(18,1) = fot11212*sot31 + fot11222*sot32 + fot11232*sot33;
                result(18,2) = fot11313*sot31 + fot11323*sot32 + fot11333*sot33;
                result(18,3) = fot11213*sot31 + fot11223*sot32 + fot11233*sot33;
                result(18,4) = fot11113*sot31 + fot11123*sot32 + fot11133*sot33;
                result(18,5) = fot11112*sot31 + fot11122*sot32 + fot11132*sot33;
                result(18,6) = fot11312*sot31 + fot11322*sot32 + fot11332*sot33;
                result(18,7) = fot11311*sot31 + fot11321*sot32 + fot11331*sot33;
                result(18,8) = fot11211*sot31 + fot11221*sot32 + fot11231*sot33;
                result(19,0) = fot22111*sot31 + fot22121*sot32 + fot22131*sot33;
                result(19,1) = fot22212*sot31 + fot22222*sot32 + fot22232*sot33;
                result(19,2) = fot22313*sot31 + fot22323*sot32 + fot22333*sot33;
                result(19,3) = fot22213*sot31 + fot22223*sot32 + fot22233*sot33;
                result(19,4) = fot22113*sot31 + fot22123*sot32 + fot22133*sot33;
                result(19,5) = fot22112*sot31 + fot22122*sot32 + fot22132*sot33;
                result(19,6) = fot22312*sot31 + fot22322*sot32 + fot22332*sot33;
                result(19,7) = fot22311*sot31 + fot22321*sot32 + fot22331*sot33;
                result(19,8) = fot22211*sot31 + fot22221*sot32 + fot22231*sot33;
                result(20,0) = fot33111*sot31 + fot33121*sot32 + fot33131*sot33;
                result(20,1) = fot33212*sot31 + fot33222*sot32 + fot33232*sot33;
                result(20,2) = fot33313*sot31 + fot33323*sot32 + fot33333*sot33;
                result(20,3) = fot33213*sot31 + fot33223*sot32 + fot33233*sot33;
                result(20,4) = fot33113*sot31 + fot33123*sot32 + fot33133*sot33;
                result(20,5) = fot33112*sot31 + fot33122*sot32 + fot33132*sot33;
                result(20,6) = fot33312*sot31 + fot33322*sot32 + fot33332*sot33;
                result(20,7) = fot33311*sot31 + fot33321*sot32 + fot33331*sot33;
                result(20,8) = fot33211*sot31 + fot33221*sot32 + fot33231*sot33;
                result(21,0) = fot23111*sot31 + fot23121*sot32 + fot23131*sot33;
                result(21,1) = fot23212*sot31 + fot23222*sot32 + fot23232*sot33;
                result(21,2) = fot23313*sot31 + fot23323*sot32 + fot23333*sot33;
                result(21,3) = fot23213*sot31 + fot23223*sot32 + fot23233*sot33;
                result(21,4) = fot23113*sot31 + fot23123*sot32 + fot23133*sot33;
                result(21,5) = fot23112*sot31 + fot23122*sot32 + fot23132*sot33;
                result(21,6) = fot23312*sot31 + fot23322*sot32 + fot23332*sot33;
                result(21,7) = fot23311*sot31 + fot23321*sot32 + fot23331*sot33;
                result(21,8) = fot23211*sot31 + fot23221*sot32 + fot23231*sot33;
                result(22,0) = fot13111*sot31 + fot13121*sot32 + fot13131*sot33;
                result(22,1) = fot13212*sot31 + fot13222*sot32 + fot13232*sot33;
                result(22,2) = fot13313*sot31 + fot13323*sot32 + fot13333*sot33;
                result(22,3) = fot13213*sot31 + fot13223*sot32 + fot13233*sot33;
                result(22,4) = fot13113*sot31 + fot13123*sot32 + fot13133*sot33;
                result(22,5) = fot13112*sot31 + fot13122*sot32 + fot13132*sot33;
                result(22,6) = fot13312*sot31 + fot13322*sot32 + fot13332*sot33;
                result(22,7) = fot13311*sot31 + fot13321*sot32 + fot13331*sot33;
                result(22,8) = fot13211*sot31 + fot13221*sot32 + fot13231*sot33;
                result(23,0) = fot12111*sot31 + fot12121*sot32 + fot12131*sot33;
                result(23,1) = fot12212*sot31 + fot12222*sot32 + fot12232*sot33;
                result(23,2) = fot12313*sot31 + fot12323*sot32 + fot12333*sot33;
                result(23,3) = fot12213*sot31 + fot12223*sot32 + fot12233*sot33;
                result(23,4) = fot12113*sot31 + fot12123*sot32 + fot12133*sot33;
                result(23,5) = fot12112*sot31 + fot12122*sot32 + fot12132*sot33;
                result(23,6) = fot12312*sot31 + fot12322*sot32 + fot12332*sot33;
                result(23,7) = fot12311*sot31 + fot12321*sot32 + fot12331*sot33;
                result(23,8) = fot12211*sot31 + fot12221*sot32 + fot12231*sot33;
                result(24,0) = fot32111*sot31 + fot32121*sot32 + fot32131*sot33;
                result(24,1) = fot32212*sot31 + fot32222*sot32 + fot32232*sot33;
                result(24,2) = fot32313*sot31 + fot32323*sot32 + fot32333*sot33;
                result(24,3) = fot32213*sot31 + fot32223*sot32 + fot32233*sot33;
                result(24,4) = fot32113*sot31 + fot32123*sot32 + fot32133*sot33;
                result(24,5) = fot32112*sot31 + fot32122*sot32 + fot32132*sot33;
                result(24,6) = fot32312*sot31 + fot32322*sot32 + fot32332*sot33;
                result(24,7) = fot32311*sot31 + fot32321*sot32 + fot32331*sot33;
                result(24,8) = fot32211*sot31 + fot32221*sot32 + fot32231*sot33;
                result(25,0) = fot31111*sot31 + fot31121*sot32 + fot31131*sot33;
                result(25,1) = fot31212*sot31 + fot31222*sot32 + fot31232*sot33;
                result(25,2) = fot31313*sot31 + fot31323*sot32 + fot31333*sot33;
                result(25,3) = fot31213*sot31 + fot31223*sot32 + fot31233*sot33;
                result(25,4) = fot31113*sot31 + fot31123*sot32 + fot31133*sot33;
                result(25,5) = fot31112*sot31 + fot31122*sot32 + fot31132*sot33;
                result(25,6) = fot31312*sot31 + fot31322*sot32 + fot31332*sot33;
                result(25,7) = fot31311*sot31 + fot31321*sot32 + fot31331*sot33;
                result(25,8) = fot31211*sot31 + fot31221*sot32 + fot31231*sot33;
                result(26,0) = fot21111*sot31 + fot21121*sot32 + fot21131*sot33;
                result(26,1) = fot21212*sot31 + fot21222*sot32 + fot21232*sot33;
                result(26,2) = fot21313*sot31 + fot21323*sot32 + fot21333*sot33;
                result(26,3) = fot21213*sot31 + fot21223*sot32 + fot21233*sot33;
                result(26,4) = fot21113*sot31 + fot21123*sot32 + fot21133*sot33;
                result(26,5) = fot21112*sot31 + fot21122*sot32 + fot21132*sot33;
                result(26,6) = fot21312*sot31 + fot21322*sot32 + fot21332*sot33;
                result(26,7) = fot21311*sot31 + fot21321*sot32 + fot21331*sot33;
                result(26,8) = fot21211*sot31 + fot21221*sot32 + fot21231*sot33;
        }
        else if(i==4){
                result(0,0) = fot11111*sot11 + fot11112*sot12 + fot11113*sot13;
                result(0,1) = fot11221*sot11 + fot11222*sot12 + fot11223*sot13;
                result(0,2) = fot11331*sot11 + fot11332*sot12 + fot11333*sot13;
                result(0,3) = fot11231*sot11 + fot11232*sot12 + fot11233*sot13;
                result(0,4) = fot11131*sot11 + fot11132*sot12 + fot11133*sot13;
                result(0,5) = fot11121*sot11 + fot11122*sot12 + fot11123*sot13;
                result(0,6) = fot11321*sot11 + fot11322*sot12 + fot11323*sot13;
                result(0,7) = fot11311*sot11 + fot11312*sot12 + fot11313*sot13;
                result(0,8) = fot11211*sot11 + fot11212*sot12 + fot11213*sot13;
                result(1,0) = fot22111*sot11 + fot22112*sot12 + fot22113*sot13;
                result(1,1) = fot22221*sot11 + fot22222*sot12 + fot22223*sot13;
                result(1,2) = fot22331*sot11 + fot22332*sot12 + fot22333*sot13;
                result(1,3) = fot22231*sot11 + fot22232*sot12 + fot22233*sot13;
                result(1,4) = fot22131*sot11 + fot22132*sot12 + fot22133*sot13;
                result(1,5) = fot22121*sot11 + fot22122*sot12 + fot22123*sot13;
                result(1,6) = fot22321*sot11 + fot22322*sot12 + fot22323*sot13;
                result(1,7) = fot22311*sot11 + fot22312*sot12 + fot22313*sot13;
                result(1,8) = fot22211*sot11 + fot22212*sot12 + fot22213*sot13;
                result(2,0) = fot33111*sot11 + fot33112*sot12 + fot33113*sot13;
                result(2,1) = fot33221*sot11 + fot33222*sot12 + fot33223*sot13;
                result(2,2) = fot33331*sot11 + fot33332*sot12 + fot33333*sot13;
                result(2,3) = fot33231*sot11 + fot33232*sot12 + fot33233*sot13;
                result(2,4) = fot33131*sot11 + fot33132*sot12 + fot33133*sot13;
                result(2,5) = fot33121*sot11 + fot33122*sot12 + fot33123*sot13;
                result(2,6) = fot33321*sot11 + fot33322*sot12 + fot33323*sot13;
                result(2,7) = fot33311*sot11 + fot33312*sot12 + fot33313*sot13;
                result(2,8) = fot33211*sot11 + fot33212*sot12 + fot33213*sot13;
                result(3,0) = fot23111*sot11 + fot23112*sot12 + fot23113*sot13;
                result(3,1) = fot23221*sot11 + fot23222*sot12 + fot23223*sot13;
                result(3,2) = fot23331*sot11 + fot23332*sot12 + fot23333*sot13;
                result(3,3) = fot23231*sot11 + fot23232*sot12 + fot23233*sot13;
                result(3,4) = fot23131*sot11 + fot23132*sot12 + fot23133*sot13;
                result(3,5) = fot23121*sot11 + fot23122*sot12 + fot23123*sot13;
                result(3,6) = fot23321*sot11 + fot23322*sot12 + fot23323*sot13;
                result(3,7) = fot23311*sot11 + fot23312*sot12 + fot23313*sot13;
                result(3,8) = fot23211*sot11 + fot23212*sot12 + fot23213*sot13;
                result(4,0) = fot13111*sot11 + fot13112*sot12 + fot13113*sot13;
                result(4,1) = fot13221*sot11 + fot13222*sot12 + fot13223*sot13;
                result(4,2) = fot13331*sot11 + fot13332*sot12 + fot13333*sot13;
                result(4,3) = fot13231*sot11 + fot13232*sot12 + fot13233*sot13;
                result(4,4) = fot13131*sot11 + fot13132*sot12 + fot13133*sot13;
                result(4,5) = fot13121*sot11 + fot13122*sot12 + fot13123*sot13;
                result(4,6) = fot13321*sot11 + fot13322*sot12 + fot13323*sot13;
                result(4,7) = fot13311*sot11 + fot13312*sot12 + fot13313*sot13;
                result(4,8) = fot13211*sot11 + fot13212*sot12 + fot13213*sot13;
                result(5,0) = fot12111*sot11 + fot12112*sot12 + fot12113*sot13;
                result(5,1) = fot12221*sot11 + fot12222*sot12 + fot12223*sot13;
                result(5,2) = fot12331*sot11 + fot12332*sot12 + fot12333*sot13;
                result(5,3) = fot12231*sot11 + fot12232*sot12 + fot12233*sot13;
                result(5,4) = fot12131*sot11 + fot12132*sot12 + fot12133*sot13;
                result(5,5) = fot12121*sot11 + fot12122*sot12 + fot12123*sot13;
                result(5,6) = fot12321*sot11 + fot12322*sot12 + fot12323*sot13;
                result(5,7) = fot12311*sot11 + fot12312*sot12 + fot12313*sot13;
                result(5,8) = fot12211*sot11 + fot12212*sot12 + fot12213*sot13;
                result(6,0) = fot32111*sot11 + fot32112*sot12 + fot32113*sot13;
                result(6,1) = fot32221*sot11 + fot32222*sot12 + fot32223*sot13;
                result(6,2) = fot32331*sot11 + fot32332*sot12 + fot32333*sot13;
                result(6,3) = fot32231*sot11 + fot32232*sot12 + fot32233*sot13;
                result(6,4) = fot32131*sot11 + fot32132*sot12 + fot32133*sot13;
                result(6,5) = fot32121*sot11 + fot32122*sot12 + fot32123*sot13;
                result(6,6) = fot32321*sot11 + fot32322*sot12 + fot32323*sot13;
                result(6,7) = fot32311*sot11 + fot32312*sot12 + fot32313*sot13;
                result(6,8) = fot32211*sot11 + fot32212*sot12 + fot32213*sot13;
                result(7,0) = fot31111*sot11 + fot31112*sot12 + fot31113*sot13;
                result(7,1) = fot31221*sot11 + fot31222*sot12 + fot31223*sot13;
                result(7,2) = fot31331*sot11 + fot31332*sot12 + fot31333*sot13;
                result(7,3) = fot31231*sot11 + fot31232*sot12 + fot31233*sot13;
                result(7,4) = fot31131*sot11 + fot31132*sot12 + fot31133*sot13;
                result(7,5) = fot31121*sot11 + fot31122*sot12 + fot31123*sot13;
                result(7,6) = fot31321*sot11 + fot31322*sot12 + fot31323*sot13;
                result(7,7) = fot31311*sot11 + fot31312*sot12 + fot31313*sot13;
                result(7,8) = fot31211*sot11 + fot31212*sot12 + fot31213*sot13;
                result(8,0) = fot21111*sot11 + fot21112*sot12 + fot21113*sot13;
                result(8,1) = fot21221*sot11 + fot21222*sot12 + fot21223*sot13;
                result(8,2) = fot21331*sot11 + fot21332*sot12 + fot21333*sot13;
                result(8,3) = fot21231*sot11 + fot21232*sot12 + fot21233*sot13;
                result(8,4) = fot21131*sot11 + fot21132*sot12 + fot21133*sot13;
                result(8,5) = fot21121*sot11 + fot21122*sot12 + fot21123*sot13;
                result(8,6) = fot21321*sot11 + fot21322*sot12 + fot21323*sot13;
                result(8,7) = fot21311*sot11 + fot21312*sot12 + fot21313*sot13;
                result(8,8) = fot21211*sot11 + fot21212*sot12 + fot21213*sot13;
                result(9,0) = fot11111*sot21 + fot11112*sot22 + fot11113*sot23;
                result(9,1) = fot11221*sot21 + fot11222*sot22 + fot11223*sot23;
                result(9,2) = fot11331*sot21 + fot11332*sot22 + fot11333*sot23;
                result(9,3) = fot11231*sot21 + fot11232*sot22 + fot11233*sot23;
                result(9,4) = fot11131*sot21 + fot11132*sot22 + fot11133*sot23;
                result(9,5) = fot11121*sot21 + fot11122*sot22 + fot11123*sot23;
                result(9,6) = fot11321*sot21 + fot11322*sot22 + fot11323*sot23;
                result(9,7) = fot11311*sot21 + fot11312*sot22 + fot11313*sot23;
                result(9,8) = fot11211*sot21 + fot11212*sot22 + fot11213*sot23;
                result(10,0) = fot22111*sot21 + fot22112*sot22 + fot22113*sot23;
                result(10,1) = fot22221*sot21 + fot22222*sot22 + fot22223*sot23;
                result(10,2) = fot22331*sot21 + fot22332*sot22 + fot22333*sot23;
                result(10,3) = fot22231*sot21 + fot22232*sot22 + fot22233*sot23;
                result(10,4) = fot22131*sot21 + fot22132*sot22 + fot22133*sot23;
                result(10,5) = fot22121*sot21 + fot22122*sot22 + fot22123*sot23;
                result(10,6) = fot22321*sot21 + fot22322*sot22 + fot22323*sot23;
                result(10,7) = fot22311*sot21 + fot22312*sot22 + fot22313*sot23;
                result(10,8) = fot22211*sot21 + fot22212*sot22 + fot22213*sot23;
                result(11,0) = fot33111*sot21 + fot33112*sot22 + fot33113*sot23;
                result(11,1) = fot33221*sot21 + fot33222*sot22 + fot33223*sot23;
                result(11,2) = fot33331*sot21 + fot33332*sot22 + fot33333*sot23;
                result(11,3) = fot33231*sot21 + fot33232*sot22 + fot33233*sot23;
                result(11,4) = fot33131*sot21 + fot33132*sot22 + fot33133*sot23;
                result(11,5) = fot33121*sot21 + fot33122*sot22 + fot33123*sot23;
                result(11,6) = fot33321*sot21 + fot33322*sot22 + fot33323*sot23;
                result(11,7) = fot33311*sot21 + fot33312*sot22 + fot33313*sot23;
                result(11,8) = fot33211*sot21 + fot33212*sot22 + fot33213*sot23;
                result(12,0) = fot23111*sot21 + fot23112*sot22 + fot23113*sot23;
                result(12,1) = fot23221*sot21 + fot23222*sot22 + fot23223*sot23;
                result(12,2) = fot23331*sot21 + fot23332*sot22 + fot23333*sot23;
                result(12,3) = fot23231*sot21 + fot23232*sot22 + fot23233*sot23;
                result(12,4) = fot23131*sot21 + fot23132*sot22 + fot23133*sot23;
                result(12,5) = fot23121*sot21 + fot23122*sot22 + fot23123*sot23;
                result(12,6) = fot23321*sot21 + fot23322*sot22 + fot23323*sot23;
                result(12,7) = fot23311*sot21 + fot23312*sot22 + fot23313*sot23;
                result(12,8) = fot23211*sot21 + fot23212*sot22 + fot23213*sot23;
                result(13,0) = fot13111*sot21 + fot13112*sot22 + fot13113*sot23;
                result(13,1) = fot13221*sot21 + fot13222*sot22 + fot13223*sot23;
                result(13,2) = fot13331*sot21 + fot13332*sot22 + fot13333*sot23;
                result(13,3) = fot13231*sot21 + fot13232*sot22 + fot13233*sot23;
                result(13,4) = fot13131*sot21 + fot13132*sot22 + fot13133*sot23;
                result(13,5) = fot13121*sot21 + fot13122*sot22 + fot13123*sot23;
                result(13,6) = fot13321*sot21 + fot13322*sot22 + fot13323*sot23;
                result(13,7) = fot13311*sot21 + fot13312*sot22 + fot13313*sot23;
                result(13,8) = fot13211*sot21 + fot13212*sot22 + fot13213*sot23;
                result(14,0) = fot12111*sot21 + fot12112*sot22 + fot12113*sot23;
                result(14,1) = fot12221*sot21 + fot12222*sot22 + fot12223*sot23;
                result(14,2) = fot12331*sot21 + fot12332*sot22 + fot12333*sot23;
                result(14,3) = fot12231*sot21 + fot12232*sot22 + fot12233*sot23;
                result(14,4) = fot12131*sot21 + fot12132*sot22 + fot12133*sot23;
                result(14,5) = fot12121*sot21 + fot12122*sot22 + fot12123*sot23;
                result(14,6) = fot12321*sot21 + fot12322*sot22 + fot12323*sot23;
                result(14,7) = fot12311*sot21 + fot12312*sot22 + fot12313*sot23;
                result(14,8) = fot12211*sot21 + fot12212*sot22 + fot12213*sot23;
                result(15,0) = fot32111*sot21 + fot32112*sot22 + fot32113*sot23;
                result(15,1) = fot32221*sot21 + fot32222*sot22 + fot32223*sot23;
                result(15,2) = fot32331*sot21 + fot32332*sot22 + fot32333*sot23;
                result(15,3) = fot32231*sot21 + fot32232*sot22 + fot32233*sot23;
                result(15,4) = fot32131*sot21 + fot32132*sot22 + fot32133*sot23;
                result(15,5) = fot32121*sot21 + fot32122*sot22 + fot32123*sot23;
                result(15,6) = fot32321*sot21 + fot32322*sot22 + fot32323*sot23;
                result(15,7) = fot32311*sot21 + fot32312*sot22 + fot32313*sot23;
                result(15,8) = fot32211*sot21 + fot32212*sot22 + fot32213*sot23;
                result(16,0) = fot31111*sot21 + fot31112*sot22 + fot31113*sot23;
                result(16,1) = fot31221*sot21 + fot31222*sot22 + fot31223*sot23;
                result(16,2) = fot31331*sot21 + fot31332*sot22 + fot31333*sot23;
                result(16,3) = fot31231*sot21 + fot31232*sot22 + fot31233*sot23;
                result(16,4) = fot31131*sot21 + fot31132*sot22 + fot31133*sot23;
                result(16,5) = fot31121*sot21 + fot31122*sot22 + fot31123*sot23;
                result(16,6) = fot31321*sot21 + fot31322*sot22 + fot31323*sot23;
                result(16,7) = fot31311*sot21 + fot31312*sot22 + fot31313*sot23;
                result(16,8) = fot31211*sot21 + fot31212*sot22 + fot31213*sot23;
                result(17,0) = fot21111*sot21 + fot21112*sot22 + fot21113*sot23;
                result(17,1) = fot21221*sot21 + fot21222*sot22 + fot21223*sot23;
                result(17,2) = fot21331*sot21 + fot21332*sot22 + fot21333*sot23;
                result(17,3) = fot21231*sot21 + fot21232*sot22 + fot21233*sot23;
                result(17,4) = fot21131*sot21 + fot21132*sot22 + fot21133*sot23;
                result(17,5) = fot21121*sot21 + fot21122*sot22 + fot21123*sot23;
                result(17,6) = fot21321*sot21 + fot21322*sot22 + fot21323*sot23;
                result(17,7) = fot21311*sot21 + fot21312*sot22 + fot21313*sot23;
                result(17,8) = fot21211*sot21 + fot21212*sot22 + fot21213*sot23;
                result(18,0) = fot11111*sot31 + fot11112*sot32 + fot11113*sot33;
                result(18,1) = fot11221*sot31 + fot11222*sot32 + fot11223*sot33;
                result(18,2) = fot11331*sot31 + fot11332*sot32 + fot11333*sot33;
                result(18,3) = fot11231*sot31 + fot11232*sot32 + fot11233*sot33;
                result(18,4) = fot11131*sot31 + fot11132*sot32 + fot11133*sot33;
                result(18,5) = fot11121*sot31 + fot11122*sot32 + fot11123*sot33;
                result(18,6) = fot11321*sot31 + fot11322*sot32 + fot11323*sot33;
                result(18,7) = fot11311*sot31 + fot11312*sot32 + fot11313*sot33;
                result(18,8) = fot11211*sot31 + fot11212*sot32 + fot11213*sot33;
                result(19,0) = fot22111*sot31 + fot22112*sot32 + fot22113*sot33;
                result(19,1) = fot22221*sot31 + fot22222*sot32 + fot22223*sot33;
                result(19,2) = fot22331*sot31 + fot22332*sot32 + fot22333*sot33;
                result(19,3) = fot22231*sot31 + fot22232*sot32 + fot22233*sot33;
                result(19,4) = fot22131*sot31 + fot22132*sot32 + fot22133*sot33;
                result(19,5) = fot22121*sot31 + fot22122*sot32 + fot22123*sot33;
                result(19,6) = fot22321*sot31 + fot22322*sot32 + fot22323*sot33;
                result(19,7) = fot22311*sot31 + fot22312*sot32 + fot22313*sot33;
                result(19,8) = fot22211*sot31 + fot22212*sot32 + fot22213*sot33;
                result(20,0) = fot33111*sot31 + fot33112*sot32 + fot33113*sot33;
                result(20,1) = fot33221*sot31 + fot33222*sot32 + fot33223*sot33;
                result(20,2) = fot33331*sot31 + fot33332*sot32 + fot33333*sot33;
                result(20,3) = fot33231*sot31 + fot33232*sot32 + fot33233*sot33;
                result(20,4) = fot33131*sot31 + fot33132*sot32 + fot33133*sot33;
                result(20,5) = fot33121*sot31 + fot33122*sot32 + fot33123*sot33;
                result(20,6) = fot33321*sot31 + fot33322*sot32 + fot33323*sot33;
                result(20,7) = fot33311*sot31 + fot33312*sot32 + fot33313*sot33;
                result(20,8) = fot33211*sot31 + fot33212*sot32 + fot33213*sot33;
                result(21,0) = fot23111*sot31 + fot23112*sot32 + fot23113*sot33;
                result(21,1) = fot23221*sot31 + fot23222*sot32 + fot23223*sot33;
                result(21,2) = fot23331*sot31 + fot23332*sot32 + fot23333*sot33;
                result(21,3) = fot23231*sot31 + fot23232*sot32 + fot23233*sot33;
                result(21,4) = fot23131*sot31 + fot23132*sot32 + fot23133*sot33;
                result(21,5) = fot23121*sot31 + fot23122*sot32 + fot23123*sot33;
                result(21,6) = fot23321*sot31 + fot23322*sot32 + fot23323*sot33;
                result(21,7) = fot23311*sot31 + fot23312*sot32 + fot23313*sot33;
                result(21,8) = fot23211*sot31 + fot23212*sot32 + fot23213*sot33;
                result(22,0) = fot13111*sot31 + fot13112*sot32 + fot13113*sot33;
                result(22,1) = fot13221*sot31 + fot13222*sot32 + fot13223*sot33;
                result(22,2) = fot13331*sot31 + fot13332*sot32 + fot13333*sot33;
                result(22,3) = fot13231*sot31 + fot13232*sot32 + fot13233*sot33;
                result(22,4) = fot13131*sot31 + fot13132*sot32 + fot13133*sot33;
                result(22,5) = fot13121*sot31 + fot13122*sot32 + fot13123*sot33;
                result(22,6) = fot13321*sot31 + fot13322*sot32 + fot13323*sot33;
                result(22,7) = fot13311*sot31 + fot13312*sot32 + fot13313*sot33;
                result(22,8) = fot13211*sot31 + fot13212*sot32 + fot13213*sot33;
                result(23,0) = fot12111*sot31 + fot12112*sot32 + fot12113*sot33;
                result(23,1) = fot12221*sot31 + fot12222*sot32 + fot12223*sot33;
                result(23,2) = fot12331*sot31 + fot12332*sot32 + fot12333*sot33;
                result(23,3) = fot12231*sot31 + fot12232*sot32 + fot12233*sot33;
                result(23,4) = fot12131*sot31 + fot12132*sot32 + fot12133*sot33;
                result(23,5) = fot12121*sot31 + fot12122*sot32 + fot12123*sot33;
                result(23,6) = fot12321*sot31 + fot12322*sot32 + fot12323*sot33;
                result(23,7) = fot12311*sot31 + fot12312*sot32 + fot12313*sot33;
                result(23,8) = fot12211*sot31 + fot12212*sot32 + fot12213*sot33;
                result(24,0) = fot32111*sot31 + fot32112*sot32 + fot32113*sot33;
                result(24,1) = fot32221*sot31 + fot32222*sot32 + fot32223*sot33;
                result(24,2) = fot32331*sot31 + fot32332*sot32 + fot32333*sot33;
                result(24,3) = fot32231*sot31 + fot32232*sot32 + fot32233*sot33;
                result(24,4) = fot32131*sot31 + fot32132*sot32 + fot32133*sot33;
                result(24,5) = fot32121*sot31 + fot32122*sot32 + fot32123*sot33;
                result(24,6) = fot32321*sot31 + fot32322*sot32 + fot32323*sot33;
                result(24,7) = fot32311*sot31 + fot32312*sot32 + fot32313*sot33;
                result(24,8) = fot32211*sot31 + fot32212*sot32 + fot32213*sot33;
                result(25,0) = fot31111*sot31 + fot31112*sot32 + fot31113*sot33;
                result(25,1) = fot31221*sot31 + fot31222*sot32 + fot31223*sot33;
                result(25,2) = fot31331*sot31 + fot31332*sot32 + fot31333*sot33;
                result(25,3) = fot31231*sot31 + fot31232*sot32 + fot31233*sot33;
                result(25,4) = fot31131*sot31 + fot31132*sot32 + fot31133*sot33;
                result(25,5) = fot31121*sot31 + fot31122*sot32 + fot31123*sot33;
                result(25,6) = fot31321*sot31 + fot31322*sot32 + fot31323*sot33;
                result(25,7) = fot31311*sot31 + fot31312*sot32 + fot31313*sot33;
                result(25,8) = fot31211*sot31 + fot31212*sot32 + fot31213*sot33;
                result(26,0) = fot21111*sot31 + fot21112*sot32 + fot21113*sot33;
                result(26,1) = fot21221*sot31 + fot21222*sot32 + fot21223*sot33;
                result(26,2) = fot21331*sot31 + fot21332*sot32 + fot21333*sot33;
                result(26,3) = fot21231*sot31 + fot21232*sot32 + fot21233*sot33;
                result(26,4) = fot21131*sot31 + fot21132*sot32 + fot21133*sot33;
                result(26,5) = fot21121*sot31 + fot21122*sot32 + fot21123*sot33;
                result(26,6) = fot21321*sot31 + fot21322*sot32 + fot21323*sot33;
                result(26,7) = fot21311*sot31 + fot21312*sot32 + fot21313*sot33;
                result(26,8) = fot21211*sot31 + fot21212*sot32 + fot21213*sot33;
        }
        else {
            std::cout << "Error: Index out of range\n";
            assert(1==0); //TODO: Replace with better error handling
        }
        return;
    }
    
    void two_sot_to_fot(const int &swap, const Matrix_3x3 &A, const Matrix_3x3 &B, Matrix_9x9 &C){
        /*!=========================
        |    two_sot_to_fot    |
        ========================
        
        Transform two second order tensors into a fourth order tensor.
        
        i.e.
        
        swap = 0
        C_ijkl = A_ij B_kl
        
        swap = 1
        C_ijkl = A_kj B_il
        
        swap = 2
        C_ijkl = A_il B_kj
        
        */
        
        //Extract A
        double A11 = A(0,0);
        double A12 = A(0,1);
        double A13 = A(0,2);
        double A21 = A(1,0);
        double A22 = A(1,1);
        double A23 = A(1,2);
        double A31 = A(2,0);
        double A32 = A(2,1);
        double A33 = A(2,2);

        //Extract B
        double B11 = B(0,0);
        double B12 = B(0,1);
        double B13 = B(0,2);
        double B21 = B(1,0);
        double B22 = B(1,1);
        double B23 = B(1,2);
        double B31 = B(2,0);
        double B32 = B(2,1);
        double B33 = B(2,2);

         //Assemble C
        if (swap == 0){
            C(0,0) = A11*B11;
            C(0,1) = A11*B22;
            C(0,2) = A11*B33;
            C(0,3) = A11*B23;
            C(0,4) = A11*B13;
            C(0,5) = A11*B12;
            C(0,6) = A11*B32;
            C(0,7) = A11*B31;
            C(0,8) = A11*B21;
            C(1,0) = A22*B11;
            C(1,1) = A22*B22;
            C(1,2) = A22*B33;
            C(1,3) = A22*B23;
            C(1,4) = A22*B13;
            C(1,5) = A22*B12;
            C(1,6) = A22*B32;
            C(1,7) = A22*B31;
            C(1,8) = A22*B21;
            C(2,0) = A33*B11;
            C(2,1) = A33*B22;
            C(2,2) = A33*B33;
            C(2,3) = A33*B23;
            C(2,4) = A33*B13;
            C(2,5) = A33*B12;
            C(2,6) = A33*B32;
            C(2,7) = A33*B31;
            C(2,8) = A33*B21;
            C(3,0) = A23*B11;
            C(3,1) = A23*B22;
            C(3,2) = A23*B33;
            C(3,3) = A23*B23;
            C(3,4) = A23*B13;
            C(3,5) = A23*B12;
            C(3,6) = A23*B32;
            C(3,7) = A23*B31;
            C(3,8) = A23*B21;
            C(4,0) = A13*B11;
            C(4,1) = A13*B22;
            C(4,2) = A13*B33;
            C(4,3) = A13*B23;
            C(4,4) = A13*B13;
            C(4,5) = A13*B12;
            C(4,6) = A13*B32;
            C(4,7) = A13*B31;
            C(4,8) = A13*B21;
            C(5,0) = A12*B11;
            C(5,1) = A12*B22;
            C(5,2) = A12*B33;
            C(5,3) = A12*B23;
            C(5,4) = A12*B13;
            C(5,5) = A12*B12;
            C(5,6) = A12*B32;
            C(5,7) = A12*B31;
            C(5,8) = A12*B21;
            C(6,0) = A32*B11;
            C(6,1) = A32*B22;
            C(6,2) = A32*B33;
            C(6,3) = A32*B23;
            C(6,4) = A32*B13;
            C(6,5) = A32*B12;
            C(6,6) = A32*B32;
            C(6,7) = A32*B31;
            C(6,8) = A32*B21;
            C(7,0) = A31*B11;
            C(7,1) = A31*B22;
            C(7,2) = A31*B33;
            C(7,3) = A31*B23;
            C(7,4) = A31*B13;
            C(7,5) = A31*B12;
            C(7,6) = A31*B32;
            C(7,7) = A31*B31;
            C(7,8) = A31*B21;
            C(8,0) = A21*B11;
            C(8,1) = A21*B22;
            C(8,2) = A21*B33;
            C(8,3) = A21*B23;
            C(8,4) = A21*B13;
            C(8,5) = A21*B12;
            C(8,6) = A21*B32;
            C(8,7) = A21*B31;
            C(8,8) = A21*B21;
        }
        else if (swap == 1){
            C(0,0) = A11*B11;
            C(0,1) = A21*B12;
            C(0,2) = A31*B13;
            C(0,3) = A21*B13;
            C(0,4) = A11*B13;
            C(0,5) = A11*B12;
            C(0,6) = A31*B12;
            C(0,7) = A31*B11;
            C(0,8) = A21*B11;
            C(1,0) = A12*B21;
            C(1,1) = A22*B22;
            C(1,2) = A32*B23;
            C(1,3) = A22*B23;
            C(1,4) = A12*B23;
            C(1,5) = A12*B22;
            C(1,6) = A32*B22;
            C(1,7) = A32*B21;
            C(1,8) = A22*B21;
            C(2,0) = A13*B31;
            C(2,1) = A23*B32;
            C(2,2) = A33*B33;
            C(2,3) = A23*B33;
            C(2,4) = A13*B33;
            C(2,5) = A13*B32;
            C(2,6) = A33*B32;
            C(2,7) = A33*B31;
            C(2,8) = A23*B31;
            C(3,0) = A13*B21;
            C(3,1) = A23*B22;
            C(3,2) = A33*B23;
            C(3,3) = A23*B23;
            C(3,4) = A13*B23;
            C(3,5) = A13*B22;
            C(3,6) = A33*B22;
            C(3,7) = A33*B21;
            C(3,8) = A23*B21;
            C(4,0) = A13*B11;
            C(4,1) = A23*B12;
            C(4,2) = A33*B13;
            C(4,3) = A23*B13;
            C(4,4) = A13*B13;
            C(4,5) = A13*B12;
            C(4,6) = A33*B12;
            C(4,7) = A33*B11;
            C(4,8) = A23*B11;
            C(5,0) = A12*B11;
            C(5,1) = A22*B12;
            C(5,2) = A32*B13;
            C(5,3) = A22*B13;
            C(5,4) = A12*B13;
            C(5,5) = A12*B12;
            C(5,6) = A32*B12;
            C(5,7) = A32*B11;
            C(5,8) = A22*B11;
            C(6,0) = A12*B31;
            C(6,1) = A22*B32;
            C(6,2) = A32*B33;
            C(6,3) = A22*B33;
            C(6,4) = A12*B33;
            C(6,5) = A12*B32;
            C(6,6) = A32*B32;
            C(6,7) = A32*B31;
            C(6,8) = A22*B31;
            C(7,0) = A11*B31;
            C(7,1) = A21*B32;
            C(7,2) = A31*B33;
            C(7,3) = A21*B33;
            C(7,4) = A11*B33;
            C(7,5) = A11*B32;
            C(7,6) = A31*B32;
            C(7,7) = A31*B31;
            C(7,8) = A21*B31;
            C(8,0) = A11*B21;
            C(8,1) = A21*B22;
            C(8,2) = A31*B23;
            C(8,3) = A21*B23;
            C(8,4) = A11*B23;
            C(8,5) = A11*B22;
            C(8,6) = A31*B22;
            C(8,7) = A31*B21;
            C(8,8) = A21*B21;
        }
        else if (swap == 2){
            C(0,0) = A11*B11;
            C(0,1) = A12*B21;
            C(0,2) = A13*B31;
            C(0,3) = A13*B21;
            C(0,4) = A13*B11;
            C(0,5) = A12*B11;
            C(0,6) = A12*B31;
            C(0,7) = A11*B31;
            C(0,8) = A11*B21;
            C(1,0) = A21*B12;
            C(1,1) = A22*B22;
            C(1,2) = A23*B32;
            C(1,3) = A23*B22;
            C(1,4) = A23*B12;
            C(1,5) = A22*B12;
            C(1,6) = A22*B32;
            C(1,7) = A21*B32;
            C(1,8) = A21*B22;
            C(2,0) = A31*B13;
            C(2,1) = A32*B23;
            C(2,2) = A33*B33;
            C(2,3) = A33*B23;
            C(2,4) = A33*B13;
            C(2,5) = A32*B13;
            C(2,6) = A32*B33;
            C(2,7) = A31*B33;
            C(2,8) = A31*B23;
            C(3,0) = A21*B13;
            C(3,1) = A22*B23;
            C(3,2) = A23*B33;
            C(3,3) = A23*B23;
            C(3,4) = A23*B13;
            C(3,5) = A22*B13;
            C(3,6) = A22*B33;
            C(3,7) = A21*B33;
            C(3,8) = A21*B23;
            C(4,0) = A11*B13;
            C(4,1) = A12*B23;
            C(4,2) = A13*B33;
            C(4,3) = A13*B23;
            C(4,4) = A13*B13;
            C(4,5) = A12*B13;
            C(4,6) = A12*B33;
            C(4,7) = A11*B33;
            C(4,8) = A11*B23;
            C(5,0) = A11*B12;
            C(5,1) = A12*B22;
            C(5,2) = A13*B32;
            C(5,3) = A13*B22;
            C(5,4) = A13*B12;
            C(5,5) = A12*B12;
            C(5,6) = A12*B32;
            C(5,7) = A11*B32;
            C(5,8) = A11*B22;
            C(6,0) = A31*B12;
            C(6,1) = A32*B22;
            C(6,2) = A33*B32;
            C(6,3) = A33*B22;
            C(6,4) = A33*B12;
            C(6,5) = A32*B12;
            C(6,6) = A32*B32;
            C(6,7) = A31*B32;
            C(6,8) = A31*B22;
            C(7,0) = A31*B11;
            C(7,1) = A32*B21;
            C(7,2) = A33*B31;
            C(7,3) = A33*B21;
            C(7,4) = A33*B11;
            C(7,5) = A32*B11;
            C(7,6) = A32*B31;
            C(7,7) = A31*B31;
            C(7,8) = A31*B21;
            C(8,0) = A21*B11;
            C(8,1) = A22*B21;
            C(8,2) = A23*B31;
            C(8,3) = A23*B21;
            C(8,4) = A23*B11;
            C(8,5) = A22*B11;
            C(8,6) = A22*B31;
            C(8,7) = A21*B31;
            C(8,8) = A21*B21;
        }
        return;
    }
    
    void compute_dRCGdF(const Matrix_3x3 &F, SpMat &dRCGdF){
        /*!=====================
        |    compute_dRCGdF    |
        ========================
        
        Compute the derivative of the right 
        cauchy green deformation tensor w.r.t. F.
        
        */
        
        std::vector<T> tripletList;
        tripletList.reserve(45);
        
        //Extract F
        double F11 = F(0,0);
        double F12 = F(0,1);
        double F13 = F(0,2);
        double F21 = F(1,0);
        double F22 = F(1,1);
        double F23 = F(1,2);
        double F31 = F(2,0);
        double F32 = F(2,1);
        double F33 = F(2,2);

        //Assemble dRCGdF
        tripletList.push_back(T(0,0,2*F11));
        tripletList.push_back(T(0,7,2*F31));
        tripletList.push_back(T(0,8,2*F21));
        tripletList.push_back(T(1,1,2*F22));
        tripletList.push_back(T(1,5,2*F12));
        tripletList.push_back(T(1,6,2*F32));
        tripletList.push_back(T(2,2,2*F33));
        tripletList.push_back(T(2,3,2*F23));
        tripletList.push_back(T(2,4,2*F13));
        tripletList.push_back(T(3,1,F23));
        tripletList.push_back(T(3,2,F32));
        tripletList.push_back(T(3,3,F22));
        tripletList.push_back(T(3,4,F12));
        tripletList.push_back(T(3,5,F13));
        tripletList.push_back(T(3,6,F33));
        tripletList.push_back(T(4,0,F13));
        tripletList.push_back(T(4,2,F31));
        tripletList.push_back(T(4,3,F21));
        tripletList.push_back(T(4,4,F11));
        tripletList.push_back(T(4,7,F33));
        tripletList.push_back(T(4,8,F23));
        tripletList.push_back(T(5,0,F12));
        tripletList.push_back(T(5,1,F21));
        tripletList.push_back(T(5,5,F11));
        tripletList.push_back(T(5,6,F31));
        tripletList.push_back(T(5,7,F32));
        tripletList.push_back(T(5,8,F22));
        tripletList.push_back(T(6,1,F23));
        tripletList.push_back(T(6,2,F32));
        tripletList.push_back(T(6,3,F22));
        tripletList.push_back(T(6,4,F12));
        tripletList.push_back(T(6,5,F13));
        tripletList.push_back(T(6,6,F33));
        tripletList.push_back(T(7,0,F13));
        tripletList.push_back(T(7,2,F31));
        tripletList.push_back(T(7,3,F21));
        tripletList.push_back(T(7,4,F11));
        tripletList.push_back(T(7,7,F33));
        tripletList.push_back(T(7,8,F23));
        tripletList.push_back(T(8,0,F12));
        tripletList.push_back(T(8,1,F21));
        tripletList.push_back(T(8,5,F11));
        tripletList.push_back(T(8,6,F31));
        tripletList.push_back(T(8,7,F32));
        tripletList.push_back(T(8,8,F22));      
        
        dRCGdF.setFromTriplets(tripletList.begin(), tripletList.end());        
        
        return;
    }
    
    void compute_dPsidF(const Matrix_3x3 &chi, SpMat &dPsidF){
        /*!========================
        |    compute_dPsidF    |
        ========================
        
        Compute the derivative of psi w.r.t. F
        
        */
        
        std::vector<T> tripletList;
        tripletList.reserve(27);

        //Extract chi
        double chi11 = chi(0,0);
        double chi12 = chi(0,1);
        double chi13 = chi(0,2);
        double chi21 = chi(1,0);
        double chi22 = chi(1,1);
        double chi23 = chi(1,2);
        double chi31 = chi(2,0);
        double chi32 = chi(2,1);
        double chi33 = chi(2,2);

        //Assemble dPsidF
        tripletList.push_back(T(0,0,chi11));
        tripletList.push_back(T(0,7,chi31));
        tripletList.push_back(T(0,8,chi21));
        tripletList.push_back(T(1,1,chi22));
        tripletList.push_back(T(1,5,chi12));
        tripletList.push_back(T(1,6,chi32));
        tripletList.push_back(T(2,2,chi33));
        tripletList.push_back(T(2,3,chi23));
        tripletList.push_back(T(2,4,chi13));
        tripletList.push_back(T(3,1,chi23));
        tripletList.push_back(T(3,5,chi13));
        tripletList.push_back(T(3,6,chi33));
        tripletList.push_back(T(4,0,chi13));
        tripletList.push_back(T(4,7,chi33));
        tripletList.push_back(T(4,8,chi23));
        tripletList.push_back(T(5,0,chi12));
        tripletList.push_back(T(5,7,chi32));
        tripletList.push_back(T(5,8,chi22));
        tripletList.push_back(T(6,2,chi32));
        tripletList.push_back(T(6,3,chi22));
        tripletList.push_back(T(6,4,chi12));
        tripletList.push_back(T(7,2,chi31));
        tripletList.push_back(T(7,3,chi21));
        tripletList.push_back(T(7,4,chi11));
        tripletList.push_back(T(8,1,chi21));
        tripletList.push_back(T(8,5,chi11));
        tripletList.push_back(T(8,6,chi31));
        
        dPsidF.setFromTriplets(tripletList.begin(), tripletList.end());        
        
        return;
    }
    
    void compute_dGammadF(const Vector_27 &grad_chi, SpMat &dGammadF){
        /*!==========================
        |    compute_dGammadF    |
        ==========================
        
        Compute the derivative of gamma w.r.t. F.
        
        */
        
        //Initialize the tripletList
        std::vector<T> tripletList;
        tripletList.reserve(81);

        //Extract grad_chi
        double grad_chi111 = grad_chi(0);
        double grad_chi122 = grad_chi(1);
        double grad_chi133 = grad_chi(2);
        double grad_chi123 = grad_chi(3);
        double grad_chi113 = grad_chi(4);
        double grad_chi112 = grad_chi(5);
        double grad_chi132 = grad_chi(6);
        double grad_chi131 = grad_chi(7);
        double grad_chi121 = grad_chi(8);
        double grad_chi211 = grad_chi(9);
        double grad_chi222 = grad_chi(10);
        double grad_chi233 = grad_chi(11);
        double grad_chi223 = grad_chi(12);
        double grad_chi213 = grad_chi(13);
        double grad_chi212 = grad_chi(14);
        double grad_chi232 = grad_chi(15);
        double grad_chi231 = grad_chi(16);
        double grad_chi221 = grad_chi(17);
        double grad_chi311 = grad_chi(18);
        double grad_chi322 = grad_chi(19);
        double grad_chi333 = grad_chi(20);
        double grad_chi323 = grad_chi(21);
        double grad_chi313 = grad_chi(22);
        double grad_chi312 = grad_chi(23);
        double grad_chi332 = grad_chi(24);
        double grad_chi331 = grad_chi(25);
        double grad_chi321 = grad_chi(26);

         //Assemble dGammadF
        tripletList.push_back(T(0,0,grad_chi111));
        tripletList.push_back(T(0,7,grad_chi311));
        tripletList.push_back(T(0,8,grad_chi211));
        tripletList.push_back(T(1,0,grad_chi122));
        tripletList.push_back(T(1,7,grad_chi322));
        tripletList.push_back(T(1,8,grad_chi222));
        tripletList.push_back(T(2,0,grad_chi133));
        tripletList.push_back(T(2,7,grad_chi333));
        tripletList.push_back(T(2,8,grad_chi233));
        tripletList.push_back(T(3,0,grad_chi123));
        tripletList.push_back(T(3,7,grad_chi323));
        tripletList.push_back(T(3,8,grad_chi223));
        tripletList.push_back(T(4,0,grad_chi113));
        tripletList.push_back(T(4,7,grad_chi313));
        tripletList.push_back(T(4,8,grad_chi213));
        tripletList.push_back(T(5,0,grad_chi112));
        tripletList.push_back(T(5,7,grad_chi312));
        tripletList.push_back(T(5,8,grad_chi212));
        tripletList.push_back(T(6,0,grad_chi132));
        tripletList.push_back(T(6,7,grad_chi332));
        tripletList.push_back(T(6,8,grad_chi232));
        tripletList.push_back(T(7,0,grad_chi131));
        tripletList.push_back(T(7,7,grad_chi331));
        tripletList.push_back(T(7,8,grad_chi231));
        tripletList.push_back(T(8,0,grad_chi121));
        tripletList.push_back(T(8,7,grad_chi321));
        tripletList.push_back(T(8,8,grad_chi221));
        tripletList.push_back(T(9,1,grad_chi211));
        tripletList.push_back(T(9,5,grad_chi111));
        tripletList.push_back(T(9,6,grad_chi311));
        tripletList.push_back(T(10,1,grad_chi222));
        tripletList.push_back(T(10,5,grad_chi122));
        tripletList.push_back(T(10,6,grad_chi322));
        tripletList.push_back(T(11,1,grad_chi233));
        tripletList.push_back(T(11,5,grad_chi133));
        tripletList.push_back(T(11,6,grad_chi333));
        tripletList.push_back(T(12,1,grad_chi223));
        tripletList.push_back(T(12,5,grad_chi123));
        tripletList.push_back(T(12,6,grad_chi323));
        tripletList.push_back(T(13,1,grad_chi213));
        tripletList.push_back(T(13,5,grad_chi113));
        tripletList.push_back(T(13,6,grad_chi313));
        tripletList.push_back(T(14,1,grad_chi212));
        tripletList.push_back(T(14,5,grad_chi112));
        tripletList.push_back(T(14,6,grad_chi312));
        tripletList.push_back(T(15,1,grad_chi232));
        tripletList.push_back(T(15,5,grad_chi132));
        tripletList.push_back(T(15,6,grad_chi332));
        tripletList.push_back(T(16,1,grad_chi231));
        tripletList.push_back(T(16,5,grad_chi131));
        tripletList.push_back(T(16,6,grad_chi331));
        tripletList.push_back(T(17,1,grad_chi221));
        tripletList.push_back(T(17,5,grad_chi121));
        tripletList.push_back(T(17,6,grad_chi321));
        tripletList.push_back(T(18,2,grad_chi311));
        tripletList.push_back(T(18,3,grad_chi211));
        tripletList.push_back(T(18,4,grad_chi111));
        tripletList.push_back(T(19,2,grad_chi322));
        tripletList.push_back(T(19,3,grad_chi222));
        tripletList.push_back(T(19,4,grad_chi122));
        tripletList.push_back(T(20,2,grad_chi333));
        tripletList.push_back(T(20,3,grad_chi233));
        tripletList.push_back(T(20,4,grad_chi133));
        tripletList.push_back(T(21,2,grad_chi323));
        tripletList.push_back(T(21,3,grad_chi223));
        tripletList.push_back(T(21,4,grad_chi123));
        tripletList.push_back(T(22,2,grad_chi313));
        tripletList.push_back(T(22,3,grad_chi213));
        tripletList.push_back(T(22,4,grad_chi113));
        tripletList.push_back(T(23,2,grad_chi312));
        tripletList.push_back(T(23,3,grad_chi212));
        tripletList.push_back(T(23,4,grad_chi112));
        tripletList.push_back(T(24,2,grad_chi332));
        tripletList.push_back(T(24,3,grad_chi232));
        tripletList.push_back(T(24,4,grad_chi132));
        tripletList.push_back(T(25,2,grad_chi331));
        tripletList.push_back(T(25,3,grad_chi231));
        tripletList.push_back(T(25,4,grad_chi131));
        tripletList.push_back(T(26,2,grad_chi321));
        tripletList.push_back(T(26,3,grad_chi221));
        tripletList.push_back(T(26,4,grad_chi121));
        
        dGammadF.setFromTriplets(tripletList.begin(), tripletList.end());
        return;
    }
    
    void compute_dPsidchi(const Matrix_3x3 &F, SpMat &dPsidchi){
        /*!==========================
        |    compute_dPsidchi    |
        ==========================
        
        Compute the derivative of Psi with respect to chi.
        
        */
        
        //Initialize the tripletList
        std::vector<T> tripletList;
        tripletList.reserve(27);

        //Extract F
        double F11 = F(0,0);
        double F12 = F(0,1);
        double F13 = F(0,2);
        double F21 = F(1,0);
        double F22 = F(1,1);
        double F23 = F(1,2);
        double F31 = F(2,0);
        double F32 = F(2,1);
        double F33 = F(2,2);

        //Assemble dPsidchi
        tripletList.push_back(T(0,0,F11));
        tripletList.push_back(T(0,7,F31));
        tripletList.push_back(T(0,8,F21));
        tripletList.push_back(T(1,1,F22));
        tripletList.push_back(T(1,5,F12));
        tripletList.push_back(T(1,6,F32));
        tripletList.push_back(T(2,2,F33));
        tripletList.push_back(T(2,3,F23));
        tripletList.push_back(T(2,4,F13));
        tripletList.push_back(T(3,2,F32));
        tripletList.push_back(T(3,3,F22));
        tripletList.push_back(T(3,4,F12));
        tripletList.push_back(T(4,2,F31));
        tripletList.push_back(T(4,3,F21));
        tripletList.push_back(T(4,4,F11));
        tripletList.push_back(T(5,1,F21));
        tripletList.push_back(T(5,5,F11));
        tripletList.push_back(T(5,6,F31));
        tripletList.push_back(T(6,1,F23));
        tripletList.push_back(T(6,5,F13));
        tripletList.push_back(T(6,6,F33));
        tripletList.push_back(T(7,0,F13));
        tripletList.push_back(T(7,7,F33));
        tripletList.push_back(T(7,8,F23));
        tripletList.push_back(T(8,0,F12));
        tripletList.push_back(T(8,7,F32));
        tripletList.push_back(T(8,8,F22));
        
        dPsidchi.setFromTriplets(tripletList.begin(), tripletList.end());
        return;
    }
    
    void compute_dGammadgrad_chi(const Matrix_3x3 &F, SpMat &dGammadgrad_chi){
        /*!=================================
        |    compute_dGammadgrad_chi    |
        =================================
        
        Computes the gradient of gamma w.r.t. the gradient 
        of chi.
        
        NOTE: The gradient of chi is assumed to be in the reference
              configuration. This means Gamma is defined as
              
              Gamma_IJK = F_iI chi_iJ,K
        */
        
        //Initialize the tripletList
        std::vector<T> tripletList;
        tripletList.reserve(81);

        //Extract F
        double F11 = F(0,0);
        double F12 = F(0,1);
        double F13 = F(0,2);
        double F21 = F(1,0);
        double F22 = F(1,1);
        double F23 = F(1,2);
        double F31 = F(2,0);
        double F32 = F(2,1);
        double F33 = F(2,2);

        //Assemble dGammadgrad_chi
        tripletList.push_back(T(0,0,F11));
        tripletList.push_back(T(0,9,F21));
        tripletList.push_back(T(0,18,F31));
        tripletList.push_back(T(1,1,F11));
        tripletList.push_back(T(1,10,F21));
        tripletList.push_back(T(1,19,F31));
        tripletList.push_back(T(2,2,F11));
        tripletList.push_back(T(2,11,F21));
        tripletList.push_back(T(2,20,F31));
        tripletList.push_back(T(3,3,F11));
        tripletList.push_back(T(3,12,F21));
        tripletList.push_back(T(3,21,F31));
        tripletList.push_back(T(4,4,F11));
        tripletList.push_back(T(4,13,F21));
        tripletList.push_back(T(4,22,F31));
        tripletList.push_back(T(5,5,F11));
        tripletList.push_back(T(5,14,F21));
        tripletList.push_back(T(5,23,F31));
        tripletList.push_back(T(6,6,F11));
        tripletList.push_back(T(6,15,F21));
        tripletList.push_back(T(6,24,F31));
        tripletList.push_back(T(7,7,F11));
        tripletList.push_back(T(7,16,F21));
        tripletList.push_back(T(7,25,F31));
        tripletList.push_back(T(8,8,F11));
        tripletList.push_back(T(8,17,F21));
        tripletList.push_back(T(8,26,F31));
        tripletList.push_back(T(9,0,F12));
        tripletList.push_back(T(9,9,F22));
        tripletList.push_back(T(9,18,F32));
        tripletList.push_back(T(10,1,F12));
        tripletList.push_back(T(10,10,F22));
        tripletList.push_back(T(10,19,F32));
        tripletList.push_back(T(11,2,F12));
        tripletList.push_back(T(11,11,F22));
        tripletList.push_back(T(11,20,F32));
        tripletList.push_back(T(12,3,F12));
        tripletList.push_back(T(12,12,F22));
        tripletList.push_back(T(12,21,F32));
        tripletList.push_back(T(13,4,F12));
        tripletList.push_back(T(13,13,F22));
        tripletList.push_back(T(13,22,F32));
        tripletList.push_back(T(14,5,F12));
        tripletList.push_back(T(14,14,F22));
        tripletList.push_back(T(14,23,F32));
        tripletList.push_back(T(15,6,F12));
        tripletList.push_back(T(15,15,F22));
        tripletList.push_back(T(15,24,F32));
        tripletList.push_back(T(16,7,F12));
        tripletList.push_back(T(16,16,F22));
        tripletList.push_back(T(16,25,F32));
        tripletList.push_back(T(17,8,F12));
        tripletList.push_back(T(17,17,F22));
        tripletList.push_back(T(17,26,F32));
        tripletList.push_back(T(18,0,F13));
        tripletList.push_back(T(18,9,F23));
        tripletList.push_back(T(18,18,F33));
        tripletList.push_back(T(19,1,F13));
        tripletList.push_back(T(19,10,F23));
        tripletList.push_back(T(19,19,F33));
        tripletList.push_back(T(20,2,F13));
        tripletList.push_back(T(20,11,F23));
        tripletList.push_back(T(20,20,F33));
        tripletList.push_back(T(21,3,F13));
        tripletList.push_back(T(21,12,F23));
        tripletList.push_back(T(21,21,F33));
        tripletList.push_back(T(22,4,F13));
        tripletList.push_back(T(22,13,F23));
        tripletList.push_back(T(22,22,F33));
        tripletList.push_back(T(23,5,F13));
        tripletList.push_back(T(23,14,F23));
        tripletList.push_back(T(23,23,F33));
        tripletList.push_back(T(24,6,F13));
        tripletList.push_back(T(24,15,F23));
        tripletList.push_back(T(24,24,F33));
        tripletList.push_back(T(25,7,F13));
        tripletList.push_back(T(25,16,F23));
        tripletList.push_back(T(25,25,F33));
        tripletList.push_back(T(26,8,F13));
        tripletList.push_back(T(26,17,F23));
        tripletList.push_back(T(26,26,F33));
        
        dGammadgrad_chi.setFromTriplets(tripletList.begin(), tripletList.end());
        return;
    }
    
    void compute_dAinvdA(const Matrix_3x3 &Ainv, Matrix_9x9 &dAinvdA){
        /*!=========================
        |    compute_dAinvdA    |
        =========================
        
        Compute the derivative of the inverse of a second order tensor w.r.t. the tensor.
        
        */
        
        //Extract Ainv
        double Ainv11 = Ainv(0,0);
        double Ainv12 = Ainv(0,1);
        double Ainv13 = Ainv(0,2);
        double Ainv21 = Ainv(1,0);
        double Ainv22 = Ainv(1,1);
        double Ainv23 = Ainv(1,2);
        double Ainv31 = Ainv(2,0);
        double Ainv32 = Ainv(2,1);
        double Ainv33 = Ainv(2,2);

        //Assemble dAinvdA
        dAinvdA(0,0) = -Ainv11*Ainv11;
        dAinvdA(0,1) = -Ainv12*Ainv21;
        dAinvdA(0,2) = -Ainv13*Ainv31;
        dAinvdA(0,3) = -Ainv12*Ainv31;
        dAinvdA(0,4) = -Ainv11*Ainv31;
        dAinvdA(0,5) = -Ainv11*Ainv21;
        dAinvdA(0,6) = -Ainv13*Ainv21;
        dAinvdA(0,7) = -Ainv11*Ainv13;
        dAinvdA(0,8) = -Ainv11*Ainv12;
        dAinvdA(1,0) = -Ainv12*Ainv21;
        dAinvdA(1,1) = -Ainv22*Ainv22;
        dAinvdA(1,2) = -Ainv23*Ainv32;
        dAinvdA(1,3) = -Ainv22*Ainv32;
        dAinvdA(1,4) = -Ainv21*Ainv32;
        dAinvdA(1,5) = -Ainv21*Ainv22;
        dAinvdA(1,6) = -Ainv22*Ainv23;
        dAinvdA(1,7) = -Ainv12*Ainv23;
        dAinvdA(1,8) = -Ainv12*Ainv22;
        dAinvdA(2,0) = -Ainv13*Ainv31;
        dAinvdA(2,1) = -Ainv23*Ainv32;
        dAinvdA(2,2) = -Ainv33*Ainv33;
        dAinvdA(2,3) = -Ainv32*Ainv33;
        dAinvdA(2,4) = -Ainv31*Ainv33;
        dAinvdA(2,5) = -Ainv23*Ainv31;
        dAinvdA(2,6) = -Ainv23*Ainv33;
        dAinvdA(2,7) = -Ainv13*Ainv33;
        dAinvdA(2,8) = -Ainv13*Ainv32;
        dAinvdA(3,0) = -Ainv13*Ainv21;
        dAinvdA(3,1) = -Ainv22*Ainv23;
        dAinvdA(3,2) = -Ainv23*Ainv33;
        dAinvdA(3,3) = -Ainv22*Ainv33;
        dAinvdA(3,4) = -Ainv21*Ainv33;
        dAinvdA(3,5) = -Ainv21*Ainv23;
        dAinvdA(3,6) = -Ainv23*Ainv23;
        dAinvdA(3,7) = -Ainv13*Ainv23;
        dAinvdA(3,8) = -Ainv13*Ainv22;
        dAinvdA(4,0) = -Ainv11*Ainv13;
        dAinvdA(4,1) = -Ainv12*Ainv23;
        dAinvdA(4,2) = -Ainv13*Ainv33;
        dAinvdA(4,3) = -Ainv12*Ainv33;
        dAinvdA(4,4) = -Ainv11*Ainv33;
        dAinvdA(4,5) = -Ainv11*Ainv23;
        dAinvdA(4,6) = -Ainv13*Ainv23;
        dAinvdA(4,7) = -Ainv13*Ainv13;
        dAinvdA(4,8) = -Ainv12*Ainv13;
        dAinvdA(5,0) = -Ainv11*Ainv12;
        dAinvdA(5,1) = -Ainv12*Ainv22;
        dAinvdA(5,2) = -Ainv13*Ainv32;
        dAinvdA(5,3) = -Ainv12*Ainv32;
        dAinvdA(5,4) = -Ainv11*Ainv32;
        dAinvdA(5,5) = -Ainv11*Ainv22;
        dAinvdA(5,6) = -Ainv13*Ainv22;
        dAinvdA(5,7) = -Ainv12*Ainv13;
        dAinvdA(5,8) = -Ainv12*Ainv12;
        dAinvdA(6,0) = -Ainv12*Ainv31;
        dAinvdA(6,1) = -Ainv22*Ainv32;
        dAinvdA(6,2) = -Ainv32*Ainv33;
        dAinvdA(6,3) = -Ainv32*Ainv32;
        dAinvdA(6,4) = -Ainv31*Ainv32;
        dAinvdA(6,5) = -Ainv22*Ainv31;
        dAinvdA(6,6) = -Ainv22*Ainv33;
        dAinvdA(6,7) = -Ainv12*Ainv33;
        dAinvdA(6,8) = -Ainv12*Ainv32;
        dAinvdA(7,0) = -Ainv11*Ainv31;
        dAinvdA(7,1) = -Ainv21*Ainv32;
        dAinvdA(7,2) = -Ainv31*Ainv33;
        dAinvdA(7,3) = -Ainv31*Ainv32;
        dAinvdA(7,4) = -Ainv31*Ainv31;
        dAinvdA(7,5) = -Ainv21*Ainv31;
        dAinvdA(7,6) = -Ainv21*Ainv33;
        dAinvdA(7,7) = -Ainv11*Ainv33;
        dAinvdA(7,8) = -Ainv11*Ainv32;
        dAinvdA(8,0) = -Ainv11*Ainv21;
        dAinvdA(8,1) = -Ainv21*Ainv22;
        dAinvdA(8,2) = -Ainv23*Ainv31;
        dAinvdA(8,3) = -Ainv22*Ainv31;
        dAinvdA(8,4) = -Ainv21*Ainv31;
        dAinvdA(8,5) = -Ainv21*Ainv21;
        dAinvdA(8,6) = -Ainv21*Ainv23;
        dAinvdA(8,7) = -Ainv11*Ainv23;
        dAinvdA(8,8) = -Ainv11*Ainv22;
    }
    
    void compute_dgrad_chidgrad_phi(const Matrix_3x3 &F, SpMat &dgrad_chidgrad_phi){
        /*!====================================
        |    compute_dgrad_chidgrad_phi    |
        ====================================
        
        Compute the gradient of the gradient of chi w.r.t. the gradient of phi.
        
        Note: We assume that grad_phi is a gradient of phi in the current configuration.
        
        */
        
        //Initialize the tripletList
        std::vector<T> tripletList;
        tripletList.reserve(81);

        //Extract F
        double F11 = F(0,0);
        double F12 = F(0,1);
        double F13 = F(0,2);
        double F21 = F(1,0);
        double F22 = F(1,1);
        double F23 = F(1,2);
        double F31 = F(2,0);
        double F32 = F(2,1);
        double F33 = F(2,2);

        //Assemble dgrad_chidgrad_phi
        tripletList.push_back(T(0,0,F11));
        tripletList.push_back(T(0,4,F31));
        tripletList.push_back(T(0,5,F21));
        tripletList.push_back(T(1,1,F22));
        tripletList.push_back(T(1,3,F32));
        tripletList.push_back(T(1,8,F12));
        tripletList.push_back(T(2,2,F33));
        tripletList.push_back(T(2,6,F23));
        tripletList.push_back(T(2,7,F13));
        tripletList.push_back(T(3,1,F23));
        tripletList.push_back(T(3,3,F33));
        tripletList.push_back(T(3,8,F13));
        tripletList.push_back(T(4,0,F13));
        tripletList.push_back(T(4,4,F33));
        tripletList.push_back(T(4,5,F23));
        tripletList.push_back(T(5,0,F12));
        tripletList.push_back(T(5,4,F32));
        tripletList.push_back(T(5,5,F22));
        tripletList.push_back(T(6,2,F32));
        tripletList.push_back(T(6,6,F22));
        tripletList.push_back(T(6,7,F12));
        tripletList.push_back(T(7,2,F31));
        tripletList.push_back(T(7,6,F21));
        tripletList.push_back(T(7,7,F11));
        tripletList.push_back(T(8,1,F21));
        tripletList.push_back(T(8,3,F31));
        tripletList.push_back(T(8,8,F11));
        tripletList.push_back(T(9,9,F11));
        tripletList.push_back(T(9,13,F31));
        tripletList.push_back(T(9,14,F21));
        tripletList.push_back(T(10,10,F22));
        tripletList.push_back(T(10,12,F32));
        tripletList.push_back(T(10,17,F12));
        tripletList.push_back(T(11,11,F33));
        tripletList.push_back(T(11,15,F23));
        tripletList.push_back(T(11,16,F13));
        tripletList.push_back(T(12,10,F23));
        tripletList.push_back(T(12,12,F33));
        tripletList.push_back(T(12,17,F13));
        tripletList.push_back(T(13,9,F13));
        tripletList.push_back(T(13,13,F33));
        tripletList.push_back(T(13,14,F23));
        tripletList.push_back(T(14,9,F12));
        tripletList.push_back(T(14,13,F32));
        tripletList.push_back(T(14,14,F22));
        tripletList.push_back(T(15,11,F32));
        tripletList.push_back(T(15,15,F22));
        tripletList.push_back(T(15,16,F12));
        tripletList.push_back(T(16,11,F31));
        tripletList.push_back(T(16,15,F21));
        tripletList.push_back(T(16,16,F11));
        tripletList.push_back(T(17,10,F21));
        tripletList.push_back(T(17,12,F31));
        tripletList.push_back(T(17,17,F11));
        tripletList.push_back(T(18,18,F11));
        tripletList.push_back(T(18,22,F31));
        tripletList.push_back(T(18,23,F21));
        tripletList.push_back(T(19,19,F22));
        tripletList.push_back(T(19,21,F32));
        tripletList.push_back(T(19,26,F12));
        tripletList.push_back(T(20,20,F33));
        tripletList.push_back(T(20,24,F23));
        tripletList.push_back(T(20,25,F13));
        tripletList.push_back(T(21,19,F23));
        tripletList.push_back(T(21,21,F33));
        tripletList.push_back(T(21,26,F13));
        tripletList.push_back(T(22,18,F13));
        tripletList.push_back(T(22,22,F33));
        tripletList.push_back(T(22,23,F23));
        tripletList.push_back(T(23,18,F12));
        tripletList.push_back(T(23,22,F32));
        tripletList.push_back(T(23,23,F22));
        tripletList.push_back(T(24,20,F32));
        tripletList.push_back(T(24,24,F22));
        tripletList.push_back(T(24,25,F12));
        tripletList.push_back(T(25,20,F31));
        tripletList.push_back(T(25,24,F21));
        tripletList.push_back(T(25,25,F11));
        tripletList.push_back(T(26,19,F21));
        tripletList.push_back(T(26,21,F31));
        tripletList.push_back(T(26,26,F11));
        
        dgrad_chidgrad_phi.setFromTriplets(tripletList.begin(), tripletList.end());
        return;
    }
    
    void compute_dgrad_chidF(const Vector_27 &grad_phi, SpMat &dgrad_chidF){
        /*!=============================
        |    compute_dgrad_chidF    |
        =============================
        
        Compute the gradient of grad_chi w.r.t. the deformation gradient.
        
        Note: We assume that grad_phi is a gradient of phi in the current configuration
        
        */
        //Initialize the tripletList
        std::vector<T> tripletList;
        tripletList.reserve(81);

        //Extract grad_phi
        double grad_phi111 = grad_phi(0);
        double grad_phi122 = grad_phi(1);
        double grad_phi133 = grad_phi(2);
        double grad_phi123 = grad_phi(3);
        double grad_phi113 = grad_phi(4);
        double grad_phi112 = grad_phi(5);
        double grad_phi132 = grad_phi(6);
        double grad_phi131 = grad_phi(7);
        double grad_phi121 = grad_phi(8);
        double grad_phi211 = grad_phi(9);
        double grad_phi222 = grad_phi(10);
        double grad_phi233 = grad_phi(11);
        double grad_phi223 = grad_phi(12);
        double grad_phi213 = grad_phi(13);
        double grad_phi212 = grad_phi(14);
        double grad_phi232 = grad_phi(15);
        double grad_phi231 = grad_phi(16);
        double grad_phi221 = grad_phi(17);
        double grad_phi311 = grad_phi(18);
        double grad_phi322 = grad_phi(19);
        double grad_phi333 = grad_phi(20);
        double grad_phi323 = grad_phi(21);
        double grad_phi313 = grad_phi(22);
        double grad_phi312 = grad_phi(23);
        double grad_phi332 = grad_phi(24);
        double grad_phi331 = grad_phi(25);
        double grad_phi321 = grad_phi(26);

        //Assemble dgrad_chidgrad_phi
        tripletList.push_back(T(0,0,grad_phi111));
        tripletList.push_back(T(0,7,grad_phi113));
        tripletList.push_back(T(0,8,grad_phi112));
        tripletList.push_back(T(1,1,grad_phi122));
        tripletList.push_back(T(1,5,grad_phi121));
        tripletList.push_back(T(1,6,grad_phi123));
        tripletList.push_back(T(2,2,grad_phi133));
        tripletList.push_back(T(2,3,grad_phi132));
        tripletList.push_back(T(2,4,grad_phi131));
        tripletList.push_back(T(3,2,grad_phi123));
        tripletList.push_back(T(3,3,grad_phi122));
        tripletList.push_back(T(3,4,grad_phi121));
        tripletList.push_back(T(4,2,grad_phi113));
        tripletList.push_back(T(4,3,grad_phi112));
        tripletList.push_back(T(4,4,grad_phi111));
        tripletList.push_back(T(5,1,grad_phi112));
        tripletList.push_back(T(5,5,grad_phi111));
        tripletList.push_back(T(5,6,grad_phi113));
        tripletList.push_back(T(6,1,grad_phi132));
        tripletList.push_back(T(6,5,grad_phi131));
        tripletList.push_back(T(6,6,grad_phi133));
        tripletList.push_back(T(7,0,grad_phi131));
        tripletList.push_back(T(7,7,grad_phi133));
        tripletList.push_back(T(7,8,grad_phi132));
        tripletList.push_back(T(8,0,grad_phi121));
        tripletList.push_back(T(8,7,grad_phi123));
        tripletList.push_back(T(8,8,grad_phi122));
        tripletList.push_back(T(9,0,grad_phi211));
        tripletList.push_back(T(9,7,grad_phi213));
        tripletList.push_back(T(9,8,grad_phi212));
        tripletList.push_back(T(10,1,grad_phi222));
        tripletList.push_back(T(10,5,grad_phi221));
        tripletList.push_back(T(10,6,grad_phi223));
        tripletList.push_back(T(11,2,grad_phi233));
        tripletList.push_back(T(11,3,grad_phi232));
        tripletList.push_back(T(11,4,grad_phi231));
        tripletList.push_back(T(12,2,grad_phi223));
        tripletList.push_back(T(12,3,grad_phi222));
        tripletList.push_back(T(12,4,grad_phi221));
        tripletList.push_back(T(13,2,grad_phi213));
        tripletList.push_back(T(13,3,grad_phi212));
        tripletList.push_back(T(13,4,grad_phi211));
        tripletList.push_back(T(14,1,grad_phi212));
        tripletList.push_back(T(14,5,grad_phi211));
        tripletList.push_back(T(14,6,grad_phi213));
        tripletList.push_back(T(15,1,grad_phi232));
        tripletList.push_back(T(15,5,grad_phi231));
        tripletList.push_back(T(15,6,grad_phi233));
        tripletList.push_back(T(16,0,grad_phi231));
        tripletList.push_back(T(16,7,grad_phi233));
        tripletList.push_back(T(16,8,grad_phi232));
        tripletList.push_back(T(17,0,grad_phi221));
        tripletList.push_back(T(17,7,grad_phi223));
        tripletList.push_back(T(17,8,grad_phi222));
        tripletList.push_back(T(18,0,grad_phi311));
        tripletList.push_back(T(18,7,grad_phi313));
        tripletList.push_back(T(18,8,grad_phi312));
        tripletList.push_back(T(19,1,grad_phi322));
        tripletList.push_back(T(19,5,grad_phi321));
        tripletList.push_back(T(19,6,grad_phi323));
        tripletList.push_back(T(20,2,grad_phi333));
        tripletList.push_back(T(20,3,grad_phi332));
        tripletList.push_back(T(20,4,grad_phi331));
        tripletList.push_back(T(21,2,grad_phi323));
        tripletList.push_back(T(21,3,grad_phi322));
        tripletList.push_back(T(21,4,grad_phi321));
        tripletList.push_back(T(22,2,grad_phi313));
        tripletList.push_back(T(22,3,grad_phi312));
        tripletList.push_back(T(22,4,grad_phi311));
        tripletList.push_back(T(23,1,grad_phi312));
        tripletList.push_back(T(23,5,grad_phi311));
        tripletList.push_back(T(23,6,grad_phi313));
        tripletList.push_back(T(24,1,grad_phi332));
        tripletList.push_back(T(24,5,grad_phi331));
        tripletList.push_back(T(24,6,grad_phi333));
        tripletList.push_back(T(25,0,grad_phi331));
        tripletList.push_back(T(25,7,grad_phi333));
        tripletList.push_back(T(25,8,grad_phi332));
        tripletList.push_back(T(26,0,grad_phi321));
        tripletList.push_back(T(26,7,grad_phi323));
        tripletList.push_back(T(26,8,grad_phi322));
        
        dgrad_chidF.setFromTriplets(tripletList.begin(), tripletList.end());
        return;
    }
    
    void compute_ddetAdA(const Matrix_3x3 &A, Matrix_3x3 &ddetAdA){
        /*!======================
        |    compute_dJdF    |
        ======================
        
        Compute the derivative of the determinant of the second order tensor A 
        w.r.t. A.
        
        */
        
        double detA = A.determinant();
        
        Matrix_3x3 Ainv = A.inverse();
        
        ddetAdA = detA*Ainv.transpose();
        
        return;
    }
    
    void map_stresses_to_current_configuration(const Matrix_3x3 &F, const Matrix_3x3 &chi,
                                               const Vector_9 &PK2, const Vector_9 &SIGMA, const Vector_27 &M,
                                               Vector_9 &cauchy, Vector_9 &s, Vector_27 &m){
        /*!===============================================
        |    map_stresses_to_current_configuration    |
        ===============================================

        Map the stresses to the current configuration.

        */

        //Compute the jacobian of deformation
        double Jac = F.determinant();

        //Map the PK2 stress to the cauchy stress
        Matrix_3x3 PK2_mat;
        undo_voigt_3x3_tensor(PK2,PK2_mat);
        voigt_3x3_tensor(F*PK2_mat*F.transpose()/Jac,cauchy);

        //Map the symmetric stress to the current configuration
        Matrix_3x3 SIGMA_mat;
        undo_voigt_3x3_tensor(SIGMA,SIGMA_mat);
        voigt_3x3_tensor(F*SIGMA_mat*F.transpose()/Jac,s);

        //Map the higher order stress to the current configuration
        Matrix_3x9 M_mat;
        undo_voigt_3x9_tensor(M,M_mat);
        voigt_3x9_tensor(F*M_mat,m);                 //Map the first index
        perform_left_positive_cyclic_permutation(m); //Cycle the indices
        undo_voigt_3x9_tensor(m,M_mat);
        voigt_3x9_tensor(F*M_mat,m);                 //Map the second index
        perform_left_positive_cyclic_permutation(m); //Cycle the indices
        undo_voigt_3x9_tensor(m,M_mat);
        voigt_3x9_tensor(chi*M_mat,m);               //Map the third index
        perform_left_positive_cyclic_permutation(m); //Cycle the indices
        m = m/Jac;

        return;
    }
    
    void map_jacobians_to_current_configuration(const Matrix_3x3  &F,         const Matrix_3x3  &chi,
                                                const Vector_9    &PK2_voigt, const Vector_9    &SIGMA_voigt, const Vector_27    &M_voigt,
                                                const Vector_9    &cauchy_voigt, const Vector_9 &s_voigt, const Vector_27 &m_voigt,
                                                const Matrix_9x9  &dPK2dF,    const Matrix_9x9  &dPK2dchi,    const Matrix_9x27  &dPK2dgrad_chi,
                                                const Matrix_9x9  &dSIGMAdF,  const Matrix_9x9  &dSIGMAdchi,  const Matrix_9x27  &dSIGMAdgrad_chi,
                                                const Matrix_27x9 &dMdF,      const Matrix_27x9 &dMdchi,      const Matrix_27x27 &dMdgrad_chi, 
                                                Matrix_9x9  &dcauchydF, Matrix_9x9 &dcauchydchi, Matrix_9x27  &dcauchydgrad_chi,
                                                Matrix_9x9  &dsdF,      Matrix_9x9 &dsdchi,      Matrix_9x27  &dsdgrad_chi,
                                                Matrix_27x9 &dmdF,      Matrix_27x9 &dmdchi,     Matrix_27x27 &dmdgrad_chi){
    
        /*!================================================
        |    map_jacobians_to_current_configuration    |
        ================================================
        
        Function to map jacobians computed in the reference or intermediate configuration to 
        jacobians in the current configuration with respect to the fundamental deformation measures.
        
        Note: You should always write a test function for this in your code. It *should* work but 
              it is possible the previously written test coverage will miss a problem shown by
              your application.
        
        */
        
        //Compute the jacobian of deformation
        double J = F.determinant();
        
        //Compute the derivative of the jacobian of deformation w.r.t. F
        Matrix_3x3 dJdF;
        compute_ddetAdA(F,dJdF);
        
        //Map the cauchy stress
        map_dAdF_to_dadF(cauchy_voigt, PK2_voigt, dPK2dF, J, dJdF, F, dcauchydF);
        map_dAdchi_to_dadchi(PK2_voigt, dPK2dchi, J, dJdF, F, dcauchydchi);
        
        
        //Map the symmetric stress
        map_dAdF_to_dadF(s_voigt, SIGMA_voigt, dSIGMAdF, J, F, dsdF);
        map_dAdchi_to_dadchi(SIGMA_voigt, dSIGMAdchi, J, F, dsdchi);
        
        //Map the higher order stress
        map_dAdF_to_daF(m_voigt, M_voigt, dMdF, J, F, chi, dmdF);
        map_dAdchi_to_dadchi(M_voigt, dMdchi, J, F, chi, dmdchi)
        
        
        return;
    }
    
    void map_dAdF_to_dadF(const Vector_9 &a,  const Vector_9 &A,  const Matrix_9x9 &dAdF,  const double &J, const Matrix_3x3 &dJdF, const Matrix_3x3 &F, Matrix_9x9 &dadF){
        /*!==========================
        |    map_dAdF_to_dadF    |
        ==========================
        
        Map the jacobian of a stress measure in the reference configuration with respect to the 
        deformation gradient (either the PK2 stress or the symmetric stress) to the jacobian of 
        a corresponding stress measure in the current configuration (either the cauchy stress 
        or the symmetric stress) with respect to the deformation gradient.
        
        */
        
        dadF = Matrix_9x9::Zero();
        
        //Extracting dJdF
        double dJdF11= dJdF(0,0);
        double dJdF12= dJdF(0,1);
        double dJdF13= dJdF(0,2);
        double dJdF21= dJdF(1,0);
        double dJdF22= dJdF(1,1);
        double dJdF23= dJdF(1,2);
        double dJdF31= dJdF(2,0);
        double dJdF32= dJdF(2,1);
        double dJdF33= dJdF(2,2);
        
        //Extracting a
        double a11= a(0);
        double a22= a(1);
        double a33= a(2);
        double a23= a(3);
        double a13= a(4);
        double a12= a(5);
        double a32= a(6);
        double a31= a(7);
        double a21= a(8);

        //Extracting A
        double A11= A(0);
        double A22= A(1);
        double A33= A(2);
        double A23= A(3);
        double A13= A(4);
        double A12= A(5);
        double A32= A(6);
        double A31= A(7);
        double A21= A(8);

        //Extracting dAdF
        double dAdF1111= dAdF(0,0);
        double dAdF1122= dAdF(0,1);
        double dAdF1133= dAdF(0,2);
        double dAdF1123= dAdF(0,3);
        double dAdF1113= dAdF(0,4);
        double dAdF1112= dAdF(0,5);
        double dAdF1132= dAdF(0,6);
        double dAdF1131= dAdF(0,7);
        double dAdF1121= dAdF(0,8);
        double dAdF2211= dAdF(1,0);
        double dAdF2222= dAdF(1,1);
        double dAdF2233= dAdF(1,2);
        double dAdF2223= dAdF(1,3);
        double dAdF2213= dAdF(1,4);
        double dAdF2212= dAdF(1,5);
        double dAdF2232= dAdF(1,6);
        double dAdF2231= dAdF(1,7);
        double dAdF2221= dAdF(1,8);
        double dAdF3311= dAdF(2,0);
        double dAdF3322= dAdF(2,1);
        double dAdF3333= dAdF(2,2);
        double dAdF3323= dAdF(2,3);
        double dAdF3313= dAdF(2,4);
        double dAdF3312= dAdF(2,5);
        double dAdF3332= dAdF(2,6);
        double dAdF3331= dAdF(2,7);
        double dAdF3321= dAdF(2,8);
        double dAdF2311= dAdF(3,0);
        double dAdF2322= dAdF(3,1);
        double dAdF2333= dAdF(3,2);
        double dAdF2323= dAdF(3,3);
        double dAdF2313= dAdF(3,4);
        double dAdF2312= dAdF(3,5);
        double dAdF2332= dAdF(3,6);
        double dAdF2331= dAdF(3,7);
        double dAdF2321= dAdF(3,8);
        double dAdF1311= dAdF(4,0);
        double dAdF1322= dAdF(4,1);
        double dAdF1333= dAdF(4,2);
        double dAdF1323= dAdF(4,3);
        double dAdF1313= dAdF(4,4);
        double dAdF1312= dAdF(4,5);
        double dAdF1332= dAdF(4,6);
        double dAdF1331= dAdF(4,7);
        double dAdF1321= dAdF(4,8);
        double dAdF1211= dAdF(5,0);
        double dAdF1222= dAdF(5,1);
        double dAdF1233= dAdF(5,2);
        double dAdF1223= dAdF(5,3);
        double dAdF1213= dAdF(5,4);
        double dAdF1212= dAdF(5,5);
        double dAdF1232= dAdF(5,6);
        double dAdF1231= dAdF(5,7);
        double dAdF1221= dAdF(5,8);
        double dAdF3211= dAdF(6,0);
        double dAdF3222= dAdF(6,1);
        double dAdF3233= dAdF(6,2);
        double dAdF3223= dAdF(6,3);
        double dAdF3213= dAdF(6,4);
        double dAdF3212= dAdF(6,5);
        double dAdF3232= dAdF(6,6);
        double dAdF3231= dAdF(6,7);
        double dAdF3221= dAdF(6,8);
        double dAdF3111= dAdF(7,0);
        double dAdF3122= dAdF(7,1);
        double dAdF3133= dAdF(7,2);
        double dAdF3123= dAdF(7,3);
        double dAdF3113= dAdF(7,4);
        double dAdF3112= dAdF(7,5);
        double dAdF3132= dAdF(7,6);
        double dAdF3131= dAdF(7,7);
        double dAdF3121= dAdF(7,8);
        double dAdF2111= dAdF(8,0);
        double dAdF2122= dAdF(8,1);
        double dAdF2133= dAdF(8,2);
        double dAdF2123= dAdF(8,3);
        double dAdF2113= dAdF(8,4);
        double dAdF2112= dAdF(8,5);
        double dAdF2132= dAdF(8,6);
        double dAdF2131= dAdF(8,7);
        double dAdF2121= dAdF(8,8);

        //Extracting F
        double F11= F(0,0);
        double F12= F(0,1);
        double F13= F(0,2);
        double F21= F(1,0);
        double F22= F(1,1);
        double F23= F(1,2);
        double F31= F(2,0);
        double F32= F(2,1);
        double F33= F(2,2);

        dadF(0,0) = 2*A11*F11 + A12*F12 + A13*F13 + A21*F12 + A31*F13 + F11*F11*dAdF1111 + F11*F12*dAdF1211 + F11*F12*dAdF2111 + F11*F13*dAdF1311 + F11*F13*dAdF3111 + F12*F12*dAdF2211 + F12*F13*dAdF2311 + F12*F13*dAdF3211 + F13*F13*dAdF3311 - J*a11*dJdF11;
        dadF(0,1) = F11*F11*dAdF1122 + F11*F12*dAdF1222 + F11*F12*dAdF2122 + F11*F13*dAdF1322 + F11*F13*dAdF3122 + F12*F12*dAdF2222 + F12*F13*dAdF2322 + F12*F13*dAdF3222 + F13*F13*dAdF3322 - J*a11*dJdF22;
        dadF(0,2) = F11*F11*dAdF1133 + F11*F12*dAdF1233 + F11*F12*dAdF2133 + F11*F13*dAdF1333 + F11*F13*dAdF3133 + F12*F12*dAdF2233 + F12*F13*dAdF2333 + F12*F13*dAdF3233 + F13*F13*dAdF3333 - J*a11*dJdF33;
        dadF(0,3) = F11*F11*dAdF1123 + F11*F12*dAdF1223 + F11*F12*dAdF2123 + F11*F13*dAdF1323 + F11*F13*dAdF3123 + F12*F12*dAdF2223 + F12*F13*dAdF2323 + F12*F13*dAdF3223 + F13*F13*dAdF3323 - J*a11*dJdF23;
        dadF(0,4) = A13*F11 + A23*F12 + A31*F11 + A32*F12 + 2*A33*F13 + F11*F11*dAdF1113 + F11*F12*dAdF1213 + F11*F12*dAdF2113 + F11*F13*dAdF1313 + F11*F13*dAdF3113 + F12*F12*dAdF2213 + F12*F13*dAdF2313 + F12*F13*dAdF3213 + F13*F13*dAdF3313 - J*a11*dJdF13;
        dadF(0,5) = A12*F11 + A21*F11 + 2*A22*F12 + A23*F13 + A32*F13 + F11*F11*dAdF1112 + F11*F12*dAdF1212 + F11*F12*dAdF2112 + F11*F13*dAdF1312 + F11*F13*dAdF3112 + F12*F12*dAdF2212 + F12*F13*dAdF2312 + F12*F13*dAdF3212 + F13*F13*dAdF3312 - J*a11*dJdF12;
        dadF(0,6) = F11*F11*dAdF1132 + F11*F12*dAdF1232 + F11*F12*dAdF2132 + F11*F13*dAdF1332 + F11*F13*dAdF3132 + F12*F12*dAdF2232 + F12*F13*dAdF2332 + F12*F13*dAdF3232 + F13*F13*dAdF3332 - J*a11*dJdF32;
        dadF(0,7) = F11*F11*dAdF1131 + F11*F12*dAdF1231 + F11*F12*dAdF2131 + F11*F13*dAdF1331 + F11*F13*dAdF3131 + F12*F12*dAdF2231 + F12*F13*dAdF2331 + F12*F13*dAdF3231 + F13*F13*dAdF3331 - J*a11*dJdF31;
        dadF(0,8) = F11*F11*dAdF1121 + F11*F12*dAdF1221 + F11*F12*dAdF2121 + F11*F13*dAdF1321 + F11*F13*dAdF3121 + F12*F12*dAdF2221 + F12*F13*dAdF2321 + F12*F13*dAdF3221 + F13*F13*dAdF3321 - J*a11*dJdF21;
        dadF(1,0) = F21*F21*dAdF1111 + F21*F22*dAdF1211 + F21*F22*dAdF2111 + F21*F23*dAdF1311 + F21*F23*dAdF3111 + F22*F22*dAdF2211 + F22*F23*dAdF2311 + F22*F23*dAdF3211 + F23*F23*dAdF3311 - J*a22*dJdF11;
        dadF(1,1) = A12*F21 + A21*F21 + 2*A22*F22 + A23*F23 + A32*F23 + F21*F21*dAdF1122 + F21*F22*dAdF1222 + F21*F22*dAdF2122 + F21*F23*dAdF1322 + F21*F23*dAdF3122 + F22*F22*dAdF2222 + F22*F23*dAdF2322 + F22*F23*dAdF3222 + F23*F23*dAdF3322 - J*a22*dJdF22;
        dadF(1,2) = F21*F21*dAdF1133 + F21*F22*dAdF1233 + F21*F22*dAdF2133 + F21*F23*dAdF1333 + F21*F23*dAdF3133 + F22*F22*dAdF2233 + F22*F23*dAdF2333 + F22*F23*dAdF3233 + F23*F23*dAdF3333 - J*a22*dJdF33;
        dadF(1,3) = A13*F21 + A23*F22 + A31*F21 + A32*F22 + 2*A33*F23 + F21*F21*dAdF1123 + F21*F22*dAdF1223 + F21*F22*dAdF2123 + F21*F23*dAdF1323 + F21*F23*dAdF3123 + F22*F22*dAdF2223 + F22*F23*dAdF2323 + F22*F23*dAdF3223 + F23*F23*dAdF3323 - J*a22*dJdF23;
        dadF(1,4) = F21*F21*dAdF1113 + F21*F22*dAdF1213 + F21*F22*dAdF2113 + F21*F23*dAdF1313 + F21*F23*dAdF3113 + F22*F22*dAdF2213 + F22*F23*dAdF2313 + F22*F23*dAdF3213 + F23*F23*dAdF3313 - J*a22*dJdF13;
        dadF(1,5) = F21*F21*dAdF1112 + F21*F22*dAdF1212 + F21*F22*dAdF2112 + F21*F23*dAdF1312 + F21*F23*dAdF3112 + F22*F22*dAdF2212 + F22*F23*dAdF2312 + F22*F23*dAdF3212 + F23*F23*dAdF3312 - J*a22*dJdF12;
        dadF(1,6) = F21*F21*dAdF1132 + F21*F22*dAdF1232 + F21*F22*dAdF2132 + F21*F23*dAdF1332 + F21*F23*dAdF3132 + F22*F22*dAdF2232 + F22*F23*dAdF2332 + F22*F23*dAdF3232 + F23*F23*dAdF3332 - J*a22*dJdF32;
        dadF(1,7) = F21*F21*dAdF1131 + F21*F22*dAdF1231 + F21*F22*dAdF2131 + F21*F23*dAdF1331 + F21*F23*dAdF3131 + F22*F22*dAdF2231 + F22*F23*dAdF2331 + F22*F23*dAdF3231 + F23*F23*dAdF3331 - J*a22*dJdF31;
        dadF(1,8) = 2*A11*F21 + A12*F22 + A13*F23 + A21*F22 + A31*F23 + F21*F21*dAdF1121 + F21*F22*dAdF1221 + F21*F22*dAdF2121 + F21*F23*dAdF1321 + F21*F23*dAdF3121 + F22*F22*dAdF2221 + F22*F23*dAdF2321 + F22*F23*dAdF3221 + F23*F23*dAdF3321 - J*a22*dJdF21;
        dadF(2,0) = F31*F31*dAdF1111 + F31*F32*dAdF1211 + F31*F32*dAdF2111 + F31*F33*dAdF1311 + F31*F33*dAdF3111 + F32*F32*dAdF2211 + F32*F33*dAdF2311 + F32*F33*dAdF3211 + F33*F33*dAdF3311 - J*a33*dJdF11;
        dadF(2,1) = F31*F31*dAdF1122 + F31*F32*dAdF1222 + F31*F32*dAdF2122 + F31*F33*dAdF1322 + F31*F33*dAdF3122 + F32*F32*dAdF2222 + F32*F33*dAdF2322 + F32*F33*dAdF3222 + F33*F33*dAdF3322 - J*a33*dJdF22;
        dadF(2,2) = A13*F31 + A23*F32 + A31*F31 + A32*F32 + 2*A33*F33 + F31*F31*dAdF1133 + F31*F32*dAdF1233 + F31*F32*dAdF2133 + F31*F33*dAdF1333 + F31*F33*dAdF3133 + F32*F32*dAdF2233 + F32*F33*dAdF2333 + F32*F33*dAdF3233 + F33*F33*dAdF3333 - J*a33*dJdF33;
        dadF(2,3) = F31*F31*dAdF1123 + F31*F32*dAdF1223 + F31*F32*dAdF2123 + F31*F33*dAdF1323 + F31*F33*dAdF3123 + F32*F32*dAdF2223 + F32*F33*dAdF2323 + F32*F33*dAdF3223 + F33*F33*dAdF3323 - J*a33*dJdF23;
        dadF(2,4) = F31*F31*dAdF1113 + F31*F32*dAdF1213 + F31*F32*dAdF2113 + F31*F33*dAdF1313 + F31*F33*dAdF3113 + F32*F32*dAdF2213 + F32*F33*dAdF2313 + F32*F33*dAdF3213 + F33*F33*dAdF3313 - J*a33*dJdF13;
        dadF(2,5) = F31*F31*dAdF1112 + F31*F32*dAdF1212 + F31*F32*dAdF2112 + F31*F33*dAdF1312 + F31*F33*dAdF3112 + F32*F32*dAdF2212 + F32*F33*dAdF2312 + F32*F33*dAdF3212 + F33*F33*dAdF3312 - J*a33*dJdF12;
        dadF(2,6) = A12*F31 + A21*F31 + 2*A22*F32 + A23*F33 + A32*F33 + F31*F31*dAdF1132 + F31*F32*dAdF1232 + F31*F32*dAdF2132 + F31*F33*dAdF1332 + F31*F33*dAdF3132 + F32*F32*dAdF2232 + F32*F33*dAdF2332 + F32*F33*dAdF3232 + F33*F33*dAdF3332 - J*a33*dJdF32;
        dadF(2,7) = 2*A11*F31 + A12*F32 + A13*F33 + A21*F32 + A31*F33 + F31*F31*dAdF1131 + F31*F32*dAdF1231 + F31*F32*dAdF2131 + F31*F33*dAdF1331 + F31*F33*dAdF3131 + F32*F32*dAdF2231 + F32*F33*dAdF2331 + F32*F33*dAdF3231 + F33*F33*dAdF3331 - J*a33*dJdF31;
        dadF(2,8) = F31*F31*dAdF1121 + F31*F32*dAdF1221 + F31*F32*dAdF2121 + F31*F33*dAdF1321 + F31*F33*dAdF3121 + F32*F32*dAdF2221 + F32*F33*dAdF2321 + F32*F33*dAdF3221 + F33*F33*dAdF3321 - J*a33*dJdF21;
        dadF(3,0) = F21*F31*dAdF1111 + F21*F32*dAdF1211 + F21*F33*dAdF1311 + F22*F31*dAdF2111 + F22*F32*dAdF2211 + F22*F33*dAdF2311 + F23*F31*dAdF3111 + F23*F32*dAdF3211 + F23*F33*dAdF3311 - J*a23*dJdF11;
        dadF(3,1) = A21*F31 + A22*F32 + A23*F33 + F21*F31*dAdF1122 + F21*F32*dAdF1222 + F21*F33*dAdF1322 + F22*F31*dAdF2122 + F22*F32*dAdF2222 + F22*F33*dAdF2322 + F23*F31*dAdF3122 + F23*F32*dAdF3222 + F23*F33*dAdF3322 - J*a23*dJdF22;
        dadF(3,2) = A13*F21 + A23*F22 + A33*F23 + F21*F31*dAdF1133 + F21*F32*dAdF1233 + F21*F33*dAdF1333 + F22*F31*dAdF2133 + F22*F32*dAdF2233 + F22*F33*dAdF2333 + F23*F31*dAdF3133 + F23*F32*dAdF3233 + F23*F33*dAdF3333 - J*a23*dJdF33;
        dadF(3,3) = A31*F31 + A32*F32 + A33*F33 + F21*F31*dAdF1123 + F21*F32*dAdF1223 + F21*F33*dAdF1323 + F22*F31*dAdF2123 + F22*F32*dAdF2223 + F22*F33*dAdF2323 + F23*F31*dAdF3123 + F23*F32*dAdF3223 + F23*F33*dAdF3323 - J*a23*dJdF23;
        dadF(3,4) = F21*F31*dAdF1113 + F21*F32*dAdF1213 + F21*F33*dAdF1313 + F22*F31*dAdF2113 + F22*F32*dAdF2213 + F22*F33*dAdF2313 + F23*F31*dAdF3113 + F23*F32*dAdF3213 + F23*F33*dAdF3313 - J*a23*dJdF13;
        dadF(3,5) = F21*F31*dAdF1112 + F21*F32*dAdF1212 + F21*F33*dAdF1312 + F22*F31*dAdF2112 + F22*F32*dAdF2212 + F22*F33*dAdF2312 + F23*F31*dAdF3112 + F23*F32*dAdF3212 + F23*F33*dAdF3312 - J*a23*dJdF12;
        dadF(3,6) = A12*F21 + A22*F22 + A32*F23 + F21*F31*dAdF1132 + F21*F32*dAdF1232 + F21*F33*dAdF1332 + F22*F31*dAdF2132 + F22*F32*dAdF2232 + F22*F33*dAdF2332 + F23*F31*dAdF3132 + F23*F32*dAdF3232 + F23*F33*dAdF3332 - J*a23*dJdF32;
        dadF(3,7) = A11*F21 + A21*F22 + A31*F23 + F21*F31*dAdF1131 + F21*F32*dAdF1231 + F21*F33*dAdF1331 + F22*F31*dAdF2131 + F22*F32*dAdF2231 + F22*F33*dAdF2331 + F23*F31*dAdF3131 + F23*F32*dAdF3231 + F23*F33*dAdF3331 - J*a23*dJdF31;
        dadF(3,8) = A11*F31 + A12*F32 + A13*F33 + F21*F31*dAdF1121 + F21*F32*dAdF1221 + F21*F33*dAdF1321 + F22*F31*dAdF2121 + F22*F32*dAdF2221 + F22*F33*dAdF2321 + F23*F31*dAdF3121 + F23*F32*dAdF3221 + F23*F33*dAdF3321 - J*a23*dJdF21;
        dadF(4,0) = A11*F31 + A12*F32 + A13*F33 + F11*F31*dAdF1111 + F11*F32*dAdF1211 + F11*F33*dAdF1311 + F12*F31*dAdF2111 + F12*F32*dAdF2211 + F12*F33*dAdF2311 + F13*F31*dAdF3111 + F13*F32*dAdF3211 + F13*F33*dAdF3311 - J*a13*dJdF11;
        dadF(4,1) = F11*F31*dAdF1122 + F11*F32*dAdF1222 + F11*F33*dAdF1322 + F12*F31*dAdF2122 + F12*F32*dAdF2222 + F12*F33*dAdF2322 + F13*F31*dAdF3122 + F13*F32*dAdF3222 + F13*F33*dAdF3322 - J*a13*dJdF22;
        dadF(4,2) = A13*F11 + A23*F12 + A33*F13 + F11*F31*dAdF1133 + F11*F32*dAdF1233 + F11*F33*dAdF1333 + F12*F31*dAdF2133 + F12*F32*dAdF2233 + F12*F33*dAdF2333 + F13*F31*dAdF3133 + F13*F32*dAdF3233 + F13*F33*dAdF3333 - J*a13*dJdF33;
        dadF(4,3) = F11*F31*dAdF1123 + F11*F32*dAdF1223 + F11*F33*dAdF1323 + F12*F31*dAdF2123 + F12*F32*dAdF2223 + F12*F33*dAdF2323 + F13*F31*dAdF3123 + F13*F32*dAdF3223 + F13*F33*dAdF3323 - J*a13*dJdF23;
        dadF(4,4) = A31*F31 + A32*F32 + A33*F33 + F11*F31*dAdF1113 + F11*F32*dAdF1213 + F11*F33*dAdF1313 + F12*F31*dAdF2113 + F12*F32*dAdF2213 + F12*F33*dAdF2313 + F13*F31*dAdF3113 + F13*F32*dAdF3213 + F13*F33*dAdF3313 - J*a13*dJdF13;
        dadF(4,5) = A21*F31 + A22*F32 + A23*F33 + F11*F31*dAdF1112 + F11*F32*dAdF1212 + F11*F33*dAdF1312 + F12*F31*dAdF2112 + F12*F32*dAdF2212 + F12*F33*dAdF2312 + F13*F31*dAdF3112 + F13*F32*dAdF3212 + F13*F33*dAdF3312 - J*a13*dJdF12;
        dadF(4,6) = A12*F11 + A22*F12 + A32*F13 + F11*F31*dAdF1132 + F11*F32*dAdF1232 + F11*F33*dAdF1332 + F12*F31*dAdF2132 + F12*F32*dAdF2232 + F12*F33*dAdF2332 + F13*F31*dAdF3132 + F13*F32*dAdF3232 + F13*F33*dAdF3332 - J*a13*dJdF32;
        dadF(4,7) = A11*F11 + A21*F12 + A31*F13 + F11*F31*dAdF1131 + F11*F32*dAdF1231 + F11*F33*dAdF1331 + F12*F31*dAdF2131 + F12*F32*dAdF2231 + F12*F33*dAdF2331 + F13*F31*dAdF3131 + F13*F32*dAdF3231 + F13*F33*dAdF3331 - J*a13*dJdF31;
        dadF(4,8) = F11*F31*dAdF1121 + F11*F32*dAdF1221 + F11*F33*dAdF1321 + F12*F31*dAdF2121 + F12*F32*dAdF2221 + F12*F33*dAdF2321 + F13*F31*dAdF3121 + F13*F32*dAdF3221 + F13*F33*dAdF3321 - J*a13*dJdF21;
        dadF(5,0) = A11*F21 + A12*F22 + A13*F23 + F11*F21*dAdF1111 + F11*F22*dAdF1211 + F11*F23*dAdF1311 + F12*F21*dAdF2111 + F12*F22*dAdF2211 + F12*F23*dAdF2311 + F13*F21*dAdF3111 + F13*F22*dAdF3211 + F13*F23*dAdF3311 - J*a12*dJdF11;
        dadF(5,1) = A12*F11 + A22*F12 + A32*F13 + F11*F21*dAdF1122 + F11*F22*dAdF1222 + F11*F23*dAdF1322 + F12*F21*dAdF2122 + F12*F22*dAdF2222 + F12*F23*dAdF2322 + F13*F21*dAdF3122 + F13*F22*dAdF3222 + F13*F23*dAdF3322 - J*a12*dJdF22;
        dadF(5,2) = F11*F21*dAdF1133 + F11*F22*dAdF1233 + F11*F23*dAdF1333 + F12*F21*dAdF2133 + F12*F22*dAdF2233 + F12*F23*dAdF2333 + F13*F21*dAdF3133 + F13*F22*dAdF3233 + F13*F23*dAdF3333 - J*a12*dJdF33;
        dadF(5,3) = A13*F11 + A23*F12 + A33*F13 + F11*F21*dAdF1123 + F11*F22*dAdF1223 + F11*F23*dAdF1323 + F12*F21*dAdF2123 + F12*F22*dAdF2223 + F12*F23*dAdF2323 + F13*F21*dAdF3123 + F13*F22*dAdF3223 + F13*F23*dAdF3323 - J*a12*dJdF23;
        dadF(5,4) = A31*F21 + A32*F22 + A33*F23 + F11*F21*dAdF1113 + F11*F22*dAdF1213 + F11*F23*dAdF1313 + F12*F21*dAdF2113 + F12*F22*dAdF2213 + F12*F23*dAdF2313 + F13*F21*dAdF3113 + F13*F22*dAdF3213 + F13*F23*dAdF3313 - J*a12*dJdF13;
        dadF(5,5) = A21*F21 + A22*F22 + A23*F23 + F11*F21*dAdF1112 + F11*F22*dAdF1212 + F11*F23*dAdF1312 + F12*F21*dAdF2112 + F12*F22*dAdF2212 + F12*F23*dAdF2312 + F13*F21*dAdF3112 + F13*F22*dAdF3212 + F13*F23*dAdF3312 - J*a12*dJdF12;
        dadF(5,6) = F11*F21*dAdF1132 + F11*F22*dAdF1232 + F11*F23*dAdF1332 + F12*F21*dAdF2132 + F12*F22*dAdF2232 + F12*F23*dAdF2332 + F13*F21*dAdF3132 + F13*F22*dAdF3232 + F13*F23*dAdF3332 - J*a12*dJdF32;
        dadF(5,7) = F11*F21*dAdF1131 + F11*F22*dAdF1231 + F11*F23*dAdF1331 + F12*F21*dAdF2131 + F12*F22*dAdF2231 + F12*F23*dAdF2331 + F13*F21*dAdF3131 + F13*F22*dAdF3231 + F13*F23*dAdF3331 - J*a12*dJdF31;
        dadF(5,8) = A11*F11 + A21*F12 + A31*F13 + F11*F21*dAdF1121 + F11*F22*dAdF1221 + F11*F23*dAdF1321 + F12*F21*dAdF2121 + F12*F22*dAdF2221 + F12*F23*dAdF2321 + F13*F21*dAdF3121 + F13*F22*dAdF3221 + F13*F23*dAdF3321 - J*a12*dJdF21;
        dadF(6,0) = F21*F31*dAdF1111 + F21*F32*dAdF2111 + F21*F33*dAdF3111 + F22*F31*dAdF1211 + F22*F32*dAdF2211 + F22*F33*dAdF3211 + F23*F31*dAdF1311 + F23*F32*dAdF2311 + F23*F33*dAdF3311 - J*a32*dJdF11;
        dadF(6,1) = A12*F31 + A22*F32 + A32*F33 + F21*F31*dAdF1122 + F21*F32*dAdF2122 + F21*F33*dAdF3122 + F22*F31*dAdF1222 + F22*F32*dAdF2222 + F22*F33*dAdF3222 + F23*F31*dAdF1322 + F23*F32*dAdF2322 + F23*F33*dAdF3322 - J*a32*dJdF22;
        dadF(6,2) = A31*F21 + A32*F22 + A33*F23 + F21*F31*dAdF1133 + F21*F32*dAdF2133 + F21*F33*dAdF3133 + F22*F31*dAdF1233 + F22*F32*dAdF2233 + F22*F33*dAdF3233 + F23*F31*dAdF1333 + F23*F32*dAdF2333 + F23*F33*dAdF3333 - J*a32*dJdF33;
        dadF(6,3) = A13*F31 + A23*F32 + A33*F33 + F21*F31*dAdF1123 + F21*F32*dAdF2123 + F21*F33*dAdF3123 + F22*F31*dAdF1223 + F22*F32*dAdF2223 + F22*F33*dAdF3223 + F23*F31*dAdF1323 + F23*F32*dAdF2323 + F23*F33*dAdF3323 - J*a32*dJdF23;
        dadF(6,4) = F21*F31*dAdF1113 + F21*F32*dAdF2113 + F21*F33*dAdF3113 + F22*F31*dAdF1213 + F22*F32*dAdF2213 + F22*F33*dAdF3213 + F23*F31*dAdF1313 + F23*F32*dAdF2313 + F23*F33*dAdF3313 - J*a32*dJdF13;
        dadF(6,5) = F21*F31*dAdF1112 + F21*F32*dAdF2112 + F21*F33*dAdF3112 + F22*F31*dAdF1212 + F22*F32*dAdF2212 + F22*F33*dAdF3212 + F23*F31*dAdF1312 + F23*F32*dAdF2312 + F23*F33*dAdF3312 - J*a32*dJdF12;
        dadF(6,6) = A21*F21 + A22*F22 + A23*F23 + F21*F31*dAdF1132 + F21*F32*dAdF2132 + F21*F33*dAdF3132 + F22*F31*dAdF1232 + F22*F32*dAdF2232 + F22*F33*dAdF3232 + F23*F31*dAdF1332 + F23*F32*dAdF2332 + F23*F33*dAdF3332 - J*a32*dJdF32;
        dadF(6,7) = A11*F21 + A12*F22 + A13*F23 + F21*F31*dAdF1131 + F21*F32*dAdF2131 + F21*F33*dAdF3131 + F22*F31*dAdF1231 + F22*F32*dAdF2231 + F22*F33*dAdF3231 + F23*F31*dAdF1331 + F23*F32*dAdF2331 + F23*F33*dAdF3331 - J*a32*dJdF31;
        dadF(6,8) = A11*F31 + A21*F32 + A31*F33 + F21*F31*dAdF1121 + F21*F32*dAdF2121 + F21*F33*dAdF3121 + F22*F31*dAdF1221 + F22*F32*dAdF2221 + F22*F33*dAdF3221 + F23*F31*dAdF1321 + F23*F32*dAdF2321 + F23*F33*dAdF3321 - J*a32*dJdF21;
        dadF(7,0) = A11*F31 + A21*F32 + A31*F33 + F11*F31*dAdF1111 + F11*F32*dAdF2111 + F11*F33*dAdF3111 + F12*F31*dAdF1211 + F12*F32*dAdF2211 + F12*F33*dAdF3211 + F13*F31*dAdF1311 + F13*F32*dAdF2311 + F13*F33*dAdF3311 - J*a31*dJdF11;
        dadF(7,1) = F11*F31*dAdF1122 + F11*F32*dAdF2122 + F11*F33*dAdF3122 + F12*F31*dAdF1222 + F12*F32*dAdF2222 + F12*F33*dAdF3222 + F13*F31*dAdF1322 + F13*F32*dAdF2322 + F13*F33*dAdF3322 - J*a31*dJdF22;
        dadF(7,2) = A31*F11 + A32*F12 + A33*F13 + F11*F31*dAdF1133 + F11*F32*dAdF2133 + F11*F33*dAdF3133 + F12*F31*dAdF1233 + F12*F32*dAdF2233 + F12*F33*dAdF3233 + F13*F31*dAdF1333 + F13*F32*dAdF2333 + F13*F33*dAdF3333 - J*a31*dJdF33;
        dadF(7,3) = F11*F31*dAdF1123 + F11*F32*dAdF2123 + F11*F33*dAdF3123 + F12*F31*dAdF1223 + F12*F32*dAdF2223 + F12*F33*dAdF3223 + F13*F31*dAdF1323 + F13*F32*dAdF2323 + F13*F33*dAdF3323 - J*a31*dJdF23;
        dadF(7,4) = A13*F31 + A23*F32 + A33*F33 + F11*F31*dAdF1113 + F11*F32*dAdF2113 + F11*F33*dAdF3113 + F12*F31*dAdF1213 + F12*F32*dAdF2213 + F12*F33*dAdF3213 + F13*F31*dAdF1313 + F13*F32*dAdF2313 + F13*F33*dAdF3313 - J*a31*dJdF13;
        dadF(7,5) = A12*F31 + A22*F32 + A32*F33 + F11*F31*dAdF1112 + F11*F32*dAdF2112 + F11*F33*dAdF3112 + F12*F31*dAdF1212 + F12*F32*dAdF2212 + F12*F33*dAdF3212 + F13*F31*dAdF1312 + F13*F32*dAdF2312 + F13*F33*dAdF3312 - J*a31*dJdF12;
        dadF(7,6) = A21*F11 + A22*F12 + A23*F13 + F11*F31*dAdF1132 + F11*F32*dAdF2132 + F11*F33*dAdF3132 + F12*F31*dAdF1232 + F12*F32*dAdF2232 + F12*F33*dAdF3232 + F13*F31*dAdF1332 + F13*F32*dAdF2332 + F13*F33*dAdF3332 - J*a31*dJdF32;
        dadF(7,7) = A11*F11 + A12*F12 + A13*F13 + F11*F31*dAdF1131 + F11*F32*dAdF2131 + F11*F33*dAdF3131 + F12*F31*dAdF1231 + F12*F32*dAdF2231 + F12*F33*dAdF3231 + F13*F31*dAdF1331 + F13*F32*dAdF2331 + F13*F33*dAdF3331 - J*a31*dJdF31;
        dadF(7,8) = F11*F31*dAdF1121 + F11*F32*dAdF2121 + F11*F33*dAdF3121 + F12*F31*dAdF1221 + F12*F32*dAdF2221 + F12*F33*dAdF3221 + F13*F31*dAdF1321 + F13*F32*dAdF2321 + F13*F33*dAdF3321 - J*a31*dJdF21;
        dadF(8,0) = A11*F21 + A21*F22 + A31*F23 + F11*F21*dAdF1111 + F11*F22*dAdF2111 + F11*F23*dAdF3111 + F12*F21*dAdF1211 + F12*F22*dAdF2211 + F12*F23*dAdF3211 + F13*F21*dAdF1311 + F13*F22*dAdF2311 + F13*F23*dAdF3311 - J*a21*dJdF11;
        dadF(8,1) = A21*F11 + A22*F12 + A23*F13 + F11*F21*dAdF1122 + F11*F22*dAdF2122 + F11*F23*dAdF3122 + F12*F21*dAdF1222 + F12*F22*dAdF2222 + F12*F23*dAdF3222 + F13*F21*dAdF1322 + F13*F22*dAdF2322 + F13*F23*dAdF3322 - J*a21*dJdF22;
        dadF(8,2) = F11*F21*dAdF1133 + F11*F22*dAdF2133 + F11*F23*dAdF3133 + F12*F21*dAdF1233 + F12*F22*dAdF2233 + F12*F23*dAdF3233 + F13*F21*dAdF1333 + F13*F22*dAdF2333 + F13*F23*dAdF3333 - J*a21*dJdF33;
        dadF(8,3) = A31*F11 + A32*F12 + A33*F13 + F11*F21*dAdF1123 + F11*F22*dAdF2123 + F11*F23*dAdF3123 + F12*F21*dAdF1223 + F12*F22*dAdF2223 + F12*F23*dAdF3223 + F13*F21*dAdF1323 + F13*F22*dAdF2323 + F13*F23*dAdF3323 - J*a21*dJdF23;
        dadF(8,4) = A13*F21 + A23*F22 + A33*F23 + F11*F21*dAdF1113 + F11*F22*dAdF2113 + F11*F23*dAdF3113 + F12*F21*dAdF1213 + F12*F22*dAdF2213 + F12*F23*dAdF3213 + F13*F21*dAdF1313 + F13*F22*dAdF2313 + F13*F23*dAdF3313 - J*a21*dJdF13;
        dadF(8,5) = A12*F21 + A22*F22 + A32*F23 + F11*F21*dAdF1112 + F11*F22*dAdF2112 + F11*F23*dAdF3112 + F12*F21*dAdF1212 + F12*F22*dAdF2212 + F12*F23*dAdF3212 + F13*F21*dAdF1312 + F13*F22*dAdF2312 + F13*F23*dAdF3312 - J*a21*dJdF12;
        dadF(8,6) = F11*F21*dAdF1132 + F11*F22*dAdF2132 + F11*F23*dAdF3132 + F12*F21*dAdF1232 + F12*F22*dAdF2232 + F12*F23*dAdF3232 + F13*F21*dAdF1332 + F13*F22*dAdF2332 + F13*F23*dAdF3332 - J*a21*dJdF32;
        dadF(8,7) = F11*F21*dAdF1131 + F11*F22*dAdF2131 + F11*F23*dAdF3131 + F12*F21*dAdF1231 + F12*F22*dAdF2231 + F12*F23*dAdF3231 + F13*F21*dAdF1331 + F13*F22*dAdF2331 + F13*F23*dAdF3331 - J*a21*dJdF31;
        dadF(8,8) = A11*F11 + A12*F12 + A13*F13 + F11*F21*dAdF1121 + F11*F22*dAdF2121 + F11*F23*dAdF3121 + F12*F21*dAdF1221 + F12*F22*dAdF2221 + F12*F23*dAdF3221 + F13*F21*dAdF1321 + F13*F22*dAdF2321 + F13*F23*dAdF3321 - J*a21*dJdF21;

        dadF /= J;
        
        return;
    }

    void map_dAdF_to_dadF(const Vector_27& m, const Vector_27 &A, const Matrix_27x9 &dAdF, const double &J, const Matrix_3x3 &dJdF, const Matrix_3x3 &F, const Matrix_3x3 &chi, Matrix_27x9 &dadF){
        /*!==========================
        |    map_dAdF_to_dadF    |
        ==========================
        
        Map the jacobian of a stress measure in the reference configuration with respect to the 
        deformation gradient (either the PK2 stress or the symmetric stress) to the jacobian of 
        a corresponding stress measure in the current configuration (either the cauchy stress 
        or the symmetric stress) with respect to the deformation gradient.
        
        This is for the higher-order stress measure.
        
        */
        
        dadF = Matrix_27x9::Zero();
        
        //Extracting dJdF
        double dJdF11= dJdF(0,0);
        double dJdF12= dJdF(0,1);
        double dJdF13= dJdF(0,2);
        double dJdF21= dJdF(1,0);
        double dJdF22= dJdF(1,1);
        double dJdF23= dJdF(1,2);
        double dJdF31= dJdF(2,0);
        double dJdF32= dJdF(2,1);
        double dJdF33= dJdF(2,2);
        
        //Extracting a
        double a111= a(0);
        double a122= a(1);
        double a133= a(2);
        double a123= a(3);
        double a113= a(4);
        double a112= a(5);
        double a132= a(6);
        double a131= a(7);
        double a121= a(8);
        double a211= a(9);
        double a222= a(10);
        double a233= a(11);
        double a223= a(12);
        double a213= a(13);
        double a212= a(14);
        double a232= a(15);
        double a231= a(16);
        double a221= a(17);
        double a311= a(18);
        double a322= a(19);
        double a333= a(20);
        double a323= a(21);
        double a313= a(22);
        double a312= a(23);
        double a332= a(24);
        double a331= a(25);
        double a321= a(26);

        //Extracting chi
        double chi11= chi(0,0);
        double chi12= chi(0,1);
        double chi13= chi(0,2);
        double chi21= chi(1,0);
        double chi22= chi(1,1);
        double chi23= chi(1,2);
        double chi31= chi(2,0);
        double chi32= chi(2,1);
        double chi33= chi(2,2);
        
        //Extracting A
        double A111= A(0);
        double A122= A(1);
        double A133= A(2);
        double A123= A(3);
        double A113= A(4);
        double A112= A(5);
        double A132= A(6);
        double A131= A(7);
        double A121= A(8);
        double A211= A(9);
        double A222= A(10);
        double A233= A(11);
        double A223= A(12);
        double A213= A(13);
        double A212= A(14);
        double A232= A(15);
        double A231= A(16);
        double A221= A(17);
        double A311= A(18);
        double A322= A(19);
        double A333= A(20);
        double A323= A(21);
        double A313= A(22);
        double A312= A(23);
        double A332= A(24);
        double A331= A(25);
        double A321= A(26);

        //Extracting dAdF
        double dAdF11111= dAdF(0,0);
        double dAdF11122= dAdF(0,1);
        double dAdF11133= dAdF(0,2);
        double dAdF11123= dAdF(0,3);
        double dAdF11113= dAdF(0,4);
        double dAdF11112= dAdF(0,5);
        double dAdF11132= dAdF(0,6);
        double dAdF11131= dAdF(0,7);
        double dAdF11121= dAdF(0,8);
        double dAdF12211= dAdF(1,0);
        double dAdF12222= dAdF(1,1);
        double dAdF12233= dAdF(1,2);
        double dAdF12223= dAdF(1,3);
        double dAdF12213= dAdF(1,4);
        double dAdF12212= dAdF(1,5);
        double dAdF12232= dAdF(1,6);
        double dAdF12231= dAdF(1,7);
        double dAdF12221= dAdF(1,8);
        double dAdF13311= dAdF(2,0);
        double dAdF13322= dAdF(2,1);
        double dAdF13333= dAdF(2,2);
        double dAdF13323= dAdF(2,3);
        double dAdF13313= dAdF(2,4);
        double dAdF13312= dAdF(2,5);
        double dAdF13332= dAdF(2,6);
        double dAdF13331= dAdF(2,7);
        double dAdF13321= dAdF(2,8);
        double dAdF12311= dAdF(3,0);
        double dAdF12322= dAdF(3,1);
        double dAdF12333= dAdF(3,2);
        double dAdF12323= dAdF(3,3);
        double dAdF12313= dAdF(3,4);
        double dAdF12312= dAdF(3,5);
        double dAdF12332= dAdF(3,6);
        double dAdF12331= dAdF(3,7);
        double dAdF12321= dAdF(3,8);
        double dAdF11311= dAdF(4,0);
        double dAdF11322= dAdF(4,1);
        double dAdF11333= dAdF(4,2);
        double dAdF11323= dAdF(4,3);
        double dAdF11313= dAdF(4,4);
        double dAdF11312= dAdF(4,5);
        double dAdF11332= dAdF(4,6);
        double dAdF11331= dAdF(4,7);
        double dAdF11321= dAdF(4,8);
        double dAdF11211= dAdF(5,0);
        double dAdF11222= dAdF(5,1);
        double dAdF11233= dAdF(5,2);
        double dAdF11223= dAdF(5,3);
        double dAdF11213= dAdF(5,4);
        double dAdF11212= dAdF(5,5);
        double dAdF11232= dAdF(5,6);
        double dAdF11231= dAdF(5,7);
        double dAdF11221= dAdF(5,8);
        double dAdF13211= dAdF(6,0);
        double dAdF13222= dAdF(6,1);
        double dAdF13233= dAdF(6,2);
        double dAdF13223= dAdF(6,3);
        double dAdF13213= dAdF(6,4);
        double dAdF13212= dAdF(6,5);
        double dAdF13232= dAdF(6,6);
        double dAdF13231= dAdF(6,7);
        double dAdF13221= dAdF(6,8);
        double dAdF13111= dAdF(7,0);
        double dAdF13122= dAdF(7,1);
        double dAdF13133= dAdF(7,2);
        double dAdF13123= dAdF(7,3);
        double dAdF13113= dAdF(7,4);
        double dAdF13112= dAdF(7,5);
        double dAdF13132= dAdF(7,6);
        double dAdF13131= dAdF(7,7);
        double dAdF13121= dAdF(7,8);
        double dAdF12111= dAdF(8,0);
        double dAdF12122= dAdF(8,1);
        double dAdF12133= dAdF(8,2);
        double dAdF12123= dAdF(8,3);
        double dAdF12113= dAdF(8,4);
        double dAdF12112= dAdF(8,5);
        double dAdF12132= dAdF(8,6);
        double dAdF12131= dAdF(8,7);
        double dAdF12121= dAdF(8,8);
        double dAdF21111= dAdF(9,0);
        double dAdF21122= dAdF(9,1);
        double dAdF21133= dAdF(9,2);
        double dAdF21123= dAdF(9,3);
        double dAdF21113= dAdF(9,4);
        double dAdF21112= dAdF(9,5);
        double dAdF21132= dAdF(9,6);
        double dAdF21131= dAdF(9,7);
        double dAdF21121= dAdF(9,8);
        double dAdF22211= dAdF(10,0);
        double dAdF22222= dAdF(10,1);
        double dAdF22233= dAdF(10,2);
        double dAdF22223= dAdF(10,3);
        double dAdF22213= dAdF(10,4);
        double dAdF22212= dAdF(10,5);
        double dAdF22232= dAdF(10,6);
        double dAdF22231= dAdF(10,7);
        double dAdF22221= dAdF(10,8);
        double dAdF23311= dAdF(11,0);
        double dAdF23322= dAdF(11,1);
        double dAdF23333= dAdF(11,2);
        double dAdF23323= dAdF(11,3);
        double dAdF23313= dAdF(11,4);
        double dAdF23312= dAdF(11,5);
        double dAdF23332= dAdF(11,6);
        double dAdF23331= dAdF(11,7);
        double dAdF23321= dAdF(11,8);
        double dAdF22311= dAdF(12,0);
        double dAdF22322= dAdF(12,1);
        double dAdF22333= dAdF(12,2);
        double dAdF22323= dAdF(12,3);
        double dAdF22313= dAdF(12,4);
        double dAdF22312= dAdF(12,5);
        double dAdF22332= dAdF(12,6);
        double dAdF22331= dAdF(12,7);
        double dAdF22321= dAdF(12,8);
        double dAdF21311= dAdF(13,0);
        double dAdF21322= dAdF(13,1);
        double dAdF21333= dAdF(13,2);
        double dAdF21323= dAdF(13,3);
        double dAdF21313= dAdF(13,4);
        double dAdF21312= dAdF(13,5);
        double dAdF21332= dAdF(13,6);
        double dAdF21331= dAdF(13,7);
        double dAdF21321= dAdF(13,8);
        double dAdF21211= dAdF(14,0);
        double dAdF21222= dAdF(14,1);
        double dAdF21233= dAdF(14,2);
        double dAdF21223= dAdF(14,3);
        double dAdF21213= dAdF(14,4);
        double dAdF21212= dAdF(14,5);
        double dAdF21232= dAdF(14,6);
        double dAdF21231= dAdF(14,7);
        double dAdF21221= dAdF(14,8);
        double dAdF23211= dAdF(15,0);
        double dAdF23222= dAdF(15,1);
        double dAdF23233= dAdF(15,2);
        double dAdF23223= dAdF(15,3);
        double dAdF23213= dAdF(15,4);
        double dAdF23212= dAdF(15,5);
        double dAdF23232= dAdF(15,6);
        double dAdF23231= dAdF(15,7);
        double dAdF23221= dAdF(15,8);
        double dAdF23111= dAdF(16,0);
        double dAdF23122= dAdF(16,1);
        double dAdF23133= dAdF(16,2);
        double dAdF23123= dAdF(16,3);
        double dAdF23113= dAdF(16,4);
        double dAdF23112= dAdF(16,5);
        double dAdF23132= dAdF(16,6);
        double dAdF23131= dAdF(16,7);
        double dAdF23121= dAdF(16,8);
        double dAdF22111= dAdF(17,0);
        double dAdF22122= dAdF(17,1);
        double dAdF22133= dAdF(17,2);
        double dAdF22123= dAdF(17,3);
        double dAdF22113= dAdF(17,4);
        double dAdF22112= dAdF(17,5);
        double dAdF22132= dAdF(17,6);
        double dAdF22131= dAdF(17,7);
        double dAdF22121= dAdF(17,8);
        double dAdF31111= dAdF(18,0);
        double dAdF31122= dAdF(18,1);
        double dAdF31133= dAdF(18,2);
        double dAdF31123= dAdF(18,3);
        double dAdF31113= dAdF(18,4);
        double dAdF31112= dAdF(18,5);
        double dAdF31132= dAdF(18,6);
        double dAdF31131= dAdF(18,7);
        double dAdF31121= dAdF(18,8);
        double dAdF32211= dAdF(19,0);
        double dAdF32222= dAdF(19,1);
        double dAdF32233= dAdF(19,2);
        double dAdF32223= dAdF(19,3);
        double dAdF32213= dAdF(19,4);
        double dAdF32212= dAdF(19,5);
        double dAdF32232= dAdF(19,6);
        double dAdF32231= dAdF(19,7);
        double dAdF32221= dAdF(19,8);
        double dAdF33311= dAdF(20,0);
        double dAdF33322= dAdF(20,1);
        double dAdF33333= dAdF(20,2);
        double dAdF33323= dAdF(20,3);
        double dAdF33313= dAdF(20,4);
        double dAdF33312= dAdF(20,5);
        double dAdF33332= dAdF(20,6);
        double dAdF33331= dAdF(20,7);
        double dAdF33321= dAdF(20,8);
        double dAdF32311= dAdF(21,0);
        double dAdF32322= dAdF(21,1);
        double dAdF32333= dAdF(21,2);
        double dAdF32323= dAdF(21,3);
        double dAdF32313= dAdF(21,4);
        double dAdF32312= dAdF(21,5);
        double dAdF32332= dAdF(21,6);
        double dAdF32331= dAdF(21,7);
        double dAdF32321= dAdF(21,8);
        double dAdF31311= dAdF(22,0);
        double dAdF31322= dAdF(22,1);
        double dAdF31333= dAdF(22,2);
        double dAdF31323= dAdF(22,3);
        double dAdF31313= dAdF(22,4);
        double dAdF31312= dAdF(22,5);
        double dAdF31332= dAdF(22,6);
        double dAdF31331= dAdF(22,7);
        double dAdF31321= dAdF(22,8);
        double dAdF31211= dAdF(23,0);
        double dAdF31222= dAdF(23,1);
        double dAdF31233= dAdF(23,2);
        double dAdF31223= dAdF(23,3);
        double dAdF31213= dAdF(23,4);
        double dAdF31212= dAdF(23,5);
        double dAdF31232= dAdF(23,6);
        double dAdF31231= dAdF(23,7);
        double dAdF31221= dAdF(23,8);
        double dAdF33211= dAdF(24,0);
        double dAdF33222= dAdF(24,1);
        double dAdF33233= dAdF(24,2);
        double dAdF33223= dAdF(24,3);
        double dAdF33213= dAdF(24,4);
        double dAdF33212= dAdF(24,5);
        double dAdF33232= dAdF(24,6);
        double dAdF33231= dAdF(24,7);
        double dAdF33221= dAdF(24,8);
        double dAdF33111= dAdF(25,0);
        double dAdF33122= dAdF(25,1);
        double dAdF33133= dAdF(25,2);
        double dAdF33123= dAdF(25,3);
        double dAdF33113= dAdF(25,4);
        double dAdF33112= dAdF(25,5);
        double dAdF33132= dAdF(25,6);
        double dAdF33131= dAdF(25,7);
        double dAdF33121= dAdF(25,8);
        double dAdF32111= dAdF(26,0);
        double dAdF32122= dAdF(26,1);
        double dAdF32133= dAdF(26,2);
        double dAdF32123= dAdF(26,3);
        double dAdF32113= dAdF(26,4);
        double dAdF32112= dAdF(26,5);
        double dAdF32132= dAdF(26,6);
        double dAdF32131= dAdF(26,7);
        double dAdF32121= dAdF(26,8);

        //Extracting F
        double F11= F(0,0);
        double F12= F(0,1);
        double F13= F(0,2);
        double F21= F(1,0);
        double F22= F(1,1);
        double F23= F(1,2);
        double F31= F(2,0);
        double F32= F(2,1);
        double F33= F(2,2);

        dadF(0,0) = 2*A111*F11*chi11 + 2*A112*F11*chi12 + 2*A113*F11*chi13 + A121*F12*chi11 + A122*F12*chi12 + A123*F12*chi13 + A131*F13*chi11 + A132*F13*chi12 + A133*F13*chi13 + A211*F12*chi11 + A212*F12*chi12 + A213*F12*chi13 + A311*F13*chi11 + A312*F13*chi12 + A313*F13*chi13 + F11*F11*chi11*dAdF11111 + F11*F11*chi12*dAdF11211 + F11*F11*chi13*dAdF11311 + F11*F12*chi11*dAdF12111 + F11*F12*chi11*dAdF21111 + F11*F12*chi12*dAdF12211 + F11*F12*chi12*dAdF21211 + F11*F12*chi13*dAdF12311 + F11*F12*chi13*dAdF21311 + F11*F13*chi11*dAdF13111 + F11*F13*chi11*dAdF31111 + F11*F13*chi12*dAdF13211 + F11*F13*chi12*dAdF31211 + F11*F13*chi13*dAdF13311 + F11*F13*chi13*dAdF31311 + F12*F12*chi11*dAdF22111 + F12*F12*chi12*dAdF22211 + F12*F12*chi13*dAdF22311 + F12*F13*chi11*dAdF23111 + F12*F13*chi11*dAdF32111 + F12*F13*chi12*dAdF23211 + F12*F13*chi12*dAdF32211 + F12*F13*chi13*dAdF23311 + F12*F13*chi13*dAdF32311 + F13*F13*chi11*dAdF33111 + F13*F13*chi12*dAdF33211 + F13*F13*chi13*dAdF33311 - J*a111*dJdF11;
        dadF(0,1) = F11*F11*chi11*dAdF11122 + F11*F11*chi12*dAdF11222 + F11*F11*chi13*dAdF11322 + F11*F12*chi11*dAdF12122 + F11*F12*chi11*dAdF21122 + F11*F12*chi12*dAdF12222 + F11*F12*chi12*dAdF21222 + F11*F12*chi13*dAdF12322 + F11*F12*chi13*dAdF21322 + F11*F13*chi11*dAdF13122 + F11*F13*chi11*dAdF31122 + F11*F13*chi12*dAdF13222 + F11*F13*chi12*dAdF31222 + F11*F13*chi13*dAdF13322 + F11*F13*chi13*dAdF31322 + F12*F12*chi11*dAdF22122 + F12*F12*chi12*dAdF22222 + F12*F12*chi13*dAdF22322 + F12*F13*chi11*dAdF23122 + F12*F13*chi11*dAdF32122 + F12*F13*chi12*dAdF23222 + F12*F13*chi12*dAdF32222 + F12*F13*chi13*dAdF23322 + F12*F13*chi13*dAdF32322 + F13*F13*chi11*dAdF33122 + F13*F13*chi12*dAdF33222 + F13*F13*chi13*dAdF33322 - J*a111*dJdF22;
        dadF(0,2) = F11*F11*chi11*dAdF11133 + F11*F11*chi12*dAdF11233 + F11*F11*chi13*dAdF11333 + F11*F12*chi11*dAdF12133 + F11*F12*chi11*dAdF21133 + F11*F12*chi12*dAdF12233 + F11*F12*chi12*dAdF21233 + F11*F12*chi13*dAdF12333 + F11*F12*chi13*dAdF21333 + F11*F13*chi11*dAdF13133 + F11*F13*chi11*dAdF31133 + F11*F13*chi12*dAdF13233 + F11*F13*chi12*dAdF31233 + F11*F13*chi13*dAdF13333 + F11*F13*chi13*dAdF31333 + F12*F12*chi11*dAdF22133 + F12*F12*chi12*dAdF22233 + F12*F12*chi13*dAdF22333 + F12*F13*chi11*dAdF23133 + F12*F13*chi11*dAdF32133 + F12*F13*chi12*dAdF23233 + F12*F13*chi12*dAdF32233 + F12*F13*chi13*dAdF23333 + F12*F13*chi13*dAdF32333 + F13*F13*chi11*dAdF33133 + F13*F13*chi12*dAdF33233 + F13*F13*chi13*dAdF33333 - J*a111*dJdF33;
        dadF(0,3) = F11*F11*chi11*dAdF11123 + F11*F11*chi12*dAdF11223 + F11*F11*chi13*dAdF11323 + F11*F12*chi11*dAdF12123 + F11*F12*chi11*dAdF21123 + F11*F12*chi12*dAdF12223 + F11*F12*chi12*dAdF21223 + F11*F12*chi13*dAdF12323 + F11*F12*chi13*dAdF21323 + F11*F13*chi11*dAdF13123 + F11*F13*chi11*dAdF31123 + F11*F13*chi12*dAdF13223 + F11*F13*chi12*dAdF31223 + F11*F13*chi13*dAdF13323 + F11*F13*chi13*dAdF31323 + F12*F12*chi11*dAdF22123 + F12*F12*chi12*dAdF22223 + F12*F12*chi13*dAdF22323 + F12*F13*chi11*dAdF23123 + F12*F13*chi11*dAdF32123 + F12*F13*chi12*dAdF23223 + F12*F13*chi12*dAdF32223 + F12*F13*chi13*dAdF23323 + F12*F13*chi13*dAdF32323 + F13*F13*chi11*dAdF33123 + F13*F13*chi12*dAdF33223 + F13*F13*chi13*dAdF33323 - J*a111*dJdF23;
        dadF(0,4) = A131*F11*chi11 + A132*F11*chi12 + A133*F11*chi13 + A231*F12*chi11 + A232*F12*chi12 + A233*F12*chi13 + A311*F11*chi11 + A312*F11*chi12 + A313*F11*chi13 + A321*F12*chi11 + A322*F12*chi12 + A323*F12*chi13 + 2*A331*F13*chi11 + 2*A332*F13*chi12 + 2*A333*F13*chi13 + F11*F11*chi11*dAdF11113 + F11*F11*chi12*dAdF11213 + F11*F11*chi13*dAdF11313 + F11*F12*chi11*dAdF12113 + F11*F12*chi11*dAdF21113 + F11*F12*chi12*dAdF12213 + F11*F12*chi12*dAdF21213 + F11*F12*chi13*dAdF12313 + F11*F12*chi13*dAdF21313 + F11*F13*chi11*dAdF13113 + F11*F13*chi11*dAdF31113 + F11*F13*chi12*dAdF13213 + F11*F13*chi12*dAdF31213 + F11*F13*chi13*dAdF13313 + F11*F13*chi13*dAdF31313 + F12*F12*chi11*dAdF22113 + F12*F12*chi12*dAdF22213 + F12*F12*chi13*dAdF22313 + F12*F13*chi11*dAdF23113 + F12*F13*chi11*dAdF32113 + F12*F13*chi12*dAdF23213 + F12*F13*chi12*dAdF32213 + F12*F13*chi13*dAdF23313 + F12*F13*chi13*dAdF32313 + F13*F13*chi11*dAdF33113 + F13*F13*chi12*dAdF33213 + F13*F13*chi13*dAdF33313 - J*a111*dJdF13;
        dadF(0,5) = A121*F11*chi11 + A122*F11*chi12 + A123*F11*chi13 + A211*F11*chi11 + A212*F11*chi12 + A213*F11*chi13 + 2*A221*F12*chi11 + 2*A222*F12*chi12 + 2*A223*F12*chi13 + A231*F13*chi11 + A232*F13*chi12 + A233*F13*chi13 + A321*F13*chi11 + A322*F13*chi12 + A323*F13*chi13 + F11*F11*chi11*dAdF11112 + F11*F11*chi12*dAdF11212 + F11*F11*chi13*dAdF11312 + F11*F12*chi11*dAdF12112 + F11*F12*chi11*dAdF21112 + F11*F12*chi12*dAdF12212 + F11*F12*chi12*dAdF21212 + F11*F12*chi13*dAdF12312 + F11*F12*chi13*dAdF21312 + F11*F13*chi11*dAdF13112 + F11*F13*chi11*dAdF31112 + F11*F13*chi12*dAdF13212 + F11*F13*chi12*dAdF31212 + F11*F13*chi13*dAdF13312 + F11*F13*chi13*dAdF31312 + F12*F12*chi11*dAdF22112 + F12*F12*chi12*dAdF22212 + F12*F12*chi13*dAdF22312 + F12*F13*chi11*dAdF23112 + F12*F13*chi11*dAdF32112 + F12*F13*chi12*dAdF23212 + F12*F13*chi12*dAdF32212 + F12*F13*chi13*dAdF23312 + F12*F13*chi13*dAdF32312 + F13*F13*chi11*dAdF33112 + F13*F13*chi12*dAdF33212 + F13*F13*chi13*dAdF33312 - J*a111*dJdF12;
        dadF(0,6) = F11*F11*chi11*dAdF11132 + F11*F11*chi12*dAdF11232 + F11*F11*chi13*dAdF11332 + F11*F12*chi11*dAdF12132 + F11*F12*chi11*dAdF21132 + F11*F12*chi12*dAdF12232 + F11*F12*chi12*dAdF21232 + F11*F12*chi13*dAdF12332 + F11*F12*chi13*dAdF21332 + F11*F13*chi11*dAdF13132 + F11*F13*chi11*dAdF31132 + F11*F13*chi12*dAdF13232 + F11*F13*chi12*dAdF31232 + F11*F13*chi13*dAdF13332 + F11*F13*chi13*dAdF31332 + F12*F12*chi11*dAdF22132 + F12*F12*chi12*dAdF22232 + F12*F12*chi13*dAdF22332 + F12*F13*chi11*dAdF23132 + F12*F13*chi11*dAdF32132 + F12*F13*chi12*dAdF23232 + F12*F13*chi12*dAdF32232 + F12*F13*chi13*dAdF23332 + F12*F13*chi13*dAdF32332 + F13*F13*chi11*dAdF33132 + F13*F13*chi12*dAdF33232 + F13*F13*chi13*dAdF33332 - J*a111*dJdF32;
        dadF(0,7) = F11*F11*chi11*dAdF11131 + F11*F11*chi12*dAdF11231 + F11*F11*chi13*dAdF11331 + F11*F12*chi11*dAdF12131 + F11*F12*chi11*dAdF21131 + F11*F12*chi12*dAdF12231 + F11*F12*chi12*dAdF21231 + F11*F12*chi13*dAdF12331 + F11*F12*chi13*dAdF21331 + F11*F13*chi11*dAdF13131 + F11*F13*chi11*dAdF31131 + F11*F13*chi12*dAdF13231 + F11*F13*chi12*dAdF31231 + F11*F13*chi13*dAdF13331 + F11*F13*chi13*dAdF31331 + F12*F12*chi11*dAdF22131 + F12*F12*chi12*dAdF22231 + F12*F12*chi13*dAdF22331 + F12*F13*chi11*dAdF23131 + F12*F13*chi11*dAdF32131 + F12*F13*chi12*dAdF23231 + F12*F13*chi12*dAdF32231 + F12*F13*chi13*dAdF23331 + F12*F13*chi13*dAdF32331 + F13*F13*chi11*dAdF33131 + F13*F13*chi12*dAdF33231 + F13*F13*chi13*dAdF33331 - J*a111*dJdF31;
        dadF(0,8) = F11*F11*chi11*dAdF11121 + F11*F11*chi12*dAdF11221 + F11*F11*chi13*dAdF11321 + F11*F12*chi11*dAdF12121 + F11*F12*chi11*dAdF21121 + F11*F12*chi12*dAdF12221 + F11*F12*chi12*dAdF21221 + F11*F12*chi13*dAdF12321 + F11*F12*chi13*dAdF21321 + F11*F13*chi11*dAdF13121 + F11*F13*chi11*dAdF31121 + F11*F13*chi12*dAdF13221 + F11*F13*chi12*dAdF31221 + F11*F13*chi13*dAdF13321 + F11*F13*chi13*dAdF31321 + F12*F12*chi11*dAdF22121 + F12*F12*chi12*dAdF22221 + F12*F12*chi13*dAdF22321 + F12*F13*chi11*dAdF23121 + F12*F13*chi11*dAdF32121 + F12*F13*chi12*dAdF23221 + F12*F13*chi12*dAdF32221 + F12*F13*chi13*dAdF23321 + F12*F13*chi13*dAdF32321 + F13*F13*chi11*dAdF33121 + F13*F13*chi12*dAdF33221 + F13*F13*chi13*dAdF33321 - J*a111*dJdF21;
        dadF(1,0) = A111*F21*chi21 + A112*F21*chi22 + A113*F21*chi23 + A121*F22*chi21 + A122*F22*chi22 + A123*F22*chi23 + A131*F23*chi21 + A132*F23*chi22 + A133*F23*chi23 + F11*F21*chi21*dAdF11111 + F11*F21*chi22*dAdF11211 + F11*F21*chi23*dAdF11311 + F11*F22*chi21*dAdF12111 + F11*F22*chi22*dAdF12211 + F11*F22*chi23*dAdF12311 + F11*F23*chi21*dAdF13111 + F11*F23*chi22*dAdF13211 + F11*F23*chi23*dAdF13311 + F12*F21*chi21*dAdF21111 + F12*F21*chi22*dAdF21211 + F12*F21*chi23*dAdF21311 + F12*F22*chi21*dAdF22111 + F12*F22*chi22*dAdF22211 + F12*F22*chi23*dAdF22311 + F12*F23*chi21*dAdF23111 + F12*F23*chi22*dAdF23211 + F12*F23*chi23*dAdF23311 + F13*F21*chi21*dAdF31111 + F13*F21*chi22*dAdF31211 + F13*F21*chi23*dAdF31311 + F13*F22*chi21*dAdF32111 + F13*F22*chi22*dAdF32211 + F13*F22*chi23*dAdF32311 + F13*F23*chi21*dAdF33111 + F13*F23*chi22*dAdF33211 + F13*F23*chi23*dAdF33311 - J*a122*dJdF11;
        dadF(1,1) = A121*F11*chi21 + A122*F11*chi22 + A123*F11*chi23 + A221*F12*chi21 + A222*F12*chi22 + A223*F12*chi23 + A321*F13*chi21 + A322*F13*chi22 + A323*F13*chi23 + F11*F21*chi21*dAdF11122 + F11*F21*chi22*dAdF11222 + F11*F21*chi23*dAdF11322 + F11*F22*chi21*dAdF12122 + F11*F22*chi22*dAdF12222 + F11*F22*chi23*dAdF12322 + F11*F23*chi21*dAdF13122 + F11*F23*chi22*dAdF13222 + F11*F23*chi23*dAdF13322 + F12*F21*chi21*dAdF21122 + F12*F21*chi22*dAdF21222 + F12*F21*chi23*dAdF21322 + F12*F22*chi21*dAdF22122 + F12*F22*chi22*dAdF22222 + F12*F22*chi23*dAdF22322 + F12*F23*chi21*dAdF23122 + F12*F23*chi22*dAdF23222 + F12*F23*chi23*dAdF23322 + F13*F21*chi21*dAdF31122 + F13*F21*chi22*dAdF31222 + F13*F21*chi23*dAdF31322 + F13*F22*chi21*dAdF32122 + F13*F22*chi22*dAdF32222 + F13*F22*chi23*dAdF32322 + F13*F23*chi21*dAdF33122 + F13*F23*chi22*dAdF33222 + F13*F23*chi23*dAdF33322 - J*a122*dJdF22;
        dadF(1,2) = F11*F21*chi21*dAdF11133 + F11*F21*chi22*dAdF11233 + F11*F21*chi23*dAdF11333 + F11*F22*chi21*dAdF12133 + F11*F22*chi22*dAdF12233 + F11*F22*chi23*dAdF12333 + F11*F23*chi21*dAdF13133 + F11*F23*chi22*dAdF13233 + F11*F23*chi23*dAdF13333 + F12*F21*chi21*dAdF21133 + F12*F21*chi22*dAdF21233 + F12*F21*chi23*dAdF21333 + F12*F22*chi21*dAdF22133 + F12*F22*chi22*dAdF22233 + F12*F22*chi23*dAdF22333 + F12*F23*chi21*dAdF23133 + F12*F23*chi22*dAdF23233 + F12*F23*chi23*dAdF23333 + F13*F21*chi21*dAdF31133 + F13*F21*chi22*dAdF31233 + F13*F21*chi23*dAdF31333 + F13*F22*chi21*dAdF32133 + F13*F22*chi22*dAdF32233 + F13*F22*chi23*dAdF32333 + F13*F23*chi21*dAdF33133 + F13*F23*chi22*dAdF33233 + F13*F23*chi23*dAdF33333 - J*a122*dJdF33;
        dadF(1,3) = A131*F11*chi21 + A132*F11*chi22 + A133*F11*chi23 + A231*F12*chi21 + A232*F12*chi22 + A233*F12*chi23 + A331*F13*chi21 + A332*F13*chi22 + A333*F13*chi23 + F11*F21*chi21*dAdF11123 + F11*F21*chi22*dAdF11223 + F11*F21*chi23*dAdF11323 + F11*F22*chi21*dAdF12123 + F11*F22*chi22*dAdF12223 + F11*F22*chi23*dAdF12323 + F11*F23*chi21*dAdF13123 + F11*F23*chi22*dAdF13223 + F11*F23*chi23*dAdF13323 + F12*F21*chi21*dAdF21123 + F12*F21*chi22*dAdF21223 + F12*F21*chi23*dAdF21323 + F12*F22*chi21*dAdF22123 + F12*F22*chi22*dAdF22223 + F12*F22*chi23*dAdF22323 + F12*F23*chi21*dAdF23123 + F12*F23*chi22*dAdF23223 + F12*F23*chi23*dAdF23323 + F13*F21*chi21*dAdF31123 + F13*F21*chi22*dAdF31223 + F13*F21*chi23*dAdF31323 + F13*F22*chi21*dAdF32123 + F13*F22*chi22*dAdF32223 + F13*F22*chi23*dAdF32323 + F13*F23*chi21*dAdF33123 + F13*F23*chi22*dAdF33223 + F13*F23*chi23*dAdF33323 - J*a122*dJdF23;
        dadF(1,4) = A311*F21*chi21 + A312*F21*chi22 + A313*F21*chi23 + A321*F22*chi21 + A322*F22*chi22 + A323*F22*chi23 + A331*F23*chi21 + A332*F23*chi22 + A333*F23*chi23 + F11*F21*chi21*dAdF11113 + F11*F21*chi22*dAdF11213 + F11*F21*chi23*dAdF11313 + F11*F22*chi21*dAdF12113 + F11*F22*chi22*dAdF12213 + F11*F22*chi23*dAdF12313 + F11*F23*chi21*dAdF13113 + F11*F23*chi22*dAdF13213 + F11*F23*chi23*dAdF13313 + F12*F21*chi21*dAdF21113 + F12*F21*chi22*dAdF21213 + F12*F21*chi23*dAdF21313 + F12*F22*chi21*dAdF22113 + F12*F22*chi22*dAdF22213 + F12*F22*chi23*dAdF22313 + F12*F23*chi21*dAdF23113 + F12*F23*chi22*dAdF23213 + F12*F23*chi23*dAdF23313 + F13*F21*chi21*dAdF31113 + F13*F21*chi22*dAdF31213 + F13*F21*chi23*dAdF31313 + F13*F22*chi21*dAdF32113 + F13*F22*chi22*dAdF32213 + F13*F22*chi23*dAdF32313 + F13*F23*chi21*dAdF33113 + F13*F23*chi22*dAdF33213 + F13*F23*chi23*dAdF33313 - J*a122*dJdF13;
        dadF(1,5) = A211*F21*chi21 + A212*F21*chi22 + A213*F21*chi23 + A221*F22*chi21 + A222*F22*chi22 + A223*F22*chi23 + A231*F23*chi21 + A232*F23*chi22 + A233*F23*chi23 + F11*F21*chi21*dAdF11112 + F11*F21*chi22*dAdF11212 + F11*F21*chi23*dAdF11312 + F11*F22*chi21*dAdF12112 + F11*F22*chi22*dAdF12212 + F11*F22*chi23*dAdF12312 + F11*F23*chi21*dAdF13112 + F11*F23*chi22*dAdF13212 + F11*F23*chi23*dAdF13312 + F12*F21*chi21*dAdF21112 + F12*F21*chi22*dAdF21212 + F12*F21*chi23*dAdF21312 + F12*F22*chi21*dAdF22112 + F12*F22*chi22*dAdF22212 + F12*F22*chi23*dAdF22312 + F12*F23*chi21*dAdF23112 + F12*F23*chi22*dAdF23212 + F12*F23*chi23*dAdF23312 + F13*F21*chi21*dAdF31112 + F13*F21*chi22*dAdF31212 + F13*F21*chi23*dAdF31312 + F13*F22*chi21*dAdF32112 + F13*F22*chi22*dAdF32212 + F13*F22*chi23*dAdF32312 + F13*F23*chi21*dAdF33112 + F13*F23*chi22*dAdF33212 + F13*F23*chi23*dAdF33312 - J*a122*dJdF12;
        dadF(1,6) = F11*F21*chi21*dAdF11132 + F11*F21*chi22*dAdF11232 + F11*F21*chi23*dAdF11332 + F11*F22*chi21*dAdF12132 + F11*F22*chi22*dAdF12232 + F11*F22*chi23*dAdF12332 + F11*F23*chi21*dAdF13132 + F11*F23*chi22*dAdF13232 + F11*F23*chi23*dAdF13332 + F12*F21*chi21*dAdF21132 + F12*F21*chi22*dAdF21232 + F12*F21*chi23*dAdF21332 + F12*F22*chi21*dAdF22132 + F12*F22*chi22*dAdF22232 + F12*F22*chi23*dAdF22332 + F12*F23*chi21*dAdF23132 + F12*F23*chi22*dAdF23232 + F12*F23*chi23*dAdF23332 + F13*F21*chi21*dAdF31132 + F13*F21*chi22*dAdF31232 + F13*F21*chi23*dAdF31332 + F13*F22*chi21*dAdF32132 + F13*F22*chi22*dAdF32232 + F13*F22*chi23*dAdF32332 + F13*F23*chi21*dAdF33132 + F13*F23*chi22*dAdF33232 + F13*F23*chi23*dAdF33332 - J*a122*dJdF32;
        dadF(1,7) = F11*F21*chi21*dAdF11131 + F11*F21*chi22*dAdF11231 + F11*F21*chi23*dAdF11331 + F11*F22*chi21*dAdF12131 + F11*F22*chi22*dAdF12231 + F11*F22*chi23*dAdF12331 + F11*F23*chi21*dAdF13131 + F11*F23*chi22*dAdF13231 + F11*F23*chi23*dAdF13331 + F12*F21*chi21*dAdF21131 + F12*F21*chi22*dAdF21231 + F12*F21*chi23*dAdF21331 + F12*F22*chi21*dAdF22131 + F12*F22*chi22*dAdF22231 + F12*F22*chi23*dAdF22331 + F12*F23*chi21*dAdF23131 + F12*F23*chi22*dAdF23231 + F12*F23*chi23*dAdF23331 + F13*F21*chi21*dAdF31131 + F13*F21*chi22*dAdF31231 + F13*F21*chi23*dAdF31331 + F13*F22*chi21*dAdF32131 + F13*F22*chi22*dAdF32231 + F13*F22*chi23*dAdF32331 + F13*F23*chi21*dAdF33131 + F13*F23*chi22*dAdF33231 + F13*F23*chi23*dAdF33331 - J*a122*dJdF31;
        dadF(1,8) = A111*F11*chi21 + A112*F11*chi22 + A113*F11*chi23 + A211*F12*chi21 + A212*F12*chi22 + A213*F12*chi23 + A311*F13*chi21 + A312*F13*chi22 + A313*F13*chi23 + F11*F21*chi21*dAdF11121 + F11*F21*chi22*dAdF11221 + F11*F21*chi23*dAdF11321 + F11*F22*chi21*dAdF12121 + F11*F22*chi22*dAdF12221 + F11*F22*chi23*dAdF12321 + F11*F23*chi21*dAdF13121 + F11*F23*chi22*dAdF13221 + F11*F23*chi23*dAdF13321 + F12*F21*chi21*dAdF21121 + F12*F21*chi22*dAdF21221 + F12*F21*chi23*dAdF21321 + F12*F22*chi21*dAdF22121 + F12*F22*chi22*dAdF22221 + F12*F22*chi23*dAdF22321 + F12*F23*chi21*dAdF23121 + F12*F23*chi22*dAdF23221 + F12*F23*chi23*dAdF23321 + F13*F21*chi21*dAdF31121 + F13*F21*chi22*dAdF31221 + F13*F21*chi23*dAdF31321 + F13*F22*chi21*dAdF32121 + F13*F22*chi22*dAdF32221 + F13*F22*chi23*dAdF32321 + F13*F23*chi21*dAdF33121 + F13*F23*chi22*dAdF33221 + F13*F23*chi23*dAdF33321 - J*a122*dJdF21;
        dadF(2,0) = A111*F31*chi31 + A112*F31*chi32 + A113*F31*chi33 + A121*F32*chi31 + A122*F32*chi32 + A123*F32*chi33 + A131*F33*chi31 + A132*F33*chi32 + A133*F33*chi33 + F11*F31*chi31*dAdF11111 + F11*F31*chi32*dAdF11211 + F11*F31*chi33*dAdF11311 + F11*F32*chi31*dAdF12111 + F11*F32*chi32*dAdF12211 + F11*F32*chi33*dAdF12311 + F11*F33*chi31*dAdF13111 + F11*F33*chi32*dAdF13211 + F11*F33*chi33*dAdF13311 + F12*F31*chi31*dAdF21111 + F12*F31*chi32*dAdF21211 + F12*F31*chi33*dAdF21311 + F12*F32*chi31*dAdF22111 + F12*F32*chi32*dAdF22211 + F12*F32*chi33*dAdF22311 + F12*F33*chi31*dAdF23111 + F12*F33*chi32*dAdF23211 + F12*F33*chi33*dAdF23311 + F13*F31*chi31*dAdF31111 + F13*F31*chi32*dAdF31211 + F13*F31*chi33*dAdF31311 + F13*F32*chi31*dAdF32111 + F13*F32*chi32*dAdF32211 + F13*F32*chi33*dAdF32311 + F13*F33*chi31*dAdF33111 + F13*F33*chi32*dAdF33211 + F13*F33*chi33*dAdF33311 - J*a133*dJdF11;
        dadF(2,1) = F11*F31*chi31*dAdF11122 + F11*F31*chi32*dAdF11222 + F11*F31*chi33*dAdF11322 + F11*F32*chi31*dAdF12122 + F11*F32*chi32*dAdF12222 + F11*F32*chi33*dAdF12322 + F11*F33*chi31*dAdF13122 + F11*F33*chi32*dAdF13222 + F11*F33*chi33*dAdF13322 + F12*F31*chi31*dAdF21122 + F12*F31*chi32*dAdF21222 + F12*F31*chi33*dAdF21322 + F12*F32*chi31*dAdF22122 + F12*F32*chi32*dAdF22222 + F12*F32*chi33*dAdF22322 + F12*F33*chi31*dAdF23122 + F12*F33*chi32*dAdF23222 + F12*F33*chi33*dAdF23322 + F13*F31*chi31*dAdF31122 + F13*F31*chi32*dAdF31222 + F13*F31*chi33*dAdF31322 + F13*F32*chi31*dAdF32122 + F13*F32*chi32*dAdF32222 + F13*F32*chi33*dAdF32322 + F13*F33*chi31*dAdF33122 + F13*F33*chi32*dAdF33222 + F13*F33*chi33*dAdF33322 - J*a133*dJdF22;
        dadF(2,2) = A131*F11*chi31 + A132*F11*chi32 + A133*F11*chi33 + A231*F12*chi31 + A232*F12*chi32 + A233*F12*chi33 + A331*F13*chi31 + A332*F13*chi32 + A333*F13*chi33 + F11*F31*chi31*dAdF11133 + F11*F31*chi32*dAdF11233 + F11*F31*chi33*dAdF11333 + F11*F32*chi31*dAdF12133 + F11*F32*chi32*dAdF12233 + F11*F32*chi33*dAdF12333 + F11*F33*chi31*dAdF13133 + F11*F33*chi32*dAdF13233 + F11*F33*chi33*dAdF13333 + F12*F31*chi31*dAdF21133 + F12*F31*chi32*dAdF21233 + F12*F31*chi33*dAdF21333 + F12*F32*chi31*dAdF22133 + F12*F32*chi32*dAdF22233 + F12*F32*chi33*dAdF22333 + F12*F33*chi31*dAdF23133 + F12*F33*chi32*dAdF23233 + F12*F33*chi33*dAdF23333 + F13*F31*chi31*dAdF31133 + F13*F31*chi32*dAdF31233 + F13*F31*chi33*dAdF31333 + F13*F32*chi31*dAdF32133 + F13*F32*chi32*dAdF32233 + F13*F32*chi33*dAdF32333 + F13*F33*chi31*dAdF33133 + F13*F33*chi32*dAdF33233 + F13*F33*chi33*dAdF33333 - J*a133*dJdF33;
        dadF(2,3) = F11*F31*chi31*dAdF11123 + F11*F31*chi32*dAdF11223 + F11*F31*chi33*dAdF11323 + F11*F32*chi31*dAdF12123 + F11*F32*chi32*dAdF12223 + F11*F32*chi33*dAdF12323 + F11*F33*chi31*dAdF13123 + F11*F33*chi32*dAdF13223 + F11*F33*chi33*dAdF13323 + F12*F31*chi31*dAdF21123 + F12*F31*chi32*dAdF21223 + F12*F31*chi33*dAdF21323 + F12*F32*chi31*dAdF22123 + F12*F32*chi32*dAdF22223 + F12*F32*chi33*dAdF22323 + F12*F33*chi31*dAdF23123 + F12*F33*chi32*dAdF23223 + F12*F33*chi33*dAdF23323 + F13*F31*chi31*dAdF31123 + F13*F31*chi32*dAdF31223 + F13*F31*chi33*dAdF31323 + F13*F32*chi31*dAdF32123 + F13*F32*chi32*dAdF32223 + F13*F32*chi33*dAdF32323 + F13*F33*chi31*dAdF33123 + F13*F33*chi32*dAdF33223 + F13*F33*chi33*dAdF33323 - J*a133*dJdF23;
        dadF(2,4) = A311*F31*chi31 + A312*F31*chi32 + A313*F31*chi33 + A321*F32*chi31 + A322*F32*chi32 + A323*F32*chi33 + A331*F33*chi31 + A332*F33*chi32 + A333*F33*chi33 + F11*F31*chi31*dAdF11113 + F11*F31*chi32*dAdF11213 + F11*F31*chi33*dAdF11313 + F11*F32*chi31*dAdF12113 + F11*F32*chi32*dAdF12213 + F11*F32*chi33*dAdF12313 + F11*F33*chi31*dAdF13113 + F11*F33*chi32*dAdF13213 + F11*F33*chi33*dAdF13313 + F12*F31*chi31*dAdF21113 + F12*F31*chi32*dAdF21213 + F12*F31*chi33*dAdF21313 + F12*F32*chi31*dAdF22113 + F12*F32*chi32*dAdF22213 + F12*F32*chi33*dAdF22313 + F12*F33*chi31*dAdF23113 + F12*F33*chi32*dAdF23213 + F12*F33*chi33*dAdF23313 + F13*F31*chi31*dAdF31113 + F13*F31*chi32*dAdF31213 + F13*F31*chi33*dAdF31313 + F13*F32*chi31*dAdF32113 + F13*F32*chi32*dAdF32213 + F13*F32*chi33*dAdF32313 + F13*F33*chi31*dAdF33113 + F13*F33*chi32*dAdF33213 + F13*F33*chi33*dAdF33313 - J*a133*dJdF13;
        dadF(2,5) = A211*F31*chi31 + A212*F31*chi32 + A213*F31*chi33 + A221*F32*chi31 + A222*F32*chi32 + A223*F32*chi33 + A231*F33*chi31 + A232*F33*chi32 + A233*F33*chi33 + F11*F31*chi31*dAdF11112 + F11*F31*chi32*dAdF11212 + F11*F31*chi33*dAdF11312 + F11*F32*chi31*dAdF12112 + F11*F32*chi32*dAdF12212 + F11*F32*chi33*dAdF12312 + F11*F33*chi31*dAdF13112 + F11*F33*chi32*dAdF13212 + F11*F33*chi33*dAdF13312 + F12*F31*chi31*dAdF21112 + F12*F31*chi32*dAdF21212 + F12*F31*chi33*dAdF21312 + F12*F32*chi31*dAdF22112 + F12*F32*chi32*dAdF22212 + F12*F32*chi33*dAdF22312 + F12*F33*chi31*dAdF23112 + F12*F33*chi32*dAdF23212 + F12*F33*chi33*dAdF23312 + F13*F31*chi31*dAdF31112 + F13*F31*chi32*dAdF31212 + F13*F31*chi33*dAdF31312 + F13*F32*chi31*dAdF32112 + F13*F32*chi32*dAdF32212 + F13*F32*chi33*dAdF32312 + F13*F33*chi31*dAdF33112 + F13*F33*chi32*dAdF33212 + F13*F33*chi33*dAdF33312 - J*a133*dJdF12;
        dadF(2,6) = A121*F11*chi31 + A122*F11*chi32 + A123*F11*chi33 + A221*F12*chi31 + A222*F12*chi32 + A223*F12*chi33 + A321*F13*chi31 + A322*F13*chi32 + A323*F13*chi33 + F11*F31*chi31*dAdF11132 + F11*F31*chi32*dAdF11232 + F11*F31*chi33*dAdF11332 + F11*F32*chi31*dAdF12132 + F11*F32*chi32*dAdF12232 + F11*F32*chi33*dAdF12332 + F11*F33*chi31*dAdF13132 + F11*F33*chi32*dAdF13232 + F11*F33*chi33*dAdF13332 + F12*F31*chi31*dAdF21132 + F12*F31*chi32*dAdF21232 + F12*F31*chi33*dAdF21332 + F12*F32*chi31*dAdF22132 + F12*F32*chi32*dAdF22232 + F12*F32*chi33*dAdF22332 + F12*F33*chi31*dAdF23132 + F12*F33*chi32*dAdF23232 + F12*F33*chi33*dAdF23332 + F13*F31*chi31*dAdF31132 + F13*F31*chi32*dAdF31232 + F13*F31*chi33*dAdF31332 + F13*F32*chi31*dAdF32132 + F13*F32*chi32*dAdF32232 + F13*F32*chi33*dAdF32332 + F13*F33*chi31*dAdF33132 + F13*F33*chi32*dAdF33232 + F13*F33*chi33*dAdF33332 - J*a133*dJdF32;
        dadF(2,7) = A111*F11*chi31 + A112*F11*chi32 + A113*F11*chi33 + A211*F12*chi31 + A212*F12*chi32 + A213*F12*chi33 + A311*F13*chi31 + A312*F13*chi32 + A313*F13*chi33 + F11*F31*chi31*dAdF11131 + F11*F31*chi32*dAdF11231 + F11*F31*chi33*dAdF11331 + F11*F32*chi31*dAdF12131 + F11*F32*chi32*dAdF12231 + F11*F32*chi33*dAdF12331 + F11*F33*chi31*dAdF13131 + F11*F33*chi32*dAdF13231 + F11*F33*chi33*dAdF13331 + F12*F31*chi31*dAdF21131 + F12*F31*chi32*dAdF21231 + F12*F31*chi33*dAdF21331 + F12*F32*chi31*dAdF22131 + F12*F32*chi32*dAdF22231 + F12*F32*chi33*dAdF22331 + F12*F33*chi31*dAdF23131 + F12*F33*chi32*dAdF23231 + F12*F33*chi33*dAdF23331 + F13*F31*chi31*dAdF31131 + F13*F31*chi32*dAdF31231 + F13*F31*chi33*dAdF31331 + F13*F32*chi31*dAdF32131 + F13*F32*chi32*dAdF32231 + F13*F32*chi33*dAdF32331 + F13*F33*chi31*dAdF33131 + F13*F33*chi32*dAdF33231 + F13*F33*chi33*dAdF33331 - J*a133*dJdF31;
        dadF(2,8) = F11*F31*chi31*dAdF11121 + F11*F31*chi32*dAdF11221 + F11*F31*chi33*dAdF11321 + F11*F32*chi31*dAdF12121 + F11*F32*chi32*dAdF12221 + F11*F32*chi33*dAdF12321 + F11*F33*chi31*dAdF13121 + F11*F33*chi32*dAdF13221 + F11*F33*chi33*dAdF13321 + F12*F31*chi31*dAdF21121 + F12*F31*chi32*dAdF21221 + F12*F31*chi33*dAdF21321 + F12*F32*chi31*dAdF22121 + F12*F32*chi32*dAdF22221 + F12*F32*chi33*dAdF22321 + F12*F33*chi31*dAdF23121 + F12*F33*chi32*dAdF23221 + F12*F33*chi33*dAdF23321 + F13*F31*chi31*dAdF31121 + F13*F31*chi32*dAdF31221 + F13*F31*chi33*dAdF31321 + F13*F32*chi31*dAdF32121 + F13*F32*chi32*dAdF32221 + F13*F32*chi33*dAdF32321 + F13*F33*chi31*dAdF33121 + F13*F33*chi32*dAdF33221 + F13*F33*chi33*dAdF33321 - J*a133*dJdF21;
        dadF(3,0) = A111*F21*chi31 + A112*F21*chi32 + A113*F21*chi33 + A121*F22*chi31 + A122*F22*chi32 + A123*F22*chi33 + A131*F23*chi31 + A132*F23*chi32 + A133*F23*chi33 + F11*F21*chi31*dAdF11111 + F11*F21*chi32*dAdF11211 + F11*F21*chi33*dAdF11311 + F11*F22*chi31*dAdF12111 + F11*F22*chi32*dAdF12211 + F11*F22*chi33*dAdF12311 + F11*F23*chi31*dAdF13111 + F11*F23*chi32*dAdF13211 + F11*F23*chi33*dAdF13311 + F12*F21*chi31*dAdF21111 + F12*F21*chi32*dAdF21211 + F12*F21*chi33*dAdF21311 + F12*F22*chi31*dAdF22111 + F12*F22*chi32*dAdF22211 + F12*F22*chi33*dAdF22311 + F12*F23*chi31*dAdF23111 + F12*F23*chi32*dAdF23211 + F12*F23*chi33*dAdF23311 + F13*F21*chi31*dAdF31111 + F13*F21*chi32*dAdF31211 + F13*F21*chi33*dAdF31311 + F13*F22*chi31*dAdF32111 + F13*F22*chi32*dAdF32211 + F13*F22*chi33*dAdF32311 + F13*F23*chi31*dAdF33111 + F13*F23*chi32*dAdF33211 + F13*F23*chi33*dAdF33311 - J*a123*dJdF11;
        dadF(3,1) = A121*F11*chi31 + A122*F11*chi32 + A123*F11*chi33 + A221*F12*chi31 + A222*F12*chi32 + A223*F12*chi33 + A321*F13*chi31 + A322*F13*chi32 + A323*F13*chi33 + F11*F21*chi31*dAdF11122 + F11*F21*chi32*dAdF11222 + F11*F21*chi33*dAdF11322 + F11*F22*chi31*dAdF12122 + F11*F22*chi32*dAdF12222 + F11*F22*chi33*dAdF12322 + F11*F23*chi31*dAdF13122 + F11*F23*chi32*dAdF13222 + F11*F23*chi33*dAdF13322 + F12*F21*chi31*dAdF21122 + F12*F21*chi32*dAdF21222 + F12*F21*chi33*dAdF21322 + F12*F22*chi31*dAdF22122 + F12*F22*chi32*dAdF22222 + F12*F22*chi33*dAdF22322 + F12*F23*chi31*dAdF23122 + F12*F23*chi32*dAdF23222 + F12*F23*chi33*dAdF23322 + F13*F21*chi31*dAdF31122 + F13*F21*chi32*dAdF31222 + F13*F21*chi33*dAdF31322 + F13*F22*chi31*dAdF32122 + F13*F22*chi32*dAdF32222 + F13*F22*chi33*dAdF32322 + F13*F23*chi31*dAdF33122 + F13*F23*chi32*dAdF33222 + F13*F23*chi33*dAdF33322 - J*a123*dJdF22;
        dadF(3,2) = F11*F21*chi31*dAdF11133 + F11*F21*chi32*dAdF11233 + F11*F21*chi33*dAdF11333 + F11*F22*chi31*dAdF12133 + F11*F22*chi32*dAdF12233 + F11*F22*chi33*dAdF12333 + F11*F23*chi31*dAdF13133 + F11*F23*chi32*dAdF13233 + F11*F23*chi33*dAdF13333 + F12*F21*chi31*dAdF21133 + F12*F21*chi32*dAdF21233 + F12*F21*chi33*dAdF21333 + F12*F22*chi31*dAdF22133 + F12*F22*chi32*dAdF22233 + F12*F22*chi33*dAdF22333 + F12*F23*chi31*dAdF23133 + F12*F23*chi32*dAdF23233 + F12*F23*chi33*dAdF23333 + F13*F21*chi31*dAdF31133 + F13*F21*chi32*dAdF31233 + F13*F21*chi33*dAdF31333 + F13*F22*chi31*dAdF32133 + F13*F22*chi32*dAdF32233 + F13*F22*chi33*dAdF32333 + F13*F23*chi31*dAdF33133 + F13*F23*chi32*dAdF33233 + F13*F23*chi33*dAdF33333 - J*a123*dJdF33;
        dadF(3,3) = A131*F11*chi31 + A132*F11*chi32 + A133*F11*chi33 + A231*F12*chi31 + A232*F12*chi32 + A233*F12*chi33 + A331*F13*chi31 + A332*F13*chi32 + A333*F13*chi33 + F11*F21*chi31*dAdF11123 + F11*F21*chi32*dAdF11223 + F11*F21*chi33*dAdF11323 + F11*F22*chi31*dAdF12123 + F11*F22*chi32*dAdF12223 + F11*F22*chi33*dAdF12323 + F11*F23*chi31*dAdF13123 + F11*F23*chi32*dAdF13223 + F11*F23*chi33*dAdF13323 + F12*F21*chi31*dAdF21123 + F12*F21*chi32*dAdF21223 + F12*F21*chi33*dAdF21323 + F12*F22*chi31*dAdF22123 + F12*F22*chi32*dAdF22223 + F12*F22*chi33*dAdF22323 + F12*F23*chi31*dAdF23123 + F12*F23*chi32*dAdF23223 + F12*F23*chi33*dAdF23323 + F13*F21*chi31*dAdF31123 + F13*F21*chi32*dAdF31223 + F13*F21*chi33*dAdF31323 + F13*F22*chi31*dAdF32123 + F13*F22*chi32*dAdF32223 + F13*F22*chi33*dAdF32323 + F13*F23*chi31*dAdF33123 + F13*F23*chi32*dAdF33223 + F13*F23*chi33*dAdF33323 - J*a123*dJdF23;
        dadF(3,4) = A311*F21*chi31 + A312*F21*chi32 + A313*F21*chi33 + A321*F22*chi31 + A322*F22*chi32 + A323*F22*chi33 + A331*F23*chi31 + A332*F23*chi32 + A333*F23*chi33 + F11*F21*chi31*dAdF11113 + F11*F21*chi32*dAdF11213 + F11*F21*chi33*dAdF11313 + F11*F22*chi31*dAdF12113 + F11*F22*chi32*dAdF12213 + F11*F22*chi33*dAdF12313 + F11*F23*chi31*dAdF13113 + F11*F23*chi32*dAdF13213 + F11*F23*chi33*dAdF13313 + F12*F21*chi31*dAdF21113 + F12*F21*chi32*dAdF21213 + F12*F21*chi33*dAdF21313 + F12*F22*chi31*dAdF22113 + F12*F22*chi32*dAdF22213 + F12*F22*chi33*dAdF22313 + F12*F23*chi31*dAdF23113 + F12*F23*chi32*dAdF23213 + F12*F23*chi33*dAdF23313 + F13*F21*chi31*dAdF31113 + F13*F21*chi32*dAdF31213 + F13*F21*chi33*dAdF31313 + F13*F22*chi31*dAdF32113 + F13*F22*chi32*dAdF32213 + F13*F22*chi33*dAdF32313 + F13*F23*chi31*dAdF33113 + F13*F23*chi32*dAdF33213 + F13*F23*chi33*dAdF33313 - J*a123*dJdF13;
        dadF(3,5) = A211*F21*chi31 + A212*F21*chi32 + A213*F21*chi33 + A221*F22*chi31 + A222*F22*chi32 + A223*F22*chi33 + A231*F23*chi31 + A232*F23*chi32 + A233*F23*chi33 + F11*F21*chi31*dAdF11112 + F11*F21*chi32*dAdF11212 + F11*F21*chi33*dAdF11312 + F11*F22*chi31*dAdF12112 + F11*F22*chi32*dAdF12212 + F11*F22*chi33*dAdF12312 + F11*F23*chi31*dAdF13112 + F11*F23*chi32*dAdF13212 + F11*F23*chi33*dAdF13312 + F12*F21*chi31*dAdF21112 + F12*F21*chi32*dAdF21212 + F12*F21*chi33*dAdF21312 + F12*F22*chi31*dAdF22112 + F12*F22*chi32*dAdF22212 + F12*F22*chi33*dAdF22312 + F12*F23*chi31*dAdF23112 + F12*F23*chi32*dAdF23212 + F12*F23*chi33*dAdF23312 + F13*F21*chi31*dAdF31112 + F13*F21*chi32*dAdF31212 + F13*F21*chi33*dAdF31312 + F13*F22*chi31*dAdF32112 + F13*F22*chi32*dAdF32212 + F13*F22*chi33*dAdF32312 + F13*F23*chi31*dAdF33112 + F13*F23*chi32*dAdF33212 + F13*F23*chi33*dAdF33312 - J*a123*dJdF12;
        dadF(3,6) = F11*F21*chi31*dAdF11132 + F11*F21*chi32*dAdF11232 + F11*F21*chi33*dAdF11332 + F11*F22*chi31*dAdF12132 + F11*F22*chi32*dAdF12232 + F11*F22*chi33*dAdF12332 + F11*F23*chi31*dAdF13132 + F11*F23*chi32*dAdF13232 + F11*F23*chi33*dAdF13332 + F12*F21*chi31*dAdF21132 + F12*F21*chi32*dAdF21232 + F12*F21*chi33*dAdF21332 + F12*F22*chi31*dAdF22132 + F12*F22*chi32*dAdF22232 + F12*F22*chi33*dAdF22332 + F12*F23*chi31*dAdF23132 + F12*F23*chi32*dAdF23232 + F12*F23*chi33*dAdF23332 + F13*F21*chi31*dAdF31132 + F13*F21*chi32*dAdF31232 + F13*F21*chi33*dAdF31332 + F13*F22*chi31*dAdF32132 + F13*F22*chi32*dAdF32232 + F13*F22*chi33*dAdF32332 + F13*F23*chi31*dAdF33132 + F13*F23*chi32*dAdF33232 + F13*F23*chi33*dAdF33332 - J*a123*dJdF32;
        dadF(3,7) = F11*F21*chi31*dAdF11131 + F11*F21*chi32*dAdF11231 + F11*F21*chi33*dAdF11331 + F11*F22*chi31*dAdF12131 + F11*F22*chi32*dAdF12231 + F11*F22*chi33*dAdF12331 + F11*F23*chi31*dAdF13131 + F11*F23*chi32*dAdF13231 + F11*F23*chi33*dAdF13331 + F12*F21*chi31*dAdF21131 + F12*F21*chi32*dAdF21231 + F12*F21*chi33*dAdF21331 + F12*F22*chi31*dAdF22131 + F12*F22*chi32*dAdF22231 + F12*F22*chi33*dAdF22331 + F12*F23*chi31*dAdF23131 + F12*F23*chi32*dAdF23231 + F12*F23*chi33*dAdF23331 + F13*F21*chi31*dAdF31131 + F13*F21*chi32*dAdF31231 + F13*F21*chi33*dAdF31331 + F13*F22*chi31*dAdF32131 + F13*F22*chi32*dAdF32231 + F13*F22*chi33*dAdF32331 + F13*F23*chi31*dAdF33131 + F13*F23*chi32*dAdF33231 + F13*F23*chi33*dAdF33331 - J*a123*dJdF31;
        dadF(3,8) = A111*F11*chi31 + A112*F11*chi32 + A113*F11*chi33 + A211*F12*chi31 + A212*F12*chi32 + A213*F12*chi33 + A311*F13*chi31 + A312*F13*chi32 + A313*F13*chi33 + F11*F21*chi31*dAdF11121 + F11*F21*chi32*dAdF11221 + F11*F21*chi33*dAdF11321 + F11*F22*chi31*dAdF12121 + F11*F22*chi32*dAdF12221 + F11*F22*chi33*dAdF12321 + F11*F23*chi31*dAdF13121 + F11*F23*chi32*dAdF13221 + F11*F23*chi33*dAdF13321 + F12*F21*chi31*dAdF21121 + F12*F21*chi32*dAdF21221 + F12*F21*chi33*dAdF21321 + F12*F22*chi31*dAdF22121 + F12*F22*chi32*dAdF22221 + F12*F22*chi33*dAdF22321 + F12*F23*chi31*dAdF23121 + F12*F23*chi32*dAdF23221 + F12*F23*chi33*dAdF23321 + F13*F21*chi31*dAdF31121 + F13*F21*chi32*dAdF31221 + F13*F21*chi33*dAdF31321 + F13*F22*chi31*dAdF32121 + F13*F22*chi32*dAdF32221 + F13*F22*chi33*dAdF32321 + F13*F23*chi31*dAdF33121 + F13*F23*chi32*dAdF33221 + F13*F23*chi33*dAdF33321 - J*a123*dJdF21;
        dadF(4,0) = 2*A111*F11*chi31 + 2*A112*F11*chi32 + 2*A113*F11*chi33 + A121*F12*chi31 + A122*F12*chi32 + A123*F12*chi33 + A131*F13*chi31 + A132*F13*chi32 + A133*F13*chi33 + A211*F12*chi31 + A212*F12*chi32 + A213*F12*chi33 + A311*F13*chi31 + A312*F13*chi32 + A313*F13*chi33 + F11*F11*chi31*dAdF11111 + F11*F11*chi32*dAdF11211 + F11*F11*chi33*dAdF11311 + F11*F12*chi31*dAdF12111 + F11*F12*chi31*dAdF21111 + F11*F12*chi32*dAdF12211 + F11*F12*chi32*dAdF21211 + F11*F12*chi33*dAdF12311 + F11*F12*chi33*dAdF21311 + F11*F13*chi31*dAdF13111 + F11*F13*chi31*dAdF31111 + F11*F13*chi32*dAdF13211 + F11*F13*chi32*dAdF31211 + F11*F13*chi33*dAdF13311 + F11*F13*chi33*dAdF31311 + F12*F12*chi31*dAdF22111 + F12*F12*chi32*dAdF22211 + F12*F12*chi33*dAdF22311 + F12*F13*chi31*dAdF23111 + F12*F13*chi31*dAdF32111 + F12*F13*chi32*dAdF23211 + F12*F13*chi32*dAdF32211 + F12*F13*chi33*dAdF23311 + F12*F13*chi33*dAdF32311 + F13*F13*chi31*dAdF33111 + F13*F13*chi32*dAdF33211 + F13*F13*chi33*dAdF33311 - J*a113*dJdF11;
        dadF(4,1) = F11*F11*chi31*dAdF11122 + F11*F11*chi32*dAdF11222 + F11*F11*chi33*dAdF11322 + F11*F12*chi31*dAdF12122 + F11*F12*chi31*dAdF21122 + F11*F12*chi32*dAdF12222 + F11*F12*chi32*dAdF21222 + F11*F12*chi33*dAdF12322 + F11*F12*chi33*dAdF21322 + F11*F13*chi31*dAdF13122 + F11*F13*chi31*dAdF31122 + F11*F13*chi32*dAdF13222 + F11*F13*chi32*dAdF31222 + F11*F13*chi33*dAdF13322 + F11*F13*chi33*dAdF31322 + F12*F12*chi31*dAdF22122 + F12*F12*chi32*dAdF22222 + F12*F12*chi33*dAdF22322 + F12*F13*chi31*dAdF23122 + F12*F13*chi31*dAdF32122 + F12*F13*chi32*dAdF23222 + F12*F13*chi32*dAdF32222 + F12*F13*chi33*dAdF23322 + F12*F13*chi33*dAdF32322 + F13*F13*chi31*dAdF33122 + F13*F13*chi32*dAdF33222 + F13*F13*chi33*dAdF33322 - J*a113*dJdF22;
        dadF(4,2) = F11*F11*chi31*dAdF11133 + F11*F11*chi32*dAdF11233 + F11*F11*chi33*dAdF11333 + F11*F12*chi31*dAdF12133 + F11*F12*chi31*dAdF21133 + F11*F12*chi32*dAdF12233 + F11*F12*chi32*dAdF21233 + F11*F12*chi33*dAdF12333 + F11*F12*chi33*dAdF21333 + F11*F13*chi31*dAdF13133 + F11*F13*chi31*dAdF31133 + F11*F13*chi32*dAdF13233 + F11*F13*chi32*dAdF31233 + F11*F13*chi33*dAdF13333 + F11*F13*chi33*dAdF31333 + F12*F12*chi31*dAdF22133 + F12*F12*chi32*dAdF22233 + F12*F12*chi33*dAdF22333 + F12*F13*chi31*dAdF23133 + F12*F13*chi31*dAdF32133 + F12*F13*chi32*dAdF23233 + F12*F13*chi32*dAdF32233 + F12*F13*chi33*dAdF23333 + F12*F13*chi33*dAdF32333 + F13*F13*chi31*dAdF33133 + F13*F13*chi32*dAdF33233 + F13*F13*chi33*dAdF33333 - J*a113*dJdF33;
        dadF(4,3) = F11*F11*chi31*dAdF11123 + F11*F11*chi32*dAdF11223 + F11*F11*chi33*dAdF11323 + F11*F12*chi31*dAdF12123 + F11*F12*chi31*dAdF21123 + F11*F12*chi32*dAdF12223 + F11*F12*chi32*dAdF21223 + F11*F12*chi33*dAdF12323 + F11*F12*chi33*dAdF21323 + F11*F13*chi31*dAdF13123 + F11*F13*chi31*dAdF31123 + F11*F13*chi32*dAdF13223 + F11*F13*chi32*dAdF31223 + F11*F13*chi33*dAdF13323 + F11*F13*chi33*dAdF31323 + F12*F12*chi31*dAdF22123 + F12*F12*chi32*dAdF22223 + F12*F12*chi33*dAdF22323 + F12*F13*chi31*dAdF23123 + F12*F13*chi31*dAdF32123 + F12*F13*chi32*dAdF23223 + F12*F13*chi32*dAdF32223 + F12*F13*chi33*dAdF23323 + F12*F13*chi33*dAdF32323 + F13*F13*chi31*dAdF33123 + F13*F13*chi32*dAdF33223 + F13*F13*chi33*dAdF33323 - J*a113*dJdF23;
        dadF(4,4) = A131*F11*chi31 + A132*F11*chi32 + A133*F11*chi33 + A231*F12*chi31 + A232*F12*chi32 + A233*F12*chi33 + A311*F11*chi31 + A312*F11*chi32 + A313*F11*chi33 + A321*F12*chi31 + A322*F12*chi32 + A323*F12*chi33 + 2*A331*F13*chi31 + 2*A332*F13*chi32 + 2*A333*F13*chi33 + F11*F11*chi31*dAdF11113 + F11*F11*chi32*dAdF11213 + F11*F11*chi33*dAdF11313 + F11*F12*chi31*dAdF12113 + F11*F12*chi31*dAdF21113 + F11*F12*chi32*dAdF12213 + F11*F12*chi32*dAdF21213 + F11*F12*chi33*dAdF12313 + F11*F12*chi33*dAdF21313 + F11*F13*chi31*dAdF13113 + F11*F13*chi31*dAdF31113 + F11*F13*chi32*dAdF13213 + F11*F13*chi32*dAdF31213 + F11*F13*chi33*dAdF13313 + F11*F13*chi33*dAdF31313 + F12*F12*chi31*dAdF22113 + F12*F12*chi32*dAdF22213 + F12*F12*chi33*dAdF22313 + F12*F13*chi31*dAdF23113 + F12*F13*chi31*dAdF32113 + F12*F13*chi32*dAdF23213 + F12*F13*chi32*dAdF32213 + F12*F13*chi33*dAdF23313 + F12*F13*chi33*dAdF32313 + F13*F13*chi31*dAdF33113 + F13*F13*chi32*dAdF33213 + F13*F13*chi33*dAdF33313 - J*a113*dJdF13;
        dadF(4,5) = A121*F11*chi31 + A122*F11*chi32 + A123*F11*chi33 + A211*F11*chi31 + A212*F11*chi32 + A213*F11*chi33 + 2*A221*F12*chi31 + 2*A222*F12*chi32 + 2*A223*F12*chi33 + A231*F13*chi31 + A232*F13*chi32 + A233*F13*chi33 + A321*F13*chi31 + A322*F13*chi32 + A323*F13*chi33 + F11*F11*chi31*dAdF11112 + F11*F11*chi32*dAdF11212 + F11*F11*chi33*dAdF11312 + F11*F12*chi31*dAdF12112 + F11*F12*chi31*dAdF21112 + F11*F12*chi32*dAdF12212 + F11*F12*chi32*dAdF21212 + F11*F12*chi33*dAdF12312 + F11*F12*chi33*dAdF21312 + F11*F13*chi31*dAdF13112 + F11*F13*chi31*dAdF31112 + F11*F13*chi32*dAdF13212 + F11*F13*chi32*dAdF31212 + F11*F13*chi33*dAdF13312 + F11*F13*chi33*dAdF31312 + F12*F12*chi31*dAdF22112 + F12*F12*chi32*dAdF22212 + F12*F12*chi33*dAdF22312 + F12*F13*chi31*dAdF23112 + F12*F13*chi31*dAdF32112 + F12*F13*chi32*dAdF23212 + F12*F13*chi32*dAdF32212 + F12*F13*chi33*dAdF23312 + F12*F13*chi33*dAdF32312 + F13*F13*chi31*dAdF33112 + F13*F13*chi32*dAdF33212 + F13*F13*chi33*dAdF33312 - J*a113*dJdF12;
        dadF(4,6) = F11*F11*chi31*dAdF11132 + F11*F11*chi32*dAdF11232 + F11*F11*chi33*dAdF11332 + F11*F12*chi31*dAdF12132 + F11*F12*chi31*dAdF21132 + F11*F12*chi32*dAdF12232 + F11*F12*chi32*dAdF21232 + F11*F12*chi33*dAdF12332 + F11*F12*chi33*dAdF21332 + F11*F13*chi31*dAdF13132 + F11*F13*chi31*dAdF31132 + F11*F13*chi32*dAdF13232 + F11*F13*chi32*dAdF31232 + F11*F13*chi33*dAdF13332 + F11*F13*chi33*dAdF31332 + F12*F12*chi31*dAdF22132 + F12*F12*chi32*dAdF22232 + F12*F12*chi33*dAdF22332 + F12*F13*chi31*dAdF23132 + F12*F13*chi31*dAdF32132 + F12*F13*chi32*dAdF23232 + F12*F13*chi32*dAdF32232 + F12*F13*chi33*dAdF23332 + F12*F13*chi33*dAdF32332 + F13*F13*chi31*dAdF33132 + F13*F13*chi32*dAdF33232 + F13*F13*chi33*dAdF33332 - J*a113*dJdF32;
        dadF(4,7) = F11*F11*chi31*dAdF11131 + F11*F11*chi32*dAdF11231 + F11*F11*chi33*dAdF11331 + F11*F12*chi31*dAdF12131 + F11*F12*chi31*dAdF21131 + F11*F12*chi32*dAdF12231 + F11*F12*chi32*dAdF21231 + F11*F12*chi33*dAdF12331 + F11*F12*chi33*dAdF21331 + F11*F13*chi31*dAdF13131 + F11*F13*chi31*dAdF31131 + F11*F13*chi32*dAdF13231 + F11*F13*chi32*dAdF31231 + F11*F13*chi33*dAdF13331 + F11*F13*chi33*dAdF31331 + F12*F12*chi31*dAdF22131 + F12*F12*chi32*dAdF22231 + F12*F12*chi33*dAdF22331 + F12*F13*chi31*dAdF23131 + F12*F13*chi31*dAdF32131 + F12*F13*chi32*dAdF23231 + F12*F13*chi32*dAdF32231 + F12*F13*chi33*dAdF23331 + F12*F13*chi33*dAdF32331 + F13*F13*chi31*dAdF33131 + F13*F13*chi32*dAdF33231 + F13*F13*chi33*dAdF33331 - J*a113*dJdF31;
        dadF(4,8) = F11*F11*chi31*dAdF11121 + F11*F11*chi32*dAdF11221 + F11*F11*chi33*dAdF11321 + F11*F12*chi31*dAdF12121 + F11*F12*chi31*dAdF21121 + F11*F12*chi32*dAdF12221 + F11*F12*chi32*dAdF21221 + F11*F12*chi33*dAdF12321 + F11*F12*chi33*dAdF21321 + F11*F13*chi31*dAdF13121 + F11*F13*chi31*dAdF31121 + F11*F13*chi32*dAdF13221 + F11*F13*chi32*dAdF31221 + F11*F13*chi33*dAdF13321 + F11*F13*chi33*dAdF31321 + F12*F12*chi31*dAdF22121 + F12*F12*chi32*dAdF22221 + F12*F12*chi33*dAdF22321 + F12*F13*chi31*dAdF23121 + F12*F13*chi31*dAdF32121 + F12*F13*chi32*dAdF23221 + F12*F13*chi32*dAdF32221 + F12*F13*chi33*dAdF23321 + F12*F13*chi33*dAdF32321 + F13*F13*chi31*dAdF33121 + F13*F13*chi32*dAdF33221 + F13*F13*chi33*dAdF33321 - J*a113*dJdF21;
        dadF(5,0) = 2*A111*F11*chi21 + 2*A112*F11*chi22 + 2*A113*F11*chi23 + A121*F12*chi21 + A122*F12*chi22 + A123*F12*chi23 + A131*F13*chi21 + A132*F13*chi22 + A133*F13*chi23 + A211*F12*chi21 + A212*F12*chi22 + A213*F12*chi23 + A311*F13*chi21 + A312*F13*chi22 + A313*F13*chi23 + F11*F11*chi21*dAdF11111 + F11*F11*chi22*dAdF11211 + F11*F11*chi23*dAdF11311 + F11*F12*chi21*dAdF12111 + F11*F12*chi21*dAdF21111 + F11*F12*chi22*dAdF12211 + F11*F12*chi22*dAdF21211 + F11*F12*chi23*dAdF12311 + F11*F12*chi23*dAdF21311 + F11*F13*chi21*dAdF13111 + F11*F13*chi21*dAdF31111 + F11*F13*chi22*dAdF13211 + F11*F13*chi22*dAdF31211 + F11*F13*chi23*dAdF13311 + F11*F13*chi23*dAdF31311 + F12*F12*chi21*dAdF22111 + F12*F12*chi22*dAdF22211 + F12*F12*chi23*dAdF22311 + F12*F13*chi21*dAdF23111 + F12*F13*chi21*dAdF32111 + F12*F13*chi22*dAdF23211 + F12*F13*chi22*dAdF32211 + F12*F13*chi23*dAdF23311 + F12*F13*chi23*dAdF32311 + F13*F13*chi21*dAdF33111 + F13*F13*chi22*dAdF33211 + F13*F13*chi23*dAdF33311 - J*a112*dJdF11;
        dadF(5,1) = F11*F11*chi21*dAdF11122 + F11*F11*chi22*dAdF11222 + F11*F11*chi23*dAdF11322 + F11*F12*chi21*dAdF12122 + F11*F12*chi21*dAdF21122 + F11*F12*chi22*dAdF12222 + F11*F12*chi22*dAdF21222 + F11*F12*chi23*dAdF12322 + F11*F12*chi23*dAdF21322 + F11*F13*chi21*dAdF13122 + F11*F13*chi21*dAdF31122 + F11*F13*chi22*dAdF13222 + F11*F13*chi22*dAdF31222 + F11*F13*chi23*dAdF13322 + F11*F13*chi23*dAdF31322 + F12*F12*chi21*dAdF22122 + F12*F12*chi22*dAdF22222 + F12*F12*chi23*dAdF22322 + F12*F13*chi21*dAdF23122 + F12*F13*chi21*dAdF32122 + F12*F13*chi22*dAdF23222 + F12*F13*chi22*dAdF32222 + F12*F13*chi23*dAdF23322 + F12*F13*chi23*dAdF32322 + F13*F13*chi21*dAdF33122 + F13*F13*chi22*dAdF33222 + F13*F13*chi23*dAdF33322 - J*a112*dJdF22;
        dadF(5,2) = F11*F11*chi21*dAdF11133 + F11*F11*chi22*dAdF11233 + F11*F11*chi23*dAdF11333 + F11*F12*chi21*dAdF12133 + F11*F12*chi21*dAdF21133 + F11*F12*chi22*dAdF12233 + F11*F12*chi22*dAdF21233 + F11*F12*chi23*dAdF12333 + F11*F12*chi23*dAdF21333 + F11*F13*chi21*dAdF13133 + F11*F13*chi21*dAdF31133 + F11*F13*chi22*dAdF13233 + F11*F13*chi22*dAdF31233 + F11*F13*chi23*dAdF13333 + F11*F13*chi23*dAdF31333 + F12*F12*chi21*dAdF22133 + F12*F12*chi22*dAdF22233 + F12*F12*chi23*dAdF22333 + F12*F13*chi21*dAdF23133 + F12*F13*chi21*dAdF32133 + F12*F13*chi22*dAdF23233 + F12*F13*chi22*dAdF32233 + F12*F13*chi23*dAdF23333 + F12*F13*chi23*dAdF32333 + F13*F13*chi21*dAdF33133 + F13*F13*chi22*dAdF33233 + F13*F13*chi23*dAdF33333 - J*a112*dJdF33;
        dadF(5,3) = F11*F11*chi21*dAdF11123 + F11*F11*chi22*dAdF11223 + F11*F11*chi23*dAdF11323 + F11*F12*chi21*dAdF12123 + F11*F12*chi21*dAdF21123 + F11*F12*chi22*dAdF12223 + F11*F12*chi22*dAdF21223 + F11*F12*chi23*dAdF12323 + F11*F12*chi23*dAdF21323 + F11*F13*chi21*dAdF13123 + F11*F13*chi21*dAdF31123 + F11*F13*chi22*dAdF13223 + F11*F13*chi22*dAdF31223 + F11*F13*chi23*dAdF13323 + F11*F13*chi23*dAdF31323 + F12*F12*chi21*dAdF22123 + F12*F12*chi22*dAdF22223 + F12*F12*chi23*dAdF22323 + F12*F13*chi21*dAdF23123 + F12*F13*chi21*dAdF32123 + F12*F13*chi22*dAdF23223 + F12*F13*chi22*dAdF32223 + F12*F13*chi23*dAdF23323 + F12*F13*chi23*dAdF32323 + F13*F13*chi21*dAdF33123 + F13*F13*chi22*dAdF33223 + F13*F13*chi23*dAdF33323 - J*a112*dJdF23;
        dadF(5,4) = A131*F11*chi21 + A132*F11*chi22 + A133*F11*chi23 + A231*F12*chi21 + A232*F12*chi22 + A233*F12*chi23 + A311*F11*chi21 + A312*F11*chi22 + A313*F11*chi23 + A321*F12*chi21 + A322*F12*chi22 + A323*F12*chi23 + 2*A331*F13*chi21 + 2*A332*F13*chi22 + 2*A333*F13*chi23 + F11*F11*chi21*dAdF11113 + F11*F11*chi22*dAdF11213 + F11*F11*chi23*dAdF11313 + F11*F12*chi21*dAdF12113 + F11*F12*chi21*dAdF21113 + F11*F12*chi22*dAdF12213 + F11*F12*chi22*dAdF21213 + F11*F12*chi23*dAdF12313 + F11*F12*chi23*dAdF21313 + F11*F13*chi21*dAdF13113 + F11*F13*chi21*dAdF31113 + F11*F13*chi22*dAdF13213 + F11*F13*chi22*dAdF31213 + F11*F13*chi23*dAdF13313 + F11*F13*chi23*dAdF31313 + F12*F12*chi21*dAdF22113 + F12*F12*chi22*dAdF22213 + F12*F12*chi23*dAdF22313 + F12*F13*chi21*dAdF23113 + F12*F13*chi21*dAdF32113 + F12*F13*chi22*dAdF23213 + F12*F13*chi22*dAdF32213 + F12*F13*chi23*dAdF23313 + F12*F13*chi23*dAdF32313 + F13*F13*chi21*dAdF33113 + F13*F13*chi22*dAdF33213 + F13*F13*chi23*dAdF33313 - J*a112*dJdF13;
        dadF(5,5) = A121*F11*chi21 + A122*F11*chi22 + A123*F11*chi23 + A211*F11*chi21 + A212*F11*chi22 + A213*F11*chi23 + 2*A221*F12*chi21 + 2*A222*F12*chi22 + 2*A223*F12*chi23 + A231*F13*chi21 + A232*F13*chi22 + A233*F13*chi23 + A321*F13*chi21 + A322*F13*chi22 + A323*F13*chi23 + F11*F11*chi21*dAdF11112 + F11*F11*chi22*dAdF11212 + F11*F11*chi23*dAdF11312 + F11*F12*chi21*dAdF12112 + F11*F12*chi21*dAdF21112 + F11*F12*chi22*dAdF12212 + F11*F12*chi22*dAdF21212 + F11*F12*chi23*dAdF12312 + F11*F12*chi23*dAdF21312 + F11*F13*chi21*dAdF13112 + F11*F13*chi21*dAdF31112 + F11*F13*chi22*dAdF13212 + F11*F13*chi22*dAdF31212 + F11*F13*chi23*dAdF13312 + F11*F13*chi23*dAdF31312 + F12*F12*chi21*dAdF22112 + F12*F12*chi22*dAdF22212 + F12*F12*chi23*dAdF22312 + F12*F13*chi21*dAdF23112 + F12*F13*chi21*dAdF32112 + F12*F13*chi22*dAdF23212 + F12*F13*chi22*dAdF32212 + F12*F13*chi23*dAdF23312 + F12*F13*chi23*dAdF32312 + F13*F13*chi21*dAdF33112 + F13*F13*chi22*dAdF33212 + F13*F13*chi23*dAdF33312 - J*a112*dJdF12;
        dadF(5,6) = F11*F11*chi21*dAdF11132 + F11*F11*chi22*dAdF11232 + F11*F11*chi23*dAdF11332 + F11*F12*chi21*dAdF12132 + F11*F12*chi21*dAdF21132 + F11*F12*chi22*dAdF12232 + F11*F12*chi22*dAdF21232 + F11*F12*chi23*dAdF12332 + F11*F12*chi23*dAdF21332 + F11*F13*chi21*dAdF13132 + F11*F13*chi21*dAdF31132 + F11*F13*chi22*dAdF13232 + F11*F13*chi22*dAdF31232 + F11*F13*chi23*dAdF13332 + F11*F13*chi23*dAdF31332 + F12*F12*chi21*dAdF22132 + F12*F12*chi22*dAdF22232 + F12*F12*chi23*dAdF22332 + F12*F13*chi21*dAdF23132 + F12*F13*chi21*dAdF32132 + F12*F13*chi22*dAdF23232 + F12*F13*chi22*dAdF32232 + F12*F13*chi23*dAdF23332 + F12*F13*chi23*dAdF32332 + F13*F13*chi21*dAdF33132 + F13*F13*chi22*dAdF33232 + F13*F13*chi23*dAdF33332 - J*a112*dJdF32;
        dadF(5,7) = F11*F11*chi21*dAdF11131 + F11*F11*chi22*dAdF11231 + F11*F11*chi23*dAdF11331 + F11*F12*chi21*dAdF12131 + F11*F12*chi21*dAdF21131 + F11*F12*chi22*dAdF12231 + F11*F12*chi22*dAdF21231 + F11*F12*chi23*dAdF12331 + F11*F12*chi23*dAdF21331 + F11*F13*chi21*dAdF13131 + F11*F13*chi21*dAdF31131 + F11*F13*chi22*dAdF13231 + F11*F13*chi22*dAdF31231 + F11*F13*chi23*dAdF13331 + F11*F13*chi23*dAdF31331 + F12*F12*chi21*dAdF22131 + F12*F12*chi22*dAdF22231 + F12*F12*chi23*dAdF22331 + F12*F13*chi21*dAdF23131 + F12*F13*chi21*dAdF32131 + F12*F13*chi22*dAdF23231 + F12*F13*chi22*dAdF32231 + F12*F13*chi23*dAdF23331 + F12*F13*chi23*dAdF32331 + F13*F13*chi21*dAdF33131 + F13*F13*chi22*dAdF33231 + F13*F13*chi23*dAdF33331 - J*a112*dJdF31;
        dadF(5,8) = F11*F11*chi21*dAdF11121 + F11*F11*chi22*dAdF11221 + F11*F11*chi23*dAdF11321 + F11*F12*chi21*dAdF12121 + F11*F12*chi21*dAdF21121 + F11*F12*chi22*dAdF12221 + F11*F12*chi22*dAdF21221 + F11*F12*chi23*dAdF12321 + F11*F12*chi23*dAdF21321 + F11*F13*chi21*dAdF13121 + F11*F13*chi21*dAdF31121 + F11*F13*chi22*dAdF13221 + F11*F13*chi22*dAdF31221 + F11*F13*chi23*dAdF13321 + F11*F13*chi23*dAdF31321 + F12*F12*chi21*dAdF22121 + F12*F12*chi22*dAdF22221 + F12*F12*chi23*dAdF22321 + F12*F13*chi21*dAdF23121 + F12*F13*chi21*dAdF32121 + F12*F13*chi22*dAdF23221 + F12*F13*chi22*dAdF32221 + F12*F13*chi23*dAdF23321 + F12*F13*chi23*dAdF32321 + F13*F13*chi21*dAdF33121 + F13*F13*chi22*dAdF33221 + F13*F13*chi23*dAdF33321 - J*a112*dJdF21;
        dadF(6,0) = A111*F31*chi21 + A112*F31*chi22 + A113*F31*chi23 + A121*F32*chi21 + A122*F32*chi22 + A123*F32*chi23 + A131*F33*chi21 + A132*F33*chi22 + A133*F33*chi23 + F11*F31*chi21*dAdF11111 + F11*F31*chi22*dAdF11211 + F11*F31*chi23*dAdF11311 + F11*F32*chi21*dAdF12111 + F11*F32*chi22*dAdF12211 + F11*F32*chi23*dAdF12311 + F11*F33*chi21*dAdF13111 + F11*F33*chi22*dAdF13211 + F11*F33*chi23*dAdF13311 + F12*F31*chi21*dAdF21111 + F12*F31*chi22*dAdF21211 + F12*F31*chi23*dAdF21311 + F12*F32*chi21*dAdF22111 + F12*F32*chi22*dAdF22211 + F12*F32*chi23*dAdF22311 + F12*F33*chi21*dAdF23111 + F12*F33*chi22*dAdF23211 + F12*F33*chi23*dAdF23311 + F13*F31*chi21*dAdF31111 + F13*F31*chi22*dAdF31211 + F13*F31*chi23*dAdF31311 + F13*F32*chi21*dAdF32111 + F13*F32*chi22*dAdF32211 + F13*F32*chi23*dAdF32311 + F13*F33*chi21*dAdF33111 + F13*F33*chi22*dAdF33211 + F13*F33*chi23*dAdF33311 - J*a132*dJdF11;
        dadF(6,1) = F11*F31*chi21*dAdF11122 + F11*F31*chi22*dAdF11222 + F11*F31*chi23*dAdF11322 + F11*F32*chi21*dAdF12122 + F11*F32*chi22*dAdF12222 + F11*F32*chi23*dAdF12322 + F11*F33*chi21*dAdF13122 + F11*F33*chi22*dAdF13222 + F11*F33*chi23*dAdF13322 + F12*F31*chi21*dAdF21122 + F12*F31*chi22*dAdF21222 + F12*F31*chi23*dAdF21322 + F12*F32*chi21*dAdF22122 + F12*F32*chi22*dAdF22222 + F12*F32*chi23*dAdF22322 + F12*F33*chi21*dAdF23122 + F12*F33*chi22*dAdF23222 + F12*F33*chi23*dAdF23322 + F13*F31*chi21*dAdF31122 + F13*F31*chi22*dAdF31222 + F13*F31*chi23*dAdF31322 + F13*F32*chi21*dAdF32122 + F13*F32*chi22*dAdF32222 + F13*F32*chi23*dAdF32322 + F13*F33*chi21*dAdF33122 + F13*F33*chi22*dAdF33222 + F13*F33*chi23*dAdF33322 - J*a132*dJdF22;
        dadF(6,2) = A131*F11*chi21 + A132*F11*chi22 + A133*F11*chi23 + A231*F12*chi21 + A232*F12*chi22 + A233*F12*chi23 + A331*F13*chi21 + A332*F13*chi22 + A333*F13*chi23 + F11*F31*chi21*dAdF11133 + F11*F31*chi22*dAdF11233 + F11*F31*chi23*dAdF11333 + F11*F32*chi21*dAdF12133 + F11*F32*chi22*dAdF12233 + F11*F32*chi23*dAdF12333 + F11*F33*chi21*dAdF13133 + F11*F33*chi22*dAdF13233 + F11*F33*chi23*dAdF13333 + F12*F31*chi21*dAdF21133 + F12*F31*chi22*dAdF21233 + F12*F31*chi23*dAdF21333 + F12*F32*chi21*dAdF22133 + F12*F32*chi22*dAdF22233 + F12*F32*chi23*dAdF22333 + F12*F33*chi21*dAdF23133 + F12*F33*chi22*dAdF23233 + F12*F33*chi23*dAdF23333 + F13*F31*chi21*dAdF31133 + F13*F31*chi22*dAdF31233 + F13*F31*chi23*dAdF31333 + F13*F32*chi21*dAdF32133 + F13*F32*chi22*dAdF32233 + F13*F32*chi23*dAdF32333 + F13*F33*chi21*dAdF33133 + F13*F33*chi22*dAdF33233 + F13*F33*chi23*dAdF33333 - J*a132*dJdF33;
        dadF(6,3) = F11*F31*chi21*dAdF11123 + F11*F31*chi22*dAdF11223 + F11*F31*chi23*dAdF11323 + F11*F32*chi21*dAdF12123 + F11*F32*chi22*dAdF12223 + F11*F32*chi23*dAdF12323 + F11*F33*chi21*dAdF13123 + F11*F33*chi22*dAdF13223 + F11*F33*chi23*dAdF13323 + F12*F31*chi21*dAdF21123 + F12*F31*chi22*dAdF21223 + F12*F31*chi23*dAdF21323 + F12*F32*chi21*dAdF22123 + F12*F32*chi22*dAdF22223 + F12*F32*chi23*dAdF22323 + F12*F33*chi21*dAdF23123 + F12*F33*chi22*dAdF23223 + F12*F33*chi23*dAdF23323 + F13*F31*chi21*dAdF31123 + F13*F31*chi22*dAdF31223 + F13*F31*chi23*dAdF31323 + F13*F32*chi21*dAdF32123 + F13*F32*chi22*dAdF32223 + F13*F32*chi23*dAdF32323 + F13*F33*chi21*dAdF33123 + F13*F33*chi22*dAdF33223 + F13*F33*chi23*dAdF33323 - J*a132*dJdF23;
        dadF(6,4) = A311*F31*chi21 + A312*F31*chi22 + A313*F31*chi23 + A321*F32*chi21 + A322*F32*chi22 + A323*F32*chi23 + A331*F33*chi21 + A332*F33*chi22 + A333*F33*chi23 + F11*F31*chi21*dAdF11113 + F11*F31*chi22*dAdF11213 + F11*F31*chi23*dAdF11313 + F11*F32*chi21*dAdF12113 + F11*F32*chi22*dAdF12213 + F11*F32*chi23*dAdF12313 + F11*F33*chi21*dAdF13113 + F11*F33*chi22*dAdF13213 + F11*F33*chi23*dAdF13313 + F12*F31*chi21*dAdF21113 + F12*F31*chi22*dAdF21213 + F12*F31*chi23*dAdF21313 + F12*F32*chi21*dAdF22113 + F12*F32*chi22*dAdF22213 + F12*F32*chi23*dAdF22313 + F12*F33*chi21*dAdF23113 + F12*F33*chi22*dAdF23213 + F12*F33*chi23*dAdF23313 + F13*F31*chi21*dAdF31113 + F13*F31*chi22*dAdF31213 + F13*F31*chi23*dAdF31313 + F13*F32*chi21*dAdF32113 + F13*F32*chi22*dAdF32213 + F13*F32*chi23*dAdF32313 + F13*F33*chi21*dAdF33113 + F13*F33*chi22*dAdF33213 + F13*F33*chi23*dAdF33313 - J*a132*dJdF13;
        dadF(6,5) = A211*F31*chi21 + A212*F31*chi22 + A213*F31*chi23 + A221*F32*chi21 + A222*F32*chi22 + A223*F32*chi23 + A231*F33*chi21 + A232*F33*chi22 + A233*F33*chi23 + F11*F31*chi21*dAdF11112 + F11*F31*chi22*dAdF11212 + F11*F31*chi23*dAdF11312 + F11*F32*chi21*dAdF12112 + F11*F32*chi22*dAdF12212 + F11*F32*chi23*dAdF12312 + F11*F33*chi21*dAdF13112 + F11*F33*chi22*dAdF13212 + F11*F33*chi23*dAdF13312 + F12*F31*chi21*dAdF21112 + F12*F31*chi22*dAdF21212 + F12*F31*chi23*dAdF21312 + F12*F32*chi21*dAdF22112 + F12*F32*chi22*dAdF22212 + F12*F32*chi23*dAdF22312 + F12*F33*chi21*dAdF23112 + F12*F33*chi22*dAdF23212 + F12*F33*chi23*dAdF23312 + F13*F31*chi21*dAdF31112 + F13*F31*chi22*dAdF31212 + F13*F31*chi23*dAdF31312 + F13*F32*chi21*dAdF32112 + F13*F32*chi22*dAdF32212 + F13*F32*chi23*dAdF32312 + F13*F33*chi21*dAdF33112 + F13*F33*chi22*dAdF33212 + F13*F33*chi23*dAdF33312 - J*a132*dJdF12;
        dadF(6,6) = A121*F11*chi21 + A122*F11*chi22 + A123*F11*chi23 + A221*F12*chi21 + A222*F12*chi22 + A223*F12*chi23 + A321*F13*chi21 + A322*F13*chi22 + A323*F13*chi23 + F11*F31*chi21*dAdF11132 + F11*F31*chi22*dAdF11232 + F11*F31*chi23*dAdF11332 + F11*F32*chi21*dAdF12132 + F11*F32*chi22*dAdF12232 + F11*F32*chi23*dAdF12332 + F11*F33*chi21*dAdF13132 + F11*F33*chi22*dAdF13232 + F11*F33*chi23*dAdF13332 + F12*F31*chi21*dAdF21132 + F12*F31*chi22*dAdF21232 + F12*F31*chi23*dAdF21332 + F12*F32*chi21*dAdF22132 + F12*F32*chi22*dAdF22232 + F12*F32*chi23*dAdF22332 + F12*F33*chi21*dAdF23132 + F12*F33*chi22*dAdF23232 + F12*F33*chi23*dAdF23332 + F13*F31*chi21*dAdF31132 + F13*F31*chi22*dAdF31232 + F13*F31*chi23*dAdF31332 + F13*F32*chi21*dAdF32132 + F13*F32*chi22*dAdF32232 + F13*F32*chi23*dAdF32332 + F13*F33*chi21*dAdF33132 + F13*F33*chi22*dAdF33232 + F13*F33*chi23*dAdF33332 - J*a132*dJdF32;
        dadF(6,7) = A111*F11*chi21 + A112*F11*chi22 + A113*F11*chi23 + A211*F12*chi21 + A212*F12*chi22 + A213*F12*chi23 + A311*F13*chi21 + A312*F13*chi22 + A313*F13*chi23 + F11*F31*chi21*dAdF11131 + F11*F31*chi22*dAdF11231 + F11*F31*chi23*dAdF11331 + F11*F32*chi21*dAdF12131 + F11*F32*chi22*dAdF12231 + F11*F32*chi23*dAdF12331 + F11*F33*chi21*dAdF13131 + F11*F33*chi22*dAdF13231 + F11*F33*chi23*dAdF13331 + F12*F31*chi21*dAdF21131 + F12*F31*chi22*dAdF21231 + F12*F31*chi23*dAdF21331 + F12*F32*chi21*dAdF22131 + F12*F32*chi22*dAdF22231 + F12*F32*chi23*dAdF22331 + F12*F33*chi21*dAdF23131 + F12*F33*chi22*dAdF23231 + F12*F33*chi23*dAdF23331 + F13*F31*chi21*dAdF31131 + F13*F31*chi22*dAdF31231 + F13*F31*chi23*dAdF31331 + F13*F32*chi21*dAdF32131 + F13*F32*chi22*dAdF32231 + F13*F32*chi23*dAdF32331 + F13*F33*chi21*dAdF33131 + F13*F33*chi22*dAdF33231 + F13*F33*chi23*dAdF33331 - J*a132*dJdF31;
        dadF(6,8) = F11*F31*chi21*dAdF11121 + F11*F31*chi22*dAdF11221 + F11*F31*chi23*dAdF11321 + F11*F32*chi21*dAdF12121 + F11*F32*chi22*dAdF12221 + F11*F32*chi23*dAdF12321 + F11*F33*chi21*dAdF13121 + F11*F33*chi22*dAdF13221 + F11*F33*chi23*dAdF13321 + F12*F31*chi21*dAdF21121 + F12*F31*chi22*dAdF21221 + F12*F31*chi23*dAdF21321 + F12*F32*chi21*dAdF22121 + F12*F32*chi22*dAdF22221 + F12*F32*chi23*dAdF22321 + F12*F33*chi21*dAdF23121 + F12*F33*chi22*dAdF23221 + F12*F33*chi23*dAdF23321 + F13*F31*chi21*dAdF31121 + F13*F31*chi22*dAdF31221 + F13*F31*chi23*dAdF31321 + F13*F32*chi21*dAdF32121 + F13*F32*chi22*dAdF32221 + F13*F32*chi23*dAdF32321 + F13*F33*chi21*dAdF33121 + F13*F33*chi22*dAdF33221 + F13*F33*chi23*dAdF33321 - J*a132*dJdF21;
        dadF(7,0) = A111*F31*chi11 + A112*F31*chi12 + A113*F31*chi13 + A121*F32*chi11 + A122*F32*chi12 + A123*F32*chi13 + A131*F33*chi11 + A132*F33*chi12 + A133*F33*chi13 + F11*F31*chi11*dAdF11111 + F11*F31*chi12*dAdF11211 + F11*F31*chi13*dAdF11311 + F11*F32*chi11*dAdF12111 + F11*F32*chi12*dAdF12211 + F11*F32*chi13*dAdF12311 + F11*F33*chi11*dAdF13111 + F11*F33*chi12*dAdF13211 + F11*F33*chi13*dAdF13311 + F12*F31*chi11*dAdF21111 + F12*F31*chi12*dAdF21211 + F12*F31*chi13*dAdF21311 + F12*F32*chi11*dAdF22111 + F12*F32*chi12*dAdF22211 + F12*F32*chi13*dAdF22311 + F12*F33*chi11*dAdF23111 + F12*F33*chi12*dAdF23211 + F12*F33*chi13*dAdF23311 + F13*F31*chi11*dAdF31111 + F13*F31*chi12*dAdF31211 + F13*F31*chi13*dAdF31311 + F13*F32*chi11*dAdF32111 + F13*F32*chi12*dAdF32211 + F13*F32*chi13*dAdF32311 + F13*F33*chi11*dAdF33111 + F13*F33*chi12*dAdF33211 + F13*F33*chi13*dAdF33311 - J*a131*dJdF11;
        dadF(7,1) = F11*F31*chi11*dAdF11122 + F11*F31*chi12*dAdF11222 + F11*F31*chi13*dAdF11322 + F11*F32*chi11*dAdF12122 + F11*F32*chi12*dAdF12222 + F11*F32*chi13*dAdF12322 + F11*F33*chi11*dAdF13122 + F11*F33*chi12*dAdF13222 + F11*F33*chi13*dAdF13322 + F12*F31*chi11*dAdF21122 + F12*F31*chi12*dAdF21222 + F12*F31*chi13*dAdF21322 + F12*F32*chi11*dAdF22122 + F12*F32*chi12*dAdF22222 + F12*F32*chi13*dAdF22322 + F12*F33*chi11*dAdF23122 + F12*F33*chi12*dAdF23222 + F12*F33*chi13*dAdF23322 + F13*F31*chi11*dAdF31122 + F13*F31*chi12*dAdF31222 + F13*F31*chi13*dAdF31322 + F13*F32*chi11*dAdF32122 + F13*F32*chi12*dAdF32222 + F13*F32*chi13*dAdF32322 + F13*F33*chi11*dAdF33122 + F13*F33*chi12*dAdF33222 + F13*F33*chi13*dAdF33322 - J*a131*dJdF22;
        dadF(7,2) = A131*F11*chi11 + A132*F11*chi12 + A133*F11*chi13 + A231*F12*chi11 + A232*F12*chi12 + A233*F12*chi13 + A331*F13*chi11 + A332*F13*chi12 + A333*F13*chi13 + F11*F31*chi11*dAdF11133 + F11*F31*chi12*dAdF11233 + F11*F31*chi13*dAdF11333 + F11*F32*chi11*dAdF12133 + F11*F32*chi12*dAdF12233 + F11*F32*chi13*dAdF12333 + F11*F33*chi11*dAdF13133 + F11*F33*chi12*dAdF13233 + F11*F33*chi13*dAdF13333 + F12*F31*chi11*dAdF21133 + F12*F31*chi12*dAdF21233 + F12*F31*chi13*dAdF21333 + F12*F32*chi11*dAdF22133 + F12*F32*chi12*dAdF22233 + F12*F32*chi13*dAdF22333 + F12*F33*chi11*dAdF23133 + F12*F33*chi12*dAdF23233 + F12*F33*chi13*dAdF23333 + F13*F31*chi11*dAdF31133 + F13*F31*chi12*dAdF31233 + F13*F31*chi13*dAdF31333 + F13*F32*chi11*dAdF32133 + F13*F32*chi12*dAdF32233 + F13*F32*chi13*dAdF32333 + F13*F33*chi11*dAdF33133 + F13*F33*chi12*dAdF33233 + F13*F33*chi13*dAdF33333 - J*a131*dJdF33;
        dadF(7,3) = F11*F31*chi11*dAdF11123 + F11*F31*chi12*dAdF11223 + F11*F31*chi13*dAdF11323 + F11*F32*chi11*dAdF12123 + F11*F32*chi12*dAdF12223 + F11*F32*chi13*dAdF12323 + F11*F33*chi11*dAdF13123 + F11*F33*chi12*dAdF13223 + F11*F33*chi13*dAdF13323 + F12*F31*chi11*dAdF21123 + F12*F31*chi12*dAdF21223 + F12*F31*chi13*dAdF21323 + F12*F32*chi11*dAdF22123 + F12*F32*chi12*dAdF22223 + F12*F32*chi13*dAdF22323 + F12*F33*chi11*dAdF23123 + F12*F33*chi12*dAdF23223 + F12*F33*chi13*dAdF23323 + F13*F31*chi11*dAdF31123 + F13*F31*chi12*dAdF31223 + F13*F31*chi13*dAdF31323 + F13*F32*chi11*dAdF32123 + F13*F32*chi12*dAdF32223 + F13*F32*chi13*dAdF32323 + F13*F33*chi11*dAdF33123 + F13*F33*chi12*dAdF33223 + F13*F33*chi13*dAdF33323 - J*a131*dJdF23;
        dadF(7,4) = A311*F31*chi11 + A312*F31*chi12 + A313*F31*chi13 + A321*F32*chi11 + A322*F32*chi12 + A323*F32*chi13 + A331*F33*chi11 + A332*F33*chi12 + A333*F33*chi13 + F11*F31*chi11*dAdF11113 + F11*F31*chi12*dAdF11213 + F11*F31*chi13*dAdF11313 + F11*F32*chi11*dAdF12113 + F11*F32*chi12*dAdF12213 + F11*F32*chi13*dAdF12313 + F11*F33*chi11*dAdF13113 + F11*F33*chi12*dAdF13213 + F11*F33*chi13*dAdF13313 + F12*F31*chi11*dAdF21113 + F12*F31*chi12*dAdF21213 + F12*F31*chi13*dAdF21313 + F12*F32*chi11*dAdF22113 + F12*F32*chi12*dAdF22213 + F12*F32*chi13*dAdF22313 + F12*F33*chi11*dAdF23113 + F12*F33*chi12*dAdF23213 + F12*F33*chi13*dAdF23313 + F13*F31*chi11*dAdF31113 + F13*F31*chi12*dAdF31213 + F13*F31*chi13*dAdF31313 + F13*F32*chi11*dAdF32113 + F13*F32*chi12*dAdF32213 + F13*F32*chi13*dAdF32313 + F13*F33*chi11*dAdF33113 + F13*F33*chi12*dAdF33213 + F13*F33*chi13*dAdF33313 - J*a131*dJdF13;
        dadF(7,5) = A211*F31*chi11 + A212*F31*chi12 + A213*F31*chi13 + A221*F32*chi11 + A222*F32*chi12 + A223*F32*chi13 + A231*F33*chi11 + A232*F33*chi12 + A233*F33*chi13 + F11*F31*chi11*dAdF11112 + F11*F31*chi12*dAdF11212 + F11*F31*chi13*dAdF11312 + F11*F32*chi11*dAdF12112 + F11*F32*chi12*dAdF12212 + F11*F32*chi13*dAdF12312 + F11*F33*chi11*dAdF13112 + F11*F33*chi12*dAdF13212 + F11*F33*chi13*dAdF13312 + F12*F31*chi11*dAdF21112 + F12*F31*chi12*dAdF21212 + F12*F31*chi13*dAdF21312 + F12*F32*chi11*dAdF22112 + F12*F32*chi12*dAdF22212 + F12*F32*chi13*dAdF22312 + F12*F33*chi11*dAdF23112 + F12*F33*chi12*dAdF23212 + F12*F33*chi13*dAdF23312 + F13*F31*chi11*dAdF31112 + F13*F31*chi12*dAdF31212 + F13*F31*chi13*dAdF31312 + F13*F32*chi11*dAdF32112 + F13*F32*chi12*dAdF32212 + F13*F32*chi13*dAdF32312 + F13*F33*chi11*dAdF33112 + F13*F33*chi12*dAdF33212 + F13*F33*chi13*dAdF33312 - J*a131*dJdF12;
        dadF(7,6) = A121*F11*chi11 + A122*F11*chi12 + A123*F11*chi13 + A221*F12*chi11 + A222*F12*chi12 + A223*F12*chi13 + A321*F13*chi11 + A322*F13*chi12 + A323*F13*chi13 + F11*F31*chi11*dAdF11132 + F11*F31*chi12*dAdF11232 + F11*F31*chi13*dAdF11332 + F11*F32*chi11*dAdF12132 + F11*F32*chi12*dAdF12232 + F11*F32*chi13*dAdF12332 + F11*F33*chi11*dAdF13132 + F11*F33*chi12*dAdF13232 + F11*F33*chi13*dAdF13332 + F12*F31*chi11*dAdF21132 + F12*F31*chi12*dAdF21232 + F12*F31*chi13*dAdF21332 + F12*F32*chi11*dAdF22132 + F12*F32*chi12*dAdF22232 + F12*F32*chi13*dAdF22332 + F12*F33*chi11*dAdF23132 + F12*F33*chi12*dAdF23232 + F12*F33*chi13*dAdF23332 + F13*F31*chi11*dAdF31132 + F13*F31*chi12*dAdF31232 + F13*F31*chi13*dAdF31332 + F13*F32*chi11*dAdF32132 + F13*F32*chi12*dAdF32232 + F13*F32*chi13*dAdF32332 + F13*F33*chi11*dAdF33132 + F13*F33*chi12*dAdF33232 + F13*F33*chi13*dAdF33332 - J*a131*dJdF32;
        dadF(7,7) = A111*F11*chi11 + A112*F11*chi12 + A113*F11*chi13 + A211*F12*chi11 + A212*F12*chi12 + A213*F12*chi13 + A311*F13*chi11 + A312*F13*chi12 + A313*F13*chi13 + F11*F31*chi11*dAdF11131 + F11*F31*chi12*dAdF11231 + F11*F31*chi13*dAdF11331 + F11*F32*chi11*dAdF12131 + F11*F32*chi12*dAdF12231 + F11*F32*chi13*dAdF12331 + F11*F33*chi11*dAdF13131 + F11*F33*chi12*dAdF13231 + F11*F33*chi13*dAdF13331 + F12*F31*chi11*dAdF21131 + F12*F31*chi12*dAdF21231 + F12*F31*chi13*dAdF21331 + F12*F32*chi11*dAdF22131 + F12*F32*chi12*dAdF22231 + F12*F32*chi13*dAdF22331 + F12*F33*chi11*dAdF23131 + F12*F33*chi12*dAdF23231 + F12*F33*chi13*dAdF23331 + F13*F31*chi11*dAdF31131 + F13*F31*chi12*dAdF31231 + F13*F31*chi13*dAdF31331 + F13*F32*chi11*dAdF32131 + F13*F32*chi12*dAdF32231 + F13*F32*chi13*dAdF32331 + F13*F33*chi11*dAdF33131 + F13*F33*chi12*dAdF33231 + F13*F33*chi13*dAdF33331 - J*a131*dJdF31;
        dadF(7,8) = F11*F31*chi11*dAdF11121 + F11*F31*chi12*dAdF11221 + F11*F31*chi13*dAdF11321 + F11*F32*chi11*dAdF12121 + F11*F32*chi12*dAdF12221 + F11*F32*chi13*dAdF12321 + F11*F33*chi11*dAdF13121 + F11*F33*chi12*dAdF13221 + F11*F33*chi13*dAdF13321 + F12*F31*chi11*dAdF21121 + F12*F31*chi12*dAdF21221 + F12*F31*chi13*dAdF21321 + F12*F32*chi11*dAdF22121 + F12*F32*chi12*dAdF22221 + F12*F32*chi13*dAdF22321 + F12*F33*chi11*dAdF23121 + F12*F33*chi12*dAdF23221 + F12*F33*chi13*dAdF23321 + F13*F31*chi11*dAdF31121 + F13*F31*chi12*dAdF31221 + F13*F31*chi13*dAdF31321 + F13*F32*chi11*dAdF32121 + F13*F32*chi12*dAdF32221 + F13*F32*chi13*dAdF32321 + F13*F33*chi11*dAdF33121 + F13*F33*chi12*dAdF33221 + F13*F33*chi13*dAdF33321 - J*a131*dJdF21;
        dadF(8,0) = A111*F21*chi11 + A112*F21*chi12 + A113*F21*chi13 + A121*F22*chi11 + A122*F22*chi12 + A123*F22*chi13 + A131*F23*chi11 + A132*F23*chi12 + A133*F23*chi13 + F11*F21*chi11*dAdF11111 + F11*F21*chi12*dAdF11211 + F11*F21*chi13*dAdF11311 + F11*F22*chi11*dAdF12111 + F11*F22*chi12*dAdF12211 + F11*F22*chi13*dAdF12311 + F11*F23*chi11*dAdF13111 + F11*F23*chi12*dAdF13211 + F11*F23*chi13*dAdF13311 + F12*F21*chi11*dAdF21111 + F12*F21*chi12*dAdF21211 + F12*F21*chi13*dAdF21311 + F12*F22*chi11*dAdF22111 + F12*F22*chi12*dAdF22211 + F12*F22*chi13*dAdF22311 + F12*F23*chi11*dAdF23111 + F12*F23*chi12*dAdF23211 + F12*F23*chi13*dAdF23311 + F13*F21*chi11*dAdF31111 + F13*F21*chi12*dAdF31211 + F13*F21*chi13*dAdF31311 + F13*F22*chi11*dAdF32111 + F13*F22*chi12*dAdF32211 + F13*F22*chi13*dAdF32311 + F13*F23*chi11*dAdF33111 + F13*F23*chi12*dAdF33211 + F13*F23*chi13*dAdF33311 - J*a121*dJdF11;
        dadF(8,1) = A121*F11*chi11 + A122*F11*chi12 + A123*F11*chi13 + A221*F12*chi11 + A222*F12*chi12 + A223*F12*chi13 + A321*F13*chi11 + A322*F13*chi12 + A323*F13*chi13 + F11*F21*chi11*dAdF11122 + F11*F21*chi12*dAdF11222 + F11*F21*chi13*dAdF11322 + F11*F22*chi11*dAdF12122 + F11*F22*chi12*dAdF12222 + F11*F22*chi13*dAdF12322 + F11*F23*chi11*dAdF13122 + F11*F23*chi12*dAdF13222 + F11*F23*chi13*dAdF13322 + F12*F21*chi11*dAdF21122 + F12*F21*chi12*dAdF21222 + F12*F21*chi13*dAdF21322 + F12*F22*chi11*dAdF22122 + F12*F22*chi12*dAdF22222 + F12*F22*chi13*dAdF22322 + F12*F23*chi11*dAdF23122 + F12*F23*chi12*dAdF23222 + F12*F23*chi13*dAdF23322 + F13*F21*chi11*dAdF31122 + F13*F21*chi12*dAdF31222 + F13*F21*chi13*dAdF31322 + F13*F22*chi11*dAdF32122 + F13*F22*chi12*dAdF32222 + F13*F22*chi13*dAdF32322 + F13*F23*chi11*dAdF33122 + F13*F23*chi12*dAdF33222 + F13*F23*chi13*dAdF33322 - J*a121*dJdF22;
        dadF(8,2) = F11*F21*chi11*dAdF11133 + F11*F21*chi12*dAdF11233 + F11*F21*chi13*dAdF11333 + F11*F22*chi11*dAdF12133 + F11*F22*chi12*dAdF12233 + F11*F22*chi13*dAdF12333 + F11*F23*chi11*dAdF13133 + F11*F23*chi12*dAdF13233 + F11*F23*chi13*dAdF13333 + F12*F21*chi11*dAdF21133 + F12*F21*chi12*dAdF21233 + F12*F21*chi13*dAdF21333 + F12*F22*chi11*dAdF22133 + F12*F22*chi12*dAdF22233 + F12*F22*chi13*dAdF22333 + F12*F23*chi11*dAdF23133 + F12*F23*chi12*dAdF23233 + F12*F23*chi13*dAdF23333 + F13*F21*chi11*dAdF31133 + F13*F21*chi12*dAdF31233 + F13*F21*chi13*dAdF31333 + F13*F22*chi11*dAdF32133 + F13*F22*chi12*dAdF32233 + F13*F22*chi13*dAdF32333 + F13*F23*chi11*dAdF33133 + F13*F23*chi12*dAdF33233 + F13*F23*chi13*dAdF33333 - J*a121*dJdF33;
        dadF(8,3) = A131*F11*chi11 + A132*F11*chi12 + A133*F11*chi13 + A231*F12*chi11 + A232*F12*chi12 + A233*F12*chi13 + A331*F13*chi11 + A332*F13*chi12 + A333*F13*chi13 + F11*F21*chi11*dAdF11123 + F11*F21*chi12*dAdF11223 + F11*F21*chi13*dAdF11323 + F11*F22*chi11*dAdF12123 + F11*F22*chi12*dAdF12223 + F11*F22*chi13*dAdF12323 + F11*F23*chi11*dAdF13123 + F11*F23*chi12*dAdF13223 + F11*F23*chi13*dAdF13323 + F12*F21*chi11*dAdF21123 + F12*F21*chi12*dAdF21223 + F12*F21*chi13*dAdF21323 + F12*F22*chi11*dAdF22123 + F12*F22*chi12*dAdF22223 + F12*F22*chi13*dAdF22323 + F12*F23*chi11*dAdF23123 + F12*F23*chi12*dAdF23223 + F12*F23*chi13*dAdF23323 + F13*F21*chi11*dAdF31123 + F13*F21*chi12*dAdF31223 + F13*F21*chi13*dAdF31323 + F13*F22*chi11*dAdF32123 + F13*F22*chi12*dAdF32223 + F13*F22*chi13*dAdF32323 + F13*F23*chi11*dAdF33123 + F13*F23*chi12*dAdF33223 + F13*F23*chi13*dAdF33323 - J*a121*dJdF23;
        dadF(8,4) = A311*F21*chi11 + A312*F21*chi12 + A313*F21*chi13 + A321*F22*chi11 + A322*F22*chi12 + A323*F22*chi13 + A331*F23*chi11 + A332*F23*chi12 + A333*F23*chi13 + F11*F21*chi11*dAdF11113 + F11*F21*chi12*dAdF11213 + F11*F21*chi13*dAdF11313 + F11*F22*chi11*dAdF12113 + F11*F22*chi12*dAdF12213 + F11*F22*chi13*dAdF12313 + F11*F23*chi11*dAdF13113 + F11*F23*chi12*dAdF13213 + F11*F23*chi13*dAdF13313 + F12*F21*chi11*dAdF21113 + F12*F21*chi12*dAdF21213 + F12*F21*chi13*dAdF21313 + F12*F22*chi11*dAdF22113 + F12*F22*chi12*dAdF22213 + F12*F22*chi13*dAdF22313 + F12*F23*chi11*dAdF23113 + F12*F23*chi12*dAdF23213 + F12*F23*chi13*dAdF23313 + F13*F21*chi11*dAdF31113 + F13*F21*chi12*dAdF31213 + F13*F21*chi13*dAdF31313 + F13*F22*chi11*dAdF32113 + F13*F22*chi12*dAdF32213 + F13*F22*chi13*dAdF32313 + F13*F23*chi11*dAdF33113 + F13*F23*chi12*dAdF33213 + F13*F23*chi13*dAdF33313 - J*a121*dJdF13;
        dadF(8,5) = A211*F21*chi11 + A212*F21*chi12 + A213*F21*chi13 + A221*F22*chi11 + A222*F22*chi12 + A223*F22*chi13 + A231*F23*chi11 + A232*F23*chi12 + A233*F23*chi13 + F11*F21*chi11*dAdF11112 + F11*F21*chi12*dAdF11212 + F11*F21*chi13*dAdF11312 + F11*F22*chi11*dAdF12112 + F11*F22*chi12*dAdF12212 + F11*F22*chi13*dAdF12312 + F11*F23*chi11*dAdF13112 + F11*F23*chi12*dAdF13212 + F11*F23*chi13*dAdF13312 + F12*F21*chi11*dAdF21112 + F12*F21*chi12*dAdF21212 + F12*F21*chi13*dAdF21312 + F12*F22*chi11*dAdF22112 + F12*F22*chi12*dAdF22212 + F12*F22*chi13*dAdF22312 + F12*F23*chi11*dAdF23112 + F12*F23*chi12*dAdF23212 + F12*F23*chi13*dAdF23312 + F13*F21*chi11*dAdF31112 + F13*F21*chi12*dAdF31212 + F13*F21*chi13*dAdF31312 + F13*F22*chi11*dAdF32112 + F13*F22*chi12*dAdF32212 + F13*F22*chi13*dAdF32312 + F13*F23*chi11*dAdF33112 + F13*F23*chi12*dAdF33212 + F13*F23*chi13*dAdF33312 - J*a121*dJdF12;
        dadF(8,6) = F11*F21*chi11*dAdF11132 + F11*F21*chi12*dAdF11232 + F11*F21*chi13*dAdF11332 + F11*F22*chi11*dAdF12132 + F11*F22*chi12*dAdF12232 + F11*F22*chi13*dAdF12332 + F11*F23*chi11*dAdF13132 + F11*F23*chi12*dAdF13232 + F11*F23*chi13*dAdF13332 + F12*F21*chi11*dAdF21132 + F12*F21*chi12*dAdF21232 + F12*F21*chi13*dAdF21332 + F12*F22*chi11*dAdF22132 + F12*F22*chi12*dAdF22232 + F12*F22*chi13*dAdF22332 + F12*F23*chi11*dAdF23132 + F12*F23*chi12*dAdF23232 + F12*F23*chi13*dAdF23332 + F13*F21*chi11*dAdF31132 + F13*F21*chi12*dAdF31232 + F13*F21*chi13*dAdF31332 + F13*F22*chi11*dAdF32132 + F13*F22*chi12*dAdF32232 + F13*F22*chi13*dAdF32332 + F13*F23*chi11*dAdF33132 + F13*F23*chi12*dAdF33232 + F13*F23*chi13*dAdF33332 - J*a121*dJdF32;
        dadF(8,7) = F11*F21*chi11*dAdF11131 + F11*F21*chi12*dAdF11231 + F11*F21*chi13*dAdF11331 + F11*F22*chi11*dAdF12131 + F11*F22*chi12*dAdF12231 + F11*F22*chi13*dAdF12331 + F11*F23*chi11*dAdF13131 + F11*F23*chi12*dAdF13231 + F11*F23*chi13*dAdF13331 + F12*F21*chi11*dAdF21131 + F12*F21*chi12*dAdF21231 + F12*F21*chi13*dAdF21331 + F12*F22*chi11*dAdF22131 + F12*F22*chi12*dAdF22231 + F12*F22*chi13*dAdF22331 + F12*F23*chi11*dAdF23131 + F12*F23*chi12*dAdF23231 + F12*F23*chi13*dAdF23331 + F13*F21*chi11*dAdF31131 + F13*F21*chi12*dAdF31231 + F13*F21*chi13*dAdF31331 + F13*F22*chi11*dAdF32131 + F13*F22*chi12*dAdF32231 + F13*F22*chi13*dAdF32331 + F13*F23*chi11*dAdF33131 + F13*F23*chi12*dAdF33231 + F13*F23*chi13*dAdF33331 - J*a121*dJdF31;
        dadF(8,8) = A111*F11*chi11 + A112*F11*chi12 + A113*F11*chi13 + A211*F12*chi11 + A212*F12*chi12 + A213*F12*chi13 + A311*F13*chi11 + A312*F13*chi12 + A313*F13*chi13 + F11*F21*chi11*dAdF11121 + F11*F21*chi12*dAdF11221 + F11*F21*chi13*dAdF11321 + F11*F22*chi11*dAdF12121 + F11*F22*chi12*dAdF12221 + F11*F22*chi13*dAdF12321 + F11*F23*chi11*dAdF13121 + F11*F23*chi12*dAdF13221 + F11*F23*chi13*dAdF13321 + F12*F21*chi11*dAdF21121 + F12*F21*chi12*dAdF21221 + F12*F21*chi13*dAdF21321 + F12*F22*chi11*dAdF22121 + F12*F22*chi12*dAdF22221 + F12*F22*chi13*dAdF22321 + F12*F23*chi11*dAdF23121 + F12*F23*chi12*dAdF23221 + F12*F23*chi13*dAdF23321 + F13*F21*chi11*dAdF31121 + F13*F21*chi12*dAdF31221 + F13*F21*chi13*dAdF31321 + F13*F22*chi11*dAdF32121 + F13*F22*chi12*dAdF32221 + F13*F22*chi13*dAdF32321 + F13*F23*chi11*dAdF33121 + F13*F23*chi12*dAdF33221 + F13*F23*chi13*dAdF33321 - J*a121*dJdF21;
        dadF(9,0) = A111*F21*chi11 + A112*F21*chi12 + A113*F21*chi13 + A211*F22*chi11 + A212*F22*chi12 + A213*F22*chi13 + A311*F23*chi11 + A312*F23*chi12 + A313*F23*chi13 + F11*F21*chi11*dAdF11111 + F11*F21*chi12*dAdF11211 + F11*F21*chi13*dAdF11311 + F11*F22*chi11*dAdF21111 + F11*F22*chi12*dAdF21211 + F11*F22*chi13*dAdF21311 + F11*F23*chi11*dAdF31111 + F11*F23*chi12*dAdF31211 + F11*F23*chi13*dAdF31311 + F12*F21*chi11*dAdF12111 + F12*F21*chi12*dAdF12211 + F12*F21*chi13*dAdF12311 + F12*F22*chi11*dAdF22111 + F12*F22*chi12*dAdF22211 + F12*F22*chi13*dAdF22311 + F12*F23*chi11*dAdF32111 + F12*F23*chi12*dAdF32211 + F12*F23*chi13*dAdF32311 + F13*F21*chi11*dAdF13111 + F13*F21*chi12*dAdF13211 + F13*F21*chi13*dAdF13311 + F13*F22*chi11*dAdF23111 + F13*F22*chi12*dAdF23211 + F13*F22*chi13*dAdF23311 + F13*F23*chi11*dAdF33111 + F13*F23*chi12*dAdF33211 + F13*F23*chi13*dAdF33311 - J*a211*dJdF11;
        dadF(9,1) = A211*F11*chi11 + A212*F11*chi12 + A213*F11*chi13 + A221*F12*chi11 + A222*F12*chi12 + A223*F12*chi13 + A231*F13*chi11 + A232*F13*chi12 + A233*F13*chi13 + F11*F21*chi11*dAdF11122 + F11*F21*chi12*dAdF11222 + F11*F21*chi13*dAdF11322 + F11*F22*chi11*dAdF21122 + F11*F22*chi12*dAdF21222 + F11*F22*chi13*dAdF21322 + F11*F23*chi11*dAdF31122 + F11*F23*chi12*dAdF31222 + F11*F23*chi13*dAdF31322 + F12*F21*chi11*dAdF12122 + F12*F21*chi12*dAdF12222 + F12*F21*chi13*dAdF12322 + F12*F22*chi11*dAdF22122 + F12*F22*chi12*dAdF22222 + F12*F22*chi13*dAdF22322 + F12*F23*chi11*dAdF32122 + F12*F23*chi12*dAdF32222 + F12*F23*chi13*dAdF32322 + F13*F21*chi11*dAdF13122 + F13*F21*chi12*dAdF13222 + F13*F21*chi13*dAdF13322 + F13*F22*chi11*dAdF23122 + F13*F22*chi12*dAdF23222 + F13*F22*chi13*dAdF23322 + F13*F23*chi11*dAdF33122 + F13*F23*chi12*dAdF33222 + F13*F23*chi13*dAdF33322 - J*a211*dJdF22;
        dadF(9,2) = F11*F21*chi11*dAdF11133 + F11*F21*chi12*dAdF11233 + F11*F21*chi13*dAdF11333 + F11*F22*chi11*dAdF21133 + F11*F22*chi12*dAdF21233 + F11*F22*chi13*dAdF21333 + F11*F23*chi11*dAdF31133 + F11*F23*chi12*dAdF31233 + F11*F23*chi13*dAdF31333 + F12*F21*chi11*dAdF12133 + F12*F21*chi12*dAdF12233 + F12*F21*chi13*dAdF12333 + F12*F22*chi11*dAdF22133 + F12*F22*chi12*dAdF22233 + F12*F22*chi13*dAdF22333 + F12*F23*chi11*dAdF32133 + F12*F23*chi12*dAdF32233 + F12*F23*chi13*dAdF32333 + F13*F21*chi11*dAdF13133 + F13*F21*chi12*dAdF13233 + F13*F21*chi13*dAdF13333 + F13*F22*chi11*dAdF23133 + F13*F22*chi12*dAdF23233 + F13*F22*chi13*dAdF23333 + F13*F23*chi11*dAdF33133 + F13*F23*chi12*dAdF33233 + F13*F23*chi13*dAdF33333 - J*a211*dJdF33;
        dadF(9,3) = A311*F11*chi11 + A312*F11*chi12 + A313*F11*chi13 + A321*F12*chi11 + A322*F12*chi12 + A323*F12*chi13 + A331*F13*chi11 + A332*F13*chi12 + A333*F13*chi13 + F11*F21*chi11*dAdF11123 + F11*F21*chi12*dAdF11223 + F11*F21*chi13*dAdF11323 + F11*F22*chi11*dAdF21123 + F11*F22*chi12*dAdF21223 + F11*F22*chi13*dAdF21323 + F11*F23*chi11*dAdF31123 + F11*F23*chi12*dAdF31223 + F11*F23*chi13*dAdF31323 + F12*F21*chi11*dAdF12123 + F12*F21*chi12*dAdF12223 + F12*F21*chi13*dAdF12323 + F12*F22*chi11*dAdF22123 + F12*F22*chi12*dAdF22223 + F12*F22*chi13*dAdF22323 + F12*F23*chi11*dAdF32123 + F12*F23*chi12*dAdF32223 + F12*F23*chi13*dAdF32323 + F13*F21*chi11*dAdF13123 + F13*F21*chi12*dAdF13223 + F13*F21*chi13*dAdF13323 + F13*F22*chi11*dAdF23123 + F13*F22*chi12*dAdF23223 + F13*F22*chi13*dAdF23323 + F13*F23*chi11*dAdF33123 + F13*F23*chi12*dAdF33223 + F13*F23*chi13*dAdF33323 - J*a211*dJdF23;
        dadF(9,4) = A131*F21*chi11 + A132*F21*chi12 + A133*F21*chi13 + A231*F22*chi11 + A232*F22*chi12 + A233*F22*chi13 + A331*F23*chi11 + A332*F23*chi12 + A333*F23*chi13 + F11*F21*chi11*dAdF11113 + F11*F21*chi12*dAdF11213 + F11*F21*chi13*dAdF11313 + F11*F22*chi11*dAdF21113 + F11*F22*chi12*dAdF21213 + F11*F22*chi13*dAdF21313 + F11*F23*chi11*dAdF31113 + F11*F23*chi12*dAdF31213 + F11*F23*chi13*dAdF31313 + F12*F21*chi11*dAdF12113 + F12*F21*chi12*dAdF12213 + F12*F21*chi13*dAdF12313 + F12*F22*chi11*dAdF22113 + F12*F22*chi12*dAdF22213 + F12*F22*chi13*dAdF22313 + F12*F23*chi11*dAdF32113 + F12*F23*chi12*dAdF32213 + F12*F23*chi13*dAdF32313 + F13*F21*chi11*dAdF13113 + F13*F21*chi12*dAdF13213 + F13*F21*chi13*dAdF13313 + F13*F22*chi11*dAdF23113 + F13*F22*chi12*dAdF23213 + F13*F22*chi13*dAdF23313 + F13*F23*chi11*dAdF33113 + F13*F23*chi12*dAdF33213 + F13*F23*chi13*dAdF33313 - J*a211*dJdF13;
        dadF(9,5) = A121*F21*chi11 + A122*F21*chi12 + A123*F21*chi13 + A221*F22*chi11 + A222*F22*chi12 + A223*F22*chi13 + A321*F23*chi11 + A322*F23*chi12 + A323*F23*chi13 + F11*F21*chi11*dAdF11112 + F11*F21*chi12*dAdF11212 + F11*F21*chi13*dAdF11312 + F11*F22*chi11*dAdF21112 + F11*F22*chi12*dAdF21212 + F11*F22*chi13*dAdF21312 + F11*F23*chi11*dAdF31112 + F11*F23*chi12*dAdF31212 + F11*F23*chi13*dAdF31312 + F12*F21*chi11*dAdF12112 + F12*F21*chi12*dAdF12212 + F12*F21*chi13*dAdF12312 + F12*F22*chi11*dAdF22112 + F12*F22*chi12*dAdF22212 + F12*F22*chi13*dAdF22312 + F12*F23*chi11*dAdF32112 + F12*F23*chi12*dAdF32212 + F12*F23*chi13*dAdF32312 + F13*F21*chi11*dAdF13112 + F13*F21*chi12*dAdF13212 + F13*F21*chi13*dAdF13312 + F13*F22*chi11*dAdF23112 + F13*F22*chi12*dAdF23212 + F13*F22*chi13*dAdF23312 + F13*F23*chi11*dAdF33112 + F13*F23*chi12*dAdF33212 + F13*F23*chi13*dAdF33312 - J*a211*dJdF12;
        dadF(9,6) = F11*F21*chi11*dAdF11132 + F11*F21*chi12*dAdF11232 + F11*F21*chi13*dAdF11332 + F11*F22*chi11*dAdF21132 + F11*F22*chi12*dAdF21232 + F11*F22*chi13*dAdF21332 + F11*F23*chi11*dAdF31132 + F11*F23*chi12*dAdF31232 + F11*F23*chi13*dAdF31332 + F12*F21*chi11*dAdF12132 + F12*F21*chi12*dAdF12232 + F12*F21*chi13*dAdF12332 + F12*F22*chi11*dAdF22132 + F12*F22*chi12*dAdF22232 + F12*F22*chi13*dAdF22332 + F12*F23*chi11*dAdF32132 + F12*F23*chi12*dAdF32232 + F12*F23*chi13*dAdF32332 + F13*F21*chi11*dAdF13132 + F13*F21*chi12*dAdF13232 + F13*F21*chi13*dAdF13332 + F13*F22*chi11*dAdF23132 + F13*F22*chi12*dAdF23232 + F13*F22*chi13*dAdF23332 + F13*F23*chi11*dAdF33132 + F13*F23*chi12*dAdF33232 + F13*F23*chi13*dAdF33332 - J*a211*dJdF32;
        dadF(9,7) = F11*F21*chi11*dAdF11131 + F11*F21*chi12*dAdF11231 + F11*F21*chi13*dAdF11331 + F11*F22*chi11*dAdF21131 + F11*F22*chi12*dAdF21231 + F11*F22*chi13*dAdF21331 + F11*F23*chi11*dAdF31131 + F11*F23*chi12*dAdF31231 + F11*F23*chi13*dAdF31331 + F12*F21*chi11*dAdF12131 + F12*F21*chi12*dAdF12231 + F12*F21*chi13*dAdF12331 + F12*F22*chi11*dAdF22131 + F12*F22*chi12*dAdF22231 + F12*F22*chi13*dAdF22331 + F12*F23*chi11*dAdF32131 + F12*F23*chi12*dAdF32231 + F12*F23*chi13*dAdF32331 + F13*F21*chi11*dAdF13131 + F13*F21*chi12*dAdF13231 + F13*F21*chi13*dAdF13331 + F13*F22*chi11*dAdF23131 + F13*F22*chi12*dAdF23231 + F13*F22*chi13*dAdF23331 + F13*F23*chi11*dAdF33131 + F13*F23*chi12*dAdF33231 + F13*F23*chi13*dAdF33331 - J*a211*dJdF31;
        dadF(9,8) = A111*F11*chi11 + A112*F11*chi12 + A113*F11*chi13 + A121*F12*chi11 + A122*F12*chi12 + A123*F12*chi13 + A131*F13*chi11 + A132*F13*chi12 + A133*F13*chi13 + F11*F21*chi11*dAdF11121 + F11*F21*chi12*dAdF11221 + F11*F21*chi13*dAdF11321 + F11*F22*chi11*dAdF21121 + F11*F22*chi12*dAdF21221 + F11*F22*chi13*dAdF21321 + F11*F23*chi11*dAdF31121 + F11*F23*chi12*dAdF31221 + F11*F23*chi13*dAdF31321 + F12*F21*chi11*dAdF12121 + F12*F21*chi12*dAdF12221 + F12*F21*chi13*dAdF12321 + F12*F22*chi11*dAdF22121 + F12*F22*chi12*dAdF22221 + F12*F22*chi13*dAdF22321 + F12*F23*chi11*dAdF32121 + F12*F23*chi12*dAdF32221 + F12*F23*chi13*dAdF32321 + F13*F21*chi11*dAdF13121 + F13*F21*chi12*dAdF13221 + F13*F21*chi13*dAdF13321 + F13*F22*chi11*dAdF23121 + F13*F22*chi12*dAdF23221 + F13*F22*chi13*dAdF23321 + F13*F23*chi11*dAdF33121 + F13*F23*chi12*dAdF33221 + F13*F23*chi13*dAdF33321 - J*a211*dJdF21;
        dadF(10,0) = F21*F21*chi21*dAdF11111 + F21*F21*chi22*dAdF11211 + F21*F21*chi23*dAdF11311 + F21*F22*chi21*dAdF12111 + F21*F22*chi21*dAdF21111 + F21*F22*chi22*dAdF12211 + F21*F22*chi22*dAdF21211 + F21*F22*chi23*dAdF12311 + F21*F22*chi23*dAdF21311 + F21*F23*chi21*dAdF13111 + F21*F23*chi21*dAdF31111 + F21*F23*chi22*dAdF13211 + F21*F23*chi22*dAdF31211 + F21*F23*chi23*dAdF13311 + F21*F23*chi23*dAdF31311 + F22*F22*chi21*dAdF22111 + F22*F22*chi22*dAdF22211 + F22*F22*chi23*dAdF22311 + F22*F23*chi21*dAdF23111 + F22*F23*chi21*dAdF32111 + F22*F23*chi22*dAdF23211 + F22*F23*chi22*dAdF32211 + F22*F23*chi23*dAdF23311 + F22*F23*chi23*dAdF32311 + F23*F23*chi21*dAdF33111 + F23*F23*chi22*dAdF33211 + F23*F23*chi23*dAdF33311 - J*a222*dJdF11;
        dadF(10,1) = A121*F21*chi21 + A122*F21*chi22 + A123*F21*chi23 + A211*F21*chi21 + A212*F21*chi22 + A213*F21*chi23 + 2*A221*F22*chi21 + 2*A222*F22*chi22 + 2*A223*F22*chi23 + A231*F23*chi21 + A232*F23*chi22 + A233*F23*chi23 + A321*F23*chi21 + A322*F23*chi22 + A323*F23*chi23 + F21*F21*chi21*dAdF11122 + F21*F21*chi22*dAdF11222 + F21*F21*chi23*dAdF11322 + F21*F22*chi21*dAdF12122 + F21*F22*chi21*dAdF21122 + F21*F22*chi22*dAdF12222 + F21*F22*chi22*dAdF21222 + F21*F22*chi23*dAdF12322 + F21*F22*chi23*dAdF21322 + F21*F23*chi21*dAdF13122 + F21*F23*chi21*dAdF31122 + F21*F23*chi22*dAdF13222 + F21*F23*chi22*dAdF31222 + F21*F23*chi23*dAdF13322 + F21*F23*chi23*dAdF31322 + F22*F22*chi21*dAdF22122 + F22*F22*chi22*dAdF22222 + F22*F22*chi23*dAdF22322 + F22*F23*chi21*dAdF23122 + F22*F23*chi21*dAdF32122 + F22*F23*chi22*dAdF23222 + F22*F23*chi22*dAdF32222 + F22*F23*chi23*dAdF23322 + F22*F23*chi23*dAdF32322 + F23*F23*chi21*dAdF33122 + F23*F23*chi22*dAdF33222 + F23*F23*chi23*dAdF33322 - J*a222*dJdF22;
        dadF(10,2) = F21*F21*chi21*dAdF11133 + F21*F21*chi22*dAdF11233 + F21*F21*chi23*dAdF11333 + F21*F22*chi21*dAdF12133 + F21*F22*chi21*dAdF21133 + F21*F22*chi22*dAdF12233 + F21*F22*chi22*dAdF21233 + F21*F22*chi23*dAdF12333 + F21*F22*chi23*dAdF21333 + F21*F23*chi21*dAdF13133 + F21*F23*chi21*dAdF31133 + F21*F23*chi22*dAdF13233 + F21*F23*chi22*dAdF31233 + F21*F23*chi23*dAdF13333 + F21*F23*chi23*dAdF31333 + F22*F22*chi21*dAdF22133 + F22*F22*chi22*dAdF22233 + F22*F22*chi23*dAdF22333 + F22*F23*chi21*dAdF23133 + F22*F23*chi21*dAdF32133 + F22*F23*chi22*dAdF23233 + F22*F23*chi22*dAdF32233 + F22*F23*chi23*dAdF23333 + F22*F23*chi23*dAdF32333 + F23*F23*chi21*dAdF33133 + F23*F23*chi22*dAdF33233 + F23*F23*chi23*dAdF33333 - J*a222*dJdF33;
        dadF(10,3) = A131*F21*chi21 + A132*F21*chi22 + A133*F21*chi23 + A231*F22*chi21 + A232*F22*chi22 + A233*F22*chi23 + A311*F21*chi21 + A312*F21*chi22 + A313*F21*chi23 + A321*F22*chi21 + A322*F22*chi22 + A323*F22*chi23 + 2*A331*F23*chi21 + 2*A332*F23*chi22 + 2*A333*F23*chi23 + F21*F21*chi21*dAdF11123 + F21*F21*chi22*dAdF11223 + F21*F21*chi23*dAdF11323 + F21*F22*chi21*dAdF12123 + F21*F22*chi21*dAdF21123 + F21*F22*chi22*dAdF12223 + F21*F22*chi22*dAdF21223 + F21*F22*chi23*dAdF12323 + F21*F22*chi23*dAdF21323 + F21*F23*chi21*dAdF13123 + F21*F23*chi21*dAdF31123 + F21*F23*chi22*dAdF13223 + F21*F23*chi22*dAdF31223 + F21*F23*chi23*dAdF13323 + F21*F23*chi23*dAdF31323 + F22*F22*chi21*dAdF22123 + F22*F22*chi22*dAdF22223 + F22*F22*chi23*dAdF22323 + F22*F23*chi21*dAdF23123 + F22*F23*chi21*dAdF32123 + F22*F23*chi22*dAdF23223 + F22*F23*chi22*dAdF32223 + F22*F23*chi23*dAdF23323 + F22*F23*chi23*dAdF32323 + F23*F23*chi21*dAdF33123 + F23*F23*chi22*dAdF33223 + F23*F23*chi23*dAdF33323 - J*a222*dJdF23;
        dadF(10,4) = F21*F21*chi21*dAdF11113 + F21*F21*chi22*dAdF11213 + F21*F21*chi23*dAdF11313 + F21*F22*chi21*dAdF12113 + F21*F22*chi21*dAdF21113 + F21*F22*chi22*dAdF12213 + F21*F22*chi22*dAdF21213 + F21*F22*chi23*dAdF12313 + F21*F22*chi23*dAdF21313 + F21*F23*chi21*dAdF13113 + F21*F23*chi21*dAdF31113 + F21*F23*chi22*dAdF13213 + F21*F23*chi22*dAdF31213 + F21*F23*chi23*dAdF13313 + F21*F23*chi23*dAdF31313 + F22*F22*chi21*dAdF22113 + F22*F22*chi22*dAdF22213 + F22*F22*chi23*dAdF22313 + F22*F23*chi21*dAdF23113 + F22*F23*chi21*dAdF32113 + F22*F23*chi22*dAdF23213 + F22*F23*chi22*dAdF32213 + F22*F23*chi23*dAdF23313 + F22*F23*chi23*dAdF32313 + F23*F23*chi21*dAdF33113 + F23*F23*chi22*dAdF33213 + F23*F23*chi23*dAdF33313 - J*a222*dJdF13;
        dadF(10,5) = F21*F21*chi21*dAdF11112 + F21*F21*chi22*dAdF11212 + F21*F21*chi23*dAdF11312 + F21*F22*chi21*dAdF12112 + F21*F22*chi21*dAdF21112 + F21*F22*chi22*dAdF12212 + F21*F22*chi22*dAdF21212 + F21*F22*chi23*dAdF12312 + F21*F22*chi23*dAdF21312 + F21*F23*chi21*dAdF13112 + F21*F23*chi21*dAdF31112 + F21*F23*chi22*dAdF13212 + F21*F23*chi22*dAdF31212 + F21*F23*chi23*dAdF13312 + F21*F23*chi23*dAdF31312 + F22*F22*chi21*dAdF22112 + F22*F22*chi22*dAdF22212 + F22*F22*chi23*dAdF22312 + F22*F23*chi21*dAdF23112 + F22*F23*chi21*dAdF32112 + F22*F23*chi22*dAdF23212 + F22*F23*chi22*dAdF32212 + F22*F23*chi23*dAdF23312 + F22*F23*chi23*dAdF32312 + F23*F23*chi21*dAdF33112 + F23*F23*chi22*dAdF33212 + F23*F23*chi23*dAdF33312 - J*a222*dJdF12;
        dadF(10,6) = F21*F21*chi21*dAdF11132 + F21*F21*chi22*dAdF11232 + F21*F21*chi23*dAdF11332 + F21*F22*chi21*dAdF12132 + F21*F22*chi21*dAdF21132 + F21*F22*chi22*dAdF12232 + F21*F22*chi22*dAdF21232 + F21*F22*chi23*dAdF12332 + F21*F22*chi23*dAdF21332 + F21*F23*chi21*dAdF13132 + F21*F23*chi21*dAdF31132 + F21*F23*chi22*dAdF13232 + F21*F23*chi22*dAdF31232 + F21*F23*chi23*dAdF13332 + F21*F23*chi23*dAdF31332 + F22*F22*chi21*dAdF22132 + F22*F22*chi22*dAdF22232 + F22*F22*chi23*dAdF22332 + F22*F23*chi21*dAdF23132 + F22*F23*chi21*dAdF32132 + F22*F23*chi22*dAdF23232 + F22*F23*chi22*dAdF32232 + F22*F23*chi23*dAdF23332 + F22*F23*chi23*dAdF32332 + F23*F23*chi21*dAdF33132 + F23*F23*chi22*dAdF33232 + F23*F23*chi23*dAdF33332 - J*a222*dJdF32;
        dadF(10,7) = F21*F21*chi21*dAdF11131 + F21*F21*chi22*dAdF11231 + F21*F21*chi23*dAdF11331 + F21*F22*chi21*dAdF12131 + F21*F22*chi21*dAdF21131 + F21*F22*chi22*dAdF12231 + F21*F22*chi22*dAdF21231 + F21*F22*chi23*dAdF12331 + F21*F22*chi23*dAdF21331 + F21*F23*chi21*dAdF13131 + F21*F23*chi21*dAdF31131 + F21*F23*chi22*dAdF13231 + F21*F23*chi22*dAdF31231 + F21*F23*chi23*dAdF13331 + F21*F23*chi23*dAdF31331 + F22*F22*chi21*dAdF22131 + F22*F22*chi22*dAdF22231 + F22*F22*chi23*dAdF22331 + F22*F23*chi21*dAdF23131 + F22*F23*chi21*dAdF32131 + F22*F23*chi22*dAdF23231 + F22*F23*chi22*dAdF32231 + F22*F23*chi23*dAdF23331 + F22*F23*chi23*dAdF32331 + F23*F23*chi21*dAdF33131 + F23*F23*chi22*dAdF33231 + F23*F23*chi23*dAdF33331 - J*a222*dJdF31;
        dadF(10,8) = 2*A111*F21*chi21 + 2*A112*F21*chi22 + 2*A113*F21*chi23 + A121*F22*chi21 + A122*F22*chi22 + A123*F22*chi23 + A131*F23*chi21 + A132*F23*chi22 + A133*F23*chi23 + A211*F22*chi21 + A212*F22*chi22 + A213*F22*chi23 + A311*F23*chi21 + A312*F23*chi22 + A313*F23*chi23 + F21*F21*chi21*dAdF11121 + F21*F21*chi22*dAdF11221 + F21*F21*chi23*dAdF11321 + F21*F22*chi21*dAdF12121 + F21*F22*chi21*dAdF21121 + F21*F22*chi22*dAdF12221 + F21*F22*chi22*dAdF21221 + F21*F22*chi23*dAdF12321 + F21*F22*chi23*dAdF21321 + F21*F23*chi21*dAdF13121 + F21*F23*chi21*dAdF31121 + F21*F23*chi22*dAdF13221 + F21*F23*chi22*dAdF31221 + F21*F23*chi23*dAdF13321 + F21*F23*chi23*dAdF31321 + F22*F22*chi21*dAdF22121 + F22*F22*chi22*dAdF22221 + F22*F22*chi23*dAdF22321 + F22*F23*chi21*dAdF23121 + F22*F23*chi21*dAdF32121 + F22*F23*chi22*dAdF23221 + F22*F23*chi22*dAdF32221 + F22*F23*chi23*dAdF23321 + F22*F23*chi23*dAdF32321 + F23*F23*chi21*dAdF33121 + F23*F23*chi22*dAdF33221 + F23*F23*chi23*dAdF33321 - J*a222*dJdF21;
        dadF(11,0) = F21*F31*chi31*dAdF11111 + F21*F31*chi32*dAdF11211 + F21*F31*chi33*dAdF11311 + F21*F32*chi31*dAdF12111 + F21*F32*chi32*dAdF12211 + F21*F32*chi33*dAdF12311 + F21*F33*chi31*dAdF13111 + F21*F33*chi32*dAdF13211 + F21*F33*chi33*dAdF13311 + F22*F31*chi31*dAdF21111 + F22*F31*chi32*dAdF21211 + F22*F31*chi33*dAdF21311 + F22*F32*chi31*dAdF22111 + F22*F32*chi32*dAdF22211 + F22*F32*chi33*dAdF22311 + F22*F33*chi31*dAdF23111 + F22*F33*chi32*dAdF23211 + F22*F33*chi33*dAdF23311 + F23*F31*chi31*dAdF31111 + F23*F31*chi32*dAdF31211 + F23*F31*chi33*dAdF31311 + F23*F32*chi31*dAdF32111 + F23*F32*chi32*dAdF32211 + F23*F32*chi33*dAdF32311 + F23*F33*chi31*dAdF33111 + F23*F33*chi32*dAdF33211 + F23*F33*chi33*dAdF33311 - J*a233*dJdF11;
        dadF(11,1) = A211*F31*chi31 + A212*F31*chi32 + A213*F31*chi33 + A221*F32*chi31 + A222*F32*chi32 + A223*F32*chi33 + A231*F33*chi31 + A232*F33*chi32 + A233*F33*chi33 + F21*F31*chi31*dAdF11122 + F21*F31*chi32*dAdF11222 + F21*F31*chi33*dAdF11322 + F21*F32*chi31*dAdF12122 + F21*F32*chi32*dAdF12222 + F21*F32*chi33*dAdF12322 + F21*F33*chi31*dAdF13122 + F21*F33*chi32*dAdF13222 + F21*F33*chi33*dAdF13322 + F22*F31*chi31*dAdF21122 + F22*F31*chi32*dAdF21222 + F22*F31*chi33*dAdF21322 + F22*F32*chi31*dAdF22122 + F22*F32*chi32*dAdF22222 + F22*F32*chi33*dAdF22322 + F22*F33*chi31*dAdF23122 + F22*F33*chi32*dAdF23222 + F22*F33*chi33*dAdF23322 + F23*F31*chi31*dAdF31122 + F23*F31*chi32*dAdF31222 + F23*F31*chi33*dAdF31322 + F23*F32*chi31*dAdF32122 + F23*F32*chi32*dAdF32222 + F23*F32*chi33*dAdF32322 + F23*F33*chi31*dAdF33122 + F23*F33*chi32*dAdF33222 + F23*F33*chi33*dAdF33322 - J*a233*dJdF22;
        dadF(11,2) = A131*F21*chi31 + A132*F21*chi32 + A133*F21*chi33 + A231*F22*chi31 + A232*F22*chi32 + A233*F22*chi33 + A331*F23*chi31 + A332*F23*chi32 + A333*F23*chi33 + F21*F31*chi31*dAdF11133 + F21*F31*chi32*dAdF11233 + F21*F31*chi33*dAdF11333 + F21*F32*chi31*dAdF12133 + F21*F32*chi32*dAdF12233 + F21*F32*chi33*dAdF12333 + F21*F33*chi31*dAdF13133 + F21*F33*chi32*dAdF13233 + F21*F33*chi33*dAdF13333 + F22*F31*chi31*dAdF21133 + F22*F31*chi32*dAdF21233 + F22*F31*chi33*dAdF21333 + F22*F32*chi31*dAdF22133 + F22*F32*chi32*dAdF22233 + F22*F32*chi33*dAdF22333 + F22*F33*chi31*dAdF23133 + F22*F33*chi32*dAdF23233 + F22*F33*chi33*dAdF23333 + F23*F31*chi31*dAdF31133 + F23*F31*chi32*dAdF31233 + F23*F31*chi33*dAdF31333 + F23*F32*chi31*dAdF32133 + F23*F32*chi32*dAdF32233 + F23*F32*chi33*dAdF32333 + F23*F33*chi31*dAdF33133 + F23*F33*chi32*dAdF33233 + F23*F33*chi33*dAdF33333 - J*a233*dJdF33;
        dadF(11,3) = A311*F31*chi31 + A312*F31*chi32 + A313*F31*chi33 + A321*F32*chi31 + A322*F32*chi32 + A323*F32*chi33 + A331*F33*chi31 + A332*F33*chi32 + A333*F33*chi33 + F21*F31*chi31*dAdF11123 + F21*F31*chi32*dAdF11223 + F21*F31*chi33*dAdF11323 + F21*F32*chi31*dAdF12123 + F21*F32*chi32*dAdF12223 + F21*F32*chi33*dAdF12323 + F21*F33*chi31*dAdF13123 + F21*F33*chi32*dAdF13223 + F21*F33*chi33*dAdF13323 + F22*F31*chi31*dAdF21123 + F22*F31*chi32*dAdF21223 + F22*F31*chi33*dAdF21323 + F22*F32*chi31*dAdF22123 + F22*F32*chi32*dAdF22223 + F22*F32*chi33*dAdF22323 + F22*F33*chi31*dAdF23123 + F22*F33*chi32*dAdF23223 + F22*F33*chi33*dAdF23323 + F23*F31*chi31*dAdF31123 + F23*F31*chi32*dAdF31223 + F23*F31*chi33*dAdF31323 + F23*F32*chi31*dAdF32123 + F23*F32*chi32*dAdF32223 + F23*F32*chi33*dAdF32323 + F23*F33*chi31*dAdF33123 + F23*F33*chi32*dAdF33223 + F23*F33*chi33*dAdF33323 - J*a233*dJdF23;
        dadF(11,4) = F21*F31*chi31*dAdF11113 + F21*F31*chi32*dAdF11213 + F21*F31*chi33*dAdF11313 + F21*F32*chi31*dAdF12113 + F21*F32*chi32*dAdF12213 + F21*F32*chi33*dAdF12313 + F21*F33*chi31*dAdF13113 + F21*F33*chi32*dAdF13213 + F21*F33*chi33*dAdF13313 + F22*F31*chi31*dAdF21113 + F22*F31*chi32*dAdF21213 + F22*F31*chi33*dAdF21313 + F22*F32*chi31*dAdF22113 + F22*F32*chi32*dAdF22213 + F22*F32*chi33*dAdF22313 + F22*F33*chi31*dAdF23113 + F22*F33*chi32*dAdF23213 + F22*F33*chi33*dAdF23313 + F23*F31*chi31*dAdF31113 + F23*F31*chi32*dAdF31213 + F23*F31*chi33*dAdF31313 + F23*F32*chi31*dAdF32113 + F23*F32*chi32*dAdF32213 + F23*F32*chi33*dAdF32313 + F23*F33*chi31*dAdF33113 + F23*F33*chi32*dAdF33213 + F23*F33*chi33*dAdF33313 - J*a233*dJdF13;
        dadF(11,5) = F21*F31*chi31*dAdF11112 + F21*F31*chi32*dAdF11212 + F21*F31*chi33*dAdF11312 + F21*F32*chi31*dAdF12112 + F21*F32*chi32*dAdF12212 + F21*F32*chi33*dAdF12312 + F21*F33*chi31*dAdF13112 + F21*F33*chi32*dAdF13212 + F21*F33*chi33*dAdF13312 + F22*F31*chi31*dAdF21112 + F22*F31*chi32*dAdF21212 + F22*F31*chi33*dAdF21312 + F22*F32*chi31*dAdF22112 + F22*F32*chi32*dAdF22212 + F22*F32*chi33*dAdF22312 + F22*F33*chi31*dAdF23112 + F22*F33*chi32*dAdF23212 + F22*F33*chi33*dAdF23312 + F23*F31*chi31*dAdF31112 + F23*F31*chi32*dAdF31212 + F23*F31*chi33*dAdF31312 + F23*F32*chi31*dAdF32112 + F23*F32*chi32*dAdF32212 + F23*F32*chi33*dAdF32312 + F23*F33*chi31*dAdF33112 + F23*F33*chi32*dAdF33212 + F23*F33*chi33*dAdF33312 - J*a233*dJdF12;
        dadF(11,6) = A121*F21*chi31 + A122*F21*chi32 + A123*F21*chi33 + A221*F22*chi31 + A222*F22*chi32 + A223*F22*chi33 + A321*F23*chi31 + A322*F23*chi32 + A323*F23*chi33 + F21*F31*chi31*dAdF11132 + F21*F31*chi32*dAdF11232 + F21*F31*chi33*dAdF11332 + F21*F32*chi31*dAdF12132 + F21*F32*chi32*dAdF12232 + F21*F32*chi33*dAdF12332 + F21*F33*chi31*dAdF13132 + F21*F33*chi32*dAdF13232 + F21*F33*chi33*dAdF13332 + F22*F31*chi31*dAdF21132 + F22*F31*chi32*dAdF21232 + F22*F31*chi33*dAdF21332 + F22*F32*chi31*dAdF22132 + F22*F32*chi32*dAdF22232 + F22*F32*chi33*dAdF22332 + F22*F33*chi31*dAdF23132 + F22*F33*chi32*dAdF23232 + F22*F33*chi33*dAdF23332 + F23*F31*chi31*dAdF31132 + F23*F31*chi32*dAdF31232 + F23*F31*chi33*dAdF31332 + F23*F32*chi31*dAdF32132 + F23*F32*chi32*dAdF32232 + F23*F32*chi33*dAdF32332 + F23*F33*chi31*dAdF33132 + F23*F33*chi32*dAdF33232 + F23*F33*chi33*dAdF33332 - J*a233*dJdF32;
        dadF(11,7) = A111*F21*chi31 + A112*F21*chi32 + A113*F21*chi33 + A211*F22*chi31 + A212*F22*chi32 + A213*F22*chi33 + A311*F23*chi31 + A312*F23*chi32 + A313*F23*chi33 + F21*F31*chi31*dAdF11131 + F21*F31*chi32*dAdF11231 + F21*F31*chi33*dAdF11331 + F21*F32*chi31*dAdF12131 + F21*F32*chi32*dAdF12231 + F21*F32*chi33*dAdF12331 + F21*F33*chi31*dAdF13131 + F21*F33*chi32*dAdF13231 + F21*F33*chi33*dAdF13331 + F22*F31*chi31*dAdF21131 + F22*F31*chi32*dAdF21231 + F22*F31*chi33*dAdF21331 + F22*F32*chi31*dAdF22131 + F22*F32*chi32*dAdF22231 + F22*F32*chi33*dAdF22331 + F22*F33*chi31*dAdF23131 + F22*F33*chi32*dAdF23231 + F22*F33*chi33*dAdF23331 + F23*F31*chi31*dAdF31131 + F23*F31*chi32*dAdF31231 + F23*F31*chi33*dAdF31331 + F23*F32*chi31*dAdF32131 + F23*F32*chi32*dAdF32231 + F23*F32*chi33*dAdF32331 + F23*F33*chi31*dAdF33131 + F23*F33*chi32*dAdF33231 + F23*F33*chi33*dAdF33331 - J*a233*dJdF31;
        dadF(11,8) = A111*F31*chi31 + A112*F31*chi32 + A113*F31*chi33 + A121*F32*chi31 + A122*F32*chi32 + A123*F32*chi33 + A131*F33*chi31 + A132*F33*chi32 + A133*F33*chi33 + F21*F31*chi31*dAdF11121 + F21*F31*chi32*dAdF11221 + F21*F31*chi33*dAdF11321 + F21*F32*chi31*dAdF12121 + F21*F32*chi32*dAdF12221 + F21*F32*chi33*dAdF12321 + F21*F33*chi31*dAdF13121 + F21*F33*chi32*dAdF13221 + F21*F33*chi33*dAdF13321 + F22*F31*chi31*dAdF21121 + F22*F31*chi32*dAdF21221 + F22*F31*chi33*dAdF21321 + F22*F32*chi31*dAdF22121 + F22*F32*chi32*dAdF22221 + F22*F32*chi33*dAdF22321 + F22*F33*chi31*dAdF23121 + F22*F33*chi32*dAdF23221 + F22*F33*chi33*dAdF23321 + F23*F31*chi31*dAdF31121 + F23*F31*chi32*dAdF31221 + F23*F31*chi33*dAdF31321 + F23*F32*chi31*dAdF32121 + F23*F32*chi32*dAdF32221 + F23*F32*chi33*dAdF32321 + F23*F33*chi31*dAdF33121 + F23*F33*chi32*dAdF33221 + F23*F33*chi33*dAdF33321 - J*a233*dJdF21;
        dadF(12,0) = F21*F21*chi31*dAdF11111 + F21*F21*chi32*dAdF11211 + F21*F21*chi33*dAdF11311 + F21*F22*chi31*dAdF12111 + F21*F22*chi31*dAdF21111 + F21*F22*chi32*dAdF12211 + F21*F22*chi32*dAdF21211 + F21*F22*chi33*dAdF12311 + F21*F22*chi33*dAdF21311 + F21*F23*chi31*dAdF13111 + F21*F23*chi31*dAdF31111 + F21*F23*chi32*dAdF13211 + F21*F23*chi32*dAdF31211 + F21*F23*chi33*dAdF13311 + F21*F23*chi33*dAdF31311 + F22*F22*chi31*dAdF22111 + F22*F22*chi32*dAdF22211 + F22*F22*chi33*dAdF22311 + F22*F23*chi31*dAdF23111 + F22*F23*chi31*dAdF32111 + F22*F23*chi32*dAdF23211 + F22*F23*chi32*dAdF32211 + F22*F23*chi33*dAdF23311 + F22*F23*chi33*dAdF32311 + F23*F23*chi31*dAdF33111 + F23*F23*chi32*dAdF33211 + F23*F23*chi33*dAdF33311 - J*a223*dJdF11;
        dadF(12,1) = A121*F21*chi31 + A122*F21*chi32 + A123*F21*chi33 + A211*F21*chi31 + A212*F21*chi32 + A213*F21*chi33 + 2*A221*F22*chi31 + 2*A222*F22*chi32 + 2*A223*F22*chi33 + A231*F23*chi31 + A232*F23*chi32 + A233*F23*chi33 + A321*F23*chi31 + A322*F23*chi32 + A323*F23*chi33 + F21*F21*chi31*dAdF11122 + F21*F21*chi32*dAdF11222 + F21*F21*chi33*dAdF11322 + F21*F22*chi31*dAdF12122 + F21*F22*chi31*dAdF21122 + F21*F22*chi32*dAdF12222 + F21*F22*chi32*dAdF21222 + F21*F22*chi33*dAdF12322 + F21*F22*chi33*dAdF21322 + F21*F23*chi31*dAdF13122 + F21*F23*chi31*dAdF31122 + F21*F23*chi32*dAdF13222 + F21*F23*chi32*dAdF31222 + F21*F23*chi33*dAdF13322 + F21*F23*chi33*dAdF31322 + F22*F22*chi31*dAdF22122 + F22*F22*chi32*dAdF22222 + F22*F22*chi33*dAdF22322 + F22*F23*chi31*dAdF23122 + F22*F23*chi31*dAdF32122 + F22*F23*chi32*dAdF23222 + F22*F23*chi32*dAdF32222 + F22*F23*chi33*dAdF23322 + F22*F23*chi33*dAdF32322 + F23*F23*chi31*dAdF33122 + F23*F23*chi32*dAdF33222 + F23*F23*chi33*dAdF33322 - J*a223*dJdF22;
        dadF(12,2) = F21*F21*chi31*dAdF11133 + F21*F21*chi32*dAdF11233 + F21*F21*chi33*dAdF11333 + F21*F22*chi31*dAdF12133 + F21*F22*chi31*dAdF21133 + F21*F22*chi32*dAdF12233 + F21*F22*chi32*dAdF21233 + F21*F22*chi33*dAdF12333 + F21*F22*chi33*dAdF21333 + F21*F23*chi31*dAdF13133 + F21*F23*chi31*dAdF31133 + F21*F23*chi32*dAdF13233 + F21*F23*chi32*dAdF31233 + F21*F23*chi33*dAdF13333 + F21*F23*chi33*dAdF31333 + F22*F22*chi31*dAdF22133 + F22*F22*chi32*dAdF22233 + F22*F22*chi33*dAdF22333 + F22*F23*chi31*dAdF23133 + F22*F23*chi31*dAdF32133 + F22*F23*chi32*dAdF23233 + F22*F23*chi32*dAdF32233 + F22*F23*chi33*dAdF23333 + F22*F23*chi33*dAdF32333 + F23*F23*chi31*dAdF33133 + F23*F23*chi32*dAdF33233 + F23*F23*chi33*dAdF33333 - J*a223*dJdF33;
        dadF(12,3) = A131*F21*chi31 + A132*F21*chi32 + A133*F21*chi33 + A231*F22*chi31 + A232*F22*chi32 + A233*F22*chi33 + A311*F21*chi31 + A312*F21*chi32 + A313*F21*chi33 + A321*F22*chi31 + A322*F22*chi32 + A323*F22*chi33 + 2*A331*F23*chi31 + 2*A332*F23*chi32 + 2*A333*F23*chi33 + F21*F21*chi31*dAdF11123 + F21*F21*chi32*dAdF11223 + F21*F21*chi33*dAdF11323 + F21*F22*chi31*dAdF12123 + F21*F22*chi31*dAdF21123 + F21*F22*chi32*dAdF12223 + F21*F22*chi32*dAdF21223 + F21*F22*chi33*dAdF12323 + F21*F22*chi33*dAdF21323 + F21*F23*chi31*dAdF13123 + F21*F23*chi31*dAdF31123 + F21*F23*chi32*dAdF13223 + F21*F23*chi32*dAdF31223 + F21*F23*chi33*dAdF13323 + F21*F23*chi33*dAdF31323 + F22*F22*chi31*dAdF22123 + F22*F22*chi32*dAdF22223 + F22*F22*chi33*dAdF22323 + F22*F23*chi31*dAdF23123 + F22*F23*chi31*dAdF32123 + F22*F23*chi32*dAdF23223 + F22*F23*chi32*dAdF32223 + F22*F23*chi33*dAdF23323 + F22*F23*chi33*dAdF32323 + F23*F23*chi31*dAdF33123 + F23*F23*chi32*dAdF33223 + F23*F23*chi33*dAdF33323 - J*a223*dJdF23;
        dadF(12,4) = F21*F21*chi31*dAdF11113 + F21*F21*chi32*dAdF11213 + F21*F21*chi33*dAdF11313 + F21*F22*chi31*dAdF12113 + F21*F22*chi31*dAdF21113 + F21*F22*chi32*dAdF12213 + F21*F22*chi32*dAdF21213 + F21*F22*chi33*dAdF12313 + F21*F22*chi33*dAdF21313 + F21*F23*chi31*dAdF13113 + F21*F23*chi31*dAdF31113 + F21*F23*chi32*dAdF13213 + F21*F23*chi32*dAdF31213 + F21*F23*chi33*dAdF13313 + F21*F23*chi33*dAdF31313 + F22*F22*chi31*dAdF22113 + F22*F22*chi32*dAdF22213 + F22*F22*chi33*dAdF22313 + F22*F23*chi31*dAdF23113 + F22*F23*chi31*dAdF32113 + F22*F23*chi32*dAdF23213 + F22*F23*chi32*dAdF32213 + F22*F23*chi33*dAdF23313 + F22*F23*chi33*dAdF32313 + F23*F23*chi31*dAdF33113 + F23*F23*chi32*dAdF33213 + F23*F23*chi33*dAdF33313 - J*a223*dJdF13;
        dadF(12,5) = F21*F21*chi31*dAdF11112 + F21*F21*chi32*dAdF11212 + F21*F21*chi33*dAdF11312 + F21*F22*chi31*dAdF12112 + F21*F22*chi31*dAdF21112 + F21*F22*chi32*dAdF12212 + F21*F22*chi32*dAdF21212 + F21*F22*chi33*dAdF12312 + F21*F22*chi33*dAdF21312 + F21*F23*chi31*dAdF13112 + F21*F23*chi31*dAdF31112 + F21*F23*chi32*dAdF13212 + F21*F23*chi32*dAdF31212 + F21*F23*chi33*dAdF13312 + F21*F23*chi33*dAdF31312 + F22*F22*chi31*dAdF22112 + F22*F22*chi32*dAdF22212 + F22*F22*chi33*dAdF22312 + F22*F23*chi31*dAdF23112 + F22*F23*chi31*dAdF32112 + F22*F23*chi32*dAdF23212 + F22*F23*chi32*dAdF32212 + F22*F23*chi33*dAdF23312 + F22*F23*chi33*dAdF32312 + F23*F23*chi31*dAdF33112 + F23*F23*chi32*dAdF33212 + F23*F23*chi33*dAdF33312 - J*a223*dJdF12;
        dadF(12,6) = F21*F21*chi31*dAdF11132 + F21*F21*chi32*dAdF11232 + F21*F21*chi33*dAdF11332 + F21*F22*chi31*dAdF12132 + F21*F22*chi31*dAdF21132 + F21*F22*chi32*dAdF12232 + F21*F22*chi32*dAdF21232 + F21*F22*chi33*dAdF12332 + F21*F22*chi33*dAdF21332 + F21*F23*chi31*dAdF13132 + F21*F23*chi31*dAdF31132 + F21*F23*chi32*dAdF13232 + F21*F23*chi32*dAdF31232 + F21*F23*chi33*dAdF13332 + F21*F23*chi33*dAdF31332 + F22*F22*chi31*dAdF22132 + F22*F22*chi32*dAdF22232 + F22*F22*chi33*dAdF22332 + F22*F23*chi31*dAdF23132 + F22*F23*chi31*dAdF32132 + F22*F23*chi32*dAdF23232 + F22*F23*chi32*dAdF32232 + F22*F23*chi33*dAdF23332 + F22*F23*chi33*dAdF32332 + F23*F23*chi31*dAdF33132 + F23*F23*chi32*dAdF33232 + F23*F23*chi33*dAdF33332 - J*a223*dJdF32;
        dadF(12,7) = F21*F21*chi31*dAdF11131 + F21*F21*chi32*dAdF11231 + F21*F21*chi33*dAdF11331 + F21*F22*chi31*dAdF12131 + F21*F22*chi31*dAdF21131 + F21*F22*chi32*dAdF12231 + F21*F22*chi32*dAdF21231 + F21*F22*chi33*dAdF12331 + F21*F22*chi33*dAdF21331 + F21*F23*chi31*dAdF13131 + F21*F23*chi31*dAdF31131 + F21*F23*chi32*dAdF13231 + F21*F23*chi32*dAdF31231 + F21*F23*chi33*dAdF13331 + F21*F23*chi33*dAdF31331 + F22*F22*chi31*dAdF22131 + F22*F22*chi32*dAdF22231 + F22*F22*chi33*dAdF22331 + F22*F23*chi31*dAdF23131 + F22*F23*chi31*dAdF32131 + F22*F23*chi32*dAdF23231 + F22*F23*chi32*dAdF32231 + F22*F23*chi33*dAdF23331 + F22*F23*chi33*dAdF32331 + F23*F23*chi31*dAdF33131 + F23*F23*chi32*dAdF33231 + F23*F23*chi33*dAdF33331 - J*a223*dJdF31;
        dadF(12,8) = 2*A111*F21*chi31 + 2*A112*F21*chi32 + 2*A113*F21*chi33 + A121*F22*chi31 + A122*F22*chi32 + A123*F22*chi33 + A131*F23*chi31 + A132*F23*chi32 + A133*F23*chi33 + A211*F22*chi31 + A212*F22*chi32 + A213*F22*chi33 + A311*F23*chi31 + A312*F23*chi32 + A313*F23*chi33 + F21*F21*chi31*dAdF11121 + F21*F21*chi32*dAdF11221 + F21*F21*chi33*dAdF11321 + F21*F22*chi31*dAdF12121 + F21*F22*chi31*dAdF21121 + F21*F22*chi32*dAdF12221 + F21*F22*chi32*dAdF21221 + F21*F22*chi33*dAdF12321 + F21*F22*chi33*dAdF21321 + F21*F23*chi31*dAdF13121 + F21*F23*chi31*dAdF31121 + F21*F23*chi32*dAdF13221 + F21*F23*chi32*dAdF31221 + F21*F23*chi33*dAdF13321 + F21*F23*chi33*dAdF31321 + F22*F22*chi31*dAdF22121 + F22*F22*chi32*dAdF22221 + F22*F22*chi33*dAdF22321 + F22*F23*chi31*dAdF23121 + F22*F23*chi31*dAdF32121 + F22*F23*chi32*dAdF23221 + F22*F23*chi32*dAdF32221 + F22*F23*chi33*dAdF23321 + F22*F23*chi33*dAdF32321 + F23*F23*chi31*dAdF33121 + F23*F23*chi32*dAdF33221 + F23*F23*chi33*dAdF33321 - J*a223*dJdF21;
        dadF(13,0) = A111*F21*chi31 + A112*F21*chi32 + A113*F21*chi33 + A211*F22*chi31 + A212*F22*chi32 + A213*F22*chi33 + A311*F23*chi31 + A312*F23*chi32 + A313*F23*chi33 + F11*F21*chi31*dAdF11111 + F11*F21*chi32*dAdF11211 + F11*F21*chi33*dAdF11311 + F11*F22*chi31*dAdF21111 + F11*F22*chi32*dAdF21211 + F11*F22*chi33*dAdF21311 + F11*F23*chi31*dAdF31111 + F11*F23*chi32*dAdF31211 + F11*F23*chi33*dAdF31311 + F12*F21*chi31*dAdF12111 + F12*F21*chi32*dAdF12211 + F12*F21*chi33*dAdF12311 + F12*F22*chi31*dAdF22111 + F12*F22*chi32*dAdF22211 + F12*F22*chi33*dAdF22311 + F12*F23*chi31*dAdF32111 + F12*F23*chi32*dAdF32211 + F12*F23*chi33*dAdF32311 + F13*F21*chi31*dAdF13111 + F13*F21*chi32*dAdF13211 + F13*F21*chi33*dAdF13311 + F13*F22*chi31*dAdF23111 + F13*F22*chi32*dAdF23211 + F13*F22*chi33*dAdF23311 + F13*F23*chi31*dAdF33111 + F13*F23*chi32*dAdF33211 + F13*F23*chi33*dAdF33311 - J*a213*dJdF11;
        dadF(13,1) = A211*F11*chi31 + A212*F11*chi32 + A213*F11*chi33 + A221*F12*chi31 + A222*F12*chi32 + A223*F12*chi33 + A231*F13*chi31 + A232*F13*chi32 + A233*F13*chi33 + F11*F21*chi31*dAdF11122 + F11*F21*chi32*dAdF11222 + F11*F21*chi33*dAdF11322 + F11*F22*chi31*dAdF21122 + F11*F22*chi32*dAdF21222 + F11*F22*chi33*dAdF21322 + F11*F23*chi31*dAdF31122 + F11*F23*chi32*dAdF31222 + F11*F23*chi33*dAdF31322 + F12*F21*chi31*dAdF12122 + F12*F21*chi32*dAdF12222 + F12*F21*chi33*dAdF12322 + F12*F22*chi31*dAdF22122 + F12*F22*chi32*dAdF22222 + F12*F22*chi33*dAdF22322 + F12*F23*chi31*dAdF32122 + F12*F23*chi32*dAdF32222 + F12*F23*chi33*dAdF32322 + F13*F21*chi31*dAdF13122 + F13*F21*chi32*dAdF13222 + F13*F21*chi33*dAdF13322 + F13*F22*chi31*dAdF23122 + F13*F22*chi32*dAdF23222 + F13*F22*chi33*dAdF23322 + F13*F23*chi31*dAdF33122 + F13*F23*chi32*dAdF33222 + F13*F23*chi33*dAdF33322 - J*a213*dJdF22;
        dadF(13,2) = F11*F21*chi31*dAdF11133 + F11*F21*chi32*dAdF11233 + F11*F21*chi33*dAdF11333 + F11*F22*chi31*dAdF21133 + F11*F22*chi32*dAdF21233 + F11*F22*chi33*dAdF21333 + F11*F23*chi31*dAdF31133 + F11*F23*chi32*dAdF31233 + F11*F23*chi33*dAdF31333 + F12*F21*chi31*dAdF12133 + F12*F21*chi32*dAdF12233 + F12*F21*chi33*dAdF12333 + F12*F22*chi31*dAdF22133 + F12*F22*chi32*dAdF22233 + F12*F22*chi33*dAdF22333 + F12*F23*chi31*dAdF32133 + F12*F23*chi32*dAdF32233 + F12*F23*chi33*dAdF32333 + F13*F21*chi31*dAdF13133 + F13*F21*chi32*dAdF13233 + F13*F21*chi33*dAdF13333 + F13*F22*chi31*dAdF23133 + F13*F22*chi32*dAdF23233 + F13*F22*chi33*dAdF23333 + F13*F23*chi31*dAdF33133 + F13*F23*chi32*dAdF33233 + F13*F23*chi33*dAdF33333 - J*a213*dJdF33;
        dadF(13,3) = A311*F11*chi31 + A312*F11*chi32 + A313*F11*chi33 + A321*F12*chi31 + A322*F12*chi32 + A323*F12*chi33 + A331*F13*chi31 + A332*F13*chi32 + A333*F13*chi33 + F11*F21*chi31*dAdF11123 + F11*F21*chi32*dAdF11223 + F11*F21*chi33*dAdF11323 + F11*F22*chi31*dAdF21123 + F11*F22*chi32*dAdF21223 + F11*F22*chi33*dAdF21323 + F11*F23*chi31*dAdF31123 + F11*F23*chi32*dAdF31223 + F11*F23*chi33*dAdF31323 + F12*F21*chi31*dAdF12123 + F12*F21*chi32*dAdF12223 + F12*F21*chi33*dAdF12323 + F12*F22*chi31*dAdF22123 + F12*F22*chi32*dAdF22223 + F12*F22*chi33*dAdF22323 + F12*F23*chi31*dAdF32123 + F12*F23*chi32*dAdF32223 + F12*F23*chi33*dAdF32323 + F13*F21*chi31*dAdF13123 + F13*F21*chi32*dAdF13223 + F13*F21*chi33*dAdF13323 + F13*F22*chi31*dAdF23123 + F13*F22*chi32*dAdF23223 + F13*F22*chi33*dAdF23323 + F13*F23*chi31*dAdF33123 + F13*F23*chi32*dAdF33223 + F13*F23*chi33*dAdF33323 - J*a213*dJdF23;
        dadF(13,4) = A131*F21*chi31 + A132*F21*chi32 + A133*F21*chi33 + A231*F22*chi31 + A232*F22*chi32 + A233*F22*chi33 + A331*F23*chi31 + A332*F23*chi32 + A333*F23*chi33 + F11*F21*chi31*dAdF11113 + F11*F21*chi32*dAdF11213 + F11*F21*chi33*dAdF11313 + F11*F22*chi31*dAdF21113 + F11*F22*chi32*dAdF21213 + F11*F22*chi33*dAdF21313 + F11*F23*chi31*dAdF31113 + F11*F23*chi32*dAdF31213 + F11*F23*chi33*dAdF31313 + F12*F21*chi31*dAdF12113 + F12*F21*chi32*dAdF12213 + F12*F21*chi33*dAdF12313 + F12*F22*chi31*dAdF22113 + F12*F22*chi32*dAdF22213 + F12*F22*chi33*dAdF22313 + F12*F23*chi31*dAdF32113 + F12*F23*chi32*dAdF32213 + F12*F23*chi33*dAdF32313 + F13*F21*chi31*dAdF13113 + F13*F21*chi32*dAdF13213 + F13*F21*chi33*dAdF13313 + F13*F22*chi31*dAdF23113 + F13*F22*chi32*dAdF23213 + F13*F22*chi33*dAdF23313 + F13*F23*chi31*dAdF33113 + F13*F23*chi32*dAdF33213 + F13*F23*chi33*dAdF33313 - J*a213*dJdF13;
        dadF(13,5) = A121*F21*chi31 + A122*F21*chi32 + A123*F21*chi33 + A221*F22*chi31 + A222*F22*chi32 + A223*F22*chi33 + A321*F23*chi31 + A322*F23*chi32 + A323*F23*chi33 + F11*F21*chi31*dAdF11112 + F11*F21*chi32*dAdF11212 + F11*F21*chi33*dAdF11312 + F11*F22*chi31*dAdF21112 + F11*F22*chi32*dAdF21212 + F11*F22*chi33*dAdF21312 + F11*F23*chi31*dAdF31112 + F11*F23*chi32*dAdF31212 + F11*F23*chi33*dAdF31312 + F12*F21*chi31*dAdF12112 + F12*F21*chi32*dAdF12212 + F12*F21*chi33*dAdF12312 + F12*F22*chi31*dAdF22112 + F12*F22*chi32*dAdF22212 + F12*F22*chi33*dAdF22312 + F12*F23*chi31*dAdF32112 + F12*F23*chi32*dAdF32212 + F12*F23*chi33*dAdF32312 + F13*F21*chi31*dAdF13112 + F13*F21*chi32*dAdF13212 + F13*F21*chi33*dAdF13312 + F13*F22*chi31*dAdF23112 + F13*F22*chi32*dAdF23212 + F13*F22*chi33*dAdF23312 + F13*F23*chi31*dAdF33112 + F13*F23*chi32*dAdF33212 + F13*F23*chi33*dAdF33312 - J*a213*dJdF12;
        dadF(13,6) = F11*F21*chi31*dAdF11132 + F11*F21*chi32*dAdF11232 + F11*F21*chi33*dAdF11332 + F11*F22*chi31*dAdF21132 + F11*F22*chi32*dAdF21232 + F11*F22*chi33*dAdF21332 + F11*F23*chi31*dAdF31132 + F11*F23*chi32*dAdF31232 + F11*F23*chi33*dAdF31332 + F12*F21*chi31*dAdF12132 + F12*F21*chi32*dAdF12232 + F12*F21*chi33*dAdF12332 + F12*F22*chi31*dAdF22132 + F12*F22*chi32*dAdF22232 + F12*F22*chi33*dAdF22332 + F12*F23*chi31*dAdF32132 + F12*F23*chi32*dAdF32232 + F12*F23*chi33*dAdF32332 + F13*F21*chi31*dAdF13132 + F13*F21*chi32*dAdF13232 + F13*F21*chi33*dAdF13332 + F13*F22*chi31*dAdF23132 + F13*F22*chi32*dAdF23232 + F13*F22*chi33*dAdF23332 + F13*F23*chi31*dAdF33132 + F13*F23*chi32*dAdF33232 + F13*F23*chi33*dAdF33332 - J*a213*dJdF32;
        dadF(13,7) = F11*F21*chi31*dAdF11131 + F11*F21*chi32*dAdF11231 + F11*F21*chi33*dAdF11331 + F11*F22*chi31*dAdF21131 + F11*F22*chi32*dAdF21231 + F11*F22*chi33*dAdF21331 + F11*F23*chi31*dAdF31131 + F11*F23*chi32*dAdF31231 + F11*F23*chi33*dAdF31331 + F12*F21*chi31*dAdF12131 + F12*F21*chi32*dAdF12231 + F12*F21*chi33*dAdF12331 + F12*F22*chi31*dAdF22131 + F12*F22*chi32*dAdF22231 + F12*F22*chi33*dAdF22331 + F12*F23*chi31*dAdF32131 + F12*F23*chi32*dAdF32231 + F12*F23*chi33*dAdF32331 + F13*F21*chi31*dAdF13131 + F13*F21*chi32*dAdF13231 + F13*F21*chi33*dAdF13331 + F13*F22*chi31*dAdF23131 + F13*F22*chi32*dAdF23231 + F13*F22*chi33*dAdF23331 + F13*F23*chi31*dAdF33131 + F13*F23*chi32*dAdF33231 + F13*F23*chi33*dAdF33331 - J*a213*dJdF31;
        dadF(13,8) = A111*F11*chi31 + A112*F11*chi32 + A113*F11*chi33 + A121*F12*chi31 + A122*F12*chi32 + A123*F12*chi33 + A131*F13*chi31 + A132*F13*chi32 + A133*F13*chi33 + F11*F21*chi31*dAdF11121 + F11*F21*chi32*dAdF11221 + F11*F21*chi33*dAdF11321 + F11*F22*chi31*dAdF21121 + F11*F22*chi32*dAdF21221 + F11*F22*chi33*dAdF21321 + F11*F23*chi31*dAdF31121 + F11*F23*chi32*dAdF31221 + F11*F23*chi33*dAdF31321 + F12*F21*chi31*dAdF12121 + F12*F21*chi32*dAdF12221 + F12*F21*chi33*dAdF12321 + F12*F22*chi31*dAdF22121 + F12*F22*chi32*dAdF22221 + F12*F22*chi33*dAdF22321 + F12*F23*chi31*dAdF32121 + F12*F23*chi32*dAdF32221 + F12*F23*chi33*dAdF32321 + F13*F21*chi31*dAdF13121 + F13*F21*chi32*dAdF13221 + F13*F21*chi33*dAdF13321 + F13*F22*chi31*dAdF23121 + F13*F22*chi32*dAdF23221 + F13*F22*chi33*dAdF23321 + F13*F23*chi31*dAdF33121 + F13*F23*chi32*dAdF33221 + F13*F23*chi33*dAdF33321 - J*a213*dJdF21;
        dadF(14,0) = A111*F21*chi21 + A112*F21*chi22 + A113*F21*chi23 + A211*F22*chi21 + A212*F22*chi22 + A213*F22*chi23 + A311*F23*chi21 + A312*F23*chi22 + A313*F23*chi23 + F11*F21*chi21*dAdF11111 + F11*F21*chi22*dAdF11211 + F11*F21*chi23*dAdF11311 + F11*F22*chi21*dAdF21111 + F11*F22*chi22*dAdF21211 + F11*F22*chi23*dAdF21311 + F11*F23*chi21*dAdF31111 + F11*F23*chi22*dAdF31211 + F11*F23*chi23*dAdF31311 + F12*F21*chi21*dAdF12111 + F12*F21*chi22*dAdF12211 + F12*F21*chi23*dAdF12311 + F12*F22*chi21*dAdF22111 + F12*F22*chi22*dAdF22211 + F12*F22*chi23*dAdF22311 + F12*F23*chi21*dAdF32111 + F12*F23*chi22*dAdF32211 + F12*F23*chi23*dAdF32311 + F13*F21*chi21*dAdF13111 + F13*F21*chi22*dAdF13211 + F13*F21*chi23*dAdF13311 + F13*F22*chi21*dAdF23111 + F13*F22*chi22*dAdF23211 + F13*F22*chi23*dAdF23311 + F13*F23*chi21*dAdF33111 + F13*F23*chi22*dAdF33211 + F13*F23*chi23*dAdF33311 - J*a212*dJdF11;
        dadF(14,1) = A211*F11*chi21 + A212*F11*chi22 + A213*F11*chi23 + A221*F12*chi21 + A222*F12*chi22 + A223*F12*chi23 + A231*F13*chi21 + A232*F13*chi22 + A233*F13*chi23 + F11*F21*chi21*dAdF11122 + F11*F21*chi22*dAdF11222 + F11*F21*chi23*dAdF11322 + F11*F22*chi21*dAdF21122 + F11*F22*chi22*dAdF21222 + F11*F22*chi23*dAdF21322 + F11*F23*chi21*dAdF31122 + F11*F23*chi22*dAdF31222 + F11*F23*chi23*dAdF31322 + F12*F21*chi21*dAdF12122 + F12*F21*chi22*dAdF12222 + F12*F21*chi23*dAdF12322 + F12*F22*chi21*dAdF22122 + F12*F22*chi22*dAdF22222 + F12*F22*chi23*dAdF22322 + F12*F23*chi21*dAdF32122 + F12*F23*chi22*dAdF32222 + F12*F23*chi23*dAdF32322 + F13*F21*chi21*dAdF13122 + F13*F21*chi22*dAdF13222 + F13*F21*chi23*dAdF13322 + F13*F22*chi21*dAdF23122 + F13*F22*chi22*dAdF23222 + F13*F22*chi23*dAdF23322 + F13*F23*chi21*dAdF33122 + F13*F23*chi22*dAdF33222 + F13*F23*chi23*dAdF33322 - J*a212*dJdF22;
        dadF(14,2) = F11*F21*chi21*dAdF11133 + F11*F21*chi22*dAdF11233 + F11*F21*chi23*dAdF11333 + F11*F22*chi21*dAdF21133 + F11*F22*chi22*dAdF21233 + F11*F22*chi23*dAdF21333 + F11*F23*chi21*dAdF31133 + F11*F23*chi22*dAdF31233 + F11*F23*chi23*dAdF31333 + F12*F21*chi21*dAdF12133 + F12*F21*chi22*dAdF12233 + F12*F21*chi23*dAdF12333 + F12*F22*chi21*dAdF22133 + F12*F22*chi22*dAdF22233 + F12*F22*chi23*dAdF22333 + F12*F23*chi21*dAdF32133 + F12*F23*chi22*dAdF32233 + F12*F23*chi23*dAdF32333 + F13*F21*chi21*dAdF13133 + F13*F21*chi22*dAdF13233 + F13*F21*chi23*dAdF13333 + F13*F22*chi21*dAdF23133 + F13*F22*chi22*dAdF23233 + F13*F22*chi23*dAdF23333 + F13*F23*chi21*dAdF33133 + F13*F23*chi22*dAdF33233 + F13*F23*chi23*dAdF33333 - J*a212*dJdF33;
        dadF(14,3) = A311*F11*chi21 + A312*F11*chi22 + A313*F11*chi23 + A321*F12*chi21 + A322*F12*chi22 + A323*F12*chi23 + A331*F13*chi21 + A332*F13*chi22 + A333*F13*chi23 + F11*F21*chi21*dAdF11123 + F11*F21*chi22*dAdF11223 + F11*F21*chi23*dAdF11323 + F11*F22*chi21*dAdF21123 + F11*F22*chi22*dAdF21223 + F11*F22*chi23*dAdF21323 + F11*F23*chi21*dAdF31123 + F11*F23*chi22*dAdF31223 + F11*F23*chi23*dAdF31323 + F12*F21*chi21*dAdF12123 + F12*F21*chi22*dAdF12223 + F12*F21*chi23*dAdF12323 + F12*F22*chi21*dAdF22123 + F12*F22*chi22*dAdF22223 + F12*F22*chi23*dAdF22323 + F12*F23*chi21*dAdF32123 + F12*F23*chi22*dAdF32223 + F12*F23*chi23*dAdF32323 + F13*F21*chi21*dAdF13123 + F13*F21*chi22*dAdF13223 + F13*F21*chi23*dAdF13323 + F13*F22*chi21*dAdF23123 + F13*F22*chi22*dAdF23223 + F13*F22*chi23*dAdF23323 + F13*F23*chi21*dAdF33123 + F13*F23*chi22*dAdF33223 + F13*F23*chi23*dAdF33323 - J*a212*dJdF23;
        dadF(14,4) = A131*F21*chi21 + A132*F21*chi22 + A133*F21*chi23 + A231*F22*chi21 + A232*F22*chi22 + A233*F22*chi23 + A331*F23*chi21 + A332*F23*chi22 + A333*F23*chi23 + F11*F21*chi21*dAdF11113 + F11*F21*chi22*dAdF11213 + F11*F21*chi23*dAdF11313 + F11*F22*chi21*dAdF21113 + F11*F22*chi22*dAdF21213 + F11*F22*chi23*dAdF21313 + F11*F23*chi21*dAdF31113 + F11*F23*chi22*dAdF31213 + F11*F23*chi23*dAdF31313 + F12*F21*chi21*dAdF12113 + F12*F21*chi22*dAdF12213 + F12*F21*chi23*dAdF12313 + F12*F22*chi21*dAdF22113 + F12*F22*chi22*dAdF22213 + F12*F22*chi23*dAdF22313 + F12*F23*chi21*dAdF32113 + F12*F23*chi22*dAdF32213 + F12*F23*chi23*dAdF32313 + F13*F21*chi21*dAdF13113 + F13*F21*chi22*dAdF13213 + F13*F21*chi23*dAdF13313 + F13*F22*chi21*dAdF23113 + F13*F22*chi22*dAdF23213 + F13*F22*chi23*dAdF23313 + F13*F23*chi21*dAdF33113 + F13*F23*chi22*dAdF33213 + F13*F23*chi23*dAdF33313 - J*a212*dJdF13;
        dadF(14,5) = A121*F21*chi21 + A122*F21*chi22 + A123*F21*chi23 + A221*F22*chi21 + A222*F22*chi22 + A223*F22*chi23 + A321*F23*chi21 + A322*F23*chi22 + A323*F23*chi23 + F11*F21*chi21*dAdF11112 + F11*F21*chi22*dAdF11212 + F11*F21*chi23*dAdF11312 + F11*F22*chi21*dAdF21112 + F11*F22*chi22*dAdF21212 + F11*F22*chi23*dAdF21312 + F11*F23*chi21*dAdF31112 + F11*F23*chi22*dAdF31212 + F11*F23*chi23*dAdF31312 + F12*F21*chi21*dAdF12112 + F12*F21*chi22*dAdF12212 + F12*F21*chi23*dAdF12312 + F12*F22*chi21*dAdF22112 + F12*F22*chi22*dAdF22212 + F12*F22*chi23*dAdF22312 + F12*F23*chi21*dAdF32112 + F12*F23*chi22*dAdF32212 + F12*F23*chi23*dAdF32312 + F13*F21*chi21*dAdF13112 + F13*F21*chi22*dAdF13212 + F13*F21*chi23*dAdF13312 + F13*F22*chi21*dAdF23112 + F13*F22*chi22*dAdF23212 + F13*F22*chi23*dAdF23312 + F13*F23*chi21*dAdF33112 + F13*F23*chi22*dAdF33212 + F13*F23*chi23*dAdF33312 - J*a212*dJdF12;
        dadF(14,6) = F11*F21*chi21*dAdF11132 + F11*F21*chi22*dAdF11232 + F11*F21*chi23*dAdF11332 + F11*F22*chi21*dAdF21132 + F11*F22*chi22*dAdF21232 + F11*F22*chi23*dAdF21332 + F11*F23*chi21*dAdF31132 + F11*F23*chi22*dAdF31232 + F11*F23*chi23*dAdF31332 + F12*F21*chi21*dAdF12132 + F12*F21*chi22*dAdF12232 + F12*F21*chi23*dAdF12332 + F12*F22*chi21*dAdF22132 + F12*F22*chi22*dAdF22232 + F12*F22*chi23*dAdF22332 + F12*F23*chi21*dAdF32132 + F12*F23*chi22*dAdF32232 + F12*F23*chi23*dAdF32332 + F13*F21*chi21*dAdF13132 + F13*F21*chi22*dAdF13232 + F13*F21*chi23*dAdF13332 + F13*F22*chi21*dAdF23132 + F13*F22*chi22*dAdF23232 + F13*F22*chi23*dAdF23332 + F13*F23*chi21*dAdF33132 + F13*F23*chi22*dAdF33232 + F13*F23*chi23*dAdF33332 - J*a212*dJdF32;
        dadF(14,7) = F11*F21*chi21*dAdF11131 + F11*F21*chi22*dAdF11231 + F11*F21*chi23*dAdF11331 + F11*F22*chi21*dAdF21131 + F11*F22*chi22*dAdF21231 + F11*F22*chi23*dAdF21331 + F11*F23*chi21*dAdF31131 + F11*F23*chi22*dAdF31231 + F11*F23*chi23*dAdF31331 + F12*F21*chi21*dAdF12131 + F12*F21*chi22*dAdF12231 + F12*F21*chi23*dAdF12331 + F12*F22*chi21*dAdF22131 + F12*F22*chi22*dAdF22231 + F12*F22*chi23*dAdF22331 + F12*F23*chi21*dAdF32131 + F12*F23*chi22*dAdF32231 + F12*F23*chi23*dAdF32331 + F13*F21*chi21*dAdF13131 + F13*F21*chi22*dAdF13231 + F13*F21*chi23*dAdF13331 + F13*F22*chi21*dAdF23131 + F13*F22*chi22*dAdF23231 + F13*F22*chi23*dAdF23331 + F13*F23*chi21*dAdF33131 + F13*F23*chi22*dAdF33231 + F13*F23*chi23*dAdF33331 - J*a212*dJdF31;
        dadF(14,8) = A111*F11*chi21 + A112*F11*chi22 + A113*F11*chi23 + A121*F12*chi21 + A122*F12*chi22 + A123*F12*chi23 + A131*F13*chi21 + A132*F13*chi22 + A133*F13*chi23 + F11*F21*chi21*dAdF11121 + F11*F21*chi22*dAdF11221 + F11*F21*chi23*dAdF11321 + F11*F22*chi21*dAdF21121 + F11*F22*chi22*dAdF21221 + F11*F22*chi23*dAdF21321 + F11*F23*chi21*dAdF31121 + F11*F23*chi22*dAdF31221 + F11*F23*chi23*dAdF31321 + F12*F21*chi21*dAdF12121 + F12*F21*chi22*dAdF12221 + F12*F21*chi23*dAdF12321 + F12*F22*chi21*dAdF22121 + F12*F22*chi22*dAdF22221 + F12*F22*chi23*dAdF22321 + F12*F23*chi21*dAdF32121 + F12*F23*chi22*dAdF32221 + F12*F23*chi23*dAdF32321 + F13*F21*chi21*dAdF13121 + F13*F21*chi22*dAdF13221 + F13*F21*chi23*dAdF13321 + F13*F22*chi21*dAdF23121 + F13*F22*chi22*dAdF23221 + F13*F22*chi23*dAdF23321 + F13*F23*chi21*dAdF33121 + F13*F23*chi22*dAdF33221 + F13*F23*chi23*dAdF33321 - J*a212*dJdF21;
        dadF(15,0) = F21*F31*chi21*dAdF11111 + F21*F31*chi22*dAdF11211 + F21*F31*chi23*dAdF11311 + F21*F32*chi21*dAdF12111 + F21*F32*chi22*dAdF12211 + F21*F32*chi23*dAdF12311 + F21*F33*chi21*dAdF13111 + F21*F33*chi22*dAdF13211 + F21*F33*chi23*dAdF13311 + F22*F31*chi21*dAdF21111 + F22*F31*chi22*dAdF21211 + F22*F31*chi23*dAdF21311 + F22*F32*chi21*dAdF22111 + F22*F32*chi22*dAdF22211 + F22*F32*chi23*dAdF22311 + F22*F33*chi21*dAdF23111 + F22*F33*chi22*dAdF23211 + F22*F33*chi23*dAdF23311 + F23*F31*chi21*dAdF31111 + F23*F31*chi22*dAdF31211 + F23*F31*chi23*dAdF31311 + F23*F32*chi21*dAdF32111 + F23*F32*chi22*dAdF32211 + F23*F32*chi23*dAdF32311 + F23*F33*chi21*dAdF33111 + F23*F33*chi22*dAdF33211 + F23*F33*chi23*dAdF33311 - J*a232*dJdF11;
        dadF(15,1) = A211*F31*chi21 + A212*F31*chi22 + A213*F31*chi23 + A221*F32*chi21 + A222*F32*chi22 + A223*F32*chi23 + A231*F33*chi21 + A232*F33*chi22 + A233*F33*chi23 + F21*F31*chi21*dAdF11122 + F21*F31*chi22*dAdF11222 + F21*F31*chi23*dAdF11322 + F21*F32*chi21*dAdF12122 + F21*F32*chi22*dAdF12222 + F21*F32*chi23*dAdF12322 + F21*F33*chi21*dAdF13122 + F21*F33*chi22*dAdF13222 + F21*F33*chi23*dAdF13322 + F22*F31*chi21*dAdF21122 + F22*F31*chi22*dAdF21222 + F22*F31*chi23*dAdF21322 + F22*F32*chi21*dAdF22122 + F22*F32*chi22*dAdF22222 + F22*F32*chi23*dAdF22322 + F22*F33*chi21*dAdF23122 + F22*F33*chi22*dAdF23222 + F22*F33*chi23*dAdF23322 + F23*F31*chi21*dAdF31122 + F23*F31*chi22*dAdF31222 + F23*F31*chi23*dAdF31322 + F23*F32*chi21*dAdF32122 + F23*F32*chi22*dAdF32222 + F23*F32*chi23*dAdF32322 + F23*F33*chi21*dAdF33122 + F23*F33*chi22*dAdF33222 + F23*F33*chi23*dAdF33322 - J*a232*dJdF22;
        dadF(15,2) = A131*F21*chi21 + A132*F21*chi22 + A133*F21*chi23 + A231*F22*chi21 + A232*F22*chi22 + A233*F22*chi23 + A331*F23*chi21 + A332*F23*chi22 + A333*F23*chi23 + F21*F31*chi21*dAdF11133 + F21*F31*chi22*dAdF11233 + F21*F31*chi23*dAdF11333 + F21*F32*chi21*dAdF12133 + F21*F32*chi22*dAdF12233 + F21*F32*chi23*dAdF12333 + F21*F33*chi21*dAdF13133 + F21*F33*chi22*dAdF13233 + F21*F33*chi23*dAdF13333 + F22*F31*chi21*dAdF21133 + F22*F31*chi22*dAdF21233 + F22*F31*chi23*dAdF21333 + F22*F32*chi21*dAdF22133 + F22*F32*chi22*dAdF22233 + F22*F32*chi23*dAdF22333 + F22*F33*chi21*dAdF23133 + F22*F33*chi22*dAdF23233 + F22*F33*chi23*dAdF23333 + F23*F31*chi21*dAdF31133 + F23*F31*chi22*dAdF31233 + F23*F31*chi23*dAdF31333 + F23*F32*chi21*dAdF32133 + F23*F32*chi22*dAdF32233 + F23*F32*chi23*dAdF32333 + F23*F33*chi21*dAdF33133 + F23*F33*chi22*dAdF33233 + F23*F33*chi23*dAdF33333 - J*a232*dJdF33;
        dadF(15,3) = A311*F31*chi21 + A312*F31*chi22 + A313*F31*chi23 + A321*F32*chi21 + A322*F32*chi22 + A323*F32*chi23 + A331*F33*chi21 + A332*F33*chi22 + A333*F33*chi23 + F21*F31*chi21*dAdF11123 + F21*F31*chi22*dAdF11223 + F21*F31*chi23*dAdF11323 + F21*F32*chi21*dAdF12123 + F21*F32*chi22*dAdF12223 + F21*F32*chi23*dAdF12323 + F21*F33*chi21*dAdF13123 + F21*F33*chi22*dAdF13223 + F21*F33*chi23*dAdF13323 + F22*F31*chi21*dAdF21123 + F22*F31*chi22*dAdF21223 + F22*F31*chi23*dAdF21323 + F22*F32*chi21*dAdF22123 + F22*F32*chi22*dAdF22223 + F22*F32*chi23*dAdF22323 + F22*F33*chi21*dAdF23123 + F22*F33*chi22*dAdF23223 + F22*F33*chi23*dAdF23323 + F23*F31*chi21*dAdF31123 + F23*F31*chi22*dAdF31223 + F23*F31*chi23*dAdF31323 + F23*F32*chi21*dAdF32123 + F23*F32*chi22*dAdF32223 + F23*F32*chi23*dAdF32323 + F23*F33*chi21*dAdF33123 + F23*F33*chi22*dAdF33223 + F23*F33*chi23*dAdF33323 - J*a232*dJdF23;
        dadF(15,4) = F21*F31*chi21*dAdF11113 + F21*F31*chi22*dAdF11213 + F21*F31*chi23*dAdF11313 + F21*F32*chi21*dAdF12113 + F21*F32*chi22*dAdF12213 + F21*F32*chi23*dAdF12313 + F21*F33*chi21*dAdF13113 + F21*F33*chi22*dAdF13213 + F21*F33*chi23*dAdF13313 + F22*F31*chi21*dAdF21113 + F22*F31*chi22*dAdF21213 + F22*F31*chi23*dAdF21313 + F22*F32*chi21*dAdF22113 + F22*F32*chi22*dAdF22213 + F22*F32*chi23*dAdF22313 + F22*F33*chi21*dAdF23113 + F22*F33*chi22*dAdF23213 + F22*F33*chi23*dAdF23313 + F23*F31*chi21*dAdF31113 + F23*F31*chi22*dAdF31213 + F23*F31*chi23*dAdF31313 + F23*F32*chi21*dAdF32113 + F23*F32*chi22*dAdF32213 + F23*F32*chi23*dAdF32313 + F23*F33*chi21*dAdF33113 + F23*F33*chi22*dAdF33213 + F23*F33*chi23*dAdF33313 - J*a232*dJdF13;
        dadF(15,5) = F21*F31*chi21*dAdF11112 + F21*F31*chi22*dAdF11212 + F21*F31*chi23*dAdF11312 + F21*F32*chi21*dAdF12112 + F21*F32*chi22*dAdF12212 + F21*F32*chi23*dAdF12312 + F21*F33*chi21*dAdF13112 + F21*F33*chi22*dAdF13212 + F21*F33*chi23*dAdF13312 + F22*F31*chi21*dAdF21112 + F22*F31*chi22*dAdF21212 + F22*F31*chi23*dAdF21312 + F22*F32*chi21*dAdF22112 + F22*F32*chi22*dAdF22212 + F22*F32*chi23*dAdF22312 + F22*F33*chi21*dAdF23112 + F22*F33*chi22*dAdF23212 + F22*F33*chi23*dAdF23312 + F23*F31*chi21*dAdF31112 + F23*F31*chi22*dAdF31212 + F23*F31*chi23*dAdF31312 + F23*F32*chi21*dAdF32112 + F23*F32*chi22*dAdF32212 + F23*F32*chi23*dAdF32312 + F23*F33*chi21*dAdF33112 + F23*F33*chi22*dAdF33212 + F23*F33*chi23*dAdF33312 - J*a232*dJdF12;
        dadF(15,6) = A121*F21*chi21 + A122*F21*chi22 + A123*F21*chi23 + A221*F22*chi21 + A222*F22*chi22 + A223*F22*chi23 + A321*F23*chi21 + A322*F23*chi22 + A323*F23*chi23 + F21*F31*chi21*dAdF11132 + F21*F31*chi22*dAdF11232 + F21*F31*chi23*dAdF11332 + F21*F32*chi21*dAdF12132 + F21*F32*chi22*dAdF12232 + F21*F32*chi23*dAdF12332 + F21*F33*chi21*dAdF13132 + F21*F33*chi22*dAdF13232 + F21*F33*chi23*dAdF13332 + F22*F31*chi21*dAdF21132 + F22*F31*chi22*dAdF21232 + F22*F31*chi23*dAdF21332 + F22*F32*chi21*dAdF22132 + F22*F32*chi22*dAdF22232 + F22*F32*chi23*dAdF22332 + F22*F33*chi21*dAdF23132 + F22*F33*chi22*dAdF23232 + F22*F33*chi23*dAdF23332 + F23*F31*chi21*dAdF31132 + F23*F31*chi22*dAdF31232 + F23*F31*chi23*dAdF31332 + F23*F32*chi21*dAdF32132 + F23*F32*chi22*dAdF32232 + F23*F32*chi23*dAdF32332 + F23*F33*chi21*dAdF33132 + F23*F33*chi22*dAdF33232 + F23*F33*chi23*dAdF33332 - J*a232*dJdF32;
        dadF(15,7) = A111*F21*chi21 + A112*F21*chi22 + A113*F21*chi23 + A211*F22*chi21 + A212*F22*chi22 + A213*F22*chi23 + A311*F23*chi21 + A312*F23*chi22 + A313*F23*chi23 + F21*F31*chi21*dAdF11131 + F21*F31*chi22*dAdF11231 + F21*F31*chi23*dAdF11331 + F21*F32*chi21*dAdF12131 + F21*F32*chi22*dAdF12231 + F21*F32*chi23*dAdF12331 + F21*F33*chi21*dAdF13131 + F21*F33*chi22*dAdF13231 + F21*F33*chi23*dAdF13331 + F22*F31*chi21*dAdF21131 + F22*F31*chi22*dAdF21231 + F22*F31*chi23*dAdF21331 + F22*F32*chi21*dAdF22131 + F22*F32*chi22*dAdF22231 + F22*F32*chi23*dAdF22331 + F22*F33*chi21*dAdF23131 + F22*F33*chi22*dAdF23231 + F22*F33*chi23*dAdF23331 + F23*F31*chi21*dAdF31131 + F23*F31*chi22*dAdF31231 + F23*F31*chi23*dAdF31331 + F23*F32*chi21*dAdF32131 + F23*F32*chi22*dAdF32231 + F23*F32*chi23*dAdF32331 + F23*F33*chi21*dAdF33131 + F23*F33*chi22*dAdF33231 + F23*F33*chi23*dAdF33331 - J*a232*dJdF31;
        dadF(15,8) = A111*F31*chi21 + A112*F31*chi22 + A113*F31*chi23 + A121*F32*chi21 + A122*F32*chi22 + A123*F32*chi23 + A131*F33*chi21 + A132*F33*chi22 + A133*F33*chi23 + F21*F31*chi21*dAdF11121 + F21*F31*chi22*dAdF11221 + F21*F31*chi23*dAdF11321 + F21*F32*chi21*dAdF12121 + F21*F32*chi22*dAdF12221 + F21*F32*chi23*dAdF12321 + F21*F33*chi21*dAdF13121 + F21*F33*chi22*dAdF13221 + F21*F33*chi23*dAdF13321 + F22*F31*chi21*dAdF21121 + F22*F31*chi22*dAdF21221 + F22*F31*chi23*dAdF21321 + F22*F32*chi21*dAdF22121 + F22*F32*chi22*dAdF22221 + F22*F32*chi23*dAdF22321 + F22*F33*chi21*dAdF23121 + F22*F33*chi22*dAdF23221 + F22*F33*chi23*dAdF23321 + F23*F31*chi21*dAdF31121 + F23*F31*chi22*dAdF31221 + F23*F31*chi23*dAdF31321 + F23*F32*chi21*dAdF32121 + F23*F32*chi22*dAdF32221 + F23*F32*chi23*dAdF32321 + F23*F33*chi21*dAdF33121 + F23*F33*chi22*dAdF33221 + F23*F33*chi23*dAdF33321 - J*a232*dJdF21;
        dadF(16,0) = F21*F31*chi11*dAdF11111 + F21*F31*chi12*dAdF11211 + F21*F31*chi13*dAdF11311 + F21*F32*chi11*dAdF12111 + F21*F32*chi12*dAdF12211 + F21*F32*chi13*dAdF12311 + F21*F33*chi11*dAdF13111 + F21*F33*chi12*dAdF13211 + F21*F33*chi13*dAdF13311 + F22*F31*chi11*dAdF21111 + F22*F31*chi12*dAdF21211 + F22*F31*chi13*dAdF21311 + F22*F32*chi11*dAdF22111 + F22*F32*chi12*dAdF22211 + F22*F32*chi13*dAdF22311 + F22*F33*chi11*dAdF23111 + F22*F33*chi12*dAdF23211 + F22*F33*chi13*dAdF23311 + F23*F31*chi11*dAdF31111 + F23*F31*chi12*dAdF31211 + F23*F31*chi13*dAdF31311 + F23*F32*chi11*dAdF32111 + F23*F32*chi12*dAdF32211 + F23*F32*chi13*dAdF32311 + F23*F33*chi11*dAdF33111 + F23*F33*chi12*dAdF33211 + F23*F33*chi13*dAdF33311 - J*a231*dJdF11;
        dadF(16,1) = A211*F31*chi11 + A212*F31*chi12 + A213*F31*chi13 + A221*F32*chi11 + A222*F32*chi12 + A223*F32*chi13 + A231*F33*chi11 + A232*F33*chi12 + A233*F33*chi13 + F21*F31*chi11*dAdF11122 + F21*F31*chi12*dAdF11222 + F21*F31*chi13*dAdF11322 + F21*F32*chi11*dAdF12122 + F21*F32*chi12*dAdF12222 + F21*F32*chi13*dAdF12322 + F21*F33*chi11*dAdF13122 + F21*F33*chi12*dAdF13222 + F21*F33*chi13*dAdF13322 + F22*F31*chi11*dAdF21122 + F22*F31*chi12*dAdF21222 + F22*F31*chi13*dAdF21322 + F22*F32*chi11*dAdF22122 + F22*F32*chi12*dAdF22222 + F22*F32*chi13*dAdF22322 + F22*F33*chi11*dAdF23122 + F22*F33*chi12*dAdF23222 + F22*F33*chi13*dAdF23322 + F23*F31*chi11*dAdF31122 + F23*F31*chi12*dAdF31222 + F23*F31*chi13*dAdF31322 + F23*F32*chi11*dAdF32122 + F23*F32*chi12*dAdF32222 + F23*F32*chi13*dAdF32322 + F23*F33*chi11*dAdF33122 + F23*F33*chi12*dAdF33222 + F23*F33*chi13*dAdF33322 - J*a231*dJdF22;
        dadF(16,2) = A131*F21*chi11 + A132*F21*chi12 + A133*F21*chi13 + A231*F22*chi11 + A232*F22*chi12 + A233*F22*chi13 + A331*F23*chi11 + A332*F23*chi12 + A333*F23*chi13 + F21*F31*chi11*dAdF11133 + F21*F31*chi12*dAdF11233 + F21*F31*chi13*dAdF11333 + F21*F32*chi11*dAdF12133 + F21*F32*chi12*dAdF12233 + F21*F32*chi13*dAdF12333 + F21*F33*chi11*dAdF13133 + F21*F33*chi12*dAdF13233 + F21*F33*chi13*dAdF13333 + F22*F31*chi11*dAdF21133 + F22*F31*chi12*dAdF21233 + F22*F31*chi13*dAdF21333 + F22*F32*chi11*dAdF22133 + F22*F32*chi12*dAdF22233 + F22*F32*chi13*dAdF22333 + F22*F33*chi11*dAdF23133 + F22*F33*chi12*dAdF23233 + F22*F33*chi13*dAdF23333 + F23*F31*chi11*dAdF31133 + F23*F31*chi12*dAdF31233 + F23*F31*chi13*dAdF31333 + F23*F32*chi11*dAdF32133 + F23*F32*chi12*dAdF32233 + F23*F32*chi13*dAdF32333 + F23*F33*chi11*dAdF33133 + F23*F33*chi12*dAdF33233 + F23*F33*chi13*dAdF33333 - J*a231*dJdF33;
        dadF(16,3) = A311*F31*chi11 + A312*F31*chi12 + A313*F31*chi13 + A321*F32*chi11 + A322*F32*chi12 + A323*F32*chi13 + A331*F33*chi11 + A332*F33*chi12 + A333*F33*chi13 + F21*F31*chi11*dAdF11123 + F21*F31*chi12*dAdF11223 + F21*F31*chi13*dAdF11323 + F21*F32*chi11*dAdF12123 + F21*F32*chi12*dAdF12223 + F21*F32*chi13*dAdF12323 + F21*F33*chi11*dAdF13123 + F21*F33*chi12*dAdF13223 + F21*F33*chi13*dAdF13323 + F22*F31*chi11*dAdF21123 + F22*F31*chi12*dAdF21223 + F22*F31*chi13*dAdF21323 + F22*F32*chi11*dAdF22123 + F22*F32*chi12*dAdF22223 + F22*F32*chi13*dAdF22323 + F22*F33*chi11*dAdF23123 + F22*F33*chi12*dAdF23223 + F22*F33*chi13*dAdF23323 + F23*F31*chi11*dAdF31123 + F23*F31*chi12*dAdF31223 + F23*F31*chi13*dAdF31323 + F23*F32*chi11*dAdF32123 + F23*F32*chi12*dAdF32223 + F23*F32*chi13*dAdF32323 + F23*F33*chi11*dAdF33123 + F23*F33*chi12*dAdF33223 + F23*F33*chi13*dAdF33323 - J*a231*dJdF23;
        dadF(16,4) = F21*F31*chi11*dAdF11113 + F21*F31*chi12*dAdF11213 + F21*F31*chi13*dAdF11313 + F21*F32*chi11*dAdF12113 + F21*F32*chi12*dAdF12213 + F21*F32*chi13*dAdF12313 + F21*F33*chi11*dAdF13113 + F21*F33*chi12*dAdF13213 + F21*F33*chi13*dAdF13313 + F22*F31*chi11*dAdF21113 + F22*F31*chi12*dAdF21213 + F22*F31*chi13*dAdF21313 + F22*F32*chi11*dAdF22113 + F22*F32*chi12*dAdF22213 + F22*F32*chi13*dAdF22313 + F22*F33*chi11*dAdF23113 + F22*F33*chi12*dAdF23213 + F22*F33*chi13*dAdF23313 + F23*F31*chi11*dAdF31113 + F23*F31*chi12*dAdF31213 + F23*F31*chi13*dAdF31313 + F23*F32*chi11*dAdF32113 + F23*F32*chi12*dAdF32213 + F23*F32*chi13*dAdF32313 + F23*F33*chi11*dAdF33113 + F23*F33*chi12*dAdF33213 + F23*F33*chi13*dAdF33313 - J*a231*dJdF13;
        dadF(16,5) = F21*F31*chi11*dAdF11112 + F21*F31*chi12*dAdF11212 + F21*F31*chi13*dAdF11312 + F21*F32*chi11*dAdF12112 + F21*F32*chi12*dAdF12212 + F21*F32*chi13*dAdF12312 + F21*F33*chi11*dAdF13112 + F21*F33*chi12*dAdF13212 + F21*F33*chi13*dAdF13312 + F22*F31*chi11*dAdF21112 + F22*F31*chi12*dAdF21212 + F22*F31*chi13*dAdF21312 + F22*F32*chi11*dAdF22112 + F22*F32*chi12*dAdF22212 + F22*F32*chi13*dAdF22312 + F22*F33*chi11*dAdF23112 + F22*F33*chi12*dAdF23212 + F22*F33*chi13*dAdF23312 + F23*F31*chi11*dAdF31112 + F23*F31*chi12*dAdF31212 + F23*F31*chi13*dAdF31312 + F23*F32*chi11*dAdF32112 + F23*F32*chi12*dAdF32212 + F23*F32*chi13*dAdF32312 + F23*F33*chi11*dAdF33112 + F23*F33*chi12*dAdF33212 + F23*F33*chi13*dAdF33312 - J*a231*dJdF12;
        dadF(16,6) = A121*F21*chi11 + A122*F21*chi12 + A123*F21*chi13 + A221*F22*chi11 + A222*F22*chi12 + A223*F22*chi13 + A321*F23*chi11 + A322*F23*chi12 + A323*F23*chi13 + F21*F31*chi11*dAdF11132 + F21*F31*chi12*dAdF11232 + F21*F31*chi13*dAdF11332 + F21*F32*chi11*dAdF12132 + F21*F32*chi12*dAdF12232 + F21*F32*chi13*dAdF12332 + F21*F33*chi11*dAdF13132 + F21*F33*chi12*dAdF13232 + F21*F33*chi13*dAdF13332 + F22*F31*chi11*dAdF21132 + F22*F31*chi12*dAdF21232 + F22*F31*chi13*dAdF21332 + F22*F32*chi11*dAdF22132 + F22*F32*chi12*dAdF22232 + F22*F32*chi13*dAdF22332 + F22*F33*chi11*dAdF23132 + F22*F33*chi12*dAdF23232 + F22*F33*chi13*dAdF23332 + F23*F31*chi11*dAdF31132 + F23*F31*chi12*dAdF31232 + F23*F31*chi13*dAdF31332 + F23*F32*chi11*dAdF32132 + F23*F32*chi12*dAdF32232 + F23*F32*chi13*dAdF32332 + F23*F33*chi11*dAdF33132 + F23*F33*chi12*dAdF33232 + F23*F33*chi13*dAdF33332 - J*a231*dJdF32;
        dadF(16,7) = A111*F21*chi11 + A112*F21*chi12 + A113*F21*chi13 + A211*F22*chi11 + A212*F22*chi12 + A213*F22*chi13 + A311*F23*chi11 + A312*F23*chi12 + A313*F23*chi13 + F21*F31*chi11*dAdF11131 + F21*F31*chi12*dAdF11231 + F21*F31*chi13*dAdF11331 + F21*F32*chi11*dAdF12131 + F21*F32*chi12*dAdF12231 + F21*F32*chi13*dAdF12331 + F21*F33*chi11*dAdF13131 + F21*F33*chi12*dAdF13231 + F21*F33*chi13*dAdF13331 + F22*F31*chi11*dAdF21131 + F22*F31*chi12*dAdF21231 + F22*F31*chi13*dAdF21331 + F22*F32*chi11*dAdF22131 + F22*F32*chi12*dAdF22231 + F22*F32*chi13*dAdF22331 + F22*F33*chi11*dAdF23131 + F22*F33*chi12*dAdF23231 + F22*F33*chi13*dAdF23331 + F23*F31*chi11*dAdF31131 + F23*F31*chi12*dAdF31231 + F23*F31*chi13*dAdF31331 + F23*F32*chi11*dAdF32131 + F23*F32*chi12*dAdF32231 + F23*F32*chi13*dAdF32331 + F23*F33*chi11*dAdF33131 + F23*F33*chi12*dAdF33231 + F23*F33*chi13*dAdF33331 - J*a231*dJdF31;
        dadF(16,8) = A111*F31*chi11 + A112*F31*chi12 + A113*F31*chi13 + A121*F32*chi11 + A122*F32*chi12 + A123*F32*chi13 + A131*F33*chi11 + A132*F33*chi12 + A133*F33*chi13 + F21*F31*chi11*dAdF11121 + F21*F31*chi12*dAdF11221 + F21*F31*chi13*dAdF11321 + F21*F32*chi11*dAdF12121 + F21*F32*chi12*dAdF12221 + F21*F32*chi13*dAdF12321 + F21*F33*chi11*dAdF13121 + F21*F33*chi12*dAdF13221 + F21*F33*chi13*dAdF13321 + F22*F31*chi11*dAdF21121 + F22*F31*chi12*dAdF21221 + F22*F31*chi13*dAdF21321 + F22*F32*chi11*dAdF22121 + F22*F32*chi12*dAdF22221 + F22*F32*chi13*dAdF22321 + F22*F33*chi11*dAdF23121 + F22*F33*chi12*dAdF23221 + F22*F33*chi13*dAdF23321 + F23*F31*chi11*dAdF31121 + F23*F31*chi12*dAdF31221 + F23*F31*chi13*dAdF31321 + F23*F32*chi11*dAdF32121 + F23*F32*chi12*dAdF32221 + F23*F32*chi13*dAdF32321 + F23*F33*chi11*dAdF33121 + F23*F33*chi12*dAdF33221 + F23*F33*chi13*dAdF33321 - J*a231*dJdF21;
        dadF(17,0) = F21*F21*chi11*dAdF11111 + F21*F21*chi12*dAdF11211 + F21*F21*chi13*dAdF11311 + F21*F22*chi11*dAdF12111 + F21*F22*chi11*dAdF21111 + F21*F22*chi12*dAdF12211 + F21*F22*chi12*dAdF21211 + F21*F22*chi13*dAdF12311 + F21*F22*chi13*dAdF21311 + F21*F23*chi11*dAdF13111 + F21*F23*chi11*dAdF31111 + F21*F23*chi12*dAdF13211 + F21*F23*chi12*dAdF31211 + F21*F23*chi13*dAdF13311 + F21*F23*chi13*dAdF31311 + F22*F22*chi11*dAdF22111 + F22*F22*chi12*dAdF22211 + F22*F22*chi13*dAdF22311 + F22*F23*chi11*dAdF23111 + F22*F23*chi11*dAdF32111 + F22*F23*chi12*dAdF23211 + F22*F23*chi12*dAdF32211 + F22*F23*chi13*dAdF23311 + F22*F23*chi13*dAdF32311 + F23*F23*chi11*dAdF33111 + F23*F23*chi12*dAdF33211 + F23*F23*chi13*dAdF33311 - J*a221*dJdF11;
        dadF(17,1) = A121*F21*chi11 + A122*F21*chi12 + A123*F21*chi13 + A211*F21*chi11 + A212*F21*chi12 + A213*F21*chi13 + 2*A221*F22*chi11 + 2*A222*F22*chi12 + 2*A223*F22*chi13 + A231*F23*chi11 + A232*F23*chi12 + A233*F23*chi13 + A321*F23*chi11 + A322*F23*chi12 + A323*F23*chi13 + F21*F21*chi11*dAdF11122 + F21*F21*chi12*dAdF11222 + F21*F21*chi13*dAdF11322 + F21*F22*chi11*dAdF12122 + F21*F22*chi11*dAdF21122 + F21*F22*chi12*dAdF12222 + F21*F22*chi12*dAdF21222 + F21*F22*chi13*dAdF12322 + F21*F22*chi13*dAdF21322 + F21*F23*chi11*dAdF13122 + F21*F23*chi11*dAdF31122 + F21*F23*chi12*dAdF13222 + F21*F23*chi12*dAdF31222 + F21*F23*chi13*dAdF13322 + F21*F23*chi13*dAdF31322 + F22*F22*chi11*dAdF22122 + F22*F22*chi12*dAdF22222 + F22*F22*chi13*dAdF22322 + F22*F23*chi11*dAdF23122 + F22*F23*chi11*dAdF32122 + F22*F23*chi12*dAdF23222 + F22*F23*chi12*dAdF32222 + F22*F23*chi13*dAdF23322 + F22*F23*chi13*dAdF32322 + F23*F23*chi11*dAdF33122 + F23*F23*chi12*dAdF33222 + F23*F23*chi13*dAdF33322 - J*a221*dJdF22;
        dadF(17,2) = F21*F21*chi11*dAdF11133 + F21*F21*chi12*dAdF11233 + F21*F21*chi13*dAdF11333 + F21*F22*chi11*dAdF12133 + F21*F22*chi11*dAdF21133 + F21*F22*chi12*dAdF12233 + F21*F22*chi12*dAdF21233 + F21*F22*chi13*dAdF12333 + F21*F22*chi13*dAdF21333 + F21*F23*chi11*dAdF13133 + F21*F23*chi11*dAdF31133 + F21*F23*chi12*dAdF13233 + F21*F23*chi12*dAdF31233 + F21*F23*chi13*dAdF13333 + F21*F23*chi13*dAdF31333 + F22*F22*chi11*dAdF22133 + F22*F22*chi12*dAdF22233 + F22*F22*chi13*dAdF22333 + F22*F23*chi11*dAdF23133 + F22*F23*chi11*dAdF32133 + F22*F23*chi12*dAdF23233 + F22*F23*chi12*dAdF32233 + F22*F23*chi13*dAdF23333 + F22*F23*chi13*dAdF32333 + F23*F23*chi11*dAdF33133 + F23*F23*chi12*dAdF33233 + F23*F23*chi13*dAdF33333 - J*a221*dJdF33;
        dadF(17,3) = A131*F21*chi11 + A132*F21*chi12 + A133*F21*chi13 + A231*F22*chi11 + A232*F22*chi12 + A233*F22*chi13 + A311*F21*chi11 + A312*F21*chi12 + A313*F21*chi13 + A321*F22*chi11 + A322*F22*chi12 + A323*F22*chi13 + 2*A331*F23*chi11 + 2*A332*F23*chi12 + 2*A333*F23*chi13 + F21*F21*chi11*dAdF11123 + F21*F21*chi12*dAdF11223 + F21*F21*chi13*dAdF11323 + F21*F22*chi11*dAdF12123 + F21*F22*chi11*dAdF21123 + F21*F22*chi12*dAdF12223 + F21*F22*chi12*dAdF21223 + F21*F22*chi13*dAdF12323 + F21*F22*chi13*dAdF21323 + F21*F23*chi11*dAdF13123 + F21*F23*chi11*dAdF31123 + F21*F23*chi12*dAdF13223 + F21*F23*chi12*dAdF31223 + F21*F23*chi13*dAdF13323 + F21*F23*chi13*dAdF31323 + F22*F22*chi11*dAdF22123 + F22*F22*chi12*dAdF22223 + F22*F22*chi13*dAdF22323 + F22*F23*chi11*dAdF23123 + F22*F23*chi11*dAdF32123 + F22*F23*chi12*dAdF23223 + F22*F23*chi12*dAdF32223 + F22*F23*chi13*dAdF23323 + F22*F23*chi13*dAdF32323 + F23*F23*chi11*dAdF33123 + F23*F23*chi12*dAdF33223 + F23*F23*chi13*dAdF33323 - J*a221*dJdF23;
        dadF(17,4) = F21*F21*chi11*dAdF11113 + F21*F21*chi12*dAdF11213 + F21*F21*chi13*dAdF11313 + F21*F22*chi11*dAdF12113 + F21*F22*chi11*dAdF21113 + F21*F22*chi12*dAdF12213 + F21*F22*chi12*dAdF21213 + F21*F22*chi13*dAdF12313 + F21*F22*chi13*dAdF21313 + F21*F23*chi11*dAdF13113 + F21*F23*chi11*dAdF31113 + F21*F23*chi12*dAdF13213 + F21*F23*chi12*dAdF31213 + F21*F23*chi13*dAdF13313 + F21*F23*chi13*dAdF31313 + F22*F22*chi11*dAdF22113 + F22*F22*chi12*dAdF22213 + F22*F22*chi13*dAdF22313 + F22*F23*chi11*dAdF23113 + F22*F23*chi11*dAdF32113 + F22*F23*chi12*dAdF23213 + F22*F23*chi12*dAdF32213 + F22*F23*chi13*dAdF23313 + F22*F23*chi13*dAdF32313 + F23*F23*chi11*dAdF33113 + F23*F23*chi12*dAdF33213 + F23*F23*chi13*dAdF33313 - J*a221*dJdF13;
        dadF(17,5) = F21*F21*chi11*dAdF11112 + F21*F21*chi12*dAdF11212 + F21*F21*chi13*dAdF11312 + F21*F22*chi11*dAdF12112 + F21*F22*chi11*dAdF21112 + F21*F22*chi12*dAdF12212 + F21*F22*chi12*dAdF21212 + F21*F22*chi13*dAdF12312 + F21*F22*chi13*dAdF21312 + F21*F23*chi11*dAdF13112 + F21*F23*chi11*dAdF31112 + F21*F23*chi12*dAdF13212 + F21*F23*chi12*dAdF31212 + F21*F23*chi13*dAdF13312 + F21*F23*chi13*dAdF31312 + F22*F22*chi11*dAdF22112 + F22*F22*chi12*dAdF22212 + F22*F22*chi13*dAdF22312 + F22*F23*chi11*dAdF23112 + F22*F23*chi11*dAdF32112 + F22*F23*chi12*dAdF23212 + F22*F23*chi12*dAdF32212 + F22*F23*chi13*dAdF23312 + F22*F23*chi13*dAdF32312 + F23*F23*chi11*dAdF33112 + F23*F23*chi12*dAdF33212 + F23*F23*chi13*dAdF33312 - J*a221*dJdF12;
        dadF(17,6) = F21*F21*chi11*dAdF11132 + F21*F21*chi12*dAdF11232 + F21*F21*chi13*dAdF11332 + F21*F22*chi11*dAdF12132 + F21*F22*chi11*dAdF21132 + F21*F22*chi12*dAdF12232 + F21*F22*chi12*dAdF21232 + F21*F22*chi13*dAdF12332 + F21*F22*chi13*dAdF21332 + F21*F23*chi11*dAdF13132 + F21*F23*chi11*dAdF31132 + F21*F23*chi12*dAdF13232 + F21*F23*chi12*dAdF31232 + F21*F23*chi13*dAdF13332 + F21*F23*chi13*dAdF31332 + F22*F22*chi11*dAdF22132 + F22*F22*chi12*dAdF22232 + F22*F22*chi13*dAdF22332 + F22*F23*chi11*dAdF23132 + F22*F23*chi11*dAdF32132 + F22*F23*chi12*dAdF23232 + F22*F23*chi12*dAdF32232 + F22*F23*chi13*dAdF23332 + F22*F23*chi13*dAdF32332 + F23*F23*chi11*dAdF33132 + F23*F23*chi12*dAdF33232 + F23*F23*chi13*dAdF33332 - J*a221*dJdF32;
        dadF(17,7) = F21*F21*chi11*dAdF11131 + F21*F21*chi12*dAdF11231 + F21*F21*chi13*dAdF11331 + F21*F22*chi11*dAdF12131 + F21*F22*chi11*dAdF21131 + F21*F22*chi12*dAdF12231 + F21*F22*chi12*dAdF21231 + F21*F22*chi13*dAdF12331 + F21*F22*chi13*dAdF21331 + F21*F23*chi11*dAdF13131 + F21*F23*chi11*dAdF31131 + F21*F23*chi12*dAdF13231 + F21*F23*chi12*dAdF31231 + F21*F23*chi13*dAdF13331 + F21*F23*chi13*dAdF31331 + F22*F22*chi11*dAdF22131 + F22*F22*chi12*dAdF22231 + F22*F22*chi13*dAdF22331 + F22*F23*chi11*dAdF23131 + F22*F23*chi11*dAdF32131 + F22*F23*chi12*dAdF23231 + F22*F23*chi12*dAdF32231 + F22*F23*chi13*dAdF23331 + F22*F23*chi13*dAdF32331 + F23*F23*chi11*dAdF33131 + F23*F23*chi12*dAdF33231 + F23*F23*chi13*dAdF33331 - J*a221*dJdF31;
        dadF(17,8) = 2*A111*F21*chi11 + 2*A112*F21*chi12 + 2*A113*F21*chi13 + A121*F22*chi11 + A122*F22*chi12 + A123*F22*chi13 + A131*F23*chi11 + A132*F23*chi12 + A133*F23*chi13 + A211*F22*chi11 + A212*F22*chi12 + A213*F22*chi13 + A311*F23*chi11 + A312*F23*chi12 + A313*F23*chi13 + F21*F21*chi11*dAdF11121 + F21*F21*chi12*dAdF11221 + F21*F21*chi13*dAdF11321 + F21*F22*chi11*dAdF12121 + F21*F22*chi11*dAdF21121 + F21*F22*chi12*dAdF12221 + F21*F22*chi12*dAdF21221 + F21*F22*chi13*dAdF12321 + F21*F22*chi13*dAdF21321 + F21*F23*chi11*dAdF13121 + F21*F23*chi11*dAdF31121 + F21*F23*chi12*dAdF13221 + F21*F23*chi12*dAdF31221 + F21*F23*chi13*dAdF13321 + F21*F23*chi13*dAdF31321 + F22*F22*chi11*dAdF22121 + F22*F22*chi12*dAdF22221 + F22*F22*chi13*dAdF22321 + F22*F23*chi11*dAdF23121 + F22*F23*chi11*dAdF32121 + F22*F23*chi12*dAdF23221 + F22*F23*chi12*dAdF32221 + F22*F23*chi13*dAdF23321 + F22*F23*chi13*dAdF32321 + F23*F23*chi11*dAdF33121 + F23*F23*chi12*dAdF33221 + F23*F23*chi13*dAdF33321 - J*a221*dJdF21;
        dadF(18,0) = A111*F31*chi11 + A112*F31*chi12 + A113*F31*chi13 + A211*F32*chi11 + A212*F32*chi12 + A213*F32*chi13 + A311*F33*chi11 + A312*F33*chi12 + A313*F33*chi13 + F11*F31*chi11*dAdF11111 + F11*F31*chi12*dAdF11211 + F11*F31*chi13*dAdF11311 + F11*F32*chi11*dAdF21111 + F11*F32*chi12*dAdF21211 + F11*F32*chi13*dAdF21311 + F11*F33*chi11*dAdF31111 + F11*F33*chi12*dAdF31211 + F11*F33*chi13*dAdF31311 + F12*F31*chi11*dAdF12111 + F12*F31*chi12*dAdF12211 + F12*F31*chi13*dAdF12311 + F12*F32*chi11*dAdF22111 + F12*F32*chi12*dAdF22211 + F12*F32*chi13*dAdF22311 + F12*F33*chi11*dAdF32111 + F12*F33*chi12*dAdF32211 + F12*F33*chi13*dAdF32311 + F13*F31*chi11*dAdF13111 + F13*F31*chi12*dAdF13211 + F13*F31*chi13*dAdF13311 + F13*F32*chi11*dAdF23111 + F13*F32*chi12*dAdF23211 + F13*F32*chi13*dAdF23311 + F13*F33*chi11*dAdF33111 + F13*F33*chi12*dAdF33211 + F13*F33*chi13*dAdF33311 - J*a311*dJdF11;
        dadF(18,1) = F11*F31*chi11*dAdF11122 + F11*F31*chi12*dAdF11222 + F11*F31*chi13*dAdF11322 + F11*F32*chi11*dAdF21122 + F11*F32*chi12*dAdF21222 + F11*F32*chi13*dAdF21322 + F11*F33*chi11*dAdF31122 + F11*F33*chi12*dAdF31222 + F11*F33*chi13*dAdF31322 + F12*F31*chi11*dAdF12122 + F12*F31*chi12*dAdF12222 + F12*F31*chi13*dAdF12322 + F12*F32*chi11*dAdF22122 + F12*F32*chi12*dAdF22222 + F12*F32*chi13*dAdF22322 + F12*F33*chi11*dAdF32122 + F12*F33*chi12*dAdF32222 + F12*F33*chi13*dAdF32322 + F13*F31*chi11*dAdF13122 + F13*F31*chi12*dAdF13222 + F13*F31*chi13*dAdF13322 + F13*F32*chi11*dAdF23122 + F13*F32*chi12*dAdF23222 + F13*F32*chi13*dAdF23322 + F13*F33*chi11*dAdF33122 + F13*F33*chi12*dAdF33222 + F13*F33*chi13*dAdF33322 - J*a311*dJdF22;
        dadF(18,2) = A311*F11*chi11 + A312*F11*chi12 + A313*F11*chi13 + A321*F12*chi11 + A322*F12*chi12 + A323*F12*chi13 + A331*F13*chi11 + A332*F13*chi12 + A333*F13*chi13 + F11*F31*chi11*dAdF11133 + F11*F31*chi12*dAdF11233 + F11*F31*chi13*dAdF11333 + F11*F32*chi11*dAdF21133 + F11*F32*chi12*dAdF21233 + F11*F32*chi13*dAdF21333 + F11*F33*chi11*dAdF31133 + F11*F33*chi12*dAdF31233 + F11*F33*chi13*dAdF31333 + F12*F31*chi11*dAdF12133 + F12*F31*chi12*dAdF12233 + F12*F31*chi13*dAdF12333 + F12*F32*chi11*dAdF22133 + F12*F32*chi12*dAdF22233 + F12*F32*chi13*dAdF22333 + F12*F33*chi11*dAdF32133 + F12*F33*chi12*dAdF32233 + F12*F33*chi13*dAdF32333 + F13*F31*chi11*dAdF13133 + F13*F31*chi12*dAdF13233 + F13*F31*chi13*dAdF13333 + F13*F32*chi11*dAdF23133 + F13*F32*chi12*dAdF23233 + F13*F32*chi13*dAdF23333 + F13*F33*chi11*dAdF33133 + F13*F33*chi12*dAdF33233 + F13*F33*chi13*dAdF33333 - J*a311*dJdF33;
        dadF(18,3) = F11*F31*chi11*dAdF11123 + F11*F31*chi12*dAdF11223 + F11*F31*chi13*dAdF11323 + F11*F32*chi11*dAdF21123 + F11*F32*chi12*dAdF21223 + F11*F32*chi13*dAdF21323 + F11*F33*chi11*dAdF31123 + F11*F33*chi12*dAdF31223 + F11*F33*chi13*dAdF31323 + F12*F31*chi11*dAdF12123 + F12*F31*chi12*dAdF12223 + F12*F31*chi13*dAdF12323 + F12*F32*chi11*dAdF22123 + F12*F32*chi12*dAdF22223 + F12*F32*chi13*dAdF22323 + F12*F33*chi11*dAdF32123 + F12*F33*chi12*dAdF32223 + F12*F33*chi13*dAdF32323 + F13*F31*chi11*dAdF13123 + F13*F31*chi12*dAdF13223 + F13*F31*chi13*dAdF13323 + F13*F32*chi11*dAdF23123 + F13*F32*chi12*dAdF23223 + F13*F32*chi13*dAdF23323 + F13*F33*chi11*dAdF33123 + F13*F33*chi12*dAdF33223 + F13*F33*chi13*dAdF33323 - J*a311*dJdF23;
        dadF(18,4) = A131*F31*chi11 + A132*F31*chi12 + A133*F31*chi13 + A231*F32*chi11 + A232*F32*chi12 + A233*F32*chi13 + A331*F33*chi11 + A332*F33*chi12 + A333*F33*chi13 + F11*F31*chi11*dAdF11113 + F11*F31*chi12*dAdF11213 + F11*F31*chi13*dAdF11313 + F11*F32*chi11*dAdF21113 + F11*F32*chi12*dAdF21213 + F11*F32*chi13*dAdF21313 + F11*F33*chi11*dAdF31113 + F11*F33*chi12*dAdF31213 + F11*F33*chi13*dAdF31313 + F12*F31*chi11*dAdF12113 + F12*F31*chi12*dAdF12213 + F12*F31*chi13*dAdF12313 + F12*F32*chi11*dAdF22113 + F12*F32*chi12*dAdF22213 + F12*F32*chi13*dAdF22313 + F12*F33*chi11*dAdF32113 + F12*F33*chi12*dAdF32213 + F12*F33*chi13*dAdF32313 + F13*F31*chi11*dAdF13113 + F13*F31*chi12*dAdF13213 + F13*F31*chi13*dAdF13313 + F13*F32*chi11*dAdF23113 + F13*F32*chi12*dAdF23213 + F13*F32*chi13*dAdF23313 + F13*F33*chi11*dAdF33113 + F13*F33*chi12*dAdF33213 + F13*F33*chi13*dAdF33313 - J*a311*dJdF13;
        dadF(18,5) = A121*F31*chi11 + A122*F31*chi12 + A123*F31*chi13 + A221*F32*chi11 + A222*F32*chi12 + A223*F32*chi13 + A321*F33*chi11 + A322*F33*chi12 + A323*F33*chi13 + F11*F31*chi11*dAdF11112 + F11*F31*chi12*dAdF11212 + F11*F31*chi13*dAdF11312 + F11*F32*chi11*dAdF21112 + F11*F32*chi12*dAdF21212 + F11*F32*chi13*dAdF21312 + F11*F33*chi11*dAdF31112 + F11*F33*chi12*dAdF31212 + F11*F33*chi13*dAdF31312 + F12*F31*chi11*dAdF12112 + F12*F31*chi12*dAdF12212 + F12*F31*chi13*dAdF12312 + F12*F32*chi11*dAdF22112 + F12*F32*chi12*dAdF22212 + F12*F32*chi13*dAdF22312 + F12*F33*chi11*dAdF32112 + F12*F33*chi12*dAdF32212 + F12*F33*chi13*dAdF32312 + F13*F31*chi11*dAdF13112 + F13*F31*chi12*dAdF13212 + F13*F31*chi13*dAdF13312 + F13*F32*chi11*dAdF23112 + F13*F32*chi12*dAdF23212 + F13*F32*chi13*dAdF23312 + F13*F33*chi11*dAdF33112 + F13*F33*chi12*dAdF33212 + F13*F33*chi13*dAdF33312 - J*a311*dJdF12;
        dadF(18,6) = A211*F11*chi11 + A212*F11*chi12 + A213*F11*chi13 + A221*F12*chi11 + A222*F12*chi12 + A223*F12*chi13 + A231*F13*chi11 + A232*F13*chi12 + A233*F13*chi13 + F11*F31*chi11*dAdF11132 + F11*F31*chi12*dAdF11232 + F11*F31*chi13*dAdF11332 + F11*F32*chi11*dAdF21132 + F11*F32*chi12*dAdF21232 + F11*F32*chi13*dAdF21332 + F11*F33*chi11*dAdF31132 + F11*F33*chi12*dAdF31232 + F11*F33*chi13*dAdF31332 + F12*F31*chi11*dAdF12132 + F12*F31*chi12*dAdF12232 + F12*F31*chi13*dAdF12332 + F12*F32*chi11*dAdF22132 + F12*F32*chi12*dAdF22232 + F12*F32*chi13*dAdF22332 + F12*F33*chi11*dAdF32132 + F12*F33*chi12*dAdF32232 + F12*F33*chi13*dAdF32332 + F13*F31*chi11*dAdF13132 + F13*F31*chi12*dAdF13232 + F13*F31*chi13*dAdF13332 + F13*F32*chi11*dAdF23132 + F13*F32*chi12*dAdF23232 + F13*F32*chi13*dAdF23332 + F13*F33*chi11*dAdF33132 + F13*F33*chi12*dAdF33232 + F13*F33*chi13*dAdF33332 - J*a311*dJdF32;
        dadF(18,7) = A111*F11*chi11 + A112*F11*chi12 + A113*F11*chi13 + A121*F12*chi11 + A122*F12*chi12 + A123*F12*chi13 + A131*F13*chi11 + A132*F13*chi12 + A133*F13*chi13 + F11*F31*chi11*dAdF11131 + F11*F31*chi12*dAdF11231 + F11*F31*chi13*dAdF11331 + F11*F32*chi11*dAdF21131 + F11*F32*chi12*dAdF21231 + F11*F32*chi13*dAdF21331 + F11*F33*chi11*dAdF31131 + F11*F33*chi12*dAdF31231 + F11*F33*chi13*dAdF31331 + F12*F31*chi11*dAdF12131 + F12*F31*chi12*dAdF12231 + F12*F31*chi13*dAdF12331 + F12*F32*chi11*dAdF22131 + F12*F32*chi12*dAdF22231 + F12*F32*chi13*dAdF22331 + F12*F33*chi11*dAdF32131 + F12*F33*chi12*dAdF32231 + F12*F33*chi13*dAdF32331 + F13*F31*chi11*dAdF13131 + F13*F31*chi12*dAdF13231 + F13*F31*chi13*dAdF13331 + F13*F32*chi11*dAdF23131 + F13*F32*chi12*dAdF23231 + F13*F32*chi13*dAdF23331 + F13*F33*chi11*dAdF33131 + F13*F33*chi12*dAdF33231 + F13*F33*chi13*dAdF33331 - J*a311*dJdF31;
        dadF(18,8) = F11*F31*chi11*dAdF11121 + F11*F31*chi12*dAdF11221 + F11*F31*chi13*dAdF11321 + F11*F32*chi11*dAdF21121 + F11*F32*chi12*dAdF21221 + F11*F32*chi13*dAdF21321 + F11*F33*chi11*dAdF31121 + F11*F33*chi12*dAdF31221 + F11*F33*chi13*dAdF31321 + F12*F31*chi11*dAdF12121 + F12*F31*chi12*dAdF12221 + F12*F31*chi13*dAdF12321 + F12*F32*chi11*dAdF22121 + F12*F32*chi12*dAdF22221 + F12*F32*chi13*dAdF22321 + F12*F33*chi11*dAdF32121 + F12*F33*chi12*dAdF32221 + F12*F33*chi13*dAdF32321 + F13*F31*chi11*dAdF13121 + F13*F31*chi12*dAdF13221 + F13*F31*chi13*dAdF13321 + F13*F32*chi11*dAdF23121 + F13*F32*chi12*dAdF23221 + F13*F32*chi13*dAdF23321 + F13*F33*chi11*dAdF33121 + F13*F33*chi12*dAdF33221 + F13*F33*chi13*dAdF33321 - J*a311*dJdF21;
        dadF(19,0) = F21*F31*chi21*dAdF11111 + F21*F31*chi22*dAdF11211 + F21*F31*chi23*dAdF11311 + F21*F32*chi21*dAdF21111 + F21*F32*chi22*dAdF21211 + F21*F32*chi23*dAdF21311 + F21*F33*chi21*dAdF31111 + F21*F33*chi22*dAdF31211 + F21*F33*chi23*dAdF31311 + F22*F31*chi21*dAdF12111 + F22*F31*chi22*dAdF12211 + F22*F31*chi23*dAdF12311 + F22*F32*chi21*dAdF22111 + F22*F32*chi22*dAdF22211 + F22*F32*chi23*dAdF22311 + F22*F33*chi21*dAdF32111 + F22*F33*chi22*dAdF32211 + F22*F33*chi23*dAdF32311 + F23*F31*chi21*dAdF13111 + F23*F31*chi22*dAdF13211 + F23*F31*chi23*dAdF13311 + F23*F32*chi21*dAdF23111 + F23*F32*chi22*dAdF23211 + F23*F32*chi23*dAdF23311 + F23*F33*chi21*dAdF33111 + F23*F33*chi22*dAdF33211 + F23*F33*chi23*dAdF33311 - J*a322*dJdF11;
        dadF(19,1) = A121*F31*chi21 + A122*F31*chi22 + A123*F31*chi23 + A221*F32*chi21 + A222*F32*chi22 + A223*F32*chi23 + A321*F33*chi21 + A322*F33*chi22 + A323*F33*chi23 + F21*F31*chi21*dAdF11122 + F21*F31*chi22*dAdF11222 + F21*F31*chi23*dAdF11322 + F21*F32*chi21*dAdF21122 + F21*F32*chi22*dAdF21222 + F21*F32*chi23*dAdF21322 + F21*F33*chi21*dAdF31122 + F21*F33*chi22*dAdF31222 + F21*F33*chi23*dAdF31322 + F22*F31*chi21*dAdF12122 + F22*F31*chi22*dAdF12222 + F22*F31*chi23*dAdF12322 + F22*F32*chi21*dAdF22122 + F22*F32*chi22*dAdF22222 + F22*F32*chi23*dAdF22322 + F22*F33*chi21*dAdF32122 + F22*F33*chi22*dAdF32222 + F22*F33*chi23*dAdF32322 + F23*F31*chi21*dAdF13122 + F23*F31*chi22*dAdF13222 + F23*F31*chi23*dAdF13322 + F23*F32*chi21*dAdF23122 + F23*F32*chi22*dAdF23222 + F23*F32*chi23*dAdF23322 + F23*F33*chi21*dAdF33122 + F23*F33*chi22*dAdF33222 + F23*F33*chi23*dAdF33322 - J*a322*dJdF22;
        dadF(19,2) = A311*F21*chi21 + A312*F21*chi22 + A313*F21*chi23 + A321*F22*chi21 + A322*F22*chi22 + A323*F22*chi23 + A331*F23*chi21 + A332*F23*chi22 + A333*F23*chi23 + F21*F31*chi21*dAdF11133 + F21*F31*chi22*dAdF11233 + F21*F31*chi23*dAdF11333 + F21*F32*chi21*dAdF21133 + F21*F32*chi22*dAdF21233 + F21*F32*chi23*dAdF21333 + F21*F33*chi21*dAdF31133 + F21*F33*chi22*dAdF31233 + F21*F33*chi23*dAdF31333 + F22*F31*chi21*dAdF12133 + F22*F31*chi22*dAdF12233 + F22*F31*chi23*dAdF12333 + F22*F32*chi21*dAdF22133 + F22*F32*chi22*dAdF22233 + F22*F32*chi23*dAdF22333 + F22*F33*chi21*dAdF32133 + F22*F33*chi22*dAdF32233 + F22*F33*chi23*dAdF32333 + F23*F31*chi21*dAdF13133 + F23*F31*chi22*dAdF13233 + F23*F31*chi23*dAdF13333 + F23*F32*chi21*dAdF23133 + F23*F32*chi22*dAdF23233 + F23*F32*chi23*dAdF23333 + F23*F33*chi21*dAdF33133 + F23*F33*chi22*dAdF33233 + F23*F33*chi23*dAdF33333 - J*a322*dJdF33;
        dadF(19,3) = A131*F31*chi21 + A132*F31*chi22 + A133*F31*chi23 + A231*F32*chi21 + A232*F32*chi22 + A233*F32*chi23 + A331*F33*chi21 + A332*F33*chi22 + A333*F33*chi23 + F21*F31*chi21*dAdF11123 + F21*F31*chi22*dAdF11223 + F21*F31*chi23*dAdF11323 + F21*F32*chi21*dAdF21123 + F21*F32*chi22*dAdF21223 + F21*F32*chi23*dAdF21323 + F21*F33*chi21*dAdF31123 + F21*F33*chi22*dAdF31223 + F21*F33*chi23*dAdF31323 + F22*F31*chi21*dAdF12123 + F22*F31*chi22*dAdF12223 + F22*F31*chi23*dAdF12323 + F22*F32*chi21*dAdF22123 + F22*F32*chi22*dAdF22223 + F22*F32*chi23*dAdF22323 + F22*F33*chi21*dAdF32123 + F22*F33*chi22*dAdF32223 + F22*F33*chi23*dAdF32323 + F23*F31*chi21*dAdF13123 + F23*F31*chi22*dAdF13223 + F23*F31*chi23*dAdF13323 + F23*F32*chi21*dAdF23123 + F23*F32*chi22*dAdF23223 + F23*F32*chi23*dAdF23323 + F23*F33*chi21*dAdF33123 + F23*F33*chi22*dAdF33223 + F23*F33*chi23*dAdF33323 - J*a322*dJdF23;
        dadF(19,4) = F21*F31*chi21*dAdF11113 + F21*F31*chi22*dAdF11213 + F21*F31*chi23*dAdF11313 + F21*F32*chi21*dAdF21113 + F21*F32*chi22*dAdF21213 + F21*F32*chi23*dAdF21313 + F21*F33*chi21*dAdF31113 + F21*F33*chi22*dAdF31213 + F21*F33*chi23*dAdF31313 + F22*F31*chi21*dAdF12113 + F22*F31*chi22*dAdF12213 + F22*F31*chi23*dAdF12313 + F22*F32*chi21*dAdF22113 + F22*F32*chi22*dAdF22213 + F22*F32*chi23*dAdF22313 + F22*F33*chi21*dAdF32113 + F22*F33*chi22*dAdF32213 + F22*F33*chi23*dAdF32313 + F23*F31*chi21*dAdF13113 + F23*F31*chi22*dAdF13213 + F23*F31*chi23*dAdF13313 + F23*F32*chi21*dAdF23113 + F23*F32*chi22*dAdF23213 + F23*F32*chi23*dAdF23313 + F23*F33*chi21*dAdF33113 + F23*F33*chi22*dAdF33213 + F23*F33*chi23*dAdF33313 - J*a322*dJdF13;
        dadF(19,5) = F21*F31*chi21*dAdF11112 + F21*F31*chi22*dAdF11212 + F21*F31*chi23*dAdF11312 + F21*F32*chi21*dAdF21112 + F21*F32*chi22*dAdF21212 + F21*F32*chi23*dAdF21312 + F21*F33*chi21*dAdF31112 + F21*F33*chi22*dAdF31212 + F21*F33*chi23*dAdF31312 + F22*F31*chi21*dAdF12112 + F22*F31*chi22*dAdF12212 + F22*F31*chi23*dAdF12312 + F22*F32*chi21*dAdF22112 + F22*F32*chi22*dAdF22212 + F22*F32*chi23*dAdF22312 + F22*F33*chi21*dAdF32112 + F22*F33*chi22*dAdF32212 + F22*F33*chi23*dAdF32312 + F23*F31*chi21*dAdF13112 + F23*F31*chi22*dAdF13212 + F23*F31*chi23*dAdF13312 + F23*F32*chi21*dAdF23112 + F23*F32*chi22*dAdF23212 + F23*F32*chi23*dAdF23312 + F23*F33*chi21*dAdF33112 + F23*F33*chi22*dAdF33212 + F23*F33*chi23*dAdF33312 - J*a322*dJdF12;
        dadF(19,6) = A211*F21*chi21 + A212*F21*chi22 + A213*F21*chi23 + A221*F22*chi21 + A222*F22*chi22 + A223*F22*chi23 + A231*F23*chi21 + A232*F23*chi22 + A233*F23*chi23 + F21*F31*chi21*dAdF11132 + F21*F31*chi22*dAdF11232 + F21*F31*chi23*dAdF11332 + F21*F32*chi21*dAdF21132 + F21*F32*chi22*dAdF21232 + F21*F32*chi23*dAdF21332 + F21*F33*chi21*dAdF31132 + F21*F33*chi22*dAdF31232 + F21*F33*chi23*dAdF31332 + F22*F31*chi21*dAdF12132 + F22*F31*chi22*dAdF12232 + F22*F31*chi23*dAdF12332 + F22*F32*chi21*dAdF22132 + F22*F32*chi22*dAdF22232 + F22*F32*chi23*dAdF22332 + F22*F33*chi21*dAdF32132 + F22*F33*chi22*dAdF32232 + F22*F33*chi23*dAdF32332 + F23*F31*chi21*dAdF13132 + F23*F31*chi22*dAdF13232 + F23*F31*chi23*dAdF13332 + F23*F32*chi21*dAdF23132 + F23*F32*chi22*dAdF23232 + F23*F32*chi23*dAdF23332 + F23*F33*chi21*dAdF33132 + F23*F33*chi22*dAdF33232 + F23*F33*chi23*dAdF33332 - J*a322*dJdF32;
        dadF(19,7) = A111*F21*chi21 + A112*F21*chi22 + A113*F21*chi23 + A121*F22*chi21 + A122*F22*chi22 + A123*F22*chi23 + A131*F23*chi21 + A132*F23*chi22 + A133*F23*chi23 + F21*F31*chi21*dAdF11131 + F21*F31*chi22*dAdF11231 + F21*F31*chi23*dAdF11331 + F21*F32*chi21*dAdF21131 + F21*F32*chi22*dAdF21231 + F21*F32*chi23*dAdF21331 + F21*F33*chi21*dAdF31131 + F21*F33*chi22*dAdF31231 + F21*F33*chi23*dAdF31331 + F22*F31*chi21*dAdF12131 + F22*F31*chi22*dAdF12231 + F22*F31*chi23*dAdF12331 + F22*F32*chi21*dAdF22131 + F22*F32*chi22*dAdF22231 + F22*F32*chi23*dAdF22331 + F22*F33*chi21*dAdF32131 + F22*F33*chi22*dAdF32231 + F22*F33*chi23*dAdF32331 + F23*F31*chi21*dAdF13131 + F23*F31*chi22*dAdF13231 + F23*F31*chi23*dAdF13331 + F23*F32*chi21*dAdF23131 + F23*F32*chi22*dAdF23231 + F23*F32*chi23*dAdF23331 + F23*F33*chi21*dAdF33131 + F23*F33*chi22*dAdF33231 + F23*F33*chi23*dAdF33331 - J*a322*dJdF31;
        dadF(19,8) = A111*F31*chi21 + A112*F31*chi22 + A113*F31*chi23 + A211*F32*chi21 + A212*F32*chi22 + A213*F32*chi23 + A311*F33*chi21 + A312*F33*chi22 + A313*F33*chi23 + F21*F31*chi21*dAdF11121 + F21*F31*chi22*dAdF11221 + F21*F31*chi23*dAdF11321 + F21*F32*chi21*dAdF21121 + F21*F32*chi22*dAdF21221 + F21*F32*chi23*dAdF21321 + F21*F33*chi21*dAdF31121 + F21*F33*chi22*dAdF31221 + F21*F33*chi23*dAdF31321 + F22*F31*chi21*dAdF12121 + F22*F31*chi22*dAdF12221 + F22*F31*chi23*dAdF12321 + F22*F32*chi21*dAdF22121 + F22*F32*chi22*dAdF22221 + F22*F32*chi23*dAdF22321 + F22*F33*chi21*dAdF32121 + F22*F33*chi22*dAdF32221 + F22*F33*chi23*dAdF32321 + F23*F31*chi21*dAdF13121 + F23*F31*chi22*dAdF13221 + F23*F31*chi23*dAdF13321 + F23*F32*chi21*dAdF23121 + F23*F32*chi22*dAdF23221 + F23*F32*chi23*dAdF23321 + F23*F33*chi21*dAdF33121 + F23*F33*chi22*dAdF33221 + F23*F33*chi23*dAdF33321 - J*a322*dJdF21;
        dadF(20,0) = F31*F31*chi31*dAdF11111 + F31*F31*chi32*dAdF11211 + F31*F31*chi33*dAdF11311 + F31*F32*chi31*dAdF12111 + F31*F32*chi31*dAdF21111 + F31*F32*chi32*dAdF12211 + F31*F32*chi32*dAdF21211 + F31*F32*chi33*dAdF12311 + F31*F32*chi33*dAdF21311 + F31*F33*chi31*dAdF13111 + F31*F33*chi31*dAdF31111 + F31*F33*chi32*dAdF13211 + F31*F33*chi32*dAdF31211 + F31*F33*chi33*dAdF13311 + F31*F33*chi33*dAdF31311 + F32*F32*chi31*dAdF22111 + F32*F32*chi32*dAdF22211 + F32*F32*chi33*dAdF22311 + F32*F33*chi31*dAdF23111 + F32*F33*chi31*dAdF32111 + F32*F33*chi32*dAdF23211 + F32*F33*chi32*dAdF32211 + F32*F33*chi33*dAdF23311 + F32*F33*chi33*dAdF32311 + F33*F33*chi31*dAdF33111 + F33*F33*chi32*dAdF33211 + F33*F33*chi33*dAdF33311 - J*a333*dJdF11;
        dadF(20,1) = F31*F31*chi31*dAdF11122 + F31*F31*chi32*dAdF11222 + F31*F31*chi33*dAdF11322 + F31*F32*chi31*dAdF12122 + F31*F32*chi31*dAdF21122 + F31*F32*chi32*dAdF12222 + F31*F32*chi32*dAdF21222 + F31*F32*chi33*dAdF12322 + F31*F32*chi33*dAdF21322 + F31*F33*chi31*dAdF13122 + F31*F33*chi31*dAdF31122 + F31*F33*chi32*dAdF13222 + F31*F33*chi32*dAdF31222 + F31*F33*chi33*dAdF13322 + F31*F33*chi33*dAdF31322 + F32*F32*chi31*dAdF22122 + F32*F32*chi32*dAdF22222 + F32*F32*chi33*dAdF22322 + F32*F33*chi31*dAdF23122 + F32*F33*chi31*dAdF32122 + F32*F33*chi32*dAdF23222 + F32*F33*chi32*dAdF32222 + F32*F33*chi33*dAdF23322 + F32*F33*chi33*dAdF32322 + F33*F33*chi31*dAdF33122 + F33*F33*chi32*dAdF33222 + F33*F33*chi33*dAdF33322 - J*a333*dJdF22;
        dadF(20,2) = A131*F31*chi31 + A132*F31*chi32 + A133*F31*chi33 + A231*F32*chi31 + A232*F32*chi32 + A233*F32*chi33 + A311*F31*chi31 + A312*F31*chi32 + A313*F31*chi33 + A321*F32*chi31 + A322*F32*chi32 + A323*F32*chi33 + 2*A331*F33*chi31 + 2*A332*F33*chi32 + 2*A333*F33*chi33 + F31*F31*chi31*dAdF11133 + F31*F31*chi32*dAdF11233 + F31*F31*chi33*dAdF11333 + F31*F32*chi31*dAdF12133 + F31*F32*chi31*dAdF21133 + F31*F32*chi32*dAdF12233 + F31*F32*chi32*dAdF21233 + F31*F32*chi33*dAdF12333 + F31*F32*chi33*dAdF21333 + F31*F33*chi31*dAdF13133 + F31*F33*chi31*dAdF31133 + F31*F33*chi32*dAdF13233 + F31*F33*chi32*dAdF31233 + F31*F33*chi33*dAdF13333 + F31*F33*chi33*dAdF31333 + F32*F32*chi31*dAdF22133 + F32*F32*chi32*dAdF22233 + F32*F32*chi33*dAdF22333 + F32*F33*chi31*dAdF23133 + F32*F33*chi31*dAdF32133 + F32*F33*chi32*dAdF23233 + F32*F33*chi32*dAdF32233 + F32*F33*chi33*dAdF23333 + F32*F33*chi33*dAdF32333 + F33*F33*chi31*dAdF33133 + F33*F33*chi32*dAdF33233 + F33*F33*chi33*dAdF33333 - J*a333*dJdF33;
        dadF(20,3) = F31*F31*chi31*dAdF11123 + F31*F31*chi32*dAdF11223 + F31*F31*chi33*dAdF11323 + F31*F32*chi31*dAdF12123 + F31*F32*chi31*dAdF21123 + F31*F32*chi32*dAdF12223 + F31*F32*chi32*dAdF21223 + F31*F32*chi33*dAdF12323 + F31*F32*chi33*dAdF21323 + F31*F33*chi31*dAdF13123 + F31*F33*chi31*dAdF31123 + F31*F33*chi32*dAdF13223 + F31*F33*chi32*dAdF31223 + F31*F33*chi33*dAdF13323 + F31*F33*chi33*dAdF31323 + F32*F32*chi31*dAdF22123 + F32*F32*chi32*dAdF22223 + F32*F32*chi33*dAdF22323 + F32*F33*chi31*dAdF23123 + F32*F33*chi31*dAdF32123 + F32*F33*chi32*dAdF23223 + F32*F33*chi32*dAdF32223 + F32*F33*chi33*dAdF23323 + F32*F33*chi33*dAdF32323 + F33*F33*chi31*dAdF33123 + F33*F33*chi32*dAdF33223 + F33*F33*chi33*dAdF33323 - J*a333*dJdF23;
        dadF(20,4) = F31*F31*chi31*dAdF11113 + F31*F31*chi32*dAdF11213 + F31*F31*chi33*dAdF11313 + F31*F32*chi31*dAdF12113 + F31*F32*chi31*dAdF21113 + F31*F32*chi32*dAdF12213 + F31*F32*chi32*dAdF21213 + F31*F32*chi33*dAdF12313 + F31*F32*chi33*dAdF21313 + F31*F33*chi31*dAdF13113 + F31*F33*chi31*dAdF31113 + F31*F33*chi32*dAdF13213 + F31*F33*chi32*dAdF31213 + F31*F33*chi33*dAdF13313 + F31*F33*chi33*dAdF31313 + F32*F32*chi31*dAdF22113 + F32*F32*chi32*dAdF22213 + F32*F32*chi33*dAdF22313 + F32*F33*chi31*dAdF23113 + F32*F33*chi31*dAdF32113 + F32*F33*chi32*dAdF23213 + F32*F33*chi32*dAdF32213 + F32*F33*chi33*dAdF23313 + F32*F33*chi33*dAdF32313 + F33*F33*chi31*dAdF33113 + F33*F33*chi32*dAdF33213 + F33*F33*chi33*dAdF33313 - J*a333*dJdF13;
        dadF(20,5) = F31*F31*chi31*dAdF11112 + F31*F31*chi32*dAdF11212 + F31*F31*chi33*dAdF11312 + F31*F32*chi31*dAdF12112 + F31*F32*chi31*dAdF21112 + F31*F32*chi32*dAdF12212 + F31*F32*chi32*dAdF21212 + F31*F32*chi33*dAdF12312 + F31*F32*chi33*dAdF21312 + F31*F33*chi31*dAdF13112 + F31*F33*chi31*dAdF31112 + F31*F33*chi32*dAdF13212 + F31*F33*chi32*dAdF31212 + F31*F33*chi33*dAdF13312 + F31*F33*chi33*dAdF31312 + F32*F32*chi31*dAdF22112 + F32*F32*chi32*dAdF22212 + F32*F32*chi33*dAdF22312 + F32*F33*chi31*dAdF23112 + F32*F33*chi31*dAdF32112 + F32*F33*chi32*dAdF23212 + F32*F33*chi32*dAdF32212 + F32*F33*chi33*dAdF23312 + F32*F33*chi33*dAdF32312 + F33*F33*chi31*dAdF33112 + F33*F33*chi32*dAdF33212 + F33*F33*chi33*dAdF33312 - J*a333*dJdF12;
        dadF(20,6) = A121*F31*chi31 + A122*F31*chi32 + A123*F31*chi33 + A211*F31*chi31 + A212*F31*chi32 + A213*F31*chi33 + 2*A221*F32*chi31 + 2*A222*F32*chi32 + 2*A223*F32*chi33 + A231*F33*chi31 + A232*F33*chi32 + A233*F33*chi33 + A321*F33*chi31 + A322*F33*chi32 + A323*F33*chi33 + F31*F31*chi31*dAdF11132 + F31*F31*chi32*dAdF11232 + F31*F31*chi33*dAdF11332 + F31*F32*chi31*dAdF12132 + F31*F32*chi31*dAdF21132 + F31*F32*chi32*dAdF12232 + F31*F32*chi32*dAdF21232 + F31*F32*chi33*dAdF12332 + F31*F32*chi33*dAdF21332 + F31*F33*chi31*dAdF13132 + F31*F33*chi31*dAdF31132 + F31*F33*chi32*dAdF13232 + F31*F33*chi32*dAdF31232 + F31*F33*chi33*dAdF13332 + F31*F33*chi33*dAdF31332 + F32*F32*chi31*dAdF22132 + F32*F32*chi32*dAdF22232 + F32*F32*chi33*dAdF22332 + F32*F33*chi31*dAdF23132 + F32*F33*chi31*dAdF32132 + F32*F33*chi32*dAdF23232 + F32*F33*chi32*dAdF32232 + F32*F33*chi33*dAdF23332 + F32*F33*chi33*dAdF32332 + F33*F33*chi31*dAdF33132 + F33*F33*chi32*dAdF33232 + F33*F33*chi33*dAdF33332 - J*a333*dJdF32;
        dadF(20,7) = 2*A111*F31*chi31 + 2*A112*F31*chi32 + 2*A113*F31*chi33 + A121*F32*chi31 + A122*F32*chi32 + A123*F32*chi33 + A131*F33*chi31 + A132*F33*chi32 + A133*F33*chi33 + A211*F32*chi31 + A212*F32*chi32 + A213*F32*chi33 + A311*F33*chi31 + A312*F33*chi32 + A313*F33*chi33 + F31*F31*chi31*dAdF11131 + F31*F31*chi32*dAdF11231 + F31*F31*chi33*dAdF11331 + F31*F32*chi31*dAdF12131 + F31*F32*chi31*dAdF21131 + F31*F32*chi32*dAdF12231 + F31*F32*chi32*dAdF21231 + F31*F32*chi33*dAdF12331 + F31*F32*chi33*dAdF21331 + F31*F33*chi31*dAdF13131 + F31*F33*chi31*dAdF31131 + F31*F33*chi32*dAdF13231 + F31*F33*chi32*dAdF31231 + F31*F33*chi33*dAdF13331 + F31*F33*chi33*dAdF31331 + F32*F32*chi31*dAdF22131 + F32*F32*chi32*dAdF22231 + F32*F32*chi33*dAdF22331 + F32*F33*chi31*dAdF23131 + F32*F33*chi31*dAdF32131 + F32*F33*chi32*dAdF23231 + F32*F33*chi32*dAdF32231 + F32*F33*chi33*dAdF23331 + F32*F33*chi33*dAdF32331 + F33*F33*chi31*dAdF33131 + F33*F33*chi32*dAdF33231 + F33*F33*chi33*dAdF33331 - J*a333*dJdF31;
        dadF(20,8) = F31*F31*chi31*dAdF11121 + F31*F31*chi32*dAdF11221 + F31*F31*chi33*dAdF11321 + F31*F32*chi31*dAdF12121 + F31*F32*chi31*dAdF21121 + F31*F32*chi32*dAdF12221 + F31*F32*chi32*dAdF21221 + F31*F32*chi33*dAdF12321 + F31*F32*chi33*dAdF21321 + F31*F33*chi31*dAdF13121 + F31*F33*chi31*dAdF31121 + F31*F33*chi32*dAdF13221 + F31*F33*chi32*dAdF31221 + F31*F33*chi33*dAdF13321 + F31*F33*chi33*dAdF31321 + F32*F32*chi31*dAdF22121 + F32*F32*chi32*dAdF22221 + F32*F32*chi33*dAdF22321 + F32*F33*chi31*dAdF23121 + F32*F33*chi31*dAdF32121 + F32*F33*chi32*dAdF23221 + F32*F33*chi32*dAdF32221 + F32*F33*chi33*dAdF23321 + F32*F33*chi33*dAdF32321 + F33*F33*chi31*dAdF33121 + F33*F33*chi32*dAdF33221 + F33*F33*chi33*dAdF33321 - J*a333*dJdF21;
        dadF(21,0) = F21*F31*chi31*dAdF11111 + F21*F31*chi32*dAdF11211 + F21*F31*chi33*dAdF11311 + F21*F32*chi31*dAdF21111 + F21*F32*chi32*dAdF21211 + F21*F32*chi33*dAdF21311 + F21*F33*chi31*dAdF31111 + F21*F33*chi32*dAdF31211 + F21*F33*chi33*dAdF31311 + F22*F31*chi31*dAdF12111 + F22*F31*chi32*dAdF12211 + F22*F31*chi33*dAdF12311 + F22*F32*chi31*dAdF22111 + F22*F32*chi32*dAdF22211 + F22*F32*chi33*dAdF22311 + F22*F33*chi31*dAdF32111 + F22*F33*chi32*dAdF32211 + F22*F33*chi33*dAdF32311 + F23*F31*chi31*dAdF13111 + F23*F31*chi32*dAdF13211 + F23*F31*chi33*dAdF13311 + F23*F32*chi31*dAdF23111 + F23*F32*chi32*dAdF23211 + F23*F32*chi33*dAdF23311 + F23*F33*chi31*dAdF33111 + F23*F33*chi32*dAdF33211 + F23*F33*chi33*dAdF33311 - J*a323*dJdF11;
        dadF(21,1) = A121*F31*chi31 + A122*F31*chi32 + A123*F31*chi33 + A221*F32*chi31 + A222*F32*chi32 + A223*F32*chi33 + A321*F33*chi31 + A322*F33*chi32 + A323*F33*chi33 + F21*F31*chi31*dAdF11122 + F21*F31*chi32*dAdF11222 + F21*F31*chi33*dAdF11322 + F21*F32*chi31*dAdF21122 + F21*F32*chi32*dAdF21222 + F21*F32*chi33*dAdF21322 + F21*F33*chi31*dAdF31122 + F21*F33*chi32*dAdF31222 + F21*F33*chi33*dAdF31322 + F22*F31*chi31*dAdF12122 + F22*F31*chi32*dAdF12222 + F22*F31*chi33*dAdF12322 + F22*F32*chi31*dAdF22122 + F22*F32*chi32*dAdF22222 + F22*F32*chi33*dAdF22322 + F22*F33*chi31*dAdF32122 + F22*F33*chi32*dAdF32222 + F22*F33*chi33*dAdF32322 + F23*F31*chi31*dAdF13122 + F23*F31*chi32*dAdF13222 + F23*F31*chi33*dAdF13322 + F23*F32*chi31*dAdF23122 + F23*F32*chi32*dAdF23222 + F23*F32*chi33*dAdF23322 + F23*F33*chi31*dAdF33122 + F23*F33*chi32*dAdF33222 + F23*F33*chi33*dAdF33322 - J*a323*dJdF22;
        dadF(21,2) = A311*F21*chi31 + A312*F21*chi32 + A313*F21*chi33 + A321*F22*chi31 + A322*F22*chi32 + A323*F22*chi33 + A331*F23*chi31 + A332*F23*chi32 + A333*F23*chi33 + F21*F31*chi31*dAdF11133 + F21*F31*chi32*dAdF11233 + F21*F31*chi33*dAdF11333 + F21*F32*chi31*dAdF21133 + F21*F32*chi32*dAdF21233 + F21*F32*chi33*dAdF21333 + F21*F33*chi31*dAdF31133 + F21*F33*chi32*dAdF31233 + F21*F33*chi33*dAdF31333 + F22*F31*chi31*dAdF12133 + F22*F31*chi32*dAdF12233 + F22*F31*chi33*dAdF12333 + F22*F32*chi31*dAdF22133 + F22*F32*chi32*dAdF22233 + F22*F32*chi33*dAdF22333 + F22*F33*chi31*dAdF32133 + F22*F33*chi32*dAdF32233 + F22*F33*chi33*dAdF32333 + F23*F31*chi31*dAdF13133 + F23*F31*chi32*dAdF13233 + F23*F31*chi33*dAdF13333 + F23*F32*chi31*dAdF23133 + F23*F32*chi32*dAdF23233 + F23*F32*chi33*dAdF23333 + F23*F33*chi31*dAdF33133 + F23*F33*chi32*dAdF33233 + F23*F33*chi33*dAdF33333 - J*a323*dJdF33;
        dadF(21,3) = A131*F31*chi31 + A132*F31*chi32 + A133*F31*chi33 + A231*F32*chi31 + A232*F32*chi32 + A233*F32*chi33 + A331*F33*chi31 + A332*F33*chi32 + A333*F33*chi33 + F21*F31*chi31*dAdF11123 + F21*F31*chi32*dAdF11223 + F21*F31*chi33*dAdF11323 + F21*F32*chi31*dAdF21123 + F21*F32*chi32*dAdF21223 + F21*F32*chi33*dAdF21323 + F21*F33*chi31*dAdF31123 + F21*F33*chi32*dAdF31223 + F21*F33*chi33*dAdF31323 + F22*F31*chi31*dAdF12123 + F22*F31*chi32*dAdF12223 + F22*F31*chi33*dAdF12323 + F22*F32*chi31*dAdF22123 + F22*F32*chi32*dAdF22223 + F22*F32*chi33*dAdF22323 + F22*F33*chi31*dAdF32123 + F22*F33*chi32*dAdF32223 + F22*F33*chi33*dAdF32323 + F23*F31*chi31*dAdF13123 + F23*F31*chi32*dAdF13223 + F23*F31*chi33*dAdF13323 + F23*F32*chi31*dAdF23123 + F23*F32*chi32*dAdF23223 + F23*F32*chi33*dAdF23323 + F23*F33*chi31*dAdF33123 + F23*F33*chi32*dAdF33223 + F23*F33*chi33*dAdF33323 - J*a323*dJdF23;
        dadF(21,4) = F21*F31*chi31*dAdF11113 + F21*F31*chi32*dAdF11213 + F21*F31*chi33*dAdF11313 + F21*F32*chi31*dAdF21113 + F21*F32*chi32*dAdF21213 + F21*F32*chi33*dAdF21313 + F21*F33*chi31*dAdF31113 + F21*F33*chi32*dAdF31213 + F21*F33*chi33*dAdF31313 + F22*F31*chi31*dAdF12113 + F22*F31*chi32*dAdF12213 + F22*F31*chi33*dAdF12313 + F22*F32*chi31*dAdF22113 + F22*F32*chi32*dAdF22213 + F22*F32*chi33*dAdF22313 + F22*F33*chi31*dAdF32113 + F22*F33*chi32*dAdF32213 + F22*F33*chi33*dAdF32313 + F23*F31*chi31*dAdF13113 + F23*F31*chi32*dAdF13213 + F23*F31*chi33*dAdF13313 + F23*F32*chi31*dAdF23113 + F23*F32*chi32*dAdF23213 + F23*F32*chi33*dAdF23313 + F23*F33*chi31*dAdF33113 + F23*F33*chi32*dAdF33213 + F23*F33*chi33*dAdF33313 - J*a323*dJdF13;
        dadF(21,5) = F21*F31*chi31*dAdF11112 + F21*F31*chi32*dAdF11212 + F21*F31*chi33*dAdF11312 + F21*F32*chi31*dAdF21112 + F21*F32*chi32*dAdF21212 + F21*F32*chi33*dAdF21312 + F21*F33*chi31*dAdF31112 + F21*F33*chi32*dAdF31212 + F21*F33*chi33*dAdF31312 + F22*F31*chi31*dAdF12112 + F22*F31*chi32*dAdF12212 + F22*F31*chi33*dAdF12312 + F22*F32*chi31*dAdF22112 + F22*F32*chi32*dAdF22212 + F22*F32*chi33*dAdF22312 + F22*F33*chi31*dAdF32112 + F22*F33*chi32*dAdF32212 + F22*F33*chi33*dAdF32312 + F23*F31*chi31*dAdF13112 + F23*F31*chi32*dAdF13212 + F23*F31*chi33*dAdF13312 + F23*F32*chi31*dAdF23112 + F23*F32*chi32*dAdF23212 + F23*F32*chi33*dAdF23312 + F23*F33*chi31*dAdF33112 + F23*F33*chi32*dAdF33212 + F23*F33*chi33*dAdF33312 - J*a323*dJdF12;
        dadF(21,6) = A211*F21*chi31 + A212*F21*chi32 + A213*F21*chi33 + A221*F22*chi31 + A222*F22*chi32 + A223*F22*chi33 + A231*F23*chi31 + A232*F23*chi32 + A233*F23*chi33 + F21*F31*chi31*dAdF11132 + F21*F31*chi32*dAdF11232 + F21*F31*chi33*dAdF11332 + F21*F32*chi31*dAdF21132 + F21*F32*chi32*dAdF21232 + F21*F32*chi33*dAdF21332 + F21*F33*chi31*dAdF31132 + F21*F33*chi32*dAdF31232 + F21*F33*chi33*dAdF31332 + F22*F31*chi31*dAdF12132 + F22*F31*chi32*dAdF12232 + F22*F31*chi33*dAdF12332 + F22*F32*chi31*dAdF22132 + F22*F32*chi32*dAdF22232 + F22*F32*chi33*dAdF22332 + F22*F33*chi31*dAdF32132 + F22*F33*chi32*dAdF32232 + F22*F33*chi33*dAdF32332 + F23*F31*chi31*dAdF13132 + F23*F31*chi32*dAdF13232 + F23*F31*chi33*dAdF13332 + F23*F32*chi31*dAdF23132 + F23*F32*chi32*dAdF23232 + F23*F32*chi33*dAdF23332 + F23*F33*chi31*dAdF33132 + F23*F33*chi32*dAdF33232 + F23*F33*chi33*dAdF33332 - J*a323*dJdF32;
        dadF(21,7) = A111*F21*chi31 + A112*F21*chi32 + A113*F21*chi33 + A121*F22*chi31 + A122*F22*chi32 + A123*F22*chi33 + A131*F23*chi31 + A132*F23*chi32 + A133*F23*chi33 + F21*F31*chi31*dAdF11131 + F21*F31*chi32*dAdF11231 + F21*F31*chi33*dAdF11331 + F21*F32*chi31*dAdF21131 + F21*F32*chi32*dAdF21231 + F21*F32*chi33*dAdF21331 + F21*F33*chi31*dAdF31131 + F21*F33*chi32*dAdF31231 + F21*F33*chi33*dAdF31331 + F22*F31*chi31*dAdF12131 + F22*F31*chi32*dAdF12231 + F22*F31*chi33*dAdF12331 + F22*F32*chi31*dAdF22131 + F22*F32*chi32*dAdF22231 + F22*F32*chi33*dAdF22331 + F22*F33*chi31*dAdF32131 + F22*F33*chi32*dAdF32231 + F22*F33*chi33*dAdF32331 + F23*F31*chi31*dAdF13131 + F23*F31*chi32*dAdF13231 + F23*F31*chi33*dAdF13331 + F23*F32*chi31*dAdF23131 + F23*F32*chi32*dAdF23231 + F23*F32*chi33*dAdF23331 + F23*F33*chi31*dAdF33131 + F23*F33*chi32*dAdF33231 + F23*F33*chi33*dAdF33331 - J*a323*dJdF31;
        dadF(21,8) = A111*F31*chi31 + A112*F31*chi32 + A113*F31*chi33 + A211*F32*chi31 + A212*F32*chi32 + A213*F32*chi33 + A311*F33*chi31 + A312*F33*chi32 + A313*F33*chi33 + F21*F31*chi31*dAdF11121 + F21*F31*chi32*dAdF11221 + F21*F31*chi33*dAdF11321 + F21*F32*chi31*dAdF21121 + F21*F32*chi32*dAdF21221 + F21*F32*chi33*dAdF21321 + F21*F33*chi31*dAdF31121 + F21*F33*chi32*dAdF31221 + F21*F33*chi33*dAdF31321 + F22*F31*chi31*dAdF12121 + F22*F31*chi32*dAdF12221 + F22*F31*chi33*dAdF12321 + F22*F32*chi31*dAdF22121 + F22*F32*chi32*dAdF22221 + F22*F32*chi33*dAdF22321 + F22*F33*chi31*dAdF32121 + F22*F33*chi32*dAdF32221 + F22*F33*chi33*dAdF32321 + F23*F31*chi31*dAdF13121 + F23*F31*chi32*dAdF13221 + F23*F31*chi33*dAdF13321 + F23*F32*chi31*dAdF23121 + F23*F32*chi32*dAdF23221 + F23*F32*chi33*dAdF23321 + F23*F33*chi31*dAdF33121 + F23*F33*chi32*dAdF33221 + F23*F33*chi33*dAdF33321 - J*a323*dJdF21;
        dadF(22,0) = A111*F31*chi31 + A112*F31*chi32 + A113*F31*chi33 + A211*F32*chi31 + A212*F32*chi32 + A213*F32*chi33 + A311*F33*chi31 + A312*F33*chi32 + A313*F33*chi33 + F11*F31*chi31*dAdF11111 + F11*F31*chi32*dAdF11211 + F11*F31*chi33*dAdF11311 + F11*F32*chi31*dAdF21111 + F11*F32*chi32*dAdF21211 + F11*F32*chi33*dAdF21311 + F11*F33*chi31*dAdF31111 + F11*F33*chi32*dAdF31211 + F11*F33*chi33*dAdF31311 + F12*F31*chi31*dAdF12111 + F12*F31*chi32*dAdF12211 + F12*F31*chi33*dAdF12311 + F12*F32*chi31*dAdF22111 + F12*F32*chi32*dAdF22211 + F12*F32*chi33*dAdF22311 + F12*F33*chi31*dAdF32111 + F12*F33*chi32*dAdF32211 + F12*F33*chi33*dAdF32311 + F13*F31*chi31*dAdF13111 + F13*F31*chi32*dAdF13211 + F13*F31*chi33*dAdF13311 + F13*F32*chi31*dAdF23111 + F13*F32*chi32*dAdF23211 + F13*F32*chi33*dAdF23311 + F13*F33*chi31*dAdF33111 + F13*F33*chi32*dAdF33211 + F13*F33*chi33*dAdF33311 - J*a313*dJdF11;
        dadF(22,1) = F11*F31*chi31*dAdF11122 + F11*F31*chi32*dAdF11222 + F11*F31*chi33*dAdF11322 + F11*F32*chi31*dAdF21122 + F11*F32*chi32*dAdF21222 + F11*F32*chi33*dAdF21322 + F11*F33*chi31*dAdF31122 + F11*F33*chi32*dAdF31222 + F11*F33*chi33*dAdF31322 + F12*F31*chi31*dAdF12122 + F12*F31*chi32*dAdF12222 + F12*F31*chi33*dAdF12322 + F12*F32*chi31*dAdF22122 + F12*F32*chi32*dAdF22222 + F12*F32*chi33*dAdF22322 + F12*F33*chi31*dAdF32122 + F12*F33*chi32*dAdF32222 + F12*F33*chi33*dAdF32322 + F13*F31*chi31*dAdF13122 + F13*F31*chi32*dAdF13222 + F13*F31*chi33*dAdF13322 + F13*F32*chi31*dAdF23122 + F13*F32*chi32*dAdF23222 + F13*F32*chi33*dAdF23322 + F13*F33*chi31*dAdF33122 + F13*F33*chi32*dAdF33222 + F13*F33*chi33*dAdF33322 - J*a313*dJdF22;
        dadF(22,2) = A311*F11*chi31 + A312*F11*chi32 + A313*F11*chi33 + A321*F12*chi31 + A322*F12*chi32 + A323*F12*chi33 + A331*F13*chi31 + A332*F13*chi32 + A333*F13*chi33 + F11*F31*chi31*dAdF11133 + F11*F31*chi32*dAdF11233 + F11*F31*chi33*dAdF11333 + F11*F32*chi31*dAdF21133 + F11*F32*chi32*dAdF21233 + F11*F32*chi33*dAdF21333 + F11*F33*chi31*dAdF31133 + F11*F33*chi32*dAdF31233 + F11*F33*chi33*dAdF31333 + F12*F31*chi31*dAdF12133 + F12*F31*chi32*dAdF12233 + F12*F31*chi33*dAdF12333 + F12*F32*chi31*dAdF22133 + F12*F32*chi32*dAdF22233 + F12*F32*chi33*dAdF22333 + F12*F33*chi31*dAdF32133 + F12*F33*chi32*dAdF32233 + F12*F33*chi33*dAdF32333 + F13*F31*chi31*dAdF13133 + F13*F31*chi32*dAdF13233 + F13*F31*chi33*dAdF13333 + F13*F32*chi31*dAdF23133 + F13*F32*chi32*dAdF23233 + F13*F32*chi33*dAdF23333 + F13*F33*chi31*dAdF33133 + F13*F33*chi32*dAdF33233 + F13*F33*chi33*dAdF33333 - J*a313*dJdF33;
        dadF(22,3) = F11*F31*chi31*dAdF11123 + F11*F31*chi32*dAdF11223 + F11*F31*chi33*dAdF11323 + F11*F32*chi31*dAdF21123 + F11*F32*chi32*dAdF21223 + F11*F32*chi33*dAdF21323 + F11*F33*chi31*dAdF31123 + F11*F33*chi32*dAdF31223 + F11*F33*chi33*dAdF31323 + F12*F31*chi31*dAdF12123 + F12*F31*chi32*dAdF12223 + F12*F31*chi33*dAdF12323 + F12*F32*chi31*dAdF22123 + F12*F32*chi32*dAdF22223 + F12*F32*chi33*dAdF22323 + F12*F33*chi31*dAdF32123 + F12*F33*chi32*dAdF32223 + F12*F33*chi33*dAdF32323 + F13*F31*chi31*dAdF13123 + F13*F31*chi32*dAdF13223 + F13*F31*chi33*dAdF13323 + F13*F32*chi31*dAdF23123 + F13*F32*chi32*dAdF23223 + F13*F32*chi33*dAdF23323 + F13*F33*chi31*dAdF33123 + F13*F33*chi32*dAdF33223 + F13*F33*chi33*dAdF33323 - J*a313*dJdF23;
        dadF(22,4) = A131*F31*chi31 + A132*F31*chi32 + A133*F31*chi33 + A231*F32*chi31 + A232*F32*chi32 + A233*F32*chi33 + A331*F33*chi31 + A332*F33*chi32 + A333*F33*chi33 + F11*F31*chi31*dAdF11113 + F11*F31*chi32*dAdF11213 + F11*F31*chi33*dAdF11313 + F11*F32*chi31*dAdF21113 + F11*F32*chi32*dAdF21213 + F11*F32*chi33*dAdF21313 + F11*F33*chi31*dAdF31113 + F11*F33*chi32*dAdF31213 + F11*F33*chi33*dAdF31313 + F12*F31*chi31*dAdF12113 + F12*F31*chi32*dAdF12213 + F12*F31*chi33*dAdF12313 + F12*F32*chi31*dAdF22113 + F12*F32*chi32*dAdF22213 + F12*F32*chi33*dAdF22313 + F12*F33*chi31*dAdF32113 + F12*F33*chi32*dAdF32213 + F12*F33*chi33*dAdF32313 + F13*F31*chi31*dAdF13113 + F13*F31*chi32*dAdF13213 + F13*F31*chi33*dAdF13313 + F13*F32*chi31*dAdF23113 + F13*F32*chi32*dAdF23213 + F13*F32*chi33*dAdF23313 + F13*F33*chi31*dAdF33113 + F13*F33*chi32*dAdF33213 + F13*F33*chi33*dAdF33313 - J*a313*dJdF13;
        dadF(22,5) = A121*F31*chi31 + A122*F31*chi32 + A123*F31*chi33 + A221*F32*chi31 + A222*F32*chi32 + A223*F32*chi33 + A321*F33*chi31 + A322*F33*chi32 + A323*F33*chi33 + F11*F31*chi31*dAdF11112 + F11*F31*chi32*dAdF11212 + F11*F31*chi33*dAdF11312 + F11*F32*chi31*dAdF21112 + F11*F32*chi32*dAdF21212 + F11*F32*chi33*dAdF21312 + F11*F33*chi31*dAdF31112 + F11*F33*chi32*dAdF31212 + F11*F33*chi33*dAdF31312 + F12*F31*chi31*dAdF12112 + F12*F31*chi32*dAdF12212 + F12*F31*chi33*dAdF12312 + F12*F32*chi31*dAdF22112 + F12*F32*chi32*dAdF22212 + F12*F32*chi33*dAdF22312 + F12*F33*chi31*dAdF32112 + F12*F33*chi32*dAdF32212 + F12*F33*chi33*dAdF32312 + F13*F31*chi31*dAdF13112 + F13*F31*chi32*dAdF13212 + F13*F31*chi33*dAdF13312 + F13*F32*chi31*dAdF23112 + F13*F32*chi32*dAdF23212 + F13*F32*chi33*dAdF23312 + F13*F33*chi31*dAdF33112 + F13*F33*chi32*dAdF33212 + F13*F33*chi33*dAdF33312 - J*a313*dJdF12;
        dadF(22,6) = A211*F11*chi31 + A212*F11*chi32 + A213*F11*chi33 + A221*F12*chi31 + A222*F12*chi32 + A223*F12*chi33 + A231*F13*chi31 + A232*F13*chi32 + A233*F13*chi33 + F11*F31*chi31*dAdF11132 + F11*F31*chi32*dAdF11232 + F11*F31*chi33*dAdF11332 + F11*F32*chi31*dAdF21132 + F11*F32*chi32*dAdF21232 + F11*F32*chi33*dAdF21332 + F11*F33*chi31*dAdF31132 + F11*F33*chi32*dAdF31232 + F11*F33*chi33*dAdF31332 + F12*F31*chi31*dAdF12132 + F12*F31*chi32*dAdF12232 + F12*F31*chi33*dAdF12332 + F12*F32*chi31*dAdF22132 + F12*F32*chi32*dAdF22232 + F12*F32*chi33*dAdF22332 + F12*F33*chi31*dAdF32132 + F12*F33*chi32*dAdF32232 + F12*F33*chi33*dAdF32332 + F13*F31*chi31*dAdF13132 + F13*F31*chi32*dAdF13232 + F13*F31*chi33*dAdF13332 + F13*F32*chi31*dAdF23132 + F13*F32*chi32*dAdF23232 + F13*F32*chi33*dAdF23332 + F13*F33*chi31*dAdF33132 + F13*F33*chi32*dAdF33232 + F13*F33*chi33*dAdF33332 - J*a313*dJdF32;
        dadF(22,7) = A111*F11*chi31 + A112*F11*chi32 + A113*F11*chi33 + A121*F12*chi31 + A122*F12*chi32 + A123*F12*chi33 + A131*F13*chi31 + A132*F13*chi32 + A133*F13*chi33 + F11*F31*chi31*dAdF11131 + F11*F31*chi32*dAdF11231 + F11*F31*chi33*dAdF11331 + F11*F32*chi31*dAdF21131 + F11*F32*chi32*dAdF21231 + F11*F32*chi33*dAdF21331 + F11*F33*chi31*dAdF31131 + F11*F33*chi32*dAdF31231 + F11*F33*chi33*dAdF31331 + F12*F31*chi31*dAdF12131 + F12*F31*chi32*dAdF12231 + F12*F31*chi33*dAdF12331 + F12*F32*chi31*dAdF22131 + F12*F32*chi32*dAdF22231 + F12*F32*chi33*dAdF22331 + F12*F33*chi31*dAdF32131 + F12*F33*chi32*dAdF32231 + F12*F33*chi33*dAdF32331 + F13*F31*chi31*dAdF13131 + F13*F31*chi32*dAdF13231 + F13*F31*chi33*dAdF13331 + F13*F32*chi31*dAdF23131 + F13*F32*chi32*dAdF23231 + F13*F32*chi33*dAdF23331 + F13*F33*chi31*dAdF33131 + F13*F33*chi32*dAdF33231 + F13*F33*chi33*dAdF33331 - J*a313*dJdF31;
        dadF(22,8) = F11*F31*chi31*dAdF11121 + F11*F31*chi32*dAdF11221 + F11*F31*chi33*dAdF11321 + F11*F32*chi31*dAdF21121 + F11*F32*chi32*dAdF21221 + F11*F32*chi33*dAdF21321 + F11*F33*chi31*dAdF31121 + F11*F33*chi32*dAdF31221 + F11*F33*chi33*dAdF31321 + F12*F31*chi31*dAdF12121 + F12*F31*chi32*dAdF12221 + F12*F31*chi33*dAdF12321 + F12*F32*chi31*dAdF22121 + F12*F32*chi32*dAdF22221 + F12*F32*chi33*dAdF22321 + F12*F33*chi31*dAdF32121 + F12*F33*chi32*dAdF32221 + F12*F33*chi33*dAdF32321 + F13*F31*chi31*dAdF13121 + F13*F31*chi32*dAdF13221 + F13*F31*chi33*dAdF13321 + F13*F32*chi31*dAdF23121 + F13*F32*chi32*dAdF23221 + F13*F32*chi33*dAdF23321 + F13*F33*chi31*dAdF33121 + F13*F33*chi32*dAdF33221 + F13*F33*chi33*dAdF33321 - J*a313*dJdF21;
        dadF(23,0) = A111*F31*chi21 + A112*F31*chi22 + A113*F31*chi23 + A211*F32*chi21 + A212*F32*chi22 + A213*F32*chi23 + A311*F33*chi21 + A312*F33*chi22 + A313*F33*chi23 + F11*F31*chi21*dAdF11111 + F11*F31*chi22*dAdF11211 + F11*F31*chi23*dAdF11311 + F11*F32*chi21*dAdF21111 + F11*F32*chi22*dAdF21211 + F11*F32*chi23*dAdF21311 + F11*F33*chi21*dAdF31111 + F11*F33*chi22*dAdF31211 + F11*F33*chi23*dAdF31311 + F12*F31*chi21*dAdF12111 + F12*F31*chi22*dAdF12211 + F12*F31*chi23*dAdF12311 + F12*F32*chi21*dAdF22111 + F12*F32*chi22*dAdF22211 + F12*F32*chi23*dAdF22311 + F12*F33*chi21*dAdF32111 + F12*F33*chi22*dAdF32211 + F12*F33*chi23*dAdF32311 + F13*F31*chi21*dAdF13111 + F13*F31*chi22*dAdF13211 + F13*F31*chi23*dAdF13311 + F13*F32*chi21*dAdF23111 + F13*F32*chi22*dAdF23211 + F13*F32*chi23*dAdF23311 + F13*F33*chi21*dAdF33111 + F13*F33*chi22*dAdF33211 + F13*F33*chi23*dAdF33311 - J*a312*dJdF11;
        dadF(23,1) = F11*F31*chi21*dAdF11122 + F11*F31*chi22*dAdF11222 + F11*F31*chi23*dAdF11322 + F11*F32*chi21*dAdF21122 + F11*F32*chi22*dAdF21222 + F11*F32*chi23*dAdF21322 + F11*F33*chi21*dAdF31122 + F11*F33*chi22*dAdF31222 + F11*F33*chi23*dAdF31322 + F12*F31*chi21*dAdF12122 + F12*F31*chi22*dAdF12222 + F12*F31*chi23*dAdF12322 + F12*F32*chi21*dAdF22122 + F12*F32*chi22*dAdF22222 + F12*F32*chi23*dAdF22322 + F12*F33*chi21*dAdF32122 + F12*F33*chi22*dAdF32222 + F12*F33*chi23*dAdF32322 + F13*F31*chi21*dAdF13122 + F13*F31*chi22*dAdF13222 + F13*F31*chi23*dAdF13322 + F13*F32*chi21*dAdF23122 + F13*F32*chi22*dAdF23222 + F13*F32*chi23*dAdF23322 + F13*F33*chi21*dAdF33122 + F13*F33*chi22*dAdF33222 + F13*F33*chi23*dAdF33322 - J*a312*dJdF22;
        dadF(23,2) = A311*F11*chi21 + A312*F11*chi22 + A313*F11*chi23 + A321*F12*chi21 + A322*F12*chi22 + A323*F12*chi23 + A331*F13*chi21 + A332*F13*chi22 + A333*F13*chi23 + F11*F31*chi21*dAdF11133 + F11*F31*chi22*dAdF11233 + F11*F31*chi23*dAdF11333 + F11*F32*chi21*dAdF21133 + F11*F32*chi22*dAdF21233 + F11*F32*chi23*dAdF21333 + F11*F33*chi21*dAdF31133 + F11*F33*chi22*dAdF31233 + F11*F33*chi23*dAdF31333 + F12*F31*chi21*dAdF12133 + F12*F31*chi22*dAdF12233 + F12*F31*chi23*dAdF12333 + F12*F32*chi21*dAdF22133 + F12*F32*chi22*dAdF22233 + F12*F32*chi23*dAdF22333 + F12*F33*chi21*dAdF32133 + F12*F33*chi22*dAdF32233 + F12*F33*chi23*dAdF32333 + F13*F31*chi21*dAdF13133 + F13*F31*chi22*dAdF13233 + F13*F31*chi23*dAdF13333 + F13*F32*chi21*dAdF23133 + F13*F32*chi22*dAdF23233 + F13*F32*chi23*dAdF23333 + F13*F33*chi21*dAdF33133 + F13*F33*chi22*dAdF33233 + F13*F33*chi23*dAdF33333 - J*a312*dJdF33;
        dadF(23,3) = F11*F31*chi21*dAdF11123 + F11*F31*chi22*dAdF11223 + F11*F31*chi23*dAdF11323 + F11*F32*chi21*dAdF21123 + F11*F32*chi22*dAdF21223 + F11*F32*chi23*dAdF21323 + F11*F33*chi21*dAdF31123 + F11*F33*chi22*dAdF31223 + F11*F33*chi23*dAdF31323 + F12*F31*chi21*dAdF12123 + F12*F31*chi22*dAdF12223 + F12*F31*chi23*dAdF12323 + F12*F32*chi21*dAdF22123 + F12*F32*chi22*dAdF22223 + F12*F32*chi23*dAdF22323 + F12*F33*chi21*dAdF32123 + F12*F33*chi22*dAdF32223 + F12*F33*chi23*dAdF32323 + F13*F31*chi21*dAdF13123 + F13*F31*chi22*dAdF13223 + F13*F31*chi23*dAdF13323 + F13*F32*chi21*dAdF23123 + F13*F32*chi22*dAdF23223 + F13*F32*chi23*dAdF23323 + F13*F33*chi21*dAdF33123 + F13*F33*chi22*dAdF33223 + F13*F33*chi23*dAdF33323 - J*a312*dJdF23;
        dadF(23,4) = A131*F31*chi21 + A132*F31*chi22 + A133*F31*chi23 + A231*F32*chi21 + A232*F32*chi22 + A233*F32*chi23 + A331*F33*chi21 + A332*F33*chi22 + A333*F33*chi23 + F11*F31*chi21*dAdF11113 + F11*F31*chi22*dAdF11213 + F11*F31*chi23*dAdF11313 + F11*F32*chi21*dAdF21113 + F11*F32*chi22*dAdF21213 + F11*F32*chi23*dAdF21313 + F11*F33*chi21*dAdF31113 + F11*F33*chi22*dAdF31213 + F11*F33*chi23*dAdF31313 + F12*F31*chi21*dAdF12113 + F12*F31*chi22*dAdF12213 + F12*F31*chi23*dAdF12313 + F12*F32*chi21*dAdF22113 + F12*F32*chi22*dAdF22213 + F12*F32*chi23*dAdF22313 + F12*F33*chi21*dAdF32113 + F12*F33*chi22*dAdF32213 + F12*F33*chi23*dAdF32313 + F13*F31*chi21*dAdF13113 + F13*F31*chi22*dAdF13213 + F13*F31*chi23*dAdF13313 + F13*F32*chi21*dAdF23113 + F13*F32*chi22*dAdF23213 + F13*F32*chi23*dAdF23313 + F13*F33*chi21*dAdF33113 + F13*F33*chi22*dAdF33213 + F13*F33*chi23*dAdF33313 - J*a312*dJdF13;
        dadF(23,5) = A121*F31*chi21 + A122*F31*chi22 + A123*F31*chi23 + A221*F32*chi21 + A222*F32*chi22 + A223*F32*chi23 + A321*F33*chi21 + A322*F33*chi22 + A323*F33*chi23 + F11*F31*chi21*dAdF11112 + F11*F31*chi22*dAdF11212 + F11*F31*chi23*dAdF11312 + F11*F32*chi21*dAdF21112 + F11*F32*chi22*dAdF21212 + F11*F32*chi23*dAdF21312 + F11*F33*chi21*dAdF31112 + F11*F33*chi22*dAdF31212 + F11*F33*chi23*dAdF31312 + F12*F31*chi21*dAdF12112 + F12*F31*chi22*dAdF12212 + F12*F31*chi23*dAdF12312 + F12*F32*chi21*dAdF22112 + F12*F32*chi22*dAdF22212 + F12*F32*chi23*dAdF22312 + F12*F33*chi21*dAdF32112 + F12*F33*chi22*dAdF32212 + F12*F33*chi23*dAdF32312 + F13*F31*chi21*dAdF13112 + F13*F31*chi22*dAdF13212 + F13*F31*chi23*dAdF13312 + F13*F32*chi21*dAdF23112 + F13*F32*chi22*dAdF23212 + F13*F32*chi23*dAdF23312 + F13*F33*chi21*dAdF33112 + F13*F33*chi22*dAdF33212 + F13*F33*chi23*dAdF33312 - J*a312*dJdF12;
        dadF(23,6) = A211*F11*chi21 + A212*F11*chi22 + A213*F11*chi23 + A221*F12*chi21 + A222*F12*chi22 + A223*F12*chi23 + A231*F13*chi21 + A232*F13*chi22 + A233*F13*chi23 + F11*F31*chi21*dAdF11132 + F11*F31*chi22*dAdF11232 + F11*F31*chi23*dAdF11332 + F11*F32*chi21*dAdF21132 + F11*F32*chi22*dAdF21232 + F11*F32*chi23*dAdF21332 + F11*F33*chi21*dAdF31132 + F11*F33*chi22*dAdF31232 + F11*F33*chi23*dAdF31332 + F12*F31*chi21*dAdF12132 + F12*F31*chi22*dAdF12232 + F12*F31*chi23*dAdF12332 + F12*F32*chi21*dAdF22132 + F12*F32*chi22*dAdF22232 + F12*F32*chi23*dAdF22332 + F12*F33*chi21*dAdF32132 + F12*F33*chi22*dAdF32232 + F12*F33*chi23*dAdF32332 + F13*F31*chi21*dAdF13132 + F13*F31*chi22*dAdF13232 + F13*F31*chi23*dAdF13332 + F13*F32*chi21*dAdF23132 + F13*F32*chi22*dAdF23232 + F13*F32*chi23*dAdF23332 + F13*F33*chi21*dAdF33132 + F13*F33*chi22*dAdF33232 + F13*F33*chi23*dAdF33332 - J*a312*dJdF32;
        dadF(23,7) = A111*F11*chi21 + A112*F11*chi22 + A113*F11*chi23 + A121*F12*chi21 + A122*F12*chi22 + A123*F12*chi23 + A131*F13*chi21 + A132*F13*chi22 + A133*F13*chi23 + F11*F31*chi21*dAdF11131 + F11*F31*chi22*dAdF11231 + F11*F31*chi23*dAdF11331 + F11*F32*chi21*dAdF21131 + F11*F32*chi22*dAdF21231 + F11*F32*chi23*dAdF21331 + F11*F33*chi21*dAdF31131 + F11*F33*chi22*dAdF31231 + F11*F33*chi23*dAdF31331 + F12*F31*chi21*dAdF12131 + F12*F31*chi22*dAdF12231 + F12*F31*chi23*dAdF12331 + F12*F32*chi21*dAdF22131 + F12*F32*chi22*dAdF22231 + F12*F32*chi23*dAdF22331 + F12*F33*chi21*dAdF32131 + F12*F33*chi22*dAdF32231 + F12*F33*chi23*dAdF32331 + F13*F31*chi21*dAdF13131 + F13*F31*chi22*dAdF13231 + F13*F31*chi23*dAdF13331 + F13*F32*chi21*dAdF23131 + F13*F32*chi22*dAdF23231 + F13*F32*chi23*dAdF23331 + F13*F33*chi21*dAdF33131 + F13*F33*chi22*dAdF33231 + F13*F33*chi23*dAdF33331 - J*a312*dJdF31;
        dadF(23,8) = F11*F31*chi21*dAdF11121 + F11*F31*chi22*dAdF11221 + F11*F31*chi23*dAdF11321 + F11*F32*chi21*dAdF21121 + F11*F32*chi22*dAdF21221 + F11*F32*chi23*dAdF21321 + F11*F33*chi21*dAdF31121 + F11*F33*chi22*dAdF31221 + F11*F33*chi23*dAdF31321 + F12*F31*chi21*dAdF12121 + F12*F31*chi22*dAdF12221 + F12*F31*chi23*dAdF12321 + F12*F32*chi21*dAdF22121 + F12*F32*chi22*dAdF22221 + F12*F32*chi23*dAdF22321 + F12*F33*chi21*dAdF32121 + F12*F33*chi22*dAdF32221 + F12*F33*chi23*dAdF32321 + F13*F31*chi21*dAdF13121 + F13*F31*chi22*dAdF13221 + F13*F31*chi23*dAdF13321 + F13*F32*chi21*dAdF23121 + F13*F32*chi22*dAdF23221 + F13*F32*chi23*dAdF23321 + F13*F33*chi21*dAdF33121 + F13*F33*chi22*dAdF33221 + F13*F33*chi23*dAdF33321 - J*a312*dJdF21;
        dadF(24,0) = F31*F31*chi21*dAdF11111 + F31*F31*chi22*dAdF11211 + F31*F31*chi23*dAdF11311 + F31*F32*chi21*dAdF12111 + F31*F32*chi21*dAdF21111 + F31*F32*chi22*dAdF12211 + F31*F32*chi22*dAdF21211 + F31*F32*chi23*dAdF12311 + F31*F32*chi23*dAdF21311 + F31*F33*chi21*dAdF13111 + F31*F33*chi21*dAdF31111 + F31*F33*chi22*dAdF13211 + F31*F33*chi22*dAdF31211 + F31*F33*chi23*dAdF13311 + F31*F33*chi23*dAdF31311 + F32*F32*chi21*dAdF22111 + F32*F32*chi22*dAdF22211 + F32*F32*chi23*dAdF22311 + F32*F33*chi21*dAdF23111 + F32*F33*chi21*dAdF32111 + F32*F33*chi22*dAdF23211 + F32*F33*chi22*dAdF32211 + F32*F33*chi23*dAdF23311 + F32*F33*chi23*dAdF32311 + F33*F33*chi21*dAdF33111 + F33*F33*chi22*dAdF33211 + F33*F33*chi23*dAdF33311 - J*a332*dJdF11;
        dadF(24,1) = F31*F31*chi21*dAdF11122 + F31*F31*chi22*dAdF11222 + F31*F31*chi23*dAdF11322 + F31*F32*chi21*dAdF12122 + F31*F32*chi21*dAdF21122 + F31*F32*chi22*dAdF12222 + F31*F32*chi22*dAdF21222 + F31*F32*chi23*dAdF12322 + F31*F32*chi23*dAdF21322 + F31*F33*chi21*dAdF13122 + F31*F33*chi21*dAdF31122 + F31*F33*chi22*dAdF13222 + F31*F33*chi22*dAdF31222 + F31*F33*chi23*dAdF13322 + F31*F33*chi23*dAdF31322 + F32*F32*chi21*dAdF22122 + F32*F32*chi22*dAdF22222 + F32*F32*chi23*dAdF22322 + F32*F33*chi21*dAdF23122 + F32*F33*chi21*dAdF32122 + F32*F33*chi22*dAdF23222 + F32*F33*chi22*dAdF32222 + F32*F33*chi23*dAdF23322 + F32*F33*chi23*dAdF32322 + F33*F33*chi21*dAdF33122 + F33*F33*chi22*dAdF33222 + F33*F33*chi23*dAdF33322 - J*a332*dJdF22;
        dadF(24,2) = A131*F31*chi21 + A132*F31*chi22 + A133*F31*chi23 + A231*F32*chi21 + A232*F32*chi22 + A233*F32*chi23 + A311*F31*chi21 + A312*F31*chi22 + A313*F31*chi23 + A321*F32*chi21 + A322*F32*chi22 + A323*F32*chi23 + 2*A331*F33*chi21 + 2*A332*F33*chi22 + 2*A333*F33*chi23 + F31*F31*chi21*dAdF11133 + F31*F31*chi22*dAdF11233 + F31*F31*chi23*dAdF11333 + F31*F32*chi21*dAdF12133 + F31*F32*chi21*dAdF21133 + F31*F32*chi22*dAdF12233 + F31*F32*chi22*dAdF21233 + F31*F32*chi23*dAdF12333 + F31*F32*chi23*dAdF21333 + F31*F33*chi21*dAdF13133 + F31*F33*chi21*dAdF31133 + F31*F33*chi22*dAdF13233 + F31*F33*chi22*dAdF31233 + F31*F33*chi23*dAdF13333 + F31*F33*chi23*dAdF31333 + F32*F32*chi21*dAdF22133 + F32*F32*chi22*dAdF22233 + F32*F32*chi23*dAdF22333 + F32*F33*chi21*dAdF23133 + F32*F33*chi21*dAdF32133 + F32*F33*chi22*dAdF23233 + F32*F33*chi22*dAdF32233 + F32*F33*chi23*dAdF23333 + F32*F33*chi23*dAdF32333 + F33*F33*chi21*dAdF33133 + F33*F33*chi22*dAdF33233 + F33*F33*chi23*dAdF33333 - J*a332*dJdF33;
        dadF(24,3) = F31*F31*chi21*dAdF11123 + F31*F31*chi22*dAdF11223 + F31*F31*chi23*dAdF11323 + F31*F32*chi21*dAdF12123 + F31*F32*chi21*dAdF21123 + F31*F32*chi22*dAdF12223 + F31*F32*chi22*dAdF21223 + F31*F32*chi23*dAdF12323 + F31*F32*chi23*dAdF21323 + F31*F33*chi21*dAdF13123 + F31*F33*chi21*dAdF31123 + F31*F33*chi22*dAdF13223 + F31*F33*chi22*dAdF31223 + F31*F33*chi23*dAdF13323 + F31*F33*chi23*dAdF31323 + F32*F32*chi21*dAdF22123 + F32*F32*chi22*dAdF22223 + F32*F32*chi23*dAdF22323 + F32*F33*chi21*dAdF23123 + F32*F33*chi21*dAdF32123 + F32*F33*chi22*dAdF23223 + F32*F33*chi22*dAdF32223 + F32*F33*chi23*dAdF23323 + F32*F33*chi23*dAdF32323 + F33*F33*chi21*dAdF33123 + F33*F33*chi22*dAdF33223 + F33*F33*chi23*dAdF33323 - J*a332*dJdF23;
        dadF(24,4) = F31*F31*chi21*dAdF11113 + F31*F31*chi22*dAdF11213 + F31*F31*chi23*dAdF11313 + F31*F32*chi21*dAdF12113 + F31*F32*chi21*dAdF21113 + F31*F32*chi22*dAdF12213 + F31*F32*chi22*dAdF21213 + F31*F32*chi23*dAdF12313 + F31*F32*chi23*dAdF21313 + F31*F33*chi21*dAdF13113 + F31*F33*chi21*dAdF31113 + F31*F33*chi22*dAdF13213 + F31*F33*chi22*dAdF31213 + F31*F33*chi23*dAdF13313 + F31*F33*chi23*dAdF31313 + F32*F32*chi21*dAdF22113 + F32*F32*chi22*dAdF22213 + F32*F32*chi23*dAdF22313 + F32*F33*chi21*dAdF23113 + F32*F33*chi21*dAdF32113 + F32*F33*chi22*dAdF23213 + F32*F33*chi22*dAdF32213 + F32*F33*chi23*dAdF23313 + F32*F33*chi23*dAdF32313 + F33*F33*chi21*dAdF33113 + F33*F33*chi22*dAdF33213 + F33*F33*chi23*dAdF33313 - J*a332*dJdF13;
        dadF(24,5) = F31*F31*chi21*dAdF11112 + F31*F31*chi22*dAdF11212 + F31*F31*chi23*dAdF11312 + F31*F32*chi21*dAdF12112 + F31*F32*chi21*dAdF21112 + F31*F32*chi22*dAdF12212 + F31*F32*chi22*dAdF21212 + F31*F32*chi23*dAdF12312 + F31*F32*chi23*dAdF21312 + F31*F33*chi21*dAdF13112 + F31*F33*chi21*dAdF31112 + F31*F33*chi22*dAdF13212 + F31*F33*chi22*dAdF31212 + F31*F33*chi23*dAdF13312 + F31*F33*chi23*dAdF31312 + F32*F32*chi21*dAdF22112 + F32*F32*chi22*dAdF22212 + F32*F32*chi23*dAdF22312 + F32*F33*chi21*dAdF23112 + F32*F33*chi21*dAdF32112 + F32*F33*chi22*dAdF23212 + F32*F33*chi22*dAdF32212 + F32*F33*chi23*dAdF23312 + F32*F33*chi23*dAdF32312 + F33*F33*chi21*dAdF33112 + F33*F33*chi22*dAdF33212 + F33*F33*chi23*dAdF33312 - J*a332*dJdF12;
        dadF(24,6) = A121*F31*chi21 + A122*F31*chi22 + A123*F31*chi23 + A211*F31*chi21 + A212*F31*chi22 + A213*F31*chi23 + 2*A221*F32*chi21 + 2*A222*F32*chi22 + 2*A223*F32*chi23 + A231*F33*chi21 + A232*F33*chi22 + A233*F33*chi23 + A321*F33*chi21 + A322*F33*chi22 + A323*F33*chi23 + F31*F31*chi21*dAdF11132 + F31*F31*chi22*dAdF11232 + F31*F31*chi23*dAdF11332 + F31*F32*chi21*dAdF12132 + F31*F32*chi21*dAdF21132 + F31*F32*chi22*dAdF12232 + F31*F32*chi22*dAdF21232 + F31*F32*chi23*dAdF12332 + F31*F32*chi23*dAdF21332 + F31*F33*chi21*dAdF13132 + F31*F33*chi21*dAdF31132 + F31*F33*chi22*dAdF13232 + F31*F33*chi22*dAdF31232 + F31*F33*chi23*dAdF13332 + F31*F33*chi23*dAdF31332 + F32*F32*chi21*dAdF22132 + F32*F32*chi22*dAdF22232 + F32*F32*chi23*dAdF22332 + F32*F33*chi21*dAdF23132 + F32*F33*chi21*dAdF32132 + F32*F33*chi22*dAdF23232 + F32*F33*chi22*dAdF32232 + F32*F33*chi23*dAdF23332 + F32*F33*chi23*dAdF32332 + F33*F33*chi21*dAdF33132 + F33*F33*chi22*dAdF33232 + F33*F33*chi23*dAdF33332 - J*a332*dJdF32;
        dadF(24,7) = 2*A111*F31*chi21 + 2*A112*F31*chi22 + 2*A113*F31*chi23 + A121*F32*chi21 + A122*F32*chi22 + A123*F32*chi23 + A131*F33*chi21 + A132*F33*chi22 + A133*F33*chi23 + A211*F32*chi21 + A212*F32*chi22 + A213*F32*chi23 + A311*F33*chi21 + A312*F33*chi22 + A313*F33*chi23 + F31*F31*chi21*dAdF11131 + F31*F31*chi22*dAdF11231 + F31*F31*chi23*dAdF11331 + F31*F32*chi21*dAdF12131 + F31*F32*chi21*dAdF21131 + F31*F32*chi22*dAdF12231 + F31*F32*chi22*dAdF21231 + F31*F32*chi23*dAdF12331 + F31*F32*chi23*dAdF21331 + F31*F33*chi21*dAdF13131 + F31*F33*chi21*dAdF31131 + F31*F33*chi22*dAdF13231 + F31*F33*chi22*dAdF31231 + F31*F33*chi23*dAdF13331 + F31*F33*chi23*dAdF31331 + F32*F32*chi21*dAdF22131 + F32*F32*chi22*dAdF22231 + F32*F32*chi23*dAdF22331 + F32*F33*chi21*dAdF23131 + F32*F33*chi21*dAdF32131 + F32*F33*chi22*dAdF23231 + F32*F33*chi22*dAdF32231 + F32*F33*chi23*dAdF23331 + F32*F33*chi23*dAdF32331 + F33*F33*chi21*dAdF33131 + F33*F33*chi22*dAdF33231 + F33*F33*chi23*dAdF33331 - J*a332*dJdF31;
        dadF(24,8) = F31*F31*chi21*dAdF11121 + F31*F31*chi22*dAdF11221 + F31*F31*chi23*dAdF11321 + F31*F32*chi21*dAdF12121 + F31*F32*chi21*dAdF21121 + F31*F32*chi22*dAdF12221 + F31*F32*chi22*dAdF21221 + F31*F32*chi23*dAdF12321 + F31*F32*chi23*dAdF21321 + F31*F33*chi21*dAdF13121 + F31*F33*chi21*dAdF31121 + F31*F33*chi22*dAdF13221 + F31*F33*chi22*dAdF31221 + F31*F33*chi23*dAdF13321 + F31*F33*chi23*dAdF31321 + F32*F32*chi21*dAdF22121 + F32*F32*chi22*dAdF22221 + F32*F32*chi23*dAdF22321 + F32*F33*chi21*dAdF23121 + F32*F33*chi21*dAdF32121 + F32*F33*chi22*dAdF23221 + F32*F33*chi22*dAdF32221 + F32*F33*chi23*dAdF23321 + F32*F33*chi23*dAdF32321 + F33*F33*chi21*dAdF33121 + F33*F33*chi22*dAdF33221 + F33*F33*chi23*dAdF33321 - J*a332*dJdF21;
        dadF(25,0) = F31*F31*chi11*dAdF11111 + F31*F31*chi12*dAdF11211 + F31*F31*chi13*dAdF11311 + F31*F32*chi11*dAdF12111 + F31*F32*chi11*dAdF21111 + F31*F32*chi12*dAdF12211 + F31*F32*chi12*dAdF21211 + F31*F32*chi13*dAdF12311 + F31*F32*chi13*dAdF21311 + F31*F33*chi11*dAdF13111 + F31*F33*chi11*dAdF31111 + F31*F33*chi12*dAdF13211 + F31*F33*chi12*dAdF31211 + F31*F33*chi13*dAdF13311 + F31*F33*chi13*dAdF31311 + F32*F32*chi11*dAdF22111 + F32*F32*chi12*dAdF22211 + F32*F32*chi13*dAdF22311 + F32*F33*chi11*dAdF23111 + F32*F33*chi11*dAdF32111 + F32*F33*chi12*dAdF23211 + F32*F33*chi12*dAdF32211 + F32*F33*chi13*dAdF23311 + F32*F33*chi13*dAdF32311 + F33*F33*chi11*dAdF33111 + F33*F33*chi12*dAdF33211 + F33*F33*chi13*dAdF33311 - J*a331*dJdF11;
        dadF(25,1) = F31*F31*chi11*dAdF11122 + F31*F31*chi12*dAdF11222 + F31*F31*chi13*dAdF11322 + F31*F32*chi11*dAdF12122 + F31*F32*chi11*dAdF21122 + F31*F32*chi12*dAdF12222 + F31*F32*chi12*dAdF21222 + F31*F32*chi13*dAdF12322 + F31*F32*chi13*dAdF21322 + F31*F33*chi11*dAdF13122 + F31*F33*chi11*dAdF31122 + F31*F33*chi12*dAdF13222 + F31*F33*chi12*dAdF31222 + F31*F33*chi13*dAdF13322 + F31*F33*chi13*dAdF31322 + F32*F32*chi11*dAdF22122 + F32*F32*chi12*dAdF22222 + F32*F32*chi13*dAdF22322 + F32*F33*chi11*dAdF23122 + F32*F33*chi11*dAdF32122 + F32*F33*chi12*dAdF23222 + F32*F33*chi12*dAdF32222 + F32*F33*chi13*dAdF23322 + F32*F33*chi13*dAdF32322 + F33*F33*chi11*dAdF33122 + F33*F33*chi12*dAdF33222 + F33*F33*chi13*dAdF33322 - J*a331*dJdF22;
        dadF(25,2) = A131*F31*chi11 + A132*F31*chi12 + A133*F31*chi13 + A231*F32*chi11 + A232*F32*chi12 + A233*F32*chi13 + A311*F31*chi11 + A312*F31*chi12 + A313*F31*chi13 + A321*F32*chi11 + A322*F32*chi12 + A323*F32*chi13 + 2*A331*F33*chi11 + 2*A332*F33*chi12 + 2*A333*F33*chi13 + F31*F31*chi11*dAdF11133 + F31*F31*chi12*dAdF11233 + F31*F31*chi13*dAdF11333 + F31*F32*chi11*dAdF12133 + F31*F32*chi11*dAdF21133 + F31*F32*chi12*dAdF12233 + F31*F32*chi12*dAdF21233 + F31*F32*chi13*dAdF12333 + F31*F32*chi13*dAdF21333 + F31*F33*chi11*dAdF13133 + F31*F33*chi11*dAdF31133 + F31*F33*chi12*dAdF13233 + F31*F33*chi12*dAdF31233 + F31*F33*chi13*dAdF13333 + F31*F33*chi13*dAdF31333 + F32*F32*chi11*dAdF22133 + F32*F32*chi12*dAdF22233 + F32*F32*chi13*dAdF22333 + F32*F33*chi11*dAdF23133 + F32*F33*chi11*dAdF32133 + F32*F33*chi12*dAdF23233 + F32*F33*chi12*dAdF32233 + F32*F33*chi13*dAdF23333 + F32*F33*chi13*dAdF32333 + F33*F33*chi11*dAdF33133 + F33*F33*chi12*dAdF33233 + F33*F33*chi13*dAdF33333 - J*a331*dJdF33;
        dadF(25,3) = F31*F31*chi11*dAdF11123 + F31*F31*chi12*dAdF11223 + F31*F31*chi13*dAdF11323 + F31*F32*chi11*dAdF12123 + F31*F32*chi11*dAdF21123 + F31*F32*chi12*dAdF12223 + F31*F32*chi12*dAdF21223 + F31*F32*chi13*dAdF12323 + F31*F32*chi13*dAdF21323 + F31*F33*chi11*dAdF13123 + F31*F33*chi11*dAdF31123 + F31*F33*chi12*dAdF13223 + F31*F33*chi12*dAdF31223 + F31*F33*chi13*dAdF13323 + F31*F33*chi13*dAdF31323 + F32*F32*chi11*dAdF22123 + F32*F32*chi12*dAdF22223 + F32*F32*chi13*dAdF22323 + F32*F33*chi11*dAdF23123 + F32*F33*chi11*dAdF32123 + F32*F33*chi12*dAdF23223 + F32*F33*chi12*dAdF32223 + F32*F33*chi13*dAdF23323 + F32*F33*chi13*dAdF32323 + F33*F33*chi11*dAdF33123 + F33*F33*chi12*dAdF33223 + F33*F33*chi13*dAdF33323 - J*a331*dJdF23;
        dadF(25,4) = F31*F31*chi11*dAdF11113 + F31*F31*chi12*dAdF11213 + F31*F31*chi13*dAdF11313 + F31*F32*chi11*dAdF12113 + F31*F32*chi11*dAdF21113 + F31*F32*chi12*dAdF12213 + F31*F32*chi12*dAdF21213 + F31*F32*chi13*dAdF12313 + F31*F32*chi13*dAdF21313 + F31*F33*chi11*dAdF13113 + F31*F33*chi11*dAdF31113 + F31*F33*chi12*dAdF13213 + F31*F33*chi12*dAdF31213 + F31*F33*chi13*dAdF13313 + F31*F33*chi13*dAdF31313 + F32*F32*chi11*dAdF22113 + F32*F32*chi12*dAdF22213 + F32*F32*chi13*dAdF22313 + F32*F33*chi11*dAdF23113 + F32*F33*chi11*dAdF32113 + F32*F33*chi12*dAdF23213 + F32*F33*chi12*dAdF32213 + F32*F33*chi13*dAdF23313 + F32*F33*chi13*dAdF32313 + F33*F33*chi11*dAdF33113 + F33*F33*chi12*dAdF33213 + F33*F33*chi13*dAdF33313 - J*a331*dJdF13;
        dadF(25,5) = F31*F31*chi11*dAdF11112 + F31*F31*chi12*dAdF11212 + F31*F31*chi13*dAdF11312 + F31*F32*chi11*dAdF12112 + F31*F32*chi11*dAdF21112 + F31*F32*chi12*dAdF12212 + F31*F32*chi12*dAdF21212 + F31*F32*chi13*dAdF12312 + F31*F32*chi13*dAdF21312 + F31*F33*chi11*dAdF13112 + F31*F33*chi11*dAdF31112 + F31*F33*chi12*dAdF13212 + F31*F33*chi12*dAdF31212 + F31*F33*chi13*dAdF13312 + F31*F33*chi13*dAdF31312 + F32*F32*chi11*dAdF22112 + F32*F32*chi12*dAdF22212 + F32*F32*chi13*dAdF22312 + F32*F33*chi11*dAdF23112 + F32*F33*chi11*dAdF32112 + F32*F33*chi12*dAdF23212 + F32*F33*chi12*dAdF32212 + F32*F33*chi13*dAdF23312 + F32*F33*chi13*dAdF32312 + F33*F33*chi11*dAdF33112 + F33*F33*chi12*dAdF33212 + F33*F33*chi13*dAdF33312 - J*a331*dJdF12;
        dadF(25,6) = A121*F31*chi11 + A122*F31*chi12 + A123*F31*chi13 + A211*F31*chi11 + A212*F31*chi12 + A213*F31*chi13 + 2*A221*F32*chi11 + 2*A222*F32*chi12 + 2*A223*F32*chi13 + A231*F33*chi11 + A232*F33*chi12 + A233*F33*chi13 + A321*F33*chi11 + A322*F33*chi12 + A323*F33*chi13 + F31*F31*chi11*dAdF11132 + F31*F31*chi12*dAdF11232 + F31*F31*chi13*dAdF11332 + F31*F32*chi11*dAdF12132 + F31*F32*chi11*dAdF21132 + F31*F32*chi12*dAdF12232 + F31*F32*chi12*dAdF21232 + F31*F32*chi13*dAdF12332 + F31*F32*chi13*dAdF21332 + F31*F33*chi11*dAdF13132 + F31*F33*chi11*dAdF31132 + F31*F33*chi12*dAdF13232 + F31*F33*chi12*dAdF31232 + F31*F33*chi13*dAdF13332 + F31*F33*chi13*dAdF31332 + F32*F32*chi11*dAdF22132 + F32*F32*chi12*dAdF22232 + F32*F32*chi13*dAdF22332 + F32*F33*chi11*dAdF23132 + F32*F33*chi11*dAdF32132 + F32*F33*chi12*dAdF23232 + F32*F33*chi12*dAdF32232 + F32*F33*chi13*dAdF23332 + F32*F33*chi13*dAdF32332 + F33*F33*chi11*dAdF33132 + F33*F33*chi12*dAdF33232 + F33*F33*chi13*dAdF33332 - J*a331*dJdF32;
        dadF(25,7) = 2*A111*F31*chi11 + 2*A112*F31*chi12 + 2*A113*F31*chi13 + A121*F32*chi11 + A122*F32*chi12 + A123*F32*chi13 + A131*F33*chi11 + A132*F33*chi12 + A133*F33*chi13 + A211*F32*chi11 + A212*F32*chi12 + A213*F32*chi13 + A311*F33*chi11 + A312*F33*chi12 + A313*F33*chi13 + F31*F31*chi11*dAdF11131 + F31*F31*chi12*dAdF11231 + F31*F31*chi13*dAdF11331 + F31*F32*chi11*dAdF12131 + F31*F32*chi11*dAdF21131 + F31*F32*chi12*dAdF12231 + F31*F32*chi12*dAdF21231 + F31*F32*chi13*dAdF12331 + F31*F32*chi13*dAdF21331 + F31*F33*chi11*dAdF13131 + F31*F33*chi11*dAdF31131 + F31*F33*chi12*dAdF13231 + F31*F33*chi12*dAdF31231 + F31*F33*chi13*dAdF13331 + F31*F33*chi13*dAdF31331 + F32*F32*chi11*dAdF22131 + F32*F32*chi12*dAdF22231 + F32*F32*chi13*dAdF22331 + F32*F33*chi11*dAdF23131 + F32*F33*chi11*dAdF32131 + F32*F33*chi12*dAdF23231 + F32*F33*chi12*dAdF32231 + F32*F33*chi13*dAdF23331 + F32*F33*chi13*dAdF32331 + F33*F33*chi11*dAdF33131 + F33*F33*chi12*dAdF33231 + F33*F33*chi13*dAdF33331 - J*a331*dJdF31;
        dadF(25,8) = F31*F31*chi11*dAdF11121 + F31*F31*chi12*dAdF11221 + F31*F31*chi13*dAdF11321 + F31*F32*chi11*dAdF12121 + F31*F32*chi11*dAdF21121 + F31*F32*chi12*dAdF12221 + F31*F32*chi12*dAdF21221 + F31*F32*chi13*dAdF12321 + F31*F32*chi13*dAdF21321 + F31*F33*chi11*dAdF13121 + F31*F33*chi11*dAdF31121 + F31*F33*chi12*dAdF13221 + F31*F33*chi12*dAdF31221 + F31*F33*chi13*dAdF13321 + F31*F33*chi13*dAdF31321 + F32*F32*chi11*dAdF22121 + F32*F32*chi12*dAdF22221 + F32*F32*chi13*dAdF22321 + F32*F33*chi11*dAdF23121 + F32*F33*chi11*dAdF32121 + F32*F33*chi12*dAdF23221 + F32*F33*chi12*dAdF32221 + F32*F33*chi13*dAdF23321 + F32*F33*chi13*dAdF32321 + F33*F33*chi11*dAdF33121 + F33*F33*chi12*dAdF33221 + F33*F33*chi13*dAdF33321 - J*a331*dJdF21;
        dadF(26,0) = F21*F31*chi11*dAdF11111 + F21*F31*chi12*dAdF11211 + F21*F31*chi13*dAdF11311 + F21*F32*chi11*dAdF21111 + F21*F32*chi12*dAdF21211 + F21*F32*chi13*dAdF21311 + F21*F33*chi11*dAdF31111 + F21*F33*chi12*dAdF31211 + F21*F33*chi13*dAdF31311 + F22*F31*chi11*dAdF12111 + F22*F31*chi12*dAdF12211 + F22*F31*chi13*dAdF12311 + F22*F32*chi11*dAdF22111 + F22*F32*chi12*dAdF22211 + F22*F32*chi13*dAdF22311 + F22*F33*chi11*dAdF32111 + F22*F33*chi12*dAdF32211 + F22*F33*chi13*dAdF32311 + F23*F31*chi11*dAdF13111 + F23*F31*chi12*dAdF13211 + F23*F31*chi13*dAdF13311 + F23*F32*chi11*dAdF23111 + F23*F32*chi12*dAdF23211 + F23*F32*chi13*dAdF23311 + F23*F33*chi11*dAdF33111 + F23*F33*chi12*dAdF33211 + F23*F33*chi13*dAdF33311 - J*a321*dJdF11;
        dadF(26,1) = A121*F31*chi11 + A122*F31*chi12 + A123*F31*chi13 + A221*F32*chi11 + A222*F32*chi12 + A223*F32*chi13 + A321*F33*chi11 + A322*F33*chi12 + A323*F33*chi13 + F21*F31*chi11*dAdF11122 + F21*F31*chi12*dAdF11222 + F21*F31*chi13*dAdF11322 + F21*F32*chi11*dAdF21122 + F21*F32*chi12*dAdF21222 + F21*F32*chi13*dAdF21322 + F21*F33*chi11*dAdF31122 + F21*F33*chi12*dAdF31222 + F21*F33*chi13*dAdF31322 + F22*F31*chi11*dAdF12122 + F22*F31*chi12*dAdF12222 + F22*F31*chi13*dAdF12322 + F22*F32*chi11*dAdF22122 + F22*F32*chi12*dAdF22222 + F22*F32*chi13*dAdF22322 + F22*F33*chi11*dAdF32122 + F22*F33*chi12*dAdF32222 + F22*F33*chi13*dAdF32322 + F23*F31*chi11*dAdF13122 + F23*F31*chi12*dAdF13222 + F23*F31*chi13*dAdF13322 + F23*F32*chi11*dAdF23122 + F23*F32*chi12*dAdF23222 + F23*F32*chi13*dAdF23322 + F23*F33*chi11*dAdF33122 + F23*F33*chi12*dAdF33222 + F23*F33*chi13*dAdF33322 - J*a321*dJdF22;
        dadF(26,2) = A311*F21*chi11 + A312*F21*chi12 + A313*F21*chi13 + A321*F22*chi11 + A322*F22*chi12 + A323*F22*chi13 + A331*F23*chi11 + A332*F23*chi12 + A333*F23*chi13 + F21*F31*chi11*dAdF11133 + F21*F31*chi12*dAdF11233 + F21*F31*chi13*dAdF11333 + F21*F32*chi11*dAdF21133 + F21*F32*chi12*dAdF21233 + F21*F32*chi13*dAdF21333 + F21*F33*chi11*dAdF31133 + F21*F33*chi12*dAdF31233 + F21*F33*chi13*dAdF31333 + F22*F31*chi11*dAdF12133 + F22*F31*chi12*dAdF12233 + F22*F31*chi13*dAdF12333 + F22*F32*chi11*dAdF22133 + F22*F32*chi12*dAdF22233 + F22*F32*chi13*dAdF22333 + F22*F33*chi11*dAdF32133 + F22*F33*chi12*dAdF32233 + F22*F33*chi13*dAdF32333 + F23*F31*chi11*dAdF13133 + F23*F31*chi12*dAdF13233 + F23*F31*chi13*dAdF13333 + F23*F32*chi11*dAdF23133 + F23*F32*chi12*dAdF23233 + F23*F32*chi13*dAdF23333 + F23*F33*chi11*dAdF33133 + F23*F33*chi12*dAdF33233 + F23*F33*chi13*dAdF33333 - J*a321*dJdF33;
        dadF(26,3) = A131*F31*chi11 + A132*F31*chi12 + A133*F31*chi13 + A231*F32*chi11 + A232*F32*chi12 + A233*F32*chi13 + A331*F33*chi11 + A332*F33*chi12 + A333*F33*chi13 + F21*F31*chi11*dAdF11123 + F21*F31*chi12*dAdF11223 + F21*F31*chi13*dAdF11323 + F21*F32*chi11*dAdF21123 + F21*F32*chi12*dAdF21223 + F21*F32*chi13*dAdF21323 + F21*F33*chi11*dAdF31123 + F21*F33*chi12*dAdF31223 + F21*F33*chi13*dAdF31323 + F22*F31*chi11*dAdF12123 + F22*F31*chi12*dAdF12223 + F22*F31*chi13*dAdF12323 + F22*F32*chi11*dAdF22123 + F22*F32*chi12*dAdF22223 + F22*F32*chi13*dAdF22323 + F22*F33*chi11*dAdF32123 + F22*F33*chi12*dAdF32223 + F22*F33*chi13*dAdF32323 + F23*F31*chi11*dAdF13123 + F23*F31*chi12*dAdF13223 + F23*F31*chi13*dAdF13323 + F23*F32*chi11*dAdF23123 + F23*F32*chi12*dAdF23223 + F23*F32*chi13*dAdF23323 + F23*F33*chi11*dAdF33123 + F23*F33*chi12*dAdF33223 + F23*F33*chi13*dAdF33323 - J*a321*dJdF23;
        dadF(26,4) = F21*F31*chi11*dAdF11113 + F21*F31*chi12*dAdF11213 + F21*F31*chi13*dAdF11313 + F21*F32*chi11*dAdF21113 + F21*F32*chi12*dAdF21213 + F21*F32*chi13*dAdF21313 + F21*F33*chi11*dAdF31113 + F21*F33*chi12*dAdF31213 + F21*F33*chi13*dAdF31313 + F22*F31*chi11*dAdF12113 + F22*F31*chi12*dAdF12213 + F22*F31*chi13*dAdF12313 + F22*F32*chi11*dAdF22113 + F22*F32*chi12*dAdF22213 + F22*F32*chi13*dAdF22313 + F22*F33*chi11*dAdF32113 + F22*F33*chi12*dAdF32213 + F22*F33*chi13*dAdF32313 + F23*F31*chi11*dAdF13113 + F23*F31*chi12*dAdF13213 + F23*F31*chi13*dAdF13313 + F23*F32*chi11*dAdF23113 + F23*F32*chi12*dAdF23213 + F23*F32*chi13*dAdF23313 + F23*F33*chi11*dAdF33113 + F23*F33*chi12*dAdF33213 + F23*F33*chi13*dAdF33313 - J*a321*dJdF13;
        dadF(26,5) = F21*F31*chi11*dAdF11112 + F21*F31*chi12*dAdF11212 + F21*F31*chi13*dAdF11312 + F21*F32*chi11*dAdF21112 + F21*F32*chi12*dAdF21212 + F21*F32*chi13*dAdF21312 + F21*F33*chi11*dAdF31112 + F21*F33*chi12*dAdF31212 + F21*F33*chi13*dAdF31312 + F22*F31*chi11*dAdF12112 + F22*F31*chi12*dAdF12212 + F22*F31*chi13*dAdF12312 + F22*F32*chi11*dAdF22112 + F22*F32*chi12*dAdF22212 + F22*F32*chi13*dAdF22312 + F22*F33*chi11*dAdF32112 + F22*F33*chi12*dAdF32212 + F22*F33*chi13*dAdF32312 + F23*F31*chi11*dAdF13112 + F23*F31*chi12*dAdF13212 + F23*F31*chi13*dAdF13312 + F23*F32*chi11*dAdF23112 + F23*F32*chi12*dAdF23212 + F23*F32*chi13*dAdF23312 + F23*F33*chi11*dAdF33112 + F23*F33*chi12*dAdF33212 + F23*F33*chi13*dAdF33312 - J*a321*dJdF12;
        dadF(26,6) = A211*F21*chi11 + A212*F21*chi12 + A213*F21*chi13 + A221*F22*chi11 + A222*F22*chi12 + A223*F22*chi13 + A231*F23*chi11 + A232*F23*chi12 + A233*F23*chi13 + F21*F31*chi11*dAdF11132 + F21*F31*chi12*dAdF11232 + F21*F31*chi13*dAdF11332 + F21*F32*chi11*dAdF21132 + F21*F32*chi12*dAdF21232 + F21*F32*chi13*dAdF21332 + F21*F33*chi11*dAdF31132 + F21*F33*chi12*dAdF31232 + F21*F33*chi13*dAdF31332 + F22*F31*chi11*dAdF12132 + F22*F31*chi12*dAdF12232 + F22*F31*chi13*dAdF12332 + F22*F32*chi11*dAdF22132 + F22*F32*chi12*dAdF22232 + F22*F32*chi13*dAdF22332 + F22*F33*chi11*dAdF32132 + F22*F33*chi12*dAdF32232 + F22*F33*chi13*dAdF32332 + F23*F31*chi11*dAdF13132 + F23*F31*chi12*dAdF13232 + F23*F31*chi13*dAdF13332 + F23*F32*chi11*dAdF23132 + F23*F32*chi12*dAdF23232 + F23*F32*chi13*dAdF23332 + F23*F33*chi11*dAdF33132 + F23*F33*chi12*dAdF33232 + F23*F33*chi13*dAdF33332 - J*a321*dJdF32;
        dadF(26,7) = A111*F21*chi11 + A112*F21*chi12 + A113*F21*chi13 + A121*F22*chi11 + A122*F22*chi12 + A123*F22*chi13 + A131*F23*chi11 + A132*F23*chi12 + A133*F23*chi13 + F21*F31*chi11*dAdF11131 + F21*F31*chi12*dAdF11231 + F21*F31*chi13*dAdF11331 + F21*F32*chi11*dAdF21131 + F21*F32*chi12*dAdF21231 + F21*F32*chi13*dAdF21331 + F21*F33*chi11*dAdF31131 + F21*F33*chi12*dAdF31231 + F21*F33*chi13*dAdF31331 + F22*F31*chi11*dAdF12131 + F22*F31*chi12*dAdF12231 + F22*F31*chi13*dAdF12331 + F22*F32*chi11*dAdF22131 + F22*F32*chi12*dAdF22231 + F22*F32*chi13*dAdF22331 + F22*F33*chi11*dAdF32131 + F22*F33*chi12*dAdF32231 + F22*F33*chi13*dAdF32331 + F23*F31*chi11*dAdF13131 + F23*F31*chi12*dAdF13231 + F23*F31*chi13*dAdF13331 + F23*F32*chi11*dAdF23131 + F23*F32*chi12*dAdF23231 + F23*F32*chi13*dAdF23331 + F23*F33*chi11*dAdF33131 + F23*F33*chi12*dAdF33231 + F23*F33*chi13*dAdF33331 - J*a321*dJdF31;
        dadF(26,8) = A111*F31*chi11 + A112*F31*chi12 + A113*F31*chi13 + A211*F32*chi11 + A212*F32*chi12 + A213*F32*chi13 + A311*F33*chi11 + A312*F33*chi12 + A313*F33*chi13 + F21*F31*chi11*dAdF11121 + F21*F31*chi12*dAdF11221 + F21*F31*chi13*dAdF11321 + F21*F32*chi11*dAdF21121 + F21*F32*chi12*dAdF21221 + F21*F32*chi13*dAdF21321 + F21*F33*chi11*dAdF31121 + F21*F33*chi12*dAdF31221 + F21*F33*chi13*dAdF31321 + F22*F31*chi11*dAdF12121 + F22*F31*chi12*dAdF12221 + F22*F31*chi13*dAdF12321 + F22*F32*chi11*dAdF22121 + F22*F32*chi12*dAdF22221 + F22*F32*chi13*dAdF22321 + F22*F33*chi11*dAdF32121 + F22*F33*chi12*dAdF32221 + F22*F33*chi13*dAdF32321 + F23*F31*chi11*dAdF13121 + F23*F31*chi12*dAdF13221 + F23*F31*chi13*dAdF13321 + F23*F32*chi11*dAdF23121 + F23*F32*chi12*dAdF23221 + F23*F32*chi13*dAdF23321 + F23*F33*chi11*dAdF33121 + F23*F33*chi12*dAdF33221 + F23*F33*chi13*dAdF33321 - J*a321*dJdF21;


        dadF /= J;
        return;
    }

    void map_dAdchi_to_dadchi(const Vector_9 &A,  const Matrix_9x9 &dAdchi,  const double &J, const Matrix_3x3 &F, Matrix_9x9 dadchi){
        /*!==============================
        |    map_dAdchi_to_dadchi    |
        ==============================
        
        Map the jacobian of a stress measure w.r.t. chi in the reference configuration 
        to the current configuration.
        
        */
        
        dadchi = Matrix_9x9::Zero();
        
        //Extracting A
        double A11= A(0);
        double A22= A(1);
        double A33= A(2);
        double A23= A(3);
        double A13= A(4);
        double A12= A(5);
        double A32= A(6);
        double A31= A(7);
        double A21= A(8);

        //Extracting dAdchi
        double dAdchi1111= dAdchi(0,0);
        double dAdchi1122= dAdchi(0,1);
        double dAdchi1133= dAdchi(0,2);
        double dAdchi1123= dAdchi(0,3);
        double dAdchi1113= dAdchi(0,4);
        double dAdchi1112= dAdchi(0,5);
        double dAdchi1132= dAdchi(0,6);
        double dAdchi1131= dAdchi(0,7);
        double dAdchi1121= dAdchi(0,8);
        double dAdchi2211= dAdchi(1,0);
        double dAdchi2222= dAdchi(1,1);
        double dAdchi2233= dAdchi(1,2);
        double dAdchi2223= dAdchi(1,3);
        double dAdchi2213= dAdchi(1,4);
        double dAdchi2212= dAdchi(1,5);
        double dAdchi2232= dAdchi(1,6);
        double dAdchi2231= dAdchi(1,7);
        double dAdchi2221= dAdchi(1,8);
        double dAdchi3311= dAdchi(2,0);
        double dAdchi3322= dAdchi(2,1);
        double dAdchi3333= dAdchi(2,2);
        double dAdchi3323= dAdchi(2,3);
        double dAdchi3313= dAdchi(2,4);
        double dAdchi3312= dAdchi(2,5);
        double dAdchi3332= dAdchi(2,6);
        double dAdchi3331= dAdchi(2,7);
        double dAdchi3321= dAdchi(2,8);
        double dAdchi2311= dAdchi(3,0);
        double dAdchi2322= dAdchi(3,1);
        double dAdchi2333= dAdchi(3,2);
        double dAdchi2323= dAdchi(3,3);
        double dAdchi2313= dAdchi(3,4);
        double dAdchi2312= dAdchi(3,5);
        double dAdchi2332= dAdchi(3,6);
        double dAdchi2331= dAdchi(3,7);
        double dAdchi2321= dAdchi(3,8);
        double dAdchi1311= dAdchi(4,0);
        double dAdchi1322= dAdchi(4,1);
        double dAdchi1333= dAdchi(4,2);
        double dAdchi1323= dAdchi(4,3);
        double dAdchi1313= dAdchi(4,4);
        double dAdchi1312= dAdchi(4,5);
        double dAdchi1332= dAdchi(4,6);
        double dAdchi1331= dAdchi(4,7);
        double dAdchi1321= dAdchi(4,8);
        double dAdchi1211= dAdchi(5,0);
        double dAdchi1222= dAdchi(5,1);
        double dAdchi1233= dAdchi(5,2);
        double dAdchi1223= dAdchi(5,3);
        double dAdchi1213= dAdchi(5,4);
        double dAdchi1212= dAdchi(5,5);
        double dAdchi1232= dAdchi(5,6);
        double dAdchi1231= dAdchi(5,7);
        double dAdchi1221= dAdchi(5,8);
        double dAdchi3211= dAdchi(6,0);
        double dAdchi3222= dAdchi(6,1);
        double dAdchi3233= dAdchi(6,2);
        double dAdchi3223= dAdchi(6,3);
        double dAdchi3213= dAdchi(6,4);
        double dAdchi3212= dAdchi(6,5);
        double dAdchi3232= dAdchi(6,6);
        double dAdchi3231= dAdchi(6,7);
        double dAdchi3221= dAdchi(6,8);
        double dAdchi3111= dAdchi(7,0);
        double dAdchi3122= dAdchi(7,1);
        double dAdchi3133= dAdchi(7,2);
        double dAdchi3123= dAdchi(7,3);
        double dAdchi3113= dAdchi(7,4);
        double dAdchi3112= dAdchi(7,5);
        double dAdchi3132= dAdchi(7,6);
        double dAdchi3131= dAdchi(7,7);
        double dAdchi3121= dAdchi(7,8);
        double dAdchi2111= dAdchi(8,0);
        double dAdchi2122= dAdchi(8,1);
        double dAdchi2133= dAdchi(8,2);
        double dAdchi2123= dAdchi(8,3);
        double dAdchi2113= dAdchi(8,4);
        double dAdchi2112= dAdchi(8,5);
        double dAdchi2132= dAdchi(8,6);
        double dAdchi2131= dAdchi(8,7);
        double dAdchi2121= dAdchi(8,8);

        //Extracting F
        double F11= F(0,0);
        double F12= F(0,1);
        double F13= F(0,2);
        double F21= F(1,0);
        double F22= F(1,1);
        double F23= F(1,2);
        double F31= F(2,0);
        double F32= F(2,1);
        double F33= F(2,2);

        dadchi(0,0) = F11*F11*dAdchi1111 + F11*F12*dAdchi1211 + F11*F12*dAdchi2111 + F11*F13*dAdchi1311 + F11*F13*dAdchi3111 + F12*F12*dAdchi2211 + F12*F13*dAdchi2311 + F12*F13*dAdchi3211 + F13*F13*dAdchi3311;
        dadchi(0,1) = F11*F11*dAdchi1122 + F11*F12*dAdchi1222 + F11*F12*dAdchi2122 + F11*F13*dAdchi1322 + F11*F13*dAdchi3122 + F12*F12*dAdchi2222 + F12*F13*dAdchi2322 + F12*F13*dAdchi3222 + F13*F13*dAdchi3322;
        dadchi(0,2) = F11*F11*dAdchi1133 + F11*F12*dAdchi1233 + F11*F12*dAdchi2133 + F11*F13*dAdchi1333 + F11*F13*dAdchi3133 + F12*F12*dAdchi2233 + F12*F13*dAdchi2333 + F12*F13*dAdchi3233 + F13*F13*dAdchi3333;
        dadchi(0,3) = F11*F11*dAdchi1123 + F11*F12*dAdchi1223 + F11*F12*dAdchi2123 + F11*F13*dAdchi1323 + F11*F13*dAdchi3123 + F12*F12*dAdchi2223 + F12*F13*dAdchi2323 + F12*F13*dAdchi3223 + F13*F13*dAdchi3323;
        dadchi(0,4) = F11*F11*dAdchi1113 + F11*F12*dAdchi1213 + F11*F12*dAdchi2113 + F11*F13*dAdchi1313 + F11*F13*dAdchi3113 + F12*F12*dAdchi2213 + F12*F13*dAdchi2313 + F12*F13*dAdchi3213 + F13*F13*dAdchi3313;
        dadchi(0,5) = F11*F11*dAdchi1112 + F11*F12*dAdchi1212 + F11*F12*dAdchi2112 + F11*F13*dAdchi1312 + F11*F13*dAdchi3112 + F12*F12*dAdchi2212 + F12*F13*dAdchi2312 + F12*F13*dAdchi3212 + F13*F13*dAdchi3312;
        dadchi(0,6) = F11*F11*dAdchi1132 + F11*F12*dAdchi1232 + F11*F12*dAdchi2132 + F11*F13*dAdchi1332 + F11*F13*dAdchi3132 + F12*F12*dAdchi2232 + F12*F13*dAdchi2332 + F12*F13*dAdchi3232 + F13*F13*dAdchi3332;
        dadchi(0,7) = F11*F11*dAdchi1131 + F11*F12*dAdchi1231 + F11*F12*dAdchi2131 + F11*F13*dAdchi1331 + F11*F13*dAdchi3131 + F12*F12*dAdchi2231 + F12*F13*dAdchi2331 + F12*F13*dAdchi3231 + F13*F13*dAdchi3331;
        dadchi(0,8) = F11*F11*dAdchi1121 + F11*F12*dAdchi1221 + F11*F12*dAdchi2121 + F11*F13*dAdchi1321 + F11*F13*dAdchi3121 + F12*F12*dAdchi2221 + F12*F13*dAdchi2321 + F12*F13*dAdchi3221 + F13*F13*dAdchi3321;
        dadchi(1,0) = F21*F21*dAdchi1111 + F21*F22*dAdchi1211 + F21*F22*dAdchi2111 + F21*F23*dAdchi1311 + F21*F23*dAdchi3111 + F22*F22*dAdchi2211 + F22*F23*dAdchi2311 + F22*F23*dAdchi3211 + F23*F23*dAdchi3311;
        dadchi(1,1) = F21*F21*dAdchi1122 + F21*F22*dAdchi1222 + F21*F22*dAdchi2122 + F21*F23*dAdchi1322 + F21*F23*dAdchi3122 + F22*F22*dAdchi2222 + F22*F23*dAdchi2322 + F22*F23*dAdchi3222 + F23*F23*dAdchi3322;
        dadchi(1,2) = F21*F21*dAdchi1133 + F21*F22*dAdchi1233 + F21*F22*dAdchi2133 + F21*F23*dAdchi1333 + F21*F23*dAdchi3133 + F22*F22*dAdchi2233 + F22*F23*dAdchi2333 + F22*F23*dAdchi3233 + F23*F23*dAdchi3333;
        dadchi(1,3) = F21*F21*dAdchi1123 + F21*F22*dAdchi1223 + F21*F22*dAdchi2123 + F21*F23*dAdchi1323 + F21*F23*dAdchi3123 + F22*F22*dAdchi2223 + F22*F23*dAdchi2323 + F22*F23*dAdchi3223 + F23*F23*dAdchi3323;
        dadchi(1,4) = F21*F21*dAdchi1113 + F21*F22*dAdchi1213 + F21*F22*dAdchi2113 + F21*F23*dAdchi1313 + F21*F23*dAdchi3113 + F22*F22*dAdchi2213 + F22*F23*dAdchi2313 + F22*F23*dAdchi3213 + F23*F23*dAdchi3313;
        dadchi(1,5) = F21*F21*dAdchi1112 + F21*F22*dAdchi1212 + F21*F22*dAdchi2112 + F21*F23*dAdchi1312 + F21*F23*dAdchi3112 + F22*F22*dAdchi2212 + F22*F23*dAdchi2312 + F22*F23*dAdchi3212 + F23*F23*dAdchi3312;
        dadchi(1,6) = F21*F21*dAdchi1132 + F21*F22*dAdchi1232 + F21*F22*dAdchi2132 + F21*F23*dAdchi1332 + F21*F23*dAdchi3132 + F22*F22*dAdchi2232 + F22*F23*dAdchi2332 + F22*F23*dAdchi3232 + F23*F23*dAdchi3332;
        dadchi(1,7) = F21*F21*dAdchi1131 + F21*F22*dAdchi1231 + F21*F22*dAdchi2131 + F21*F23*dAdchi1331 + F21*F23*dAdchi3131 + F22*F22*dAdchi2231 + F22*F23*dAdchi2331 + F22*F23*dAdchi3231 + F23*F23*dAdchi3331;
        dadchi(1,8) = F21*F21*dAdchi1121 + F21*F22*dAdchi1221 + F21*F22*dAdchi2121 + F21*F23*dAdchi1321 + F21*F23*dAdchi3121 + F22*F22*dAdchi2221 + F22*F23*dAdchi2321 + F22*F23*dAdchi3221 + F23*F23*dAdchi3321;
        dadchi(2,0) = F31*F31*dAdchi1111 + F31*F32*dAdchi1211 + F31*F32*dAdchi2111 + F31*F33*dAdchi1311 + F31*F33*dAdchi3111 + F32*F32*dAdchi2211 + F32*F33*dAdchi2311 + F32*F33*dAdchi3211 + F33*F33*dAdchi3311;
        dadchi(2,1) = F31*F31*dAdchi1122 + F31*F32*dAdchi1222 + F31*F32*dAdchi2122 + F31*F33*dAdchi1322 + F31*F33*dAdchi3122 + F32*F32*dAdchi2222 + F32*F33*dAdchi2322 + F32*F33*dAdchi3222 + F33*F33*dAdchi3322;
        dadchi(2,2) = F31*F31*dAdchi1133 + F31*F32*dAdchi1233 + F31*F32*dAdchi2133 + F31*F33*dAdchi1333 + F31*F33*dAdchi3133 + F32*F32*dAdchi2233 + F32*F33*dAdchi2333 + F32*F33*dAdchi3233 + F33*F33*dAdchi3333;
        dadchi(2,3) = F31*F31*dAdchi1123 + F31*F32*dAdchi1223 + F31*F32*dAdchi2123 + F31*F33*dAdchi1323 + F31*F33*dAdchi3123 + F32*F32*dAdchi2223 + F32*F33*dAdchi2323 + F32*F33*dAdchi3223 + F33*F33*dAdchi3323;
        dadchi(2,4) = F31*F31*dAdchi1113 + F31*F32*dAdchi1213 + F31*F32*dAdchi2113 + F31*F33*dAdchi1313 + F31*F33*dAdchi3113 + F32*F32*dAdchi2213 + F32*F33*dAdchi2313 + F32*F33*dAdchi3213 + F33*F33*dAdchi3313;
        dadchi(2,5) = F31*F31*dAdchi1112 + F31*F32*dAdchi1212 + F31*F32*dAdchi2112 + F31*F33*dAdchi1312 + F31*F33*dAdchi3112 + F32*F32*dAdchi2212 + F32*F33*dAdchi2312 + F32*F33*dAdchi3212 + F33*F33*dAdchi3312;
        dadchi(2,6) = F31*F31*dAdchi1132 + F31*F32*dAdchi1232 + F31*F32*dAdchi2132 + F31*F33*dAdchi1332 + F31*F33*dAdchi3132 + F32*F32*dAdchi2232 + F32*F33*dAdchi2332 + F32*F33*dAdchi3232 + F33*F33*dAdchi3332;
        dadchi(2,7) = F31*F31*dAdchi1131 + F31*F32*dAdchi1231 + F31*F32*dAdchi2131 + F31*F33*dAdchi1331 + F31*F33*dAdchi3131 + F32*F32*dAdchi2231 + F32*F33*dAdchi2331 + F32*F33*dAdchi3231 + F33*F33*dAdchi3331;
        dadchi(2,8) = F31*F31*dAdchi1121 + F31*F32*dAdchi1221 + F31*F32*dAdchi2121 + F31*F33*dAdchi1321 + F31*F33*dAdchi3121 + F32*F32*dAdchi2221 + F32*F33*dAdchi2321 + F32*F33*dAdchi3221 + F33*F33*dAdchi3321;
        dadchi(3,0) = F21*F31*dAdchi1111 + F21*F32*dAdchi1211 + F21*F33*dAdchi1311 + F22*F31*dAdchi2111 + F22*F32*dAdchi2211 + F22*F33*dAdchi2311 + F23*F31*dAdchi3111 + F23*F32*dAdchi3211 + F23*F33*dAdchi3311;
        dadchi(3,1) = F21*F31*dAdchi1122 + F21*F32*dAdchi1222 + F21*F33*dAdchi1322 + F22*F31*dAdchi2122 + F22*F32*dAdchi2222 + F22*F33*dAdchi2322 + F23*F31*dAdchi3122 + F23*F32*dAdchi3222 + F23*F33*dAdchi3322;
        dadchi(3,2) = F21*F31*dAdchi1133 + F21*F32*dAdchi1233 + F21*F33*dAdchi1333 + F22*F31*dAdchi2133 + F22*F32*dAdchi2233 + F22*F33*dAdchi2333 + F23*F31*dAdchi3133 + F23*F32*dAdchi3233 + F23*F33*dAdchi3333;
        dadchi(3,3) = F21*F31*dAdchi1123 + F21*F32*dAdchi1223 + F21*F33*dAdchi1323 + F22*F31*dAdchi2123 + F22*F32*dAdchi2223 + F22*F33*dAdchi2323 + F23*F31*dAdchi3123 + F23*F32*dAdchi3223 + F23*F33*dAdchi3323;
        dadchi(3,4) = F21*F31*dAdchi1113 + F21*F32*dAdchi1213 + F21*F33*dAdchi1313 + F22*F31*dAdchi2113 + F22*F32*dAdchi2213 + F22*F33*dAdchi2313 + F23*F31*dAdchi3113 + F23*F32*dAdchi3213 + F23*F33*dAdchi3313;
        dadchi(3,5) = F21*F31*dAdchi1112 + F21*F32*dAdchi1212 + F21*F33*dAdchi1312 + F22*F31*dAdchi2112 + F22*F32*dAdchi2212 + F22*F33*dAdchi2312 + F23*F31*dAdchi3112 + F23*F32*dAdchi3212 + F23*F33*dAdchi3312;
        dadchi(3,6) = F21*F31*dAdchi1132 + F21*F32*dAdchi1232 + F21*F33*dAdchi1332 + F22*F31*dAdchi2132 + F22*F32*dAdchi2232 + F22*F33*dAdchi2332 + F23*F31*dAdchi3132 + F23*F32*dAdchi3232 + F23*F33*dAdchi3332;
        dadchi(3,7) = F21*F31*dAdchi1131 + F21*F32*dAdchi1231 + F21*F33*dAdchi1331 + F22*F31*dAdchi2131 + F22*F32*dAdchi2231 + F22*F33*dAdchi2331 + F23*F31*dAdchi3131 + F23*F32*dAdchi3231 + F23*F33*dAdchi3331;
        dadchi(3,8) = F21*F31*dAdchi1121 + F21*F32*dAdchi1221 + F21*F33*dAdchi1321 + F22*F31*dAdchi2121 + F22*F32*dAdchi2221 + F22*F33*dAdchi2321 + F23*F31*dAdchi3121 + F23*F32*dAdchi3221 + F23*F33*dAdchi3321;
        dadchi(4,0) = F11*F31*dAdchi1111 + F11*F32*dAdchi1211 + F11*F33*dAdchi1311 + F12*F31*dAdchi2111 + F12*F32*dAdchi2211 + F12*F33*dAdchi2311 + F13*F31*dAdchi3111 + F13*F32*dAdchi3211 + F13*F33*dAdchi3311;
        dadchi(4,1) = F11*F31*dAdchi1122 + F11*F32*dAdchi1222 + F11*F33*dAdchi1322 + F12*F31*dAdchi2122 + F12*F32*dAdchi2222 + F12*F33*dAdchi2322 + F13*F31*dAdchi3122 + F13*F32*dAdchi3222 + F13*F33*dAdchi3322;
        dadchi(4,2) = F11*F31*dAdchi1133 + F11*F32*dAdchi1233 + F11*F33*dAdchi1333 + F12*F31*dAdchi2133 + F12*F32*dAdchi2233 + F12*F33*dAdchi2333 + F13*F31*dAdchi3133 + F13*F32*dAdchi3233 + F13*F33*dAdchi3333;
        dadchi(4,3) = F11*F31*dAdchi1123 + F11*F32*dAdchi1223 + F11*F33*dAdchi1323 + F12*F31*dAdchi2123 + F12*F32*dAdchi2223 + F12*F33*dAdchi2323 + F13*F31*dAdchi3123 + F13*F32*dAdchi3223 + F13*F33*dAdchi3323;
        dadchi(4,4) = F11*F31*dAdchi1113 + F11*F32*dAdchi1213 + F11*F33*dAdchi1313 + F12*F31*dAdchi2113 + F12*F32*dAdchi2213 + F12*F33*dAdchi2313 + F13*F31*dAdchi3113 + F13*F32*dAdchi3213 + F13*F33*dAdchi3313;
        dadchi(4,5) = F11*F31*dAdchi1112 + F11*F32*dAdchi1212 + F11*F33*dAdchi1312 + F12*F31*dAdchi2112 + F12*F32*dAdchi2212 + F12*F33*dAdchi2312 + F13*F31*dAdchi3112 + F13*F32*dAdchi3212 + F13*F33*dAdchi3312;
        dadchi(4,6) = F11*F31*dAdchi1132 + F11*F32*dAdchi1232 + F11*F33*dAdchi1332 + F12*F31*dAdchi2132 + F12*F32*dAdchi2232 + F12*F33*dAdchi2332 + F13*F31*dAdchi3132 + F13*F32*dAdchi3232 + F13*F33*dAdchi3332;
        dadchi(4,7) = F11*F31*dAdchi1131 + F11*F32*dAdchi1231 + F11*F33*dAdchi1331 + F12*F31*dAdchi2131 + F12*F32*dAdchi2231 + F12*F33*dAdchi2331 + F13*F31*dAdchi3131 + F13*F32*dAdchi3231 + F13*F33*dAdchi3331;
        dadchi(4,8) = F11*F31*dAdchi1121 + F11*F32*dAdchi1221 + F11*F33*dAdchi1321 + F12*F31*dAdchi2121 + F12*F32*dAdchi2221 + F12*F33*dAdchi2321 + F13*F31*dAdchi3121 + F13*F32*dAdchi3221 + F13*F33*dAdchi3321;
        dadchi(5,0) = F11*F21*dAdchi1111 + F11*F22*dAdchi1211 + F11*F23*dAdchi1311 + F12*F21*dAdchi2111 + F12*F22*dAdchi2211 + F12*F23*dAdchi2311 + F13*F21*dAdchi3111 + F13*F22*dAdchi3211 + F13*F23*dAdchi3311;
        dadchi(5,1) = F11*F21*dAdchi1122 + F11*F22*dAdchi1222 + F11*F23*dAdchi1322 + F12*F21*dAdchi2122 + F12*F22*dAdchi2222 + F12*F23*dAdchi2322 + F13*F21*dAdchi3122 + F13*F22*dAdchi3222 + F13*F23*dAdchi3322;
        dadchi(5,2) = F11*F21*dAdchi1133 + F11*F22*dAdchi1233 + F11*F23*dAdchi1333 + F12*F21*dAdchi2133 + F12*F22*dAdchi2233 + F12*F23*dAdchi2333 + F13*F21*dAdchi3133 + F13*F22*dAdchi3233 + F13*F23*dAdchi3333;
        dadchi(5,3) = F11*F21*dAdchi1123 + F11*F22*dAdchi1223 + F11*F23*dAdchi1323 + F12*F21*dAdchi2123 + F12*F22*dAdchi2223 + F12*F23*dAdchi2323 + F13*F21*dAdchi3123 + F13*F22*dAdchi3223 + F13*F23*dAdchi3323;
        dadchi(5,4) = F11*F21*dAdchi1113 + F11*F22*dAdchi1213 + F11*F23*dAdchi1313 + F12*F21*dAdchi2113 + F12*F22*dAdchi2213 + F12*F23*dAdchi2313 + F13*F21*dAdchi3113 + F13*F22*dAdchi3213 + F13*F23*dAdchi3313;
        dadchi(5,5) = F11*F21*dAdchi1112 + F11*F22*dAdchi1212 + F11*F23*dAdchi1312 + F12*F21*dAdchi2112 + F12*F22*dAdchi2212 + F12*F23*dAdchi2312 + F13*F21*dAdchi3112 + F13*F22*dAdchi3212 + F13*F23*dAdchi3312;
        dadchi(5,6) = F11*F21*dAdchi1132 + F11*F22*dAdchi1232 + F11*F23*dAdchi1332 + F12*F21*dAdchi2132 + F12*F22*dAdchi2232 + F12*F23*dAdchi2332 + F13*F21*dAdchi3132 + F13*F22*dAdchi3232 + F13*F23*dAdchi3332;
        dadchi(5,7) = F11*F21*dAdchi1131 + F11*F22*dAdchi1231 + F11*F23*dAdchi1331 + F12*F21*dAdchi2131 + F12*F22*dAdchi2231 + F12*F23*dAdchi2331 + F13*F21*dAdchi3131 + F13*F22*dAdchi3231 + F13*F23*dAdchi3331;
        dadchi(5,8) = F11*F21*dAdchi1121 + F11*F22*dAdchi1221 + F11*F23*dAdchi1321 + F12*F21*dAdchi2121 + F12*F22*dAdchi2221 + F12*F23*dAdchi2321 + F13*F21*dAdchi3121 + F13*F22*dAdchi3221 + F13*F23*dAdchi3321;
        dadchi(6,0) = F21*F31*dAdchi1111 + F21*F32*dAdchi2111 + F21*F33*dAdchi3111 + F22*F31*dAdchi1211 + F22*F32*dAdchi2211 + F22*F33*dAdchi3211 + F23*F31*dAdchi1311 + F23*F32*dAdchi2311 + F23*F33*dAdchi3311;
        dadchi(6,1) = F21*F31*dAdchi1122 + F21*F32*dAdchi2122 + F21*F33*dAdchi3122 + F22*F31*dAdchi1222 + F22*F32*dAdchi2222 + F22*F33*dAdchi3222 + F23*F31*dAdchi1322 + F23*F32*dAdchi2322 + F23*F33*dAdchi3322;
        dadchi(6,2) = F21*F31*dAdchi1133 + F21*F32*dAdchi2133 + F21*F33*dAdchi3133 + F22*F31*dAdchi1233 + F22*F32*dAdchi2233 + F22*F33*dAdchi3233 + F23*F31*dAdchi1333 + F23*F32*dAdchi2333 + F23*F33*dAdchi3333;
        dadchi(6,3) = F21*F31*dAdchi1123 + F21*F32*dAdchi2123 + F21*F33*dAdchi3123 + F22*F31*dAdchi1223 + F22*F32*dAdchi2223 + F22*F33*dAdchi3223 + F23*F31*dAdchi1323 + F23*F32*dAdchi2323 + F23*F33*dAdchi3323;
        dadchi(6,4) = F21*F31*dAdchi1113 + F21*F32*dAdchi2113 + F21*F33*dAdchi3113 + F22*F31*dAdchi1213 + F22*F32*dAdchi2213 + F22*F33*dAdchi3213 + F23*F31*dAdchi1313 + F23*F32*dAdchi2313 + F23*F33*dAdchi3313;
        dadchi(6,5) = F21*F31*dAdchi1112 + F21*F32*dAdchi2112 + F21*F33*dAdchi3112 + F22*F31*dAdchi1212 + F22*F32*dAdchi2212 + F22*F33*dAdchi3212 + F23*F31*dAdchi1312 + F23*F32*dAdchi2312 + F23*F33*dAdchi3312;
        dadchi(6,6) = F21*F31*dAdchi1132 + F21*F32*dAdchi2132 + F21*F33*dAdchi3132 + F22*F31*dAdchi1232 + F22*F32*dAdchi2232 + F22*F33*dAdchi3232 + F23*F31*dAdchi1332 + F23*F32*dAdchi2332 + F23*F33*dAdchi3332;
        dadchi(6,7) = F21*F31*dAdchi1131 + F21*F32*dAdchi2131 + F21*F33*dAdchi3131 + F22*F31*dAdchi1231 + F22*F32*dAdchi2231 + F22*F33*dAdchi3231 + F23*F31*dAdchi1331 + F23*F32*dAdchi2331 + F23*F33*dAdchi3331;
        dadchi(6,8) = F21*F31*dAdchi1121 + F21*F32*dAdchi2121 + F21*F33*dAdchi3121 + F22*F31*dAdchi1221 + F22*F32*dAdchi2221 + F22*F33*dAdchi3221 + F23*F31*dAdchi1321 + F23*F32*dAdchi2321 + F23*F33*dAdchi3321;
        dadchi(7,0) = F11*F31*dAdchi1111 + F11*F32*dAdchi2111 + F11*F33*dAdchi3111 + F12*F31*dAdchi1211 + F12*F32*dAdchi2211 + F12*F33*dAdchi3211 + F13*F31*dAdchi1311 + F13*F32*dAdchi2311 + F13*F33*dAdchi3311;
        dadchi(7,1) = F11*F31*dAdchi1122 + F11*F32*dAdchi2122 + F11*F33*dAdchi3122 + F12*F31*dAdchi1222 + F12*F32*dAdchi2222 + F12*F33*dAdchi3222 + F13*F31*dAdchi1322 + F13*F32*dAdchi2322 + F13*F33*dAdchi3322;
        dadchi(7,2) = F11*F31*dAdchi1133 + F11*F32*dAdchi2133 + F11*F33*dAdchi3133 + F12*F31*dAdchi1233 + F12*F32*dAdchi2233 + F12*F33*dAdchi3233 + F13*F31*dAdchi1333 + F13*F32*dAdchi2333 + F13*F33*dAdchi3333;
        dadchi(7,3) = F11*F31*dAdchi1123 + F11*F32*dAdchi2123 + F11*F33*dAdchi3123 + F12*F31*dAdchi1223 + F12*F32*dAdchi2223 + F12*F33*dAdchi3223 + F13*F31*dAdchi1323 + F13*F32*dAdchi2323 + F13*F33*dAdchi3323;
        dadchi(7,4) = F11*F31*dAdchi1113 + F11*F32*dAdchi2113 + F11*F33*dAdchi3113 + F12*F31*dAdchi1213 + F12*F32*dAdchi2213 + F12*F33*dAdchi3213 + F13*F31*dAdchi1313 + F13*F32*dAdchi2313 + F13*F33*dAdchi3313;
        dadchi(7,5) = F11*F31*dAdchi1112 + F11*F32*dAdchi2112 + F11*F33*dAdchi3112 + F12*F31*dAdchi1212 + F12*F32*dAdchi2212 + F12*F33*dAdchi3212 + F13*F31*dAdchi1312 + F13*F32*dAdchi2312 + F13*F33*dAdchi3312;
        dadchi(7,6) = F11*F31*dAdchi1132 + F11*F32*dAdchi2132 + F11*F33*dAdchi3132 + F12*F31*dAdchi1232 + F12*F32*dAdchi2232 + F12*F33*dAdchi3232 + F13*F31*dAdchi1332 + F13*F32*dAdchi2332 + F13*F33*dAdchi3332;
        dadchi(7,7) = F11*F31*dAdchi1131 + F11*F32*dAdchi2131 + F11*F33*dAdchi3131 + F12*F31*dAdchi1231 + F12*F32*dAdchi2231 + F12*F33*dAdchi3231 + F13*F31*dAdchi1331 + F13*F32*dAdchi2331 + F13*F33*dAdchi3331;
        dadchi(7,8) = F11*F31*dAdchi1121 + F11*F32*dAdchi2121 + F11*F33*dAdchi3121 + F12*F31*dAdchi1221 + F12*F32*dAdchi2221 + F12*F33*dAdchi3221 + F13*F31*dAdchi1321 + F13*F32*dAdchi2321 + F13*F33*dAdchi3321;
        dadchi(8,0) = F11*F21*dAdchi1111 + F11*F22*dAdchi2111 + F11*F23*dAdchi3111 + F12*F21*dAdchi1211 + F12*F22*dAdchi2211 + F12*F23*dAdchi3211 + F13*F21*dAdchi1311 + F13*F22*dAdchi2311 + F13*F23*dAdchi3311;
        dadchi(8,1) = F11*F21*dAdchi1122 + F11*F22*dAdchi2122 + F11*F23*dAdchi3122 + F12*F21*dAdchi1222 + F12*F22*dAdchi2222 + F12*F23*dAdchi3222 + F13*F21*dAdchi1322 + F13*F22*dAdchi2322 + F13*F23*dAdchi3322;
        dadchi(8,2) = F11*F21*dAdchi1133 + F11*F22*dAdchi2133 + F11*F23*dAdchi3133 + F12*F21*dAdchi1233 + F12*F22*dAdchi2233 + F12*F23*dAdchi3233 + F13*F21*dAdchi1333 + F13*F22*dAdchi2333 + F13*F23*dAdchi3333;
        dadchi(8,3) = F11*F21*dAdchi1123 + F11*F22*dAdchi2123 + F11*F23*dAdchi3123 + F12*F21*dAdchi1223 + F12*F22*dAdchi2223 + F12*F23*dAdchi3223 + F13*F21*dAdchi1323 + F13*F22*dAdchi2323 + F13*F23*dAdchi3323;
        dadchi(8,4) = F11*F21*dAdchi1113 + F11*F22*dAdchi2113 + F11*F23*dAdchi3113 + F12*F21*dAdchi1213 + F12*F22*dAdchi2213 + F12*F23*dAdchi3213 + F13*F21*dAdchi1313 + F13*F22*dAdchi2313 + F13*F23*dAdchi3313;
        dadchi(8,5) = F11*F21*dAdchi1112 + F11*F22*dAdchi2112 + F11*F23*dAdchi3112 + F12*F21*dAdchi1212 + F12*F22*dAdchi2212 + F12*F23*dAdchi3212 + F13*F21*dAdchi1312 + F13*F22*dAdchi2312 + F13*F23*dAdchi3312;
        dadchi(8,6) = F11*F21*dAdchi1132 + F11*F22*dAdchi2132 + F11*F23*dAdchi3132 + F12*F21*dAdchi1232 + F12*F22*dAdchi2232 + F12*F23*dAdchi3232 + F13*F21*dAdchi1332 + F13*F22*dAdchi2332 + F13*F23*dAdchi3332;
        dadchi(8,7) = F11*F21*dAdchi1131 + F11*F22*dAdchi2131 + F11*F23*dAdchi3131 + F12*F21*dAdchi1231 + F12*F22*dAdchi2231 + F12*F23*dAdchi3231 + F13*F21*dAdchi1331 + F13*F22*dAdchi2331 + F13*F23*dAdchi3331;
        dadchi(8,8) = F11*F21*dAdchi1121 + F11*F22*dAdchi2121 + F11*F23*dAdchi3121 + F12*F21*dAdchi1221 + F12*F22*dAdchi2221 + F12*F23*dAdchi3221 + F13*F21*dAdchi1321 + F13*F22*dAdchi2321 + F13*F23*dAdchi3321;

        dadchi /= J;
        
        return;
    }
    
    void map_dAdchi_to_dadchi(const Vector_27 &A, const Matrix_27x9 &dAdchi, const double &J, const Matrix_3x3 &F, const Matrix_3x3 &chi, Matrix_27x9 dadchi){
        /*!==============================
        |    map_dAdchi_to_dadchi    |
        ==============================
        
        Map the jacobian of a stress measure w.r.t. chi in the reference configuration 
        to the current configuration.
        
        For the higher-order stress
        
        */
        
        dadchi = Matrix_27x9::Zero();
        
        //Compute the jacobian of deformation
        double J = F.determinant();
        
        //Extracting A
        double A111= A(0);
        double A122= A(1);
        double A133= A(2);
        double A123= A(3);
        double A113= A(4);
        double A112= A(5);
        double A132= A(6);
        double A131= A(7);
        double A121= A(8);
        double A211= A(9);
        double A222= A(10);
        double A233= A(11);
        double A223= A(12);
        double A213= A(13);
        double A212= A(14);
        double A232= A(15);
        double A231= A(16);
        double A221= A(17);
        double A311= A(18);
        double A322= A(19);
        double A333= A(20);
        double A323= A(21);
        double A313= A(22);
        double A312= A(23);
        double A332= A(24);
        double A331= A(25);
        double A321= A(26);
        
        //Extracting chi
        double chi11= chi(0,0);
        double chi12= chi(0,1);
        double chi13= chi(0,2);
        double chi21= chi(1,0);
        double chi22= chi(1,1);
        double chi23= chi(1,2);
        double chi31= chi(2,0);
        double chi32= chi(2,1);
        double chi33= chi(2,2);

        //Extracting dAdchi
        double dAdchi11111= dAdchi(0,0);
        double dAdchi11122= dAdchi(0,1);
        double dAdchi11133= dAdchi(0,2);
        double dAdchi11123= dAdchi(0,3);
        double dAdchi11113= dAdchi(0,4);
        double dAdchi11112= dAdchi(0,5);
        double dAdchi11132= dAdchi(0,6);
        double dAdchi11131= dAdchi(0,7);
        double dAdchi11121= dAdchi(0,8);
        double dAdchi12211= dAdchi(1,0);
        double dAdchi12222= dAdchi(1,1);
        double dAdchi12233= dAdchi(1,2);
        double dAdchi12223= dAdchi(1,3);
        double dAdchi12213= dAdchi(1,4);
        double dAdchi12212= dAdchi(1,5);
        double dAdchi12232= dAdchi(1,6);
        double dAdchi12231= dAdchi(1,7);
        double dAdchi12221= dAdchi(1,8);
        double dAdchi13311= dAdchi(2,0);
        double dAdchi13322= dAdchi(2,1);
        double dAdchi13333= dAdchi(2,2);
        double dAdchi13323= dAdchi(2,3);
        double dAdchi13313= dAdchi(2,4);
        double dAdchi13312= dAdchi(2,5);
        double dAdchi13332= dAdchi(2,6);
        double dAdchi13331= dAdchi(2,7);
        double dAdchi13321= dAdchi(2,8);
        double dAdchi12311= dAdchi(3,0);
        double dAdchi12322= dAdchi(3,1);
        double dAdchi12333= dAdchi(3,2);
        double dAdchi12323= dAdchi(3,3);
        double dAdchi12313= dAdchi(3,4);
        double dAdchi12312= dAdchi(3,5);
        double dAdchi12332= dAdchi(3,6);
        double dAdchi12331= dAdchi(3,7);
        double dAdchi12321= dAdchi(3,8);
        double dAdchi11311= dAdchi(4,0);
        double dAdchi11322= dAdchi(4,1);
        double dAdchi11333= dAdchi(4,2);
        double dAdchi11323= dAdchi(4,3);
        double dAdchi11313= dAdchi(4,4);
        double dAdchi11312= dAdchi(4,5);
        double dAdchi11332= dAdchi(4,6);
        double dAdchi11331= dAdchi(4,7);
        double dAdchi11321= dAdchi(4,8);
        double dAdchi11211= dAdchi(5,0);
        double dAdchi11222= dAdchi(5,1);
        double dAdchi11233= dAdchi(5,2);
        double dAdchi11223= dAdchi(5,3);
        double dAdchi11213= dAdchi(5,4);
        double dAdchi11212= dAdchi(5,5);
        double dAdchi11232= dAdchi(5,6);
        double dAdchi11231= dAdchi(5,7);
        double dAdchi11221= dAdchi(5,8);
        double dAdchi13211= dAdchi(6,0);
        double dAdchi13222= dAdchi(6,1);
        double dAdchi13233= dAdchi(6,2);
        double dAdchi13223= dAdchi(6,3);
        double dAdchi13213= dAdchi(6,4);
        double dAdchi13212= dAdchi(6,5);
        double dAdchi13232= dAdchi(6,6);
        double dAdchi13231= dAdchi(6,7);
        double dAdchi13221= dAdchi(6,8);
        double dAdchi13111= dAdchi(7,0);
        double dAdchi13122= dAdchi(7,1);
        double dAdchi13133= dAdchi(7,2);
        double dAdchi13123= dAdchi(7,3);
        double dAdchi13113= dAdchi(7,4);
        double dAdchi13112= dAdchi(7,5);
        double dAdchi13132= dAdchi(7,6);
        double dAdchi13131= dAdchi(7,7);
        double dAdchi13121= dAdchi(7,8);
        double dAdchi12111= dAdchi(8,0);
        double dAdchi12122= dAdchi(8,1);
        double dAdchi12133= dAdchi(8,2);
        double dAdchi12123= dAdchi(8,3);
        double dAdchi12113= dAdchi(8,4);
        double dAdchi12112= dAdchi(8,5);
        double dAdchi12132= dAdchi(8,6);
        double dAdchi12131= dAdchi(8,7);
        double dAdchi12121= dAdchi(8,8);
        double dAdchi21111= dAdchi(9,0);
        double dAdchi21122= dAdchi(9,1);
        double dAdchi21133= dAdchi(9,2);
        double dAdchi21123= dAdchi(9,3);
        double dAdchi21113= dAdchi(9,4);
        double dAdchi21112= dAdchi(9,5);
        double dAdchi21132= dAdchi(9,6);
        double dAdchi21131= dAdchi(9,7);
        double dAdchi21121= dAdchi(9,8);
        double dAdchi22211= dAdchi(10,0);
        double dAdchi22222= dAdchi(10,1);
        double dAdchi22233= dAdchi(10,2);
        double dAdchi22223= dAdchi(10,3);
        double dAdchi22213= dAdchi(10,4);
        double dAdchi22212= dAdchi(10,5);
        double dAdchi22232= dAdchi(10,6);
        double dAdchi22231= dAdchi(10,7);
        double dAdchi22221= dAdchi(10,8);
        double dAdchi23311= dAdchi(11,0);
        double dAdchi23322= dAdchi(11,1);
        double dAdchi23333= dAdchi(11,2);
        double dAdchi23323= dAdchi(11,3);
        double dAdchi23313= dAdchi(11,4);
        double dAdchi23312= dAdchi(11,5);
        double dAdchi23332= dAdchi(11,6);
        double dAdchi23331= dAdchi(11,7);
        double dAdchi23321= dAdchi(11,8);
        double dAdchi22311= dAdchi(12,0);
        double dAdchi22322= dAdchi(12,1);
        double dAdchi22333= dAdchi(12,2);
        double dAdchi22323= dAdchi(12,3);
        double dAdchi22313= dAdchi(12,4);
        double dAdchi22312= dAdchi(12,5);
        double dAdchi22332= dAdchi(12,6);
        double dAdchi22331= dAdchi(12,7);
        double dAdchi22321= dAdchi(12,8);
        double dAdchi21311= dAdchi(13,0);
        double dAdchi21322= dAdchi(13,1);
        double dAdchi21333= dAdchi(13,2);
        double dAdchi21323= dAdchi(13,3);
        double dAdchi21313= dAdchi(13,4);
        double dAdchi21312= dAdchi(13,5);
        double dAdchi21332= dAdchi(13,6);
        double dAdchi21331= dAdchi(13,7);
        double dAdchi21321= dAdchi(13,8);
        double dAdchi21211= dAdchi(14,0);
        double dAdchi21222= dAdchi(14,1);
        double dAdchi21233= dAdchi(14,2);
        double dAdchi21223= dAdchi(14,3);
        double dAdchi21213= dAdchi(14,4);
        double dAdchi21212= dAdchi(14,5);
        double dAdchi21232= dAdchi(14,6);
        double dAdchi21231= dAdchi(14,7);
        double dAdchi21221= dAdchi(14,8);
        double dAdchi23211= dAdchi(15,0);
        double dAdchi23222= dAdchi(15,1);
        double dAdchi23233= dAdchi(15,2);
        double dAdchi23223= dAdchi(15,3);
        double dAdchi23213= dAdchi(15,4);
        double dAdchi23212= dAdchi(15,5);
        double dAdchi23232= dAdchi(15,6);
        double dAdchi23231= dAdchi(15,7);
        double dAdchi23221= dAdchi(15,8);
        double dAdchi23111= dAdchi(16,0);
        double dAdchi23122= dAdchi(16,1);
        double dAdchi23133= dAdchi(16,2);
        double dAdchi23123= dAdchi(16,3);
        double dAdchi23113= dAdchi(16,4);
        double dAdchi23112= dAdchi(16,5);
        double dAdchi23132= dAdchi(16,6);
        double dAdchi23131= dAdchi(16,7);
        double dAdchi23121= dAdchi(16,8);
        double dAdchi22111= dAdchi(17,0);
        double dAdchi22122= dAdchi(17,1);
        double dAdchi22133= dAdchi(17,2);
        double dAdchi22123= dAdchi(17,3);
        double dAdchi22113= dAdchi(17,4);
        double dAdchi22112= dAdchi(17,5);
        double dAdchi22132= dAdchi(17,6);
        double dAdchi22131= dAdchi(17,7);
        double dAdchi22121= dAdchi(17,8);
        double dAdchi31111= dAdchi(18,0);
        double dAdchi31122= dAdchi(18,1);
        double dAdchi31133= dAdchi(18,2);
        double dAdchi31123= dAdchi(18,3);
        double dAdchi31113= dAdchi(18,4);
        double dAdchi31112= dAdchi(18,5);
        double dAdchi31132= dAdchi(18,6);
        double dAdchi31131= dAdchi(18,7);
        double dAdchi31121= dAdchi(18,8);
        double dAdchi32211= dAdchi(19,0);
        double dAdchi32222= dAdchi(19,1);
        double dAdchi32233= dAdchi(19,2);
        double dAdchi32223= dAdchi(19,3);
        double dAdchi32213= dAdchi(19,4);
        double dAdchi32212= dAdchi(19,5);
        double dAdchi32232= dAdchi(19,6);
        double dAdchi32231= dAdchi(19,7);
        double dAdchi32221= dAdchi(19,8);
        double dAdchi33311= dAdchi(20,0);
        double dAdchi33322= dAdchi(20,1);
        double dAdchi33333= dAdchi(20,2);
        double dAdchi33323= dAdchi(20,3);
        double dAdchi33313= dAdchi(20,4);
        double dAdchi33312= dAdchi(20,5);
        double dAdchi33332= dAdchi(20,6);
        double dAdchi33331= dAdchi(20,7);
        double dAdchi33321= dAdchi(20,8);
        double dAdchi32311= dAdchi(21,0);
        double dAdchi32322= dAdchi(21,1);
        double dAdchi32333= dAdchi(21,2);
        double dAdchi32323= dAdchi(21,3);
        double dAdchi32313= dAdchi(21,4);
        double dAdchi32312= dAdchi(21,5);
        double dAdchi32332= dAdchi(21,6);
        double dAdchi32331= dAdchi(21,7);
        double dAdchi32321= dAdchi(21,8);
        double dAdchi31311= dAdchi(22,0);
        double dAdchi31322= dAdchi(22,1);
        double dAdchi31333= dAdchi(22,2);
        double dAdchi31323= dAdchi(22,3);
        double dAdchi31313= dAdchi(22,4);
        double dAdchi31312= dAdchi(22,5);
        double dAdchi31332= dAdchi(22,6);
        double dAdchi31331= dAdchi(22,7);
        double dAdchi31321= dAdchi(22,8);
        double dAdchi31211= dAdchi(23,0);
        double dAdchi31222= dAdchi(23,1);
        double dAdchi31233= dAdchi(23,2);
        double dAdchi31223= dAdchi(23,3);
        double dAdchi31213= dAdchi(23,4);
        double dAdchi31212= dAdchi(23,5);
        double dAdchi31232= dAdchi(23,6);
        double dAdchi31231= dAdchi(23,7);
        double dAdchi31221= dAdchi(23,8);
        double dAdchi33211= dAdchi(24,0);
        double dAdchi33222= dAdchi(24,1);
        double dAdchi33233= dAdchi(24,2);
        double dAdchi33223= dAdchi(24,3);
        double dAdchi33213= dAdchi(24,4);
        double dAdchi33212= dAdchi(24,5);
        double dAdchi33232= dAdchi(24,6);
        double dAdchi33231= dAdchi(24,7);
        double dAdchi33221= dAdchi(24,8);
        double dAdchi33111= dAdchi(25,0);
        double dAdchi33122= dAdchi(25,1);
        double dAdchi33133= dAdchi(25,2);
        double dAdchi33123= dAdchi(25,3);
        double dAdchi33113= dAdchi(25,4);
        double dAdchi33112= dAdchi(25,5);
        double dAdchi33132= dAdchi(25,6);
        double dAdchi33131= dAdchi(25,7);
        double dAdchi33121= dAdchi(25,8);
        double dAdchi32111= dAdchi(26,0);
        double dAdchi32122= dAdchi(26,1);
        double dAdchi32133= dAdchi(26,2);
        double dAdchi32123= dAdchi(26,3);
        double dAdchi32113= dAdchi(26,4);
        double dAdchi32112= dAdchi(26,5);
        double dAdchi32132= dAdchi(26,6);
        double dAdchi32131= dAdchi(26,7);
        double dAdchi32121= dAdchi(26,8);

        //Extracting F
        double F11= F(0,0);
        double F12= F(0,1);
        double F13= F(0,2);
        double F21= F(1,0);
        double F22= F(1,1);
        double F23= F(1,2);
        double F31= F(2,0);
        double F32= F(2,1);
        double F33= F(2,2);

        dadchi(0,0) = A111*F11*F11 + A121*F11*F12 + A131*F11*F13 + A211*F11*F12 + A221*F12*F12 + A231*F12*F13 + A311*F11*F13 + A321*F12*F13 + A331*F13*F13 + F11*F11*chi11*dAdchi11111 + F11*F11*chi12*dAdchi11211 + F11*F11*chi13*dAdchi11311 + F11*F12*chi11*dAdchi12111 + F11*F12*chi11*dAdchi21111 + F11*F12*chi12*dAdchi12211 + F11*F12*chi12*dAdchi21211 + F11*F12*chi13*dAdchi12311 + F11*F12*chi13*dAdchi21311 + F11*F13*chi11*dAdchi13111 + F11*F13*chi11*dAdchi31111 + F11*F13*chi12*dAdchi13211 + F11*F13*chi12*dAdchi31211 + F11*F13*chi13*dAdchi13311 + F11*F13*chi13*dAdchi31311 + F12*F12*chi11*dAdchi22111 + F12*F12*chi12*dAdchi22211 + F12*F12*chi13*dAdchi22311 + F12*F13*chi11*dAdchi23111 + F12*F13*chi11*dAdchi32111 + F12*F13*chi12*dAdchi23211 + F12*F13*chi12*dAdchi32211 + F12*F13*chi13*dAdchi23311 + F12*F13*chi13*dAdchi32311 + F13*F13*chi11*dAdchi33111 + F13*F13*chi12*dAdchi33211 + F13*F13*chi13*dAdchi33311;
        dadchi(0,1) = F11*F11*chi11*dAdchi11122 + F11*F11*chi12*dAdchi11222 + F11*F11*chi13*dAdchi11322 + F11*F12*chi11*dAdchi12122 + F11*F12*chi11*dAdchi21122 + F11*F12*chi12*dAdchi12222 + F11*F12*chi12*dAdchi21222 + F11*F12*chi13*dAdchi12322 + F11*F12*chi13*dAdchi21322 + F11*F13*chi11*dAdchi13122 + F11*F13*chi11*dAdchi31122 + F11*F13*chi12*dAdchi13222 + F11*F13*chi12*dAdchi31222 + F11*F13*chi13*dAdchi13322 + F11*F13*chi13*dAdchi31322 + F12*F12*chi11*dAdchi22122 + F12*F12*chi12*dAdchi22222 + F12*F12*chi13*dAdchi22322 + F12*F13*chi11*dAdchi23122 + F12*F13*chi11*dAdchi32122 + F12*F13*chi12*dAdchi23222 + F12*F13*chi12*dAdchi32222 + F12*F13*chi13*dAdchi23322 + F12*F13*chi13*dAdchi32322 + F13*F13*chi11*dAdchi33122 + F13*F13*chi12*dAdchi33222 + F13*F13*chi13*dAdchi33322;
        dadchi(0,2) = F11*F11*chi11*dAdchi11133 + F11*F11*chi12*dAdchi11233 + F11*F11*chi13*dAdchi11333 + F11*F12*chi11*dAdchi12133 + F11*F12*chi11*dAdchi21133 + F11*F12*chi12*dAdchi12233 + F11*F12*chi12*dAdchi21233 + F11*F12*chi13*dAdchi12333 + F11*F12*chi13*dAdchi21333 + F11*F13*chi11*dAdchi13133 + F11*F13*chi11*dAdchi31133 + F11*F13*chi12*dAdchi13233 + F11*F13*chi12*dAdchi31233 + F11*F13*chi13*dAdchi13333 + F11*F13*chi13*dAdchi31333 + F12*F12*chi11*dAdchi22133 + F12*F12*chi12*dAdchi22233 + F12*F12*chi13*dAdchi22333 + F12*F13*chi11*dAdchi23133 + F12*F13*chi11*dAdchi32133 + F12*F13*chi12*dAdchi23233 + F12*F13*chi12*dAdchi32233 + F12*F13*chi13*dAdchi23333 + F12*F13*chi13*dAdchi32333 + F13*F13*chi11*dAdchi33133 + F13*F13*chi12*dAdchi33233 + F13*F13*chi13*dAdchi33333;
        dadchi(0,3) = F11*F11*chi11*dAdchi11123 + F11*F11*chi12*dAdchi11223 + F11*F11*chi13*dAdchi11323 + F11*F12*chi11*dAdchi12123 + F11*F12*chi11*dAdchi21123 + F11*F12*chi12*dAdchi12223 + F11*F12*chi12*dAdchi21223 + F11*F12*chi13*dAdchi12323 + F11*F12*chi13*dAdchi21323 + F11*F13*chi11*dAdchi13123 + F11*F13*chi11*dAdchi31123 + F11*F13*chi12*dAdchi13223 + F11*F13*chi12*dAdchi31223 + F11*F13*chi13*dAdchi13323 + F11*F13*chi13*dAdchi31323 + F12*F12*chi11*dAdchi22123 + F12*F12*chi12*dAdchi22223 + F12*F12*chi13*dAdchi22323 + F12*F13*chi11*dAdchi23123 + F12*F13*chi11*dAdchi32123 + F12*F13*chi12*dAdchi23223 + F12*F13*chi12*dAdchi32223 + F12*F13*chi13*dAdchi23323 + F12*F13*chi13*dAdchi32323 + F13*F13*chi11*dAdchi33123 + F13*F13*chi12*dAdchi33223 + F13*F13*chi13*dAdchi33323;
        dadchi(0,4) = A111*F11*F11 + A121*F11*F12 + A131*F11*F13 + A211*F11*F12 + A221*F12*F12 + A231*F12*F13 + A311*F11*F13 + A321*F12*F13 + A331*F13*F13 + F11*F11*chi11*dAdchi11113 + F11*F11*chi12*dAdchi11213 + F11*F11*chi13*dAdchi11313 + F11*F12*chi11*dAdchi12113 + F11*F12*chi11*dAdchi21113 + F11*F12*chi12*dAdchi12213 + F11*F12*chi12*dAdchi21213 + F11*F12*chi13*dAdchi12313 + F11*F12*chi13*dAdchi21313 + F11*F13*chi11*dAdchi13113 + F11*F13*chi11*dAdchi31113 + F11*F13*chi12*dAdchi13213 + F11*F13*chi12*dAdchi31213 + F11*F13*chi13*dAdchi13313 + F11*F13*chi13*dAdchi31313 + F12*F12*chi11*dAdchi22113 + F12*F12*chi12*dAdchi22213 + F12*F12*chi13*dAdchi22313 + F12*F13*chi11*dAdchi23113 + F12*F13*chi11*dAdchi32113 + F12*F13*chi12*dAdchi23213 + F12*F13*chi12*dAdchi32213 + F12*F13*chi13*dAdchi23313 + F12*F13*chi13*dAdchi32313 + F13*F13*chi11*dAdchi33113 + F13*F13*chi12*dAdchi33213 + F13*F13*chi13*dAdchi33313;
        dadchi(0,5) = A111*F11*F11 + A121*F11*F12 + A131*F11*F13 + A211*F11*F12 + A221*F12*F12 + A231*F12*F13 + A311*F11*F13 + A321*F12*F13 + A331*F13*F13 + F11*F11*chi11*dAdchi11112 + F11*F11*chi12*dAdchi11212 + F11*F11*chi13*dAdchi11312 + F11*F12*chi11*dAdchi12112 + F11*F12*chi11*dAdchi21112 + F11*F12*chi12*dAdchi12212 + F11*F12*chi12*dAdchi21212 + F11*F12*chi13*dAdchi12312 + F11*F12*chi13*dAdchi21312 + F11*F13*chi11*dAdchi13112 + F11*F13*chi11*dAdchi31112 + F11*F13*chi12*dAdchi13212 + F11*F13*chi12*dAdchi31212 + F11*F13*chi13*dAdchi13312 + F11*F13*chi13*dAdchi31312 + F12*F12*chi11*dAdchi22112 + F12*F12*chi12*dAdchi22212 + F12*F12*chi13*dAdchi22312 + F12*F13*chi11*dAdchi23112 + F12*F13*chi11*dAdchi32112 + F12*F13*chi12*dAdchi23212 + F12*F13*chi12*dAdchi32212 + F12*F13*chi13*dAdchi23312 + F12*F13*chi13*dAdchi32312 + F13*F13*chi11*dAdchi33112 + F13*F13*chi12*dAdchi33212 + F13*F13*chi13*dAdchi33312;
        dadchi(0,6) = F11*F11*chi11*dAdchi11132 + F11*F11*chi12*dAdchi11232 + F11*F11*chi13*dAdchi11332 + F11*F12*chi11*dAdchi12132 + F11*F12*chi11*dAdchi21132 + F11*F12*chi12*dAdchi12232 + F11*F12*chi12*dAdchi21232 + F11*F12*chi13*dAdchi12332 + F11*F12*chi13*dAdchi21332 + F11*F13*chi11*dAdchi13132 + F11*F13*chi11*dAdchi31132 + F11*F13*chi12*dAdchi13232 + F11*F13*chi12*dAdchi31232 + F11*F13*chi13*dAdchi13332 + F11*F13*chi13*dAdchi31332 + F12*F12*chi11*dAdchi22132 + F12*F12*chi12*dAdchi22232 + F12*F12*chi13*dAdchi22332 + F12*F13*chi11*dAdchi23132 + F12*F13*chi11*dAdchi32132 + F12*F13*chi12*dAdchi23232 + F12*F13*chi12*dAdchi32232 + F12*F13*chi13*dAdchi23332 + F12*F13*chi13*dAdchi32332 + F13*F13*chi11*dAdchi33132 + F13*F13*chi12*dAdchi33232 + F13*F13*chi13*dAdchi33332;
        dadchi(0,7) = F11*F11*chi11*dAdchi11131 + F11*F11*chi12*dAdchi11231 + F11*F11*chi13*dAdchi11331 + F11*F12*chi11*dAdchi12131 + F11*F12*chi11*dAdchi21131 + F11*F12*chi12*dAdchi12231 + F11*F12*chi12*dAdchi21231 + F11*F12*chi13*dAdchi12331 + F11*F12*chi13*dAdchi21331 + F11*F13*chi11*dAdchi13131 + F11*F13*chi11*dAdchi31131 + F11*F13*chi12*dAdchi13231 + F11*F13*chi12*dAdchi31231 + F11*F13*chi13*dAdchi13331 + F11*F13*chi13*dAdchi31331 + F12*F12*chi11*dAdchi22131 + F12*F12*chi12*dAdchi22231 + F12*F12*chi13*dAdchi22331 + F12*F13*chi11*dAdchi23131 + F12*F13*chi11*dAdchi32131 + F12*F13*chi12*dAdchi23231 + F12*F13*chi12*dAdchi32231 + F12*F13*chi13*dAdchi23331 + F12*F13*chi13*dAdchi32331 + F13*F13*chi11*dAdchi33131 + F13*F13*chi12*dAdchi33231 + F13*F13*chi13*dAdchi33331;
        dadchi(0,8) = F11*F11*chi11*dAdchi11121 + F11*F11*chi12*dAdchi11221 + F11*F11*chi13*dAdchi11321 + F11*F12*chi11*dAdchi12121 + F11*F12*chi11*dAdchi21121 + F11*F12*chi12*dAdchi12221 + F11*F12*chi12*dAdchi21221 + F11*F12*chi13*dAdchi12321 + F11*F12*chi13*dAdchi21321 + F11*F13*chi11*dAdchi13121 + F11*F13*chi11*dAdchi31121 + F11*F13*chi12*dAdchi13221 + F11*F13*chi12*dAdchi31221 + F11*F13*chi13*dAdchi13321 + F11*F13*chi13*dAdchi31321 + F12*F12*chi11*dAdchi22121 + F12*F12*chi12*dAdchi22221 + F12*F12*chi13*dAdchi22321 + F12*F13*chi11*dAdchi23121 + F12*F13*chi11*dAdchi32121 + F12*F13*chi12*dAdchi23221 + F12*F13*chi12*dAdchi32221 + F12*F13*chi13*dAdchi23321 + F12*F13*chi13*dAdchi32321 + F13*F13*chi11*dAdchi33121 + F13*F13*chi12*dAdchi33221 + F13*F13*chi13*dAdchi33321;
        dadchi(1,0) = F11*F21*chi21*dAdchi11111 + F11*F21*chi22*dAdchi11211 + F11*F21*chi23*dAdchi11311 + F11*F22*chi21*dAdchi12111 + F11*F22*chi22*dAdchi12211 + F11*F22*chi23*dAdchi12311 + F11*F23*chi21*dAdchi13111 + F11*F23*chi22*dAdchi13211 + F11*F23*chi23*dAdchi13311 + F12*F21*chi21*dAdchi21111 + F12*F21*chi22*dAdchi21211 + F12*F21*chi23*dAdchi21311 + F12*F22*chi21*dAdchi22111 + F12*F22*chi22*dAdchi22211 + F12*F22*chi23*dAdchi22311 + F12*F23*chi21*dAdchi23111 + F12*F23*chi22*dAdchi23211 + F12*F23*chi23*dAdchi23311 + F13*F21*chi21*dAdchi31111 + F13*F21*chi22*dAdchi31211 + F13*F21*chi23*dAdchi31311 + F13*F22*chi21*dAdchi32111 + F13*F22*chi22*dAdchi32211 + F13*F22*chi23*dAdchi32311 + F13*F23*chi21*dAdchi33111 + F13*F23*chi22*dAdchi33211 + F13*F23*chi23*dAdchi33311;
        dadchi(1,1) = A112*F11*F21 + A122*F11*F22 + A132*F11*F23 + A212*F12*F21 + A222*F12*F22 + A232*F12*F23 + A312*F13*F21 + A322*F13*F22 + A332*F13*F23 + F11*F21*chi21*dAdchi11122 + F11*F21*chi22*dAdchi11222 + F11*F21*chi23*dAdchi11322 + F11*F22*chi21*dAdchi12122 + F11*F22*chi22*dAdchi12222 + F11*F22*chi23*dAdchi12322 + F11*F23*chi21*dAdchi13122 + F11*F23*chi22*dAdchi13222 + F11*F23*chi23*dAdchi13322 + F12*F21*chi21*dAdchi21122 + F12*F21*chi22*dAdchi21222 + F12*F21*chi23*dAdchi21322 + F12*F22*chi21*dAdchi22122 + F12*F22*chi22*dAdchi22222 + F12*F22*chi23*dAdchi22322 + F12*F23*chi21*dAdchi23122 + F12*F23*chi22*dAdchi23222 + F12*F23*chi23*dAdchi23322 + F13*F21*chi21*dAdchi31122 + F13*F21*chi22*dAdchi31222 + F13*F21*chi23*dAdchi31322 + F13*F22*chi21*dAdchi32122 + F13*F22*chi22*dAdchi32222 + F13*F22*chi23*dAdchi32322 + F13*F23*chi21*dAdchi33122 + F13*F23*chi22*dAdchi33222 + F13*F23*chi23*dAdchi33322;
        dadchi(1,2) = F11*F21*chi21*dAdchi11133 + F11*F21*chi22*dAdchi11233 + F11*F21*chi23*dAdchi11333 + F11*F22*chi21*dAdchi12133 + F11*F22*chi22*dAdchi12233 + F11*F22*chi23*dAdchi12333 + F11*F23*chi21*dAdchi13133 + F11*F23*chi22*dAdchi13233 + F11*F23*chi23*dAdchi13333 + F12*F21*chi21*dAdchi21133 + F12*F21*chi22*dAdchi21233 + F12*F21*chi23*dAdchi21333 + F12*F22*chi21*dAdchi22133 + F12*F22*chi22*dAdchi22233 + F12*F22*chi23*dAdchi22333 + F12*F23*chi21*dAdchi23133 + F12*F23*chi22*dAdchi23233 + F12*F23*chi23*dAdchi23333 + F13*F21*chi21*dAdchi31133 + F13*F21*chi22*dAdchi31233 + F13*F21*chi23*dAdchi31333 + F13*F22*chi21*dAdchi32133 + F13*F22*chi22*dAdchi32233 + F13*F22*chi23*dAdchi32333 + F13*F23*chi21*dAdchi33133 + F13*F23*chi22*dAdchi33233 + F13*F23*chi23*dAdchi33333;
        dadchi(1,3) = A112*F11*F21 + A122*F11*F22 + A132*F11*F23 + A212*F12*F21 + A222*F12*F22 + A232*F12*F23 + A312*F13*F21 + A322*F13*F22 + A332*F13*F23 + F11*F21*chi21*dAdchi11123 + F11*F21*chi22*dAdchi11223 + F11*F21*chi23*dAdchi11323 + F11*F22*chi21*dAdchi12123 + F11*F22*chi22*dAdchi12223 + F11*F22*chi23*dAdchi12323 + F11*F23*chi21*dAdchi13123 + F11*F23*chi22*dAdchi13223 + F11*F23*chi23*dAdchi13323 + F12*F21*chi21*dAdchi21123 + F12*F21*chi22*dAdchi21223 + F12*F21*chi23*dAdchi21323 + F12*F22*chi21*dAdchi22123 + F12*F22*chi22*dAdchi22223 + F12*F22*chi23*dAdchi22323 + F12*F23*chi21*dAdchi23123 + F12*F23*chi22*dAdchi23223 + F12*F23*chi23*dAdchi23323 + F13*F21*chi21*dAdchi31123 + F13*F21*chi22*dAdchi31223 + F13*F21*chi23*dAdchi31323 + F13*F22*chi21*dAdchi32123 + F13*F22*chi22*dAdchi32223 + F13*F22*chi23*dAdchi32323 + F13*F23*chi21*dAdchi33123 + F13*F23*chi22*dAdchi33223 + F13*F23*chi23*dAdchi33323;
        dadchi(1,4) = F11*F21*chi21*dAdchi11113 + F11*F21*chi22*dAdchi11213 + F11*F21*chi23*dAdchi11313 + F11*F22*chi21*dAdchi12113 + F11*F22*chi22*dAdchi12213 + F11*F22*chi23*dAdchi12313 + F11*F23*chi21*dAdchi13113 + F11*F23*chi22*dAdchi13213 + F11*F23*chi23*dAdchi13313 + F12*F21*chi21*dAdchi21113 + F12*F21*chi22*dAdchi21213 + F12*F21*chi23*dAdchi21313 + F12*F22*chi21*dAdchi22113 + F12*F22*chi22*dAdchi22213 + F12*F22*chi23*dAdchi22313 + F12*F23*chi21*dAdchi23113 + F12*F23*chi22*dAdchi23213 + F12*F23*chi23*dAdchi23313 + F13*F21*chi21*dAdchi31113 + F13*F21*chi22*dAdchi31213 + F13*F21*chi23*dAdchi31313 + F13*F22*chi21*dAdchi32113 + F13*F22*chi22*dAdchi32213 + F13*F22*chi23*dAdchi32313 + F13*F23*chi21*dAdchi33113 + F13*F23*chi22*dAdchi33213 + F13*F23*chi23*dAdchi33313;
        dadchi(1,5) = F11*F21*chi21*dAdchi11112 + F11*F21*chi22*dAdchi11212 + F11*F21*chi23*dAdchi11312 + F11*F22*chi21*dAdchi12112 + F11*F22*chi22*dAdchi12212 + F11*F22*chi23*dAdchi12312 + F11*F23*chi21*dAdchi13112 + F11*F23*chi22*dAdchi13212 + F11*F23*chi23*dAdchi13312 + F12*F21*chi21*dAdchi21112 + F12*F21*chi22*dAdchi21212 + F12*F21*chi23*dAdchi21312 + F12*F22*chi21*dAdchi22112 + F12*F22*chi22*dAdchi22212 + F12*F22*chi23*dAdchi22312 + F12*F23*chi21*dAdchi23112 + F12*F23*chi22*dAdchi23212 + F12*F23*chi23*dAdchi23312 + F13*F21*chi21*dAdchi31112 + F13*F21*chi22*dAdchi31212 + F13*F21*chi23*dAdchi31312 + F13*F22*chi21*dAdchi32112 + F13*F22*chi22*dAdchi32212 + F13*F22*chi23*dAdchi32312 + F13*F23*chi21*dAdchi33112 + F13*F23*chi22*dAdchi33212 + F13*F23*chi23*dAdchi33312;
        dadchi(1,6) = F11*F21*chi21*dAdchi11132 + F11*F21*chi22*dAdchi11232 + F11*F21*chi23*dAdchi11332 + F11*F22*chi21*dAdchi12132 + F11*F22*chi22*dAdchi12232 + F11*F22*chi23*dAdchi12332 + F11*F23*chi21*dAdchi13132 + F11*F23*chi22*dAdchi13232 + F11*F23*chi23*dAdchi13332 + F12*F21*chi21*dAdchi21132 + F12*F21*chi22*dAdchi21232 + F12*F21*chi23*dAdchi21332 + F12*F22*chi21*dAdchi22132 + F12*F22*chi22*dAdchi22232 + F12*F22*chi23*dAdchi22332 + F12*F23*chi21*dAdchi23132 + F12*F23*chi22*dAdchi23232 + F12*F23*chi23*dAdchi23332 + F13*F21*chi21*dAdchi31132 + F13*F21*chi22*dAdchi31232 + F13*F21*chi23*dAdchi31332 + F13*F22*chi21*dAdchi32132 + F13*F22*chi22*dAdchi32232 + F13*F22*chi23*dAdchi32332 + F13*F23*chi21*dAdchi33132 + F13*F23*chi22*dAdchi33232 + F13*F23*chi23*dAdchi33332;
        dadchi(1,7) = F11*F21*chi21*dAdchi11131 + F11*F21*chi22*dAdchi11231 + F11*F21*chi23*dAdchi11331 + F11*F22*chi21*dAdchi12131 + F11*F22*chi22*dAdchi12231 + F11*F22*chi23*dAdchi12331 + F11*F23*chi21*dAdchi13131 + F11*F23*chi22*dAdchi13231 + F11*F23*chi23*dAdchi13331 + F12*F21*chi21*dAdchi21131 + F12*F21*chi22*dAdchi21231 + F12*F21*chi23*dAdchi21331 + F12*F22*chi21*dAdchi22131 + F12*F22*chi22*dAdchi22231 + F12*F22*chi23*dAdchi22331 + F12*F23*chi21*dAdchi23131 + F12*F23*chi22*dAdchi23231 + F12*F23*chi23*dAdchi23331 + F13*F21*chi21*dAdchi31131 + F13*F21*chi22*dAdchi31231 + F13*F21*chi23*dAdchi31331 + F13*F22*chi21*dAdchi32131 + F13*F22*chi22*dAdchi32231 + F13*F22*chi23*dAdchi32331 + F13*F23*chi21*dAdchi33131 + F13*F23*chi22*dAdchi33231 + F13*F23*chi23*dAdchi33331;
        dadchi(1,8) = A112*F11*F21 + A122*F11*F22 + A132*F11*F23 + A212*F12*F21 + A222*F12*F22 + A232*F12*F23 + A312*F13*F21 + A322*F13*F22 + A332*F13*F23 + F11*F21*chi21*dAdchi11121 + F11*F21*chi22*dAdchi11221 + F11*F21*chi23*dAdchi11321 + F11*F22*chi21*dAdchi12121 + F11*F22*chi22*dAdchi12221 + F11*F22*chi23*dAdchi12321 + F11*F23*chi21*dAdchi13121 + F11*F23*chi22*dAdchi13221 + F11*F23*chi23*dAdchi13321 + F12*F21*chi21*dAdchi21121 + F12*F21*chi22*dAdchi21221 + F12*F21*chi23*dAdchi21321 + F12*F22*chi21*dAdchi22121 + F12*F22*chi22*dAdchi22221 + F12*F22*chi23*dAdchi22321 + F12*F23*chi21*dAdchi23121 + F12*F23*chi22*dAdchi23221 + F12*F23*chi23*dAdchi23321 + F13*F21*chi21*dAdchi31121 + F13*F21*chi22*dAdchi31221 + F13*F21*chi23*dAdchi31321 + F13*F22*chi21*dAdchi32121 + F13*F22*chi22*dAdchi32221 + F13*F22*chi23*dAdchi32321 + F13*F23*chi21*dAdchi33121 + F13*F23*chi22*dAdchi33221 + F13*F23*chi23*dAdchi33321;
        dadchi(2,0) = F11*F31*chi31*dAdchi11111 + F11*F31*chi32*dAdchi11211 + F11*F31*chi33*dAdchi11311 + F11*F32*chi31*dAdchi12111 + F11*F32*chi32*dAdchi12211 + F11*F32*chi33*dAdchi12311 + F11*F33*chi31*dAdchi13111 + F11*F33*chi32*dAdchi13211 + F11*F33*chi33*dAdchi13311 + F12*F31*chi31*dAdchi21111 + F12*F31*chi32*dAdchi21211 + F12*F31*chi33*dAdchi21311 + F12*F32*chi31*dAdchi22111 + F12*F32*chi32*dAdchi22211 + F12*F32*chi33*dAdchi22311 + F12*F33*chi31*dAdchi23111 + F12*F33*chi32*dAdchi23211 + F12*F33*chi33*dAdchi23311 + F13*F31*chi31*dAdchi31111 + F13*F31*chi32*dAdchi31211 + F13*F31*chi33*dAdchi31311 + F13*F32*chi31*dAdchi32111 + F13*F32*chi32*dAdchi32211 + F13*F32*chi33*dAdchi32311 + F13*F33*chi31*dAdchi33111 + F13*F33*chi32*dAdchi33211 + F13*F33*chi33*dAdchi33311;
        dadchi(2,1) = F11*F31*chi31*dAdchi11122 + F11*F31*chi32*dAdchi11222 + F11*F31*chi33*dAdchi11322 + F11*F32*chi31*dAdchi12122 + F11*F32*chi32*dAdchi12222 + F11*F32*chi33*dAdchi12322 + F11*F33*chi31*dAdchi13122 + F11*F33*chi32*dAdchi13222 + F11*F33*chi33*dAdchi13322 + F12*F31*chi31*dAdchi21122 + F12*F31*chi32*dAdchi21222 + F12*F31*chi33*dAdchi21322 + F12*F32*chi31*dAdchi22122 + F12*F32*chi32*dAdchi22222 + F12*F32*chi33*dAdchi22322 + F12*F33*chi31*dAdchi23122 + F12*F33*chi32*dAdchi23222 + F12*F33*chi33*dAdchi23322 + F13*F31*chi31*dAdchi31122 + F13*F31*chi32*dAdchi31222 + F13*F31*chi33*dAdchi31322 + F13*F32*chi31*dAdchi32122 + F13*F32*chi32*dAdchi32222 + F13*F32*chi33*dAdchi32322 + F13*F33*chi31*dAdchi33122 + F13*F33*chi32*dAdchi33222 + F13*F33*chi33*dAdchi33322;
        dadchi(2,2) = A113*F11*F31 + A123*F11*F32 + A133*F11*F33 + A213*F12*F31 + A223*F12*F32 + A233*F12*F33 + A313*F13*F31 + A323*F13*F32 + A333*F13*F33 + F11*F31*chi31*dAdchi11133 + F11*F31*chi32*dAdchi11233 + F11*F31*chi33*dAdchi11333 + F11*F32*chi31*dAdchi12133 + F11*F32*chi32*dAdchi12233 + F11*F32*chi33*dAdchi12333 + F11*F33*chi31*dAdchi13133 + F11*F33*chi32*dAdchi13233 + F11*F33*chi33*dAdchi13333 + F12*F31*chi31*dAdchi21133 + F12*F31*chi32*dAdchi21233 + F12*F31*chi33*dAdchi21333 + F12*F32*chi31*dAdchi22133 + F12*F32*chi32*dAdchi22233 + F12*F32*chi33*dAdchi22333 + F12*F33*chi31*dAdchi23133 + F12*F33*chi32*dAdchi23233 + F12*F33*chi33*dAdchi23333 + F13*F31*chi31*dAdchi31133 + F13*F31*chi32*dAdchi31233 + F13*F31*chi33*dAdchi31333 + F13*F32*chi31*dAdchi32133 + F13*F32*chi32*dAdchi32233 + F13*F32*chi33*dAdchi32333 + F13*F33*chi31*dAdchi33133 + F13*F33*chi32*dAdchi33233 + F13*F33*chi33*dAdchi33333;
        dadchi(2,3) = F11*F31*chi31*dAdchi11123 + F11*F31*chi32*dAdchi11223 + F11*F31*chi33*dAdchi11323 + F11*F32*chi31*dAdchi12123 + F11*F32*chi32*dAdchi12223 + F11*F32*chi33*dAdchi12323 + F11*F33*chi31*dAdchi13123 + F11*F33*chi32*dAdchi13223 + F11*F33*chi33*dAdchi13323 + F12*F31*chi31*dAdchi21123 + F12*F31*chi32*dAdchi21223 + F12*F31*chi33*dAdchi21323 + F12*F32*chi31*dAdchi22123 + F12*F32*chi32*dAdchi22223 + F12*F32*chi33*dAdchi22323 + F12*F33*chi31*dAdchi23123 + F12*F33*chi32*dAdchi23223 + F12*F33*chi33*dAdchi23323 + F13*F31*chi31*dAdchi31123 + F13*F31*chi32*dAdchi31223 + F13*F31*chi33*dAdchi31323 + F13*F32*chi31*dAdchi32123 + F13*F32*chi32*dAdchi32223 + F13*F32*chi33*dAdchi32323 + F13*F33*chi31*dAdchi33123 + F13*F33*chi32*dAdchi33223 + F13*F33*chi33*dAdchi33323;
        dadchi(2,4) = F11*F31*chi31*dAdchi11113 + F11*F31*chi32*dAdchi11213 + F11*F31*chi33*dAdchi11313 + F11*F32*chi31*dAdchi12113 + F11*F32*chi32*dAdchi12213 + F11*F32*chi33*dAdchi12313 + F11*F33*chi31*dAdchi13113 + F11*F33*chi32*dAdchi13213 + F11*F33*chi33*dAdchi13313 + F12*F31*chi31*dAdchi21113 + F12*F31*chi32*dAdchi21213 + F12*F31*chi33*dAdchi21313 + F12*F32*chi31*dAdchi22113 + F12*F32*chi32*dAdchi22213 + F12*F32*chi33*dAdchi22313 + F12*F33*chi31*dAdchi23113 + F12*F33*chi32*dAdchi23213 + F12*F33*chi33*dAdchi23313 + F13*F31*chi31*dAdchi31113 + F13*F31*chi32*dAdchi31213 + F13*F31*chi33*dAdchi31313 + F13*F32*chi31*dAdchi32113 + F13*F32*chi32*dAdchi32213 + F13*F32*chi33*dAdchi32313 + F13*F33*chi31*dAdchi33113 + F13*F33*chi32*dAdchi33213 + F13*F33*chi33*dAdchi33313;
        dadchi(2,5) = F11*F31*chi31*dAdchi11112 + F11*F31*chi32*dAdchi11212 + F11*F31*chi33*dAdchi11312 + F11*F32*chi31*dAdchi12112 + F11*F32*chi32*dAdchi12212 + F11*F32*chi33*dAdchi12312 + F11*F33*chi31*dAdchi13112 + F11*F33*chi32*dAdchi13212 + F11*F33*chi33*dAdchi13312 + F12*F31*chi31*dAdchi21112 + F12*F31*chi32*dAdchi21212 + F12*F31*chi33*dAdchi21312 + F12*F32*chi31*dAdchi22112 + F12*F32*chi32*dAdchi22212 + F12*F32*chi33*dAdchi22312 + F12*F33*chi31*dAdchi23112 + F12*F33*chi32*dAdchi23212 + F12*F33*chi33*dAdchi23312 + F13*F31*chi31*dAdchi31112 + F13*F31*chi32*dAdchi31212 + F13*F31*chi33*dAdchi31312 + F13*F32*chi31*dAdchi32112 + F13*F32*chi32*dAdchi32212 + F13*F32*chi33*dAdchi32312 + F13*F33*chi31*dAdchi33112 + F13*F33*chi32*dAdchi33212 + F13*F33*chi33*dAdchi33312;
        dadchi(2,6) = A113*F11*F31 + A123*F11*F32 + A133*F11*F33 + A213*F12*F31 + A223*F12*F32 + A233*F12*F33 + A313*F13*F31 + A323*F13*F32 + A333*F13*F33 + F11*F31*chi31*dAdchi11132 + F11*F31*chi32*dAdchi11232 + F11*F31*chi33*dAdchi11332 + F11*F32*chi31*dAdchi12132 + F11*F32*chi32*dAdchi12232 + F11*F32*chi33*dAdchi12332 + F11*F33*chi31*dAdchi13132 + F11*F33*chi32*dAdchi13232 + F11*F33*chi33*dAdchi13332 + F12*F31*chi31*dAdchi21132 + F12*F31*chi32*dAdchi21232 + F12*F31*chi33*dAdchi21332 + F12*F32*chi31*dAdchi22132 + F12*F32*chi32*dAdchi22232 + F12*F32*chi33*dAdchi22332 + F12*F33*chi31*dAdchi23132 + F12*F33*chi32*dAdchi23232 + F12*F33*chi33*dAdchi23332 + F13*F31*chi31*dAdchi31132 + F13*F31*chi32*dAdchi31232 + F13*F31*chi33*dAdchi31332 + F13*F32*chi31*dAdchi32132 + F13*F32*chi32*dAdchi32232 + F13*F32*chi33*dAdchi32332 + F13*F33*chi31*dAdchi33132 + F13*F33*chi32*dAdchi33232 + F13*F33*chi33*dAdchi33332;
        dadchi(2,7) = A113*F11*F31 + A123*F11*F32 + A133*F11*F33 + A213*F12*F31 + A223*F12*F32 + A233*F12*F33 + A313*F13*F31 + A323*F13*F32 + A333*F13*F33 + F11*F31*chi31*dAdchi11131 + F11*F31*chi32*dAdchi11231 + F11*F31*chi33*dAdchi11331 + F11*F32*chi31*dAdchi12131 + F11*F32*chi32*dAdchi12231 + F11*F32*chi33*dAdchi12331 + F11*F33*chi31*dAdchi13131 + F11*F33*chi32*dAdchi13231 + F11*F33*chi33*dAdchi13331 + F12*F31*chi31*dAdchi21131 + F12*F31*chi32*dAdchi21231 + F12*F31*chi33*dAdchi21331 + F12*F32*chi31*dAdchi22131 + F12*F32*chi32*dAdchi22231 + F12*F32*chi33*dAdchi22331 + F12*F33*chi31*dAdchi23131 + F12*F33*chi32*dAdchi23231 + F12*F33*chi33*dAdchi23331 + F13*F31*chi31*dAdchi31131 + F13*F31*chi32*dAdchi31231 + F13*F31*chi33*dAdchi31331 + F13*F32*chi31*dAdchi32131 + F13*F32*chi32*dAdchi32231 + F13*F32*chi33*dAdchi32331 + F13*F33*chi31*dAdchi33131 + F13*F33*chi32*dAdchi33231 + F13*F33*chi33*dAdchi33331;
        dadchi(2,8) = F11*F31*chi31*dAdchi11121 + F11*F31*chi32*dAdchi11221 + F11*F31*chi33*dAdchi11321 + F11*F32*chi31*dAdchi12121 + F11*F32*chi32*dAdchi12221 + F11*F32*chi33*dAdchi12321 + F11*F33*chi31*dAdchi13121 + F11*F33*chi32*dAdchi13221 + F11*F33*chi33*dAdchi13321 + F12*F31*chi31*dAdchi21121 + F12*F31*chi32*dAdchi21221 + F12*F31*chi33*dAdchi21321 + F12*F32*chi31*dAdchi22121 + F12*F32*chi32*dAdchi22221 + F12*F32*chi33*dAdchi22321 + F12*F33*chi31*dAdchi23121 + F12*F33*chi32*dAdchi23221 + F12*F33*chi33*dAdchi23321 + F13*F31*chi31*dAdchi31121 + F13*F31*chi32*dAdchi31221 + F13*F31*chi33*dAdchi31321 + F13*F32*chi31*dAdchi32121 + F13*F32*chi32*dAdchi32221 + F13*F32*chi33*dAdchi32321 + F13*F33*chi31*dAdchi33121 + F13*F33*chi32*dAdchi33221 + F13*F33*chi33*dAdchi33321;
        dadchi(3,0) = F11*F21*chi31*dAdchi11111 + F11*F21*chi32*dAdchi11211 + F11*F21*chi33*dAdchi11311 + F11*F22*chi31*dAdchi12111 + F11*F22*chi32*dAdchi12211 + F11*F22*chi33*dAdchi12311 + F11*F23*chi31*dAdchi13111 + F11*F23*chi32*dAdchi13211 + F11*F23*chi33*dAdchi13311 + F12*F21*chi31*dAdchi21111 + F12*F21*chi32*dAdchi21211 + F12*F21*chi33*dAdchi21311 + F12*F22*chi31*dAdchi22111 + F12*F22*chi32*dAdchi22211 + F12*F22*chi33*dAdchi22311 + F12*F23*chi31*dAdchi23111 + F12*F23*chi32*dAdchi23211 + F12*F23*chi33*dAdchi23311 + F13*F21*chi31*dAdchi31111 + F13*F21*chi32*dAdchi31211 + F13*F21*chi33*dAdchi31311 + F13*F22*chi31*dAdchi32111 + F13*F22*chi32*dAdchi32211 + F13*F22*chi33*dAdchi32311 + F13*F23*chi31*dAdchi33111 + F13*F23*chi32*dAdchi33211 + F13*F23*chi33*dAdchi33311;
        dadchi(3,1) = F11*F21*chi31*dAdchi11122 + F11*F21*chi32*dAdchi11222 + F11*F21*chi33*dAdchi11322 + F11*F22*chi31*dAdchi12122 + F11*F22*chi32*dAdchi12222 + F11*F22*chi33*dAdchi12322 + F11*F23*chi31*dAdchi13122 + F11*F23*chi32*dAdchi13222 + F11*F23*chi33*dAdchi13322 + F12*F21*chi31*dAdchi21122 + F12*F21*chi32*dAdchi21222 + F12*F21*chi33*dAdchi21322 + F12*F22*chi31*dAdchi22122 + F12*F22*chi32*dAdchi22222 + F12*F22*chi33*dAdchi22322 + F12*F23*chi31*dAdchi23122 + F12*F23*chi32*dAdchi23222 + F12*F23*chi33*dAdchi23322 + F13*F21*chi31*dAdchi31122 + F13*F21*chi32*dAdchi31222 + F13*F21*chi33*dAdchi31322 + F13*F22*chi31*dAdchi32122 + F13*F22*chi32*dAdchi32222 + F13*F22*chi33*dAdchi32322 + F13*F23*chi31*dAdchi33122 + F13*F23*chi32*dAdchi33222 + F13*F23*chi33*dAdchi33322;
        dadchi(3,2) = A113*F11*F21 + A123*F11*F22 + A133*F11*F23 + A213*F12*F21 + A223*F12*F22 + A233*F12*F23 + A313*F13*F21 + A323*F13*F22 + A333*F13*F23 + F11*F21*chi31*dAdchi11133 + F11*F21*chi32*dAdchi11233 + F11*F21*chi33*dAdchi11333 + F11*F22*chi31*dAdchi12133 + F11*F22*chi32*dAdchi12233 + F11*F22*chi33*dAdchi12333 + F11*F23*chi31*dAdchi13133 + F11*F23*chi32*dAdchi13233 + F11*F23*chi33*dAdchi13333 + F12*F21*chi31*dAdchi21133 + F12*F21*chi32*dAdchi21233 + F12*F21*chi33*dAdchi21333 + F12*F22*chi31*dAdchi22133 + F12*F22*chi32*dAdchi22233 + F12*F22*chi33*dAdchi22333 + F12*F23*chi31*dAdchi23133 + F12*F23*chi32*dAdchi23233 + F12*F23*chi33*dAdchi23333 + F13*F21*chi31*dAdchi31133 + F13*F21*chi32*dAdchi31233 + F13*F21*chi33*dAdchi31333 + F13*F22*chi31*dAdchi32133 + F13*F22*chi32*dAdchi32233 + F13*F22*chi33*dAdchi32333 + F13*F23*chi31*dAdchi33133 + F13*F23*chi32*dAdchi33233 + F13*F23*chi33*dAdchi33333;
        dadchi(3,3) = F11*F21*chi31*dAdchi11123 + F11*F21*chi32*dAdchi11223 + F11*F21*chi33*dAdchi11323 + F11*F22*chi31*dAdchi12123 + F11*F22*chi32*dAdchi12223 + F11*F22*chi33*dAdchi12323 + F11*F23*chi31*dAdchi13123 + F11*F23*chi32*dAdchi13223 + F11*F23*chi33*dAdchi13323 + F12*F21*chi31*dAdchi21123 + F12*F21*chi32*dAdchi21223 + F12*F21*chi33*dAdchi21323 + F12*F22*chi31*dAdchi22123 + F12*F22*chi32*dAdchi22223 + F12*F22*chi33*dAdchi22323 + F12*F23*chi31*dAdchi23123 + F12*F23*chi32*dAdchi23223 + F12*F23*chi33*dAdchi23323 + F13*F21*chi31*dAdchi31123 + F13*F21*chi32*dAdchi31223 + F13*F21*chi33*dAdchi31323 + F13*F22*chi31*dAdchi32123 + F13*F22*chi32*dAdchi32223 + F13*F22*chi33*dAdchi32323 + F13*F23*chi31*dAdchi33123 + F13*F23*chi32*dAdchi33223 + F13*F23*chi33*dAdchi33323;
        dadchi(3,4) = F11*F21*chi31*dAdchi11113 + F11*F21*chi32*dAdchi11213 + F11*F21*chi33*dAdchi11313 + F11*F22*chi31*dAdchi12113 + F11*F22*chi32*dAdchi12213 + F11*F22*chi33*dAdchi12313 + F11*F23*chi31*dAdchi13113 + F11*F23*chi32*dAdchi13213 + F11*F23*chi33*dAdchi13313 + F12*F21*chi31*dAdchi21113 + F12*F21*chi32*dAdchi21213 + F12*F21*chi33*dAdchi21313 + F12*F22*chi31*dAdchi22113 + F12*F22*chi32*dAdchi22213 + F12*F22*chi33*dAdchi22313 + F12*F23*chi31*dAdchi23113 + F12*F23*chi32*dAdchi23213 + F12*F23*chi33*dAdchi23313 + F13*F21*chi31*dAdchi31113 + F13*F21*chi32*dAdchi31213 + F13*F21*chi33*dAdchi31313 + F13*F22*chi31*dAdchi32113 + F13*F22*chi32*dAdchi32213 + F13*F22*chi33*dAdchi32313 + F13*F23*chi31*dAdchi33113 + F13*F23*chi32*dAdchi33213 + F13*F23*chi33*dAdchi33313;
        dadchi(3,5) = F11*F21*chi31*dAdchi11112 + F11*F21*chi32*dAdchi11212 + F11*F21*chi33*dAdchi11312 + F11*F22*chi31*dAdchi12112 + F11*F22*chi32*dAdchi12212 + F11*F22*chi33*dAdchi12312 + F11*F23*chi31*dAdchi13112 + F11*F23*chi32*dAdchi13212 + F11*F23*chi33*dAdchi13312 + F12*F21*chi31*dAdchi21112 + F12*F21*chi32*dAdchi21212 + F12*F21*chi33*dAdchi21312 + F12*F22*chi31*dAdchi22112 + F12*F22*chi32*dAdchi22212 + F12*F22*chi33*dAdchi22312 + F12*F23*chi31*dAdchi23112 + F12*F23*chi32*dAdchi23212 + F12*F23*chi33*dAdchi23312 + F13*F21*chi31*dAdchi31112 + F13*F21*chi32*dAdchi31212 + F13*F21*chi33*dAdchi31312 + F13*F22*chi31*dAdchi32112 + F13*F22*chi32*dAdchi32212 + F13*F22*chi33*dAdchi32312 + F13*F23*chi31*dAdchi33112 + F13*F23*chi32*dAdchi33212 + F13*F23*chi33*dAdchi33312;
        dadchi(3,6) = A113*F11*F21 + A123*F11*F22 + A133*F11*F23 + A213*F12*F21 + A223*F12*F22 + A233*F12*F23 + A313*F13*F21 + A323*F13*F22 + A333*F13*F23 + F11*F21*chi31*dAdchi11132 + F11*F21*chi32*dAdchi11232 + F11*F21*chi33*dAdchi11332 + F11*F22*chi31*dAdchi12132 + F11*F22*chi32*dAdchi12232 + F11*F22*chi33*dAdchi12332 + F11*F23*chi31*dAdchi13132 + F11*F23*chi32*dAdchi13232 + F11*F23*chi33*dAdchi13332 + F12*F21*chi31*dAdchi21132 + F12*F21*chi32*dAdchi21232 + F12*F21*chi33*dAdchi21332 + F12*F22*chi31*dAdchi22132 + F12*F22*chi32*dAdchi22232 + F12*F22*chi33*dAdchi22332 + F12*F23*chi31*dAdchi23132 + F12*F23*chi32*dAdchi23232 + F12*F23*chi33*dAdchi23332 + F13*F21*chi31*dAdchi31132 + F13*F21*chi32*dAdchi31232 + F13*F21*chi33*dAdchi31332 + F13*F22*chi31*dAdchi32132 + F13*F22*chi32*dAdchi32232 + F13*F22*chi33*dAdchi32332 + F13*F23*chi31*dAdchi33132 + F13*F23*chi32*dAdchi33232 + F13*F23*chi33*dAdchi33332;
        dadchi(3,7) = A113*F11*F21 + A123*F11*F22 + A133*F11*F23 + A213*F12*F21 + A223*F12*F22 + A233*F12*F23 + A313*F13*F21 + A323*F13*F22 + A333*F13*F23 + F11*F21*chi31*dAdchi11131 + F11*F21*chi32*dAdchi11231 + F11*F21*chi33*dAdchi11331 + F11*F22*chi31*dAdchi12131 + F11*F22*chi32*dAdchi12231 + F11*F22*chi33*dAdchi12331 + F11*F23*chi31*dAdchi13131 + F11*F23*chi32*dAdchi13231 + F11*F23*chi33*dAdchi13331 + F12*F21*chi31*dAdchi21131 + F12*F21*chi32*dAdchi21231 + F12*F21*chi33*dAdchi21331 + F12*F22*chi31*dAdchi22131 + F12*F22*chi32*dAdchi22231 + F12*F22*chi33*dAdchi22331 + F12*F23*chi31*dAdchi23131 + F12*F23*chi32*dAdchi23231 + F12*F23*chi33*dAdchi23331 + F13*F21*chi31*dAdchi31131 + F13*F21*chi32*dAdchi31231 + F13*F21*chi33*dAdchi31331 + F13*F22*chi31*dAdchi32131 + F13*F22*chi32*dAdchi32231 + F13*F22*chi33*dAdchi32331 + F13*F23*chi31*dAdchi33131 + F13*F23*chi32*dAdchi33231 + F13*F23*chi33*dAdchi33331;
        dadchi(3,8) = F11*F21*chi31*dAdchi11121 + F11*F21*chi32*dAdchi11221 + F11*F21*chi33*dAdchi11321 + F11*F22*chi31*dAdchi12121 + F11*F22*chi32*dAdchi12221 + F11*F22*chi33*dAdchi12321 + F11*F23*chi31*dAdchi13121 + F11*F23*chi32*dAdchi13221 + F11*F23*chi33*dAdchi13321 + F12*F21*chi31*dAdchi21121 + F12*F21*chi32*dAdchi21221 + F12*F21*chi33*dAdchi21321 + F12*F22*chi31*dAdchi22121 + F12*F22*chi32*dAdchi22221 + F12*F22*chi33*dAdchi22321 + F12*F23*chi31*dAdchi23121 + F12*F23*chi32*dAdchi23221 + F12*F23*chi33*dAdchi23321 + F13*F21*chi31*dAdchi31121 + F13*F21*chi32*dAdchi31221 + F13*F21*chi33*dAdchi31321 + F13*F22*chi31*dAdchi32121 + F13*F22*chi32*dAdchi32221 + F13*F22*chi33*dAdchi32321 + F13*F23*chi31*dAdchi33121 + F13*F23*chi32*dAdchi33221 + F13*F23*chi33*dAdchi33321;
        dadchi(4,0) = F11*F11*chi31*dAdchi11111 + F11*F11*chi32*dAdchi11211 + F11*F11*chi33*dAdchi11311 + F11*F12*chi31*dAdchi12111 + F11*F12*chi31*dAdchi21111 + F11*F12*chi32*dAdchi12211 + F11*F12*chi32*dAdchi21211 + F11*F12*chi33*dAdchi12311 + F11*F12*chi33*dAdchi21311 + F11*F13*chi31*dAdchi13111 + F11*F13*chi31*dAdchi31111 + F11*F13*chi32*dAdchi13211 + F11*F13*chi32*dAdchi31211 + F11*F13*chi33*dAdchi13311 + F11*F13*chi33*dAdchi31311 + F12*F12*chi31*dAdchi22111 + F12*F12*chi32*dAdchi22211 + F12*F12*chi33*dAdchi22311 + F12*F13*chi31*dAdchi23111 + F12*F13*chi31*dAdchi32111 + F12*F13*chi32*dAdchi23211 + F12*F13*chi32*dAdchi32211 + F12*F13*chi33*dAdchi23311 + F12*F13*chi33*dAdchi32311 + F13*F13*chi31*dAdchi33111 + F13*F13*chi32*dAdchi33211 + F13*F13*chi33*dAdchi33311;
        dadchi(4,1) = F11*F11*chi31*dAdchi11122 + F11*F11*chi32*dAdchi11222 + F11*F11*chi33*dAdchi11322 + F11*F12*chi31*dAdchi12122 + F11*F12*chi31*dAdchi21122 + F11*F12*chi32*dAdchi12222 + F11*F12*chi32*dAdchi21222 + F11*F12*chi33*dAdchi12322 + F11*F12*chi33*dAdchi21322 + F11*F13*chi31*dAdchi13122 + F11*F13*chi31*dAdchi31122 + F11*F13*chi32*dAdchi13222 + F11*F13*chi32*dAdchi31222 + F11*F13*chi33*dAdchi13322 + F11*F13*chi33*dAdchi31322 + F12*F12*chi31*dAdchi22122 + F12*F12*chi32*dAdchi22222 + F12*F12*chi33*dAdchi22322 + F12*F13*chi31*dAdchi23122 + F12*F13*chi31*dAdchi32122 + F12*F13*chi32*dAdchi23222 + F12*F13*chi32*dAdchi32222 + F12*F13*chi33*dAdchi23322 + F12*F13*chi33*dAdchi32322 + F13*F13*chi31*dAdchi33122 + F13*F13*chi32*dAdchi33222 + F13*F13*chi33*dAdchi33322;
        dadchi(4,2) = A113*F11*F11 + A123*F11*F12 + A133*F11*F13 + A213*F11*F12 + A223*F12*F12 + A233*F12*F13 + A313*F11*F13 + A323*F12*F13 + A333*F13*F13 + F11*F11*chi31*dAdchi11133 + F11*F11*chi32*dAdchi11233 + F11*F11*chi33*dAdchi11333 + F11*F12*chi31*dAdchi12133 + F11*F12*chi31*dAdchi21133 + F11*F12*chi32*dAdchi12233 + F11*F12*chi32*dAdchi21233 + F11*F12*chi33*dAdchi12333 + F11*F12*chi33*dAdchi21333 + F11*F13*chi31*dAdchi13133 + F11*F13*chi31*dAdchi31133 + F11*F13*chi32*dAdchi13233 + F11*F13*chi32*dAdchi31233 + F11*F13*chi33*dAdchi13333 + F11*F13*chi33*dAdchi31333 + F12*F12*chi31*dAdchi22133 + F12*F12*chi32*dAdchi22233 + F12*F12*chi33*dAdchi22333 + F12*F13*chi31*dAdchi23133 + F12*F13*chi31*dAdchi32133 + F12*F13*chi32*dAdchi23233 + F12*F13*chi32*dAdchi32233 + F12*F13*chi33*dAdchi23333 + F12*F13*chi33*dAdchi32333 + F13*F13*chi31*dAdchi33133 + F13*F13*chi32*dAdchi33233 + F13*F13*chi33*dAdchi33333;
        dadchi(4,3) = F11*F11*chi31*dAdchi11123 + F11*F11*chi32*dAdchi11223 + F11*F11*chi33*dAdchi11323 + F11*F12*chi31*dAdchi12123 + F11*F12*chi31*dAdchi21123 + F11*F12*chi32*dAdchi12223 + F11*F12*chi32*dAdchi21223 + F11*F12*chi33*dAdchi12323 + F11*F12*chi33*dAdchi21323 + F11*F13*chi31*dAdchi13123 + F11*F13*chi31*dAdchi31123 + F11*F13*chi32*dAdchi13223 + F11*F13*chi32*dAdchi31223 + F11*F13*chi33*dAdchi13323 + F11*F13*chi33*dAdchi31323 + F12*F12*chi31*dAdchi22123 + F12*F12*chi32*dAdchi22223 + F12*F12*chi33*dAdchi22323 + F12*F13*chi31*dAdchi23123 + F12*F13*chi31*dAdchi32123 + F12*F13*chi32*dAdchi23223 + F12*F13*chi32*dAdchi32223 + F12*F13*chi33*dAdchi23323 + F12*F13*chi33*dAdchi32323 + F13*F13*chi31*dAdchi33123 + F13*F13*chi32*dAdchi33223 + F13*F13*chi33*dAdchi33323;
        dadchi(4,4) = F11*F11*chi31*dAdchi11113 + F11*F11*chi32*dAdchi11213 + F11*F11*chi33*dAdchi11313 + F11*F12*chi31*dAdchi12113 + F11*F12*chi31*dAdchi21113 + F11*F12*chi32*dAdchi12213 + F11*F12*chi32*dAdchi21213 + F11*F12*chi33*dAdchi12313 + F11*F12*chi33*dAdchi21313 + F11*F13*chi31*dAdchi13113 + F11*F13*chi31*dAdchi31113 + F11*F13*chi32*dAdchi13213 + F11*F13*chi32*dAdchi31213 + F11*F13*chi33*dAdchi13313 + F11*F13*chi33*dAdchi31313 + F12*F12*chi31*dAdchi22113 + F12*F12*chi32*dAdchi22213 + F12*F12*chi33*dAdchi22313 + F12*F13*chi31*dAdchi23113 + F12*F13*chi31*dAdchi32113 + F12*F13*chi32*dAdchi23213 + F12*F13*chi32*dAdchi32213 + F12*F13*chi33*dAdchi23313 + F12*F13*chi33*dAdchi32313 + F13*F13*chi31*dAdchi33113 + F13*F13*chi32*dAdchi33213 + F13*F13*chi33*dAdchi33313;
        dadchi(4,5) = F11*F11*chi31*dAdchi11112 + F11*F11*chi32*dAdchi11212 + F11*F11*chi33*dAdchi11312 + F11*F12*chi31*dAdchi12112 + F11*F12*chi31*dAdchi21112 + F11*F12*chi32*dAdchi12212 + F11*F12*chi32*dAdchi21212 + F11*F12*chi33*dAdchi12312 + F11*F12*chi33*dAdchi21312 + F11*F13*chi31*dAdchi13112 + F11*F13*chi31*dAdchi31112 + F11*F13*chi32*dAdchi13212 + F11*F13*chi32*dAdchi31212 + F11*F13*chi33*dAdchi13312 + F11*F13*chi33*dAdchi31312 + F12*F12*chi31*dAdchi22112 + F12*F12*chi32*dAdchi22212 + F12*F12*chi33*dAdchi22312 + F12*F13*chi31*dAdchi23112 + F12*F13*chi31*dAdchi32112 + F12*F13*chi32*dAdchi23212 + F12*F13*chi32*dAdchi32212 + F12*F13*chi33*dAdchi23312 + F12*F13*chi33*dAdchi32312 + F13*F13*chi31*dAdchi33112 + F13*F13*chi32*dAdchi33212 + F13*F13*chi33*dAdchi33312;
        dadchi(4,6) = A113*F11*F11 + A123*F11*F12 + A133*F11*F13 + A213*F11*F12 + A223*F12*F12 + A233*F12*F13 + A313*F11*F13 + A323*F12*F13 + A333*F13*F13 + F11*F11*chi31*dAdchi11132 + F11*F11*chi32*dAdchi11232 + F11*F11*chi33*dAdchi11332 + F11*F12*chi31*dAdchi12132 + F11*F12*chi31*dAdchi21132 + F11*F12*chi32*dAdchi12232 + F11*F12*chi32*dAdchi21232 + F11*F12*chi33*dAdchi12332 + F11*F12*chi33*dAdchi21332 + F11*F13*chi31*dAdchi13132 + F11*F13*chi31*dAdchi31132 + F11*F13*chi32*dAdchi13232 + F11*F13*chi32*dAdchi31232 + F11*F13*chi33*dAdchi13332 + F11*F13*chi33*dAdchi31332 + F12*F12*chi31*dAdchi22132 + F12*F12*chi32*dAdchi22232 + F12*F12*chi33*dAdchi22332 + F12*F13*chi31*dAdchi23132 + F12*F13*chi31*dAdchi32132 + F12*F13*chi32*dAdchi23232 + F12*F13*chi32*dAdchi32232 + F12*F13*chi33*dAdchi23332 + F12*F13*chi33*dAdchi32332 + F13*F13*chi31*dAdchi33132 + F13*F13*chi32*dAdchi33232 + F13*F13*chi33*dAdchi33332;
        dadchi(4,7) = A113*F11*F11 + A123*F11*F12 + A133*F11*F13 + A213*F11*F12 + A223*F12*F12 + A233*F12*F13 + A313*F11*F13 + A323*F12*F13 + A333*F13*F13 + F11*F11*chi31*dAdchi11131 + F11*F11*chi32*dAdchi11231 + F11*F11*chi33*dAdchi11331 + F11*F12*chi31*dAdchi12131 + F11*F12*chi31*dAdchi21131 + F11*F12*chi32*dAdchi12231 + F11*F12*chi32*dAdchi21231 + F11*F12*chi33*dAdchi12331 + F11*F12*chi33*dAdchi21331 + F11*F13*chi31*dAdchi13131 + F11*F13*chi31*dAdchi31131 + F11*F13*chi32*dAdchi13231 + F11*F13*chi32*dAdchi31231 + F11*F13*chi33*dAdchi13331 + F11*F13*chi33*dAdchi31331 + F12*F12*chi31*dAdchi22131 + F12*F12*chi32*dAdchi22231 + F12*F12*chi33*dAdchi22331 + F12*F13*chi31*dAdchi23131 + F12*F13*chi31*dAdchi32131 + F12*F13*chi32*dAdchi23231 + F12*F13*chi32*dAdchi32231 + F12*F13*chi33*dAdchi23331 + F12*F13*chi33*dAdchi32331 + F13*F13*chi31*dAdchi33131 + F13*F13*chi32*dAdchi33231 + F13*F13*chi33*dAdchi33331;
        dadchi(4,8) = F11*F11*chi31*dAdchi11121 + F11*F11*chi32*dAdchi11221 + F11*F11*chi33*dAdchi11321 + F11*F12*chi31*dAdchi12121 + F11*F12*chi31*dAdchi21121 + F11*F12*chi32*dAdchi12221 + F11*F12*chi32*dAdchi21221 + F11*F12*chi33*dAdchi12321 + F11*F12*chi33*dAdchi21321 + F11*F13*chi31*dAdchi13121 + F11*F13*chi31*dAdchi31121 + F11*F13*chi32*dAdchi13221 + F11*F13*chi32*dAdchi31221 + F11*F13*chi33*dAdchi13321 + F11*F13*chi33*dAdchi31321 + F12*F12*chi31*dAdchi22121 + F12*F12*chi32*dAdchi22221 + F12*F12*chi33*dAdchi22321 + F12*F13*chi31*dAdchi23121 + F12*F13*chi31*dAdchi32121 + F12*F13*chi32*dAdchi23221 + F12*F13*chi32*dAdchi32221 + F12*F13*chi33*dAdchi23321 + F12*F13*chi33*dAdchi32321 + F13*F13*chi31*dAdchi33121 + F13*F13*chi32*dAdchi33221 + F13*F13*chi33*dAdchi33321;
        dadchi(5,0) = F11*F11*chi21*dAdchi11111 + F11*F11*chi22*dAdchi11211 + F11*F11*chi23*dAdchi11311 + F11*F12*chi21*dAdchi12111 + F11*F12*chi21*dAdchi21111 + F11*F12*chi22*dAdchi12211 + F11*F12*chi22*dAdchi21211 + F11*F12*chi23*dAdchi12311 + F11*F12*chi23*dAdchi21311 + F11*F13*chi21*dAdchi13111 + F11*F13*chi21*dAdchi31111 + F11*F13*chi22*dAdchi13211 + F11*F13*chi22*dAdchi31211 + F11*F13*chi23*dAdchi13311 + F11*F13*chi23*dAdchi31311 + F12*F12*chi21*dAdchi22111 + F12*F12*chi22*dAdchi22211 + F12*F12*chi23*dAdchi22311 + F12*F13*chi21*dAdchi23111 + F12*F13*chi21*dAdchi32111 + F12*F13*chi22*dAdchi23211 + F12*F13*chi22*dAdchi32211 + F12*F13*chi23*dAdchi23311 + F12*F13*chi23*dAdchi32311 + F13*F13*chi21*dAdchi33111 + F13*F13*chi22*dAdchi33211 + F13*F13*chi23*dAdchi33311;
        dadchi(5,1) = A112*F11*F11 + A122*F11*F12 + A132*F11*F13 + A212*F11*F12 + A222*F12*F12 + A232*F12*F13 + A312*F11*F13 + A322*F12*F13 + A332*F13*F13 + F11*F11*chi21*dAdchi11122 + F11*F11*chi22*dAdchi11222 + F11*F11*chi23*dAdchi11322 + F11*F12*chi21*dAdchi12122 + F11*F12*chi21*dAdchi21122 + F11*F12*chi22*dAdchi12222 + F11*F12*chi22*dAdchi21222 + F11*F12*chi23*dAdchi12322 + F11*F12*chi23*dAdchi21322 + F11*F13*chi21*dAdchi13122 + F11*F13*chi21*dAdchi31122 + F11*F13*chi22*dAdchi13222 + F11*F13*chi22*dAdchi31222 + F11*F13*chi23*dAdchi13322 + F11*F13*chi23*dAdchi31322 + F12*F12*chi21*dAdchi22122 + F12*F12*chi22*dAdchi22222 + F12*F12*chi23*dAdchi22322 + F12*F13*chi21*dAdchi23122 + F12*F13*chi21*dAdchi32122 + F12*F13*chi22*dAdchi23222 + F12*F13*chi22*dAdchi32222 + F12*F13*chi23*dAdchi23322 + F12*F13*chi23*dAdchi32322 + F13*F13*chi21*dAdchi33122 + F13*F13*chi22*dAdchi33222 + F13*F13*chi23*dAdchi33322;
        dadchi(5,2) = F11*F11*chi21*dAdchi11133 + F11*F11*chi22*dAdchi11233 + F11*F11*chi23*dAdchi11333 + F11*F12*chi21*dAdchi12133 + F11*F12*chi21*dAdchi21133 + F11*F12*chi22*dAdchi12233 + F11*F12*chi22*dAdchi21233 + F11*F12*chi23*dAdchi12333 + F11*F12*chi23*dAdchi21333 + F11*F13*chi21*dAdchi13133 + F11*F13*chi21*dAdchi31133 + F11*F13*chi22*dAdchi13233 + F11*F13*chi22*dAdchi31233 + F11*F13*chi23*dAdchi13333 + F11*F13*chi23*dAdchi31333 + F12*F12*chi21*dAdchi22133 + F12*F12*chi22*dAdchi22233 + F12*F12*chi23*dAdchi22333 + F12*F13*chi21*dAdchi23133 + F12*F13*chi21*dAdchi32133 + F12*F13*chi22*dAdchi23233 + F12*F13*chi22*dAdchi32233 + F12*F13*chi23*dAdchi23333 + F12*F13*chi23*dAdchi32333 + F13*F13*chi21*dAdchi33133 + F13*F13*chi22*dAdchi33233 + F13*F13*chi23*dAdchi33333;
        dadchi(5,3) = A112*F11*F11 + A122*F11*F12 + A132*F11*F13 + A212*F11*F12 + A222*F12*F12 + A232*F12*F13 + A312*F11*F13 + A322*F12*F13 + A332*F13*F13 + F11*F11*chi21*dAdchi11123 + F11*F11*chi22*dAdchi11223 + F11*F11*chi23*dAdchi11323 + F11*F12*chi21*dAdchi12123 + F11*F12*chi21*dAdchi21123 + F11*F12*chi22*dAdchi12223 + F11*F12*chi22*dAdchi21223 + F11*F12*chi23*dAdchi12323 + F11*F12*chi23*dAdchi21323 + F11*F13*chi21*dAdchi13123 + F11*F13*chi21*dAdchi31123 + F11*F13*chi22*dAdchi13223 + F11*F13*chi22*dAdchi31223 + F11*F13*chi23*dAdchi13323 + F11*F13*chi23*dAdchi31323 + F12*F12*chi21*dAdchi22123 + F12*F12*chi22*dAdchi22223 + F12*F12*chi23*dAdchi22323 + F12*F13*chi21*dAdchi23123 + F12*F13*chi21*dAdchi32123 + F12*F13*chi22*dAdchi23223 + F12*F13*chi22*dAdchi32223 + F12*F13*chi23*dAdchi23323 + F12*F13*chi23*dAdchi32323 + F13*F13*chi21*dAdchi33123 + F13*F13*chi22*dAdchi33223 + F13*F13*chi23*dAdchi33323;
        dadchi(5,4) = F11*F11*chi21*dAdchi11113 + F11*F11*chi22*dAdchi11213 + F11*F11*chi23*dAdchi11313 + F11*F12*chi21*dAdchi12113 + F11*F12*chi21*dAdchi21113 + F11*F12*chi22*dAdchi12213 + F11*F12*chi22*dAdchi21213 + F11*F12*chi23*dAdchi12313 + F11*F12*chi23*dAdchi21313 + F11*F13*chi21*dAdchi13113 + F11*F13*chi21*dAdchi31113 + F11*F13*chi22*dAdchi13213 + F11*F13*chi22*dAdchi31213 + F11*F13*chi23*dAdchi13313 + F11*F13*chi23*dAdchi31313 + F12*F12*chi21*dAdchi22113 + F12*F12*chi22*dAdchi22213 + F12*F12*chi23*dAdchi22313 + F12*F13*chi21*dAdchi23113 + F12*F13*chi21*dAdchi32113 + F12*F13*chi22*dAdchi23213 + F12*F13*chi22*dAdchi32213 + F12*F13*chi23*dAdchi23313 + F12*F13*chi23*dAdchi32313 + F13*F13*chi21*dAdchi33113 + F13*F13*chi22*dAdchi33213 + F13*F13*chi23*dAdchi33313;
        dadchi(5,5) = F11*F11*chi21*dAdchi11112 + F11*F11*chi22*dAdchi11212 + F11*F11*chi23*dAdchi11312 + F11*F12*chi21*dAdchi12112 + F11*F12*chi21*dAdchi21112 + F11*F12*chi22*dAdchi12212 + F11*F12*chi22*dAdchi21212 + F11*F12*chi23*dAdchi12312 + F11*F12*chi23*dAdchi21312 + F11*F13*chi21*dAdchi13112 + F11*F13*chi21*dAdchi31112 + F11*F13*chi22*dAdchi13212 + F11*F13*chi22*dAdchi31212 + F11*F13*chi23*dAdchi13312 + F11*F13*chi23*dAdchi31312 + F12*F12*chi21*dAdchi22112 + F12*F12*chi22*dAdchi22212 + F12*F12*chi23*dAdchi22312 + F12*F13*chi21*dAdchi23112 + F12*F13*chi21*dAdchi32112 + F12*F13*chi22*dAdchi23212 + F12*F13*chi22*dAdchi32212 + F12*F13*chi23*dAdchi23312 + F12*F13*chi23*dAdchi32312 + F13*F13*chi21*dAdchi33112 + F13*F13*chi22*dAdchi33212 + F13*F13*chi23*dAdchi33312;
        dadchi(5,6) = F11*F11*chi21*dAdchi11132 + F11*F11*chi22*dAdchi11232 + F11*F11*chi23*dAdchi11332 + F11*F12*chi21*dAdchi12132 + F11*F12*chi21*dAdchi21132 + F11*F12*chi22*dAdchi12232 + F11*F12*chi22*dAdchi21232 + F11*F12*chi23*dAdchi12332 + F11*F12*chi23*dAdchi21332 + F11*F13*chi21*dAdchi13132 + F11*F13*chi21*dAdchi31132 + F11*F13*chi22*dAdchi13232 + F11*F13*chi22*dAdchi31232 + F11*F13*chi23*dAdchi13332 + F11*F13*chi23*dAdchi31332 + F12*F12*chi21*dAdchi22132 + F12*F12*chi22*dAdchi22232 + F12*F12*chi23*dAdchi22332 + F12*F13*chi21*dAdchi23132 + F12*F13*chi21*dAdchi32132 + F12*F13*chi22*dAdchi23232 + F12*F13*chi22*dAdchi32232 + F12*F13*chi23*dAdchi23332 + F12*F13*chi23*dAdchi32332 + F13*F13*chi21*dAdchi33132 + F13*F13*chi22*dAdchi33232 + F13*F13*chi23*dAdchi33332;
        dadchi(5,7) = F11*F11*chi21*dAdchi11131 + F11*F11*chi22*dAdchi11231 + F11*F11*chi23*dAdchi11331 + F11*F12*chi21*dAdchi12131 + F11*F12*chi21*dAdchi21131 + F11*F12*chi22*dAdchi12231 + F11*F12*chi22*dAdchi21231 + F11*F12*chi23*dAdchi12331 + F11*F12*chi23*dAdchi21331 + F11*F13*chi21*dAdchi13131 + F11*F13*chi21*dAdchi31131 + F11*F13*chi22*dAdchi13231 + F11*F13*chi22*dAdchi31231 + F11*F13*chi23*dAdchi13331 + F11*F13*chi23*dAdchi31331 + F12*F12*chi21*dAdchi22131 + F12*F12*chi22*dAdchi22231 + F12*F12*chi23*dAdchi22331 + F12*F13*chi21*dAdchi23131 + F12*F13*chi21*dAdchi32131 + F12*F13*chi22*dAdchi23231 + F12*F13*chi22*dAdchi32231 + F12*F13*chi23*dAdchi23331 + F12*F13*chi23*dAdchi32331 + F13*F13*chi21*dAdchi33131 + F13*F13*chi22*dAdchi33231 + F13*F13*chi23*dAdchi33331;
        dadchi(5,8) = A112*F11*F11 + A122*F11*F12 + A132*F11*F13 + A212*F11*F12 + A222*F12*F12 + A232*F12*F13 + A312*F11*F13 + A322*F12*F13 + A332*F13*F13 + F11*F11*chi21*dAdchi11121 + F11*F11*chi22*dAdchi11221 + F11*F11*chi23*dAdchi11321 + F11*F12*chi21*dAdchi12121 + F11*F12*chi21*dAdchi21121 + F11*F12*chi22*dAdchi12221 + F11*F12*chi22*dAdchi21221 + F11*F12*chi23*dAdchi12321 + F11*F12*chi23*dAdchi21321 + F11*F13*chi21*dAdchi13121 + F11*F13*chi21*dAdchi31121 + F11*F13*chi22*dAdchi13221 + F11*F13*chi22*dAdchi31221 + F11*F13*chi23*dAdchi13321 + F11*F13*chi23*dAdchi31321 + F12*F12*chi21*dAdchi22121 + F12*F12*chi22*dAdchi22221 + F12*F12*chi23*dAdchi22321 + F12*F13*chi21*dAdchi23121 + F12*F13*chi21*dAdchi32121 + F12*F13*chi22*dAdchi23221 + F12*F13*chi22*dAdchi32221 + F12*F13*chi23*dAdchi23321 + F12*F13*chi23*dAdchi32321 + F13*F13*chi21*dAdchi33121 + F13*F13*chi22*dAdchi33221 + F13*F13*chi23*dAdchi33321;
        dadchi(6,0) = F11*F31*chi21*dAdchi11111 + F11*F31*chi22*dAdchi11211 + F11*F31*chi23*dAdchi11311 + F11*F32*chi21*dAdchi12111 + F11*F32*chi22*dAdchi12211 + F11*F32*chi23*dAdchi12311 + F11*F33*chi21*dAdchi13111 + F11*F33*chi22*dAdchi13211 + F11*F33*chi23*dAdchi13311 + F12*F31*chi21*dAdchi21111 + F12*F31*chi22*dAdchi21211 + F12*F31*chi23*dAdchi21311 + F12*F32*chi21*dAdchi22111 + F12*F32*chi22*dAdchi22211 + F12*F32*chi23*dAdchi22311 + F12*F33*chi21*dAdchi23111 + F12*F33*chi22*dAdchi23211 + F12*F33*chi23*dAdchi23311 + F13*F31*chi21*dAdchi31111 + F13*F31*chi22*dAdchi31211 + F13*F31*chi23*dAdchi31311 + F13*F32*chi21*dAdchi32111 + F13*F32*chi22*dAdchi32211 + F13*F32*chi23*dAdchi32311 + F13*F33*chi21*dAdchi33111 + F13*F33*chi22*dAdchi33211 + F13*F33*chi23*dAdchi33311;
        dadchi(6,1) = A112*F11*F31 + A122*F11*F32 + A132*F11*F33 + A212*F12*F31 + A222*F12*F32 + A232*F12*F33 + A312*F13*F31 + A322*F13*F32 + A332*F13*F33 + F11*F31*chi21*dAdchi11122 + F11*F31*chi22*dAdchi11222 + F11*F31*chi23*dAdchi11322 + F11*F32*chi21*dAdchi12122 + F11*F32*chi22*dAdchi12222 + F11*F32*chi23*dAdchi12322 + F11*F33*chi21*dAdchi13122 + F11*F33*chi22*dAdchi13222 + F11*F33*chi23*dAdchi13322 + F12*F31*chi21*dAdchi21122 + F12*F31*chi22*dAdchi21222 + F12*F31*chi23*dAdchi21322 + F12*F32*chi21*dAdchi22122 + F12*F32*chi22*dAdchi22222 + F12*F32*chi23*dAdchi22322 + F12*F33*chi21*dAdchi23122 + F12*F33*chi22*dAdchi23222 + F12*F33*chi23*dAdchi23322 + F13*F31*chi21*dAdchi31122 + F13*F31*chi22*dAdchi31222 + F13*F31*chi23*dAdchi31322 + F13*F32*chi21*dAdchi32122 + F13*F32*chi22*dAdchi32222 + F13*F32*chi23*dAdchi32322 + F13*F33*chi21*dAdchi33122 + F13*F33*chi22*dAdchi33222 + F13*F33*chi23*dAdchi33322;
        dadchi(6,2) = F11*F31*chi21*dAdchi11133 + F11*F31*chi22*dAdchi11233 + F11*F31*chi23*dAdchi11333 + F11*F32*chi21*dAdchi12133 + F11*F32*chi22*dAdchi12233 + F11*F32*chi23*dAdchi12333 + F11*F33*chi21*dAdchi13133 + F11*F33*chi22*dAdchi13233 + F11*F33*chi23*dAdchi13333 + F12*F31*chi21*dAdchi21133 + F12*F31*chi22*dAdchi21233 + F12*F31*chi23*dAdchi21333 + F12*F32*chi21*dAdchi22133 + F12*F32*chi22*dAdchi22233 + F12*F32*chi23*dAdchi22333 + F12*F33*chi21*dAdchi23133 + F12*F33*chi22*dAdchi23233 + F12*F33*chi23*dAdchi23333 + F13*F31*chi21*dAdchi31133 + F13*F31*chi22*dAdchi31233 + F13*F31*chi23*dAdchi31333 + F13*F32*chi21*dAdchi32133 + F13*F32*chi22*dAdchi32233 + F13*F32*chi23*dAdchi32333 + F13*F33*chi21*dAdchi33133 + F13*F33*chi22*dAdchi33233 + F13*F33*chi23*dAdchi33333;
        dadchi(6,3) = A112*F11*F31 + A122*F11*F32 + A132*F11*F33 + A212*F12*F31 + A222*F12*F32 + A232*F12*F33 + A312*F13*F31 + A322*F13*F32 + A332*F13*F33 + F11*F31*chi21*dAdchi11123 + F11*F31*chi22*dAdchi11223 + F11*F31*chi23*dAdchi11323 + F11*F32*chi21*dAdchi12123 + F11*F32*chi22*dAdchi12223 + F11*F32*chi23*dAdchi12323 + F11*F33*chi21*dAdchi13123 + F11*F33*chi22*dAdchi13223 + F11*F33*chi23*dAdchi13323 + F12*F31*chi21*dAdchi21123 + F12*F31*chi22*dAdchi21223 + F12*F31*chi23*dAdchi21323 + F12*F32*chi21*dAdchi22123 + F12*F32*chi22*dAdchi22223 + F12*F32*chi23*dAdchi22323 + F12*F33*chi21*dAdchi23123 + F12*F33*chi22*dAdchi23223 + F12*F33*chi23*dAdchi23323 + F13*F31*chi21*dAdchi31123 + F13*F31*chi22*dAdchi31223 + F13*F31*chi23*dAdchi31323 + F13*F32*chi21*dAdchi32123 + F13*F32*chi22*dAdchi32223 + F13*F32*chi23*dAdchi32323 + F13*F33*chi21*dAdchi33123 + F13*F33*chi22*dAdchi33223 + F13*F33*chi23*dAdchi33323;
        dadchi(6,4) = F11*F31*chi21*dAdchi11113 + F11*F31*chi22*dAdchi11213 + F11*F31*chi23*dAdchi11313 + F11*F32*chi21*dAdchi12113 + F11*F32*chi22*dAdchi12213 + F11*F32*chi23*dAdchi12313 + F11*F33*chi21*dAdchi13113 + F11*F33*chi22*dAdchi13213 + F11*F33*chi23*dAdchi13313 + F12*F31*chi21*dAdchi21113 + F12*F31*chi22*dAdchi21213 + F12*F31*chi23*dAdchi21313 + F12*F32*chi21*dAdchi22113 + F12*F32*chi22*dAdchi22213 + F12*F32*chi23*dAdchi22313 + F12*F33*chi21*dAdchi23113 + F12*F33*chi22*dAdchi23213 + F12*F33*chi23*dAdchi23313 + F13*F31*chi21*dAdchi31113 + F13*F31*chi22*dAdchi31213 + F13*F31*chi23*dAdchi31313 + F13*F32*chi21*dAdchi32113 + F13*F32*chi22*dAdchi32213 + F13*F32*chi23*dAdchi32313 + F13*F33*chi21*dAdchi33113 + F13*F33*chi22*dAdchi33213 + F13*F33*chi23*dAdchi33313;
        dadchi(6,5) = F11*F31*chi21*dAdchi11112 + F11*F31*chi22*dAdchi11212 + F11*F31*chi23*dAdchi11312 + F11*F32*chi21*dAdchi12112 + F11*F32*chi22*dAdchi12212 + F11*F32*chi23*dAdchi12312 + F11*F33*chi21*dAdchi13112 + F11*F33*chi22*dAdchi13212 + F11*F33*chi23*dAdchi13312 + F12*F31*chi21*dAdchi21112 + F12*F31*chi22*dAdchi21212 + F12*F31*chi23*dAdchi21312 + F12*F32*chi21*dAdchi22112 + F12*F32*chi22*dAdchi22212 + F12*F32*chi23*dAdchi22312 + F12*F33*chi21*dAdchi23112 + F12*F33*chi22*dAdchi23212 + F12*F33*chi23*dAdchi23312 + F13*F31*chi21*dAdchi31112 + F13*F31*chi22*dAdchi31212 + F13*F31*chi23*dAdchi31312 + F13*F32*chi21*dAdchi32112 + F13*F32*chi22*dAdchi32212 + F13*F32*chi23*dAdchi32312 + F13*F33*chi21*dAdchi33112 + F13*F33*chi22*dAdchi33212 + F13*F33*chi23*dAdchi33312;
        dadchi(6,6) = F11*F31*chi21*dAdchi11132 + F11*F31*chi22*dAdchi11232 + F11*F31*chi23*dAdchi11332 + F11*F32*chi21*dAdchi12132 + F11*F32*chi22*dAdchi12232 + F11*F32*chi23*dAdchi12332 + F11*F33*chi21*dAdchi13132 + F11*F33*chi22*dAdchi13232 + F11*F33*chi23*dAdchi13332 + F12*F31*chi21*dAdchi21132 + F12*F31*chi22*dAdchi21232 + F12*F31*chi23*dAdchi21332 + F12*F32*chi21*dAdchi22132 + F12*F32*chi22*dAdchi22232 + F12*F32*chi23*dAdchi22332 + F12*F33*chi21*dAdchi23132 + F12*F33*chi22*dAdchi23232 + F12*F33*chi23*dAdchi23332 + F13*F31*chi21*dAdchi31132 + F13*F31*chi22*dAdchi31232 + F13*F31*chi23*dAdchi31332 + F13*F32*chi21*dAdchi32132 + F13*F32*chi22*dAdchi32232 + F13*F32*chi23*dAdchi32332 + F13*F33*chi21*dAdchi33132 + F13*F33*chi22*dAdchi33232 + F13*F33*chi23*dAdchi33332;
        dadchi(6,7) = F11*F31*chi21*dAdchi11131 + F11*F31*chi22*dAdchi11231 + F11*F31*chi23*dAdchi11331 + F11*F32*chi21*dAdchi12131 + F11*F32*chi22*dAdchi12231 + F11*F32*chi23*dAdchi12331 + F11*F33*chi21*dAdchi13131 + F11*F33*chi22*dAdchi13231 + F11*F33*chi23*dAdchi13331 + F12*F31*chi21*dAdchi21131 + F12*F31*chi22*dAdchi21231 + F12*F31*chi23*dAdchi21331 + F12*F32*chi21*dAdchi22131 + F12*F32*chi22*dAdchi22231 + F12*F32*chi23*dAdchi22331 + F12*F33*chi21*dAdchi23131 + F12*F33*chi22*dAdchi23231 + F12*F33*chi23*dAdchi23331 + F13*F31*chi21*dAdchi31131 + F13*F31*chi22*dAdchi31231 + F13*F31*chi23*dAdchi31331 + F13*F32*chi21*dAdchi32131 + F13*F32*chi22*dAdchi32231 + F13*F32*chi23*dAdchi32331 + F13*F33*chi21*dAdchi33131 + F13*F33*chi22*dAdchi33231 + F13*F33*chi23*dAdchi33331;
        dadchi(6,8) = A112*F11*F31 + A122*F11*F32 + A132*F11*F33 + A212*F12*F31 + A222*F12*F32 + A232*F12*F33 + A312*F13*F31 + A322*F13*F32 + A332*F13*F33 + F11*F31*chi21*dAdchi11121 + F11*F31*chi22*dAdchi11221 + F11*F31*chi23*dAdchi11321 + F11*F32*chi21*dAdchi12121 + F11*F32*chi22*dAdchi12221 + F11*F32*chi23*dAdchi12321 + F11*F33*chi21*dAdchi13121 + F11*F33*chi22*dAdchi13221 + F11*F33*chi23*dAdchi13321 + F12*F31*chi21*dAdchi21121 + F12*F31*chi22*dAdchi21221 + F12*F31*chi23*dAdchi21321 + F12*F32*chi21*dAdchi22121 + F12*F32*chi22*dAdchi22221 + F12*F32*chi23*dAdchi22321 + F12*F33*chi21*dAdchi23121 + F12*F33*chi22*dAdchi23221 + F12*F33*chi23*dAdchi23321 + F13*F31*chi21*dAdchi31121 + F13*F31*chi22*dAdchi31221 + F13*F31*chi23*dAdchi31321 + F13*F32*chi21*dAdchi32121 + F13*F32*chi22*dAdchi32221 + F13*F32*chi23*dAdchi32321 + F13*F33*chi21*dAdchi33121 + F13*F33*chi22*dAdchi33221 + F13*F33*chi23*dAdchi33321;
        dadchi(7,0) = A111*F11*F31 + A121*F11*F32 + A131*F11*F33 + A211*F12*F31 + A221*F12*F32 + A231*F12*F33 + A311*F13*F31 + A321*F13*F32 + A331*F13*F33 + F11*F31*chi11*dAdchi11111 + F11*F31*chi12*dAdchi11211 + F11*F31*chi13*dAdchi11311 + F11*F32*chi11*dAdchi12111 + F11*F32*chi12*dAdchi12211 + F11*F32*chi13*dAdchi12311 + F11*F33*chi11*dAdchi13111 + F11*F33*chi12*dAdchi13211 + F11*F33*chi13*dAdchi13311 + F12*F31*chi11*dAdchi21111 + F12*F31*chi12*dAdchi21211 + F12*F31*chi13*dAdchi21311 + F12*F32*chi11*dAdchi22111 + F12*F32*chi12*dAdchi22211 + F12*F32*chi13*dAdchi22311 + F12*F33*chi11*dAdchi23111 + F12*F33*chi12*dAdchi23211 + F12*F33*chi13*dAdchi23311 + F13*F31*chi11*dAdchi31111 + F13*F31*chi12*dAdchi31211 + F13*F31*chi13*dAdchi31311 + F13*F32*chi11*dAdchi32111 + F13*F32*chi12*dAdchi32211 + F13*F32*chi13*dAdchi32311 + F13*F33*chi11*dAdchi33111 + F13*F33*chi12*dAdchi33211 + F13*F33*chi13*dAdchi33311;
        dadchi(7,1) = F11*F31*chi11*dAdchi11122 + F11*F31*chi12*dAdchi11222 + F11*F31*chi13*dAdchi11322 + F11*F32*chi11*dAdchi12122 + F11*F32*chi12*dAdchi12222 + F11*F32*chi13*dAdchi12322 + F11*F33*chi11*dAdchi13122 + F11*F33*chi12*dAdchi13222 + F11*F33*chi13*dAdchi13322 + F12*F31*chi11*dAdchi21122 + F12*F31*chi12*dAdchi21222 + F12*F31*chi13*dAdchi21322 + F12*F32*chi11*dAdchi22122 + F12*F32*chi12*dAdchi22222 + F12*F32*chi13*dAdchi22322 + F12*F33*chi11*dAdchi23122 + F12*F33*chi12*dAdchi23222 + F12*F33*chi13*dAdchi23322 + F13*F31*chi11*dAdchi31122 + F13*F31*chi12*dAdchi31222 + F13*F31*chi13*dAdchi31322 + F13*F32*chi11*dAdchi32122 + F13*F32*chi12*dAdchi32222 + F13*F32*chi13*dAdchi32322 + F13*F33*chi11*dAdchi33122 + F13*F33*chi12*dAdchi33222 + F13*F33*chi13*dAdchi33322;
        dadchi(7,2) = F11*F31*chi11*dAdchi11133 + F11*F31*chi12*dAdchi11233 + F11*F31*chi13*dAdchi11333 + F11*F32*chi11*dAdchi12133 + F11*F32*chi12*dAdchi12233 + F11*F32*chi13*dAdchi12333 + F11*F33*chi11*dAdchi13133 + F11*F33*chi12*dAdchi13233 + F11*F33*chi13*dAdchi13333 + F12*F31*chi11*dAdchi21133 + F12*F31*chi12*dAdchi21233 + F12*F31*chi13*dAdchi21333 + F12*F32*chi11*dAdchi22133 + F12*F32*chi12*dAdchi22233 + F12*F32*chi13*dAdchi22333 + F12*F33*chi11*dAdchi23133 + F12*F33*chi12*dAdchi23233 + F12*F33*chi13*dAdchi23333 + F13*F31*chi11*dAdchi31133 + F13*F31*chi12*dAdchi31233 + F13*F31*chi13*dAdchi31333 + F13*F32*chi11*dAdchi32133 + F13*F32*chi12*dAdchi32233 + F13*F32*chi13*dAdchi32333 + F13*F33*chi11*dAdchi33133 + F13*F33*chi12*dAdchi33233 + F13*F33*chi13*dAdchi33333;
        dadchi(7,3) = F11*F31*chi11*dAdchi11123 + F11*F31*chi12*dAdchi11223 + F11*F31*chi13*dAdchi11323 + F11*F32*chi11*dAdchi12123 + F11*F32*chi12*dAdchi12223 + F11*F32*chi13*dAdchi12323 + F11*F33*chi11*dAdchi13123 + F11*F33*chi12*dAdchi13223 + F11*F33*chi13*dAdchi13323 + F12*F31*chi11*dAdchi21123 + F12*F31*chi12*dAdchi21223 + F12*F31*chi13*dAdchi21323 + F12*F32*chi11*dAdchi22123 + F12*F32*chi12*dAdchi22223 + F12*F32*chi13*dAdchi22323 + F12*F33*chi11*dAdchi23123 + F12*F33*chi12*dAdchi23223 + F12*F33*chi13*dAdchi23323 + F13*F31*chi11*dAdchi31123 + F13*F31*chi12*dAdchi31223 + F13*F31*chi13*dAdchi31323 + F13*F32*chi11*dAdchi32123 + F13*F32*chi12*dAdchi32223 + F13*F32*chi13*dAdchi32323 + F13*F33*chi11*dAdchi33123 + F13*F33*chi12*dAdchi33223 + F13*F33*chi13*dAdchi33323;
        dadchi(7,4) = A111*F11*F31 + A121*F11*F32 + A131*F11*F33 + A211*F12*F31 + A221*F12*F32 + A231*F12*F33 + A311*F13*F31 + A321*F13*F32 + A331*F13*F33 + F11*F31*chi11*dAdchi11113 + F11*F31*chi12*dAdchi11213 + F11*F31*chi13*dAdchi11313 + F11*F32*chi11*dAdchi12113 + F11*F32*chi12*dAdchi12213 + F11*F32*chi13*dAdchi12313 + F11*F33*chi11*dAdchi13113 + F11*F33*chi12*dAdchi13213 + F11*F33*chi13*dAdchi13313 + F12*F31*chi11*dAdchi21113 + F12*F31*chi12*dAdchi21213 + F12*F31*chi13*dAdchi21313 + F12*F32*chi11*dAdchi22113 + F12*F32*chi12*dAdchi22213 + F12*F32*chi13*dAdchi22313 + F12*F33*chi11*dAdchi23113 + F12*F33*chi12*dAdchi23213 + F12*F33*chi13*dAdchi23313 + F13*F31*chi11*dAdchi31113 + F13*F31*chi12*dAdchi31213 + F13*F31*chi13*dAdchi31313 + F13*F32*chi11*dAdchi32113 + F13*F32*chi12*dAdchi32213 + F13*F32*chi13*dAdchi32313 + F13*F33*chi11*dAdchi33113 + F13*F33*chi12*dAdchi33213 + F13*F33*chi13*dAdchi33313;
        dadchi(7,5) = A111*F11*F31 + A121*F11*F32 + A131*F11*F33 + A211*F12*F31 + A221*F12*F32 + A231*F12*F33 + A311*F13*F31 + A321*F13*F32 + A331*F13*F33 + F11*F31*chi11*dAdchi11112 + F11*F31*chi12*dAdchi11212 + F11*F31*chi13*dAdchi11312 + F11*F32*chi11*dAdchi12112 + F11*F32*chi12*dAdchi12212 + F11*F32*chi13*dAdchi12312 + F11*F33*chi11*dAdchi13112 + F11*F33*chi12*dAdchi13212 + F11*F33*chi13*dAdchi13312 + F12*F31*chi11*dAdchi21112 + F12*F31*chi12*dAdchi21212 + F12*F31*chi13*dAdchi21312 + F12*F32*chi11*dAdchi22112 + F12*F32*chi12*dAdchi22212 + F12*F32*chi13*dAdchi22312 + F12*F33*chi11*dAdchi23112 + F12*F33*chi12*dAdchi23212 + F12*F33*chi13*dAdchi23312 + F13*F31*chi11*dAdchi31112 + F13*F31*chi12*dAdchi31212 + F13*F31*chi13*dAdchi31312 + F13*F32*chi11*dAdchi32112 + F13*F32*chi12*dAdchi32212 + F13*F32*chi13*dAdchi32312 + F13*F33*chi11*dAdchi33112 + F13*F33*chi12*dAdchi33212 + F13*F33*chi13*dAdchi33312;
        dadchi(7,6) = F11*F31*chi11*dAdchi11132 + F11*F31*chi12*dAdchi11232 + F11*F31*chi13*dAdchi11332 + F11*F32*chi11*dAdchi12132 + F11*F32*chi12*dAdchi12232 + F11*F32*chi13*dAdchi12332 + F11*F33*chi11*dAdchi13132 + F11*F33*chi12*dAdchi13232 + F11*F33*chi13*dAdchi13332 + F12*F31*chi11*dAdchi21132 + F12*F31*chi12*dAdchi21232 + F12*F31*chi13*dAdchi21332 + F12*F32*chi11*dAdchi22132 + F12*F32*chi12*dAdchi22232 + F12*F32*chi13*dAdchi22332 + F12*F33*chi11*dAdchi23132 + F12*F33*chi12*dAdchi23232 + F12*F33*chi13*dAdchi23332 + F13*F31*chi11*dAdchi31132 + F13*F31*chi12*dAdchi31232 + F13*F31*chi13*dAdchi31332 + F13*F32*chi11*dAdchi32132 + F13*F32*chi12*dAdchi32232 + F13*F32*chi13*dAdchi32332 + F13*F33*chi11*dAdchi33132 + F13*F33*chi12*dAdchi33232 + F13*F33*chi13*dAdchi33332;
        dadchi(7,7) = F11*F31*chi11*dAdchi11131 + F11*F31*chi12*dAdchi11231 + F11*F31*chi13*dAdchi11331 + F11*F32*chi11*dAdchi12131 + F11*F32*chi12*dAdchi12231 + F11*F32*chi13*dAdchi12331 + F11*F33*chi11*dAdchi13131 + F11*F33*chi12*dAdchi13231 + F11*F33*chi13*dAdchi13331 + F12*F31*chi11*dAdchi21131 + F12*F31*chi12*dAdchi21231 + F12*F31*chi13*dAdchi21331 + F12*F32*chi11*dAdchi22131 + F12*F32*chi12*dAdchi22231 + F12*F32*chi13*dAdchi22331 + F12*F33*chi11*dAdchi23131 + F12*F33*chi12*dAdchi23231 + F12*F33*chi13*dAdchi23331 + F13*F31*chi11*dAdchi31131 + F13*F31*chi12*dAdchi31231 + F13*F31*chi13*dAdchi31331 + F13*F32*chi11*dAdchi32131 + F13*F32*chi12*dAdchi32231 + F13*F32*chi13*dAdchi32331 + F13*F33*chi11*dAdchi33131 + F13*F33*chi12*dAdchi33231 + F13*F33*chi13*dAdchi33331;
        dadchi(7,8) = F11*F31*chi11*dAdchi11121 + F11*F31*chi12*dAdchi11221 + F11*F31*chi13*dAdchi11321 + F11*F32*chi11*dAdchi12121 + F11*F32*chi12*dAdchi12221 + F11*F32*chi13*dAdchi12321 + F11*F33*chi11*dAdchi13121 + F11*F33*chi12*dAdchi13221 + F11*F33*chi13*dAdchi13321 + F12*F31*chi11*dAdchi21121 + F12*F31*chi12*dAdchi21221 + F12*F31*chi13*dAdchi21321 + F12*F32*chi11*dAdchi22121 + F12*F32*chi12*dAdchi22221 + F12*F32*chi13*dAdchi22321 + F12*F33*chi11*dAdchi23121 + F12*F33*chi12*dAdchi23221 + F12*F33*chi13*dAdchi23321 + F13*F31*chi11*dAdchi31121 + F13*F31*chi12*dAdchi31221 + F13*F31*chi13*dAdchi31321 + F13*F32*chi11*dAdchi32121 + F13*F32*chi12*dAdchi32221 + F13*F32*chi13*dAdchi32321 + F13*F33*chi11*dAdchi33121 + F13*F33*chi12*dAdchi33221 + F13*F33*chi13*dAdchi33321;
        dadchi(8,0) = A111*F11*F21 + A121*F11*F22 + A131*F11*F23 + A211*F12*F21 + A221*F12*F22 + A231*F12*F23 + A311*F13*F21 + A321*F13*F22 + A331*F13*F23 + F11*F21*chi11*dAdchi11111 + F11*F21*chi12*dAdchi11211 + F11*F21*chi13*dAdchi11311 + F11*F22*chi11*dAdchi12111 + F11*F22*chi12*dAdchi12211 + F11*F22*chi13*dAdchi12311 + F11*F23*chi11*dAdchi13111 + F11*F23*chi12*dAdchi13211 + F11*F23*chi13*dAdchi13311 + F12*F21*chi11*dAdchi21111 + F12*F21*chi12*dAdchi21211 + F12*F21*chi13*dAdchi21311 + F12*F22*chi11*dAdchi22111 + F12*F22*chi12*dAdchi22211 + F12*F22*chi13*dAdchi22311 + F12*F23*chi11*dAdchi23111 + F12*F23*chi12*dAdchi23211 + F12*F23*chi13*dAdchi23311 + F13*F21*chi11*dAdchi31111 + F13*F21*chi12*dAdchi31211 + F13*F21*chi13*dAdchi31311 + F13*F22*chi11*dAdchi32111 + F13*F22*chi12*dAdchi32211 + F13*F22*chi13*dAdchi32311 + F13*F23*chi11*dAdchi33111 + F13*F23*chi12*dAdchi33211 + F13*F23*chi13*dAdchi33311;
        dadchi(8,1) = F11*F21*chi11*dAdchi11122 + F11*F21*chi12*dAdchi11222 + F11*F21*chi13*dAdchi11322 + F11*F22*chi11*dAdchi12122 + F11*F22*chi12*dAdchi12222 + F11*F22*chi13*dAdchi12322 + F11*F23*chi11*dAdchi13122 + F11*F23*chi12*dAdchi13222 + F11*F23*chi13*dAdchi13322 + F12*F21*chi11*dAdchi21122 + F12*F21*chi12*dAdchi21222 + F12*F21*chi13*dAdchi21322 + F12*F22*chi11*dAdchi22122 + F12*F22*chi12*dAdchi22222 + F12*F22*chi13*dAdchi22322 + F12*F23*chi11*dAdchi23122 + F12*F23*chi12*dAdchi23222 + F12*F23*chi13*dAdchi23322 + F13*F21*chi11*dAdchi31122 + F13*F21*chi12*dAdchi31222 + F13*F21*chi13*dAdchi31322 + F13*F22*chi11*dAdchi32122 + F13*F22*chi12*dAdchi32222 + F13*F22*chi13*dAdchi32322 + F13*F23*chi11*dAdchi33122 + F13*F23*chi12*dAdchi33222 + F13*F23*chi13*dAdchi33322;
        dadchi(8,2) = F11*F21*chi11*dAdchi11133 + F11*F21*chi12*dAdchi11233 + F11*F21*chi13*dAdchi11333 + F11*F22*chi11*dAdchi12133 + F11*F22*chi12*dAdchi12233 + F11*F22*chi13*dAdchi12333 + F11*F23*chi11*dAdchi13133 + F11*F23*chi12*dAdchi13233 + F11*F23*chi13*dAdchi13333 + F12*F21*chi11*dAdchi21133 + F12*F21*chi12*dAdchi21233 + F12*F21*chi13*dAdchi21333 + F12*F22*chi11*dAdchi22133 + F12*F22*chi12*dAdchi22233 + F12*F22*chi13*dAdchi22333 + F12*F23*chi11*dAdchi23133 + F12*F23*chi12*dAdchi23233 + F12*F23*chi13*dAdchi23333 + F13*F21*chi11*dAdchi31133 + F13*F21*chi12*dAdchi31233 + F13*F21*chi13*dAdchi31333 + F13*F22*chi11*dAdchi32133 + F13*F22*chi12*dAdchi32233 + F13*F22*chi13*dAdchi32333 + F13*F23*chi11*dAdchi33133 + F13*F23*chi12*dAdchi33233 + F13*F23*chi13*dAdchi33333;
        dadchi(8,3) = F11*F21*chi11*dAdchi11123 + F11*F21*chi12*dAdchi11223 + F11*F21*chi13*dAdchi11323 + F11*F22*chi11*dAdchi12123 + F11*F22*chi12*dAdchi12223 + F11*F22*chi13*dAdchi12323 + F11*F23*chi11*dAdchi13123 + F11*F23*chi12*dAdchi13223 + F11*F23*chi13*dAdchi13323 + F12*F21*chi11*dAdchi21123 + F12*F21*chi12*dAdchi21223 + F12*F21*chi13*dAdchi21323 + F12*F22*chi11*dAdchi22123 + F12*F22*chi12*dAdchi22223 + F12*F22*chi13*dAdchi22323 + F12*F23*chi11*dAdchi23123 + F12*F23*chi12*dAdchi23223 + F12*F23*chi13*dAdchi23323 + F13*F21*chi11*dAdchi31123 + F13*F21*chi12*dAdchi31223 + F13*F21*chi13*dAdchi31323 + F13*F22*chi11*dAdchi32123 + F13*F22*chi12*dAdchi32223 + F13*F22*chi13*dAdchi32323 + F13*F23*chi11*dAdchi33123 + F13*F23*chi12*dAdchi33223 + F13*F23*chi13*dAdchi33323;
        dadchi(8,4) = A111*F11*F21 + A121*F11*F22 + A131*F11*F23 + A211*F12*F21 + A221*F12*F22 + A231*F12*F23 + A311*F13*F21 + A321*F13*F22 + A331*F13*F23 + F11*F21*chi11*dAdchi11113 + F11*F21*chi12*dAdchi11213 + F11*F21*chi13*dAdchi11313 + F11*F22*chi11*dAdchi12113 + F11*F22*chi12*dAdchi12213 + F11*F22*chi13*dAdchi12313 + F11*F23*chi11*dAdchi13113 + F11*F23*chi12*dAdchi13213 + F11*F23*chi13*dAdchi13313 + F12*F21*chi11*dAdchi21113 + F12*F21*chi12*dAdchi21213 + F12*F21*chi13*dAdchi21313 + F12*F22*chi11*dAdchi22113 + F12*F22*chi12*dAdchi22213 + F12*F22*chi13*dAdchi22313 + F12*F23*chi11*dAdchi23113 + F12*F23*chi12*dAdchi23213 + F12*F23*chi13*dAdchi23313 + F13*F21*chi11*dAdchi31113 + F13*F21*chi12*dAdchi31213 + F13*F21*chi13*dAdchi31313 + F13*F22*chi11*dAdchi32113 + F13*F22*chi12*dAdchi32213 + F13*F22*chi13*dAdchi32313 + F13*F23*chi11*dAdchi33113 + F13*F23*chi12*dAdchi33213 + F13*F23*chi13*dAdchi33313;
        dadchi(8,5) = A111*F11*F21 + A121*F11*F22 + A131*F11*F23 + A211*F12*F21 + A221*F12*F22 + A231*F12*F23 + A311*F13*F21 + A321*F13*F22 + A331*F13*F23 + F11*F21*chi11*dAdchi11112 + F11*F21*chi12*dAdchi11212 + F11*F21*chi13*dAdchi11312 + F11*F22*chi11*dAdchi12112 + F11*F22*chi12*dAdchi12212 + F11*F22*chi13*dAdchi12312 + F11*F23*chi11*dAdchi13112 + F11*F23*chi12*dAdchi13212 + F11*F23*chi13*dAdchi13312 + F12*F21*chi11*dAdchi21112 + F12*F21*chi12*dAdchi21212 + F12*F21*chi13*dAdchi21312 + F12*F22*chi11*dAdchi22112 + F12*F22*chi12*dAdchi22212 + F12*F22*chi13*dAdchi22312 + F12*F23*chi11*dAdchi23112 + F12*F23*chi12*dAdchi23212 + F12*F23*chi13*dAdchi23312 + F13*F21*chi11*dAdchi31112 + F13*F21*chi12*dAdchi31212 + F13*F21*chi13*dAdchi31312 + F13*F22*chi11*dAdchi32112 + F13*F22*chi12*dAdchi32212 + F13*F22*chi13*dAdchi32312 + F13*F23*chi11*dAdchi33112 + F13*F23*chi12*dAdchi33212 + F13*F23*chi13*dAdchi33312;
        dadchi(8,6) = F11*F21*chi11*dAdchi11132 + F11*F21*chi12*dAdchi11232 + F11*F21*chi13*dAdchi11332 + F11*F22*chi11*dAdchi12132 + F11*F22*chi12*dAdchi12232 + F11*F22*chi13*dAdchi12332 + F11*F23*chi11*dAdchi13132 + F11*F23*chi12*dAdchi13232 + F11*F23*chi13*dAdchi13332 + F12*F21*chi11*dAdchi21132 + F12*F21*chi12*dAdchi21232 + F12*F21*chi13*dAdchi21332 + F12*F22*chi11*dAdchi22132 + F12*F22*chi12*dAdchi22232 + F12*F22*chi13*dAdchi22332 + F12*F23*chi11*dAdchi23132 + F12*F23*chi12*dAdchi23232 + F12*F23*chi13*dAdchi23332 + F13*F21*chi11*dAdchi31132 + F13*F21*chi12*dAdchi31232 + F13*F21*chi13*dAdchi31332 + F13*F22*chi11*dAdchi32132 + F13*F22*chi12*dAdchi32232 + F13*F22*chi13*dAdchi32332 + F13*F23*chi11*dAdchi33132 + F13*F23*chi12*dAdchi33232 + F13*F23*chi13*dAdchi33332;
        dadchi(8,7) = F11*F21*chi11*dAdchi11131 + F11*F21*chi12*dAdchi11231 + F11*F21*chi13*dAdchi11331 + F11*F22*chi11*dAdchi12131 + F11*F22*chi12*dAdchi12231 + F11*F22*chi13*dAdchi12331 + F11*F23*chi11*dAdchi13131 + F11*F23*chi12*dAdchi13231 + F11*F23*chi13*dAdchi13331 + F12*F21*chi11*dAdchi21131 + F12*F21*chi12*dAdchi21231 + F12*F21*chi13*dAdchi21331 + F12*F22*chi11*dAdchi22131 + F12*F22*chi12*dAdchi22231 + F12*F22*chi13*dAdchi22331 + F12*F23*chi11*dAdchi23131 + F12*F23*chi12*dAdchi23231 + F12*F23*chi13*dAdchi23331 + F13*F21*chi11*dAdchi31131 + F13*F21*chi12*dAdchi31231 + F13*F21*chi13*dAdchi31331 + F13*F22*chi11*dAdchi32131 + F13*F22*chi12*dAdchi32231 + F13*F22*chi13*dAdchi32331 + F13*F23*chi11*dAdchi33131 + F13*F23*chi12*dAdchi33231 + F13*F23*chi13*dAdchi33331;
        dadchi(8,8) = F11*F21*chi11*dAdchi11121 + F11*F21*chi12*dAdchi11221 + F11*F21*chi13*dAdchi11321 + F11*F22*chi11*dAdchi12121 + F11*F22*chi12*dAdchi12221 + F11*F22*chi13*dAdchi12321 + F11*F23*chi11*dAdchi13121 + F11*F23*chi12*dAdchi13221 + F11*F23*chi13*dAdchi13321 + F12*F21*chi11*dAdchi21121 + F12*F21*chi12*dAdchi21221 + F12*F21*chi13*dAdchi21321 + F12*F22*chi11*dAdchi22121 + F12*F22*chi12*dAdchi22221 + F12*F22*chi13*dAdchi22321 + F12*F23*chi11*dAdchi23121 + F12*F23*chi12*dAdchi23221 + F12*F23*chi13*dAdchi23321 + F13*F21*chi11*dAdchi31121 + F13*F21*chi12*dAdchi31221 + F13*F21*chi13*dAdchi31321 + F13*F22*chi11*dAdchi32121 + F13*F22*chi12*dAdchi32221 + F13*F22*chi13*dAdchi32321 + F13*F23*chi11*dAdchi33121 + F13*F23*chi12*dAdchi33221 + F13*F23*chi13*dAdchi33321;
        dadchi(9,0) = A111*F11*F21 + A121*F12*F21 + A131*F13*F21 + A211*F11*F22 + A221*F12*F22 + A231*F13*F22 + A311*F11*F23 + A321*F12*F23 + A331*F13*F23 + F11*F21*chi11*dAdchi11111 + F11*F21*chi12*dAdchi11211 + F11*F21*chi13*dAdchi11311 + F11*F22*chi11*dAdchi21111 + F11*F22*chi12*dAdchi21211 + F11*F22*chi13*dAdchi21311 + F11*F23*chi11*dAdchi31111 + F11*F23*chi12*dAdchi31211 + F11*F23*chi13*dAdchi31311 + F12*F21*chi11*dAdchi12111 + F12*F21*chi12*dAdchi12211 + F12*F21*chi13*dAdchi12311 + F12*F22*chi11*dAdchi22111 + F12*F22*chi12*dAdchi22211 + F12*F22*chi13*dAdchi22311 + F12*F23*chi11*dAdchi32111 + F12*F23*chi12*dAdchi32211 + F12*F23*chi13*dAdchi32311 + F13*F21*chi11*dAdchi13111 + F13*F21*chi12*dAdchi13211 + F13*F21*chi13*dAdchi13311 + F13*F22*chi11*dAdchi23111 + F13*F22*chi12*dAdchi23211 + F13*F22*chi13*dAdchi23311 + F13*F23*chi11*dAdchi33111 + F13*F23*chi12*dAdchi33211 + F13*F23*chi13*dAdchi33311;
        dadchi(9,1) = F11*F21*chi11*dAdchi11122 + F11*F21*chi12*dAdchi11222 + F11*F21*chi13*dAdchi11322 + F11*F22*chi11*dAdchi21122 + F11*F22*chi12*dAdchi21222 + F11*F22*chi13*dAdchi21322 + F11*F23*chi11*dAdchi31122 + F11*F23*chi12*dAdchi31222 + F11*F23*chi13*dAdchi31322 + F12*F21*chi11*dAdchi12122 + F12*F21*chi12*dAdchi12222 + F12*F21*chi13*dAdchi12322 + F12*F22*chi11*dAdchi22122 + F12*F22*chi12*dAdchi22222 + F12*F22*chi13*dAdchi22322 + F12*F23*chi11*dAdchi32122 + F12*F23*chi12*dAdchi32222 + F12*F23*chi13*dAdchi32322 + F13*F21*chi11*dAdchi13122 + F13*F21*chi12*dAdchi13222 + F13*F21*chi13*dAdchi13322 + F13*F22*chi11*dAdchi23122 + F13*F22*chi12*dAdchi23222 + F13*F22*chi13*dAdchi23322 + F13*F23*chi11*dAdchi33122 + F13*F23*chi12*dAdchi33222 + F13*F23*chi13*dAdchi33322;
        dadchi(9,2) = F11*F21*chi11*dAdchi11133 + F11*F21*chi12*dAdchi11233 + F11*F21*chi13*dAdchi11333 + F11*F22*chi11*dAdchi21133 + F11*F22*chi12*dAdchi21233 + F11*F22*chi13*dAdchi21333 + F11*F23*chi11*dAdchi31133 + F11*F23*chi12*dAdchi31233 + F11*F23*chi13*dAdchi31333 + F12*F21*chi11*dAdchi12133 + F12*F21*chi12*dAdchi12233 + F12*F21*chi13*dAdchi12333 + F12*F22*chi11*dAdchi22133 + F12*F22*chi12*dAdchi22233 + F12*F22*chi13*dAdchi22333 + F12*F23*chi11*dAdchi32133 + F12*F23*chi12*dAdchi32233 + F12*F23*chi13*dAdchi32333 + F13*F21*chi11*dAdchi13133 + F13*F21*chi12*dAdchi13233 + F13*F21*chi13*dAdchi13333 + F13*F22*chi11*dAdchi23133 + F13*F22*chi12*dAdchi23233 + F13*F22*chi13*dAdchi23333 + F13*F23*chi11*dAdchi33133 + F13*F23*chi12*dAdchi33233 + F13*F23*chi13*dAdchi33333;
        dadchi(9,3) = F11*F21*chi11*dAdchi11123 + F11*F21*chi12*dAdchi11223 + F11*F21*chi13*dAdchi11323 + F11*F22*chi11*dAdchi21123 + F11*F22*chi12*dAdchi21223 + F11*F22*chi13*dAdchi21323 + F11*F23*chi11*dAdchi31123 + F11*F23*chi12*dAdchi31223 + F11*F23*chi13*dAdchi31323 + F12*F21*chi11*dAdchi12123 + F12*F21*chi12*dAdchi12223 + F12*F21*chi13*dAdchi12323 + F12*F22*chi11*dAdchi22123 + F12*F22*chi12*dAdchi22223 + F12*F22*chi13*dAdchi22323 + F12*F23*chi11*dAdchi32123 + F12*F23*chi12*dAdchi32223 + F12*F23*chi13*dAdchi32323 + F13*F21*chi11*dAdchi13123 + F13*F21*chi12*dAdchi13223 + F13*F21*chi13*dAdchi13323 + F13*F22*chi11*dAdchi23123 + F13*F22*chi12*dAdchi23223 + F13*F22*chi13*dAdchi23323 + F13*F23*chi11*dAdchi33123 + F13*F23*chi12*dAdchi33223 + F13*F23*chi13*dAdchi33323;
        dadchi(9,4) = A111*F11*F21 + A121*F12*F21 + A131*F13*F21 + A211*F11*F22 + A221*F12*F22 + A231*F13*F22 + A311*F11*F23 + A321*F12*F23 + A331*F13*F23 + F11*F21*chi11*dAdchi11113 + F11*F21*chi12*dAdchi11213 + F11*F21*chi13*dAdchi11313 + F11*F22*chi11*dAdchi21113 + F11*F22*chi12*dAdchi21213 + F11*F22*chi13*dAdchi21313 + F11*F23*chi11*dAdchi31113 + F11*F23*chi12*dAdchi31213 + F11*F23*chi13*dAdchi31313 + F12*F21*chi11*dAdchi12113 + F12*F21*chi12*dAdchi12213 + F12*F21*chi13*dAdchi12313 + F12*F22*chi11*dAdchi22113 + F12*F22*chi12*dAdchi22213 + F12*F22*chi13*dAdchi22313 + F12*F23*chi11*dAdchi32113 + F12*F23*chi12*dAdchi32213 + F12*F23*chi13*dAdchi32313 + F13*F21*chi11*dAdchi13113 + F13*F21*chi12*dAdchi13213 + F13*F21*chi13*dAdchi13313 + F13*F22*chi11*dAdchi23113 + F13*F22*chi12*dAdchi23213 + F13*F22*chi13*dAdchi23313 + F13*F23*chi11*dAdchi33113 + F13*F23*chi12*dAdchi33213 + F13*F23*chi13*dAdchi33313;
        dadchi(9,5) = A111*F11*F21 + A121*F12*F21 + A131*F13*F21 + A211*F11*F22 + A221*F12*F22 + A231*F13*F22 + A311*F11*F23 + A321*F12*F23 + A331*F13*F23 + F11*F21*chi11*dAdchi11112 + F11*F21*chi12*dAdchi11212 + F11*F21*chi13*dAdchi11312 + F11*F22*chi11*dAdchi21112 + F11*F22*chi12*dAdchi21212 + F11*F22*chi13*dAdchi21312 + F11*F23*chi11*dAdchi31112 + F11*F23*chi12*dAdchi31212 + F11*F23*chi13*dAdchi31312 + F12*F21*chi11*dAdchi12112 + F12*F21*chi12*dAdchi12212 + F12*F21*chi13*dAdchi12312 + F12*F22*chi11*dAdchi22112 + F12*F22*chi12*dAdchi22212 + F12*F22*chi13*dAdchi22312 + F12*F23*chi11*dAdchi32112 + F12*F23*chi12*dAdchi32212 + F12*F23*chi13*dAdchi32312 + F13*F21*chi11*dAdchi13112 + F13*F21*chi12*dAdchi13212 + F13*F21*chi13*dAdchi13312 + F13*F22*chi11*dAdchi23112 + F13*F22*chi12*dAdchi23212 + F13*F22*chi13*dAdchi23312 + F13*F23*chi11*dAdchi33112 + F13*F23*chi12*dAdchi33212 + F13*F23*chi13*dAdchi33312;
        dadchi(9,6) = F11*F21*chi11*dAdchi11132 + F11*F21*chi12*dAdchi11232 + F11*F21*chi13*dAdchi11332 + F11*F22*chi11*dAdchi21132 + F11*F22*chi12*dAdchi21232 + F11*F22*chi13*dAdchi21332 + F11*F23*chi11*dAdchi31132 + F11*F23*chi12*dAdchi31232 + F11*F23*chi13*dAdchi31332 + F12*F21*chi11*dAdchi12132 + F12*F21*chi12*dAdchi12232 + F12*F21*chi13*dAdchi12332 + F12*F22*chi11*dAdchi22132 + F12*F22*chi12*dAdchi22232 + F12*F22*chi13*dAdchi22332 + F12*F23*chi11*dAdchi32132 + F12*F23*chi12*dAdchi32232 + F12*F23*chi13*dAdchi32332 + F13*F21*chi11*dAdchi13132 + F13*F21*chi12*dAdchi13232 + F13*F21*chi13*dAdchi13332 + F13*F22*chi11*dAdchi23132 + F13*F22*chi12*dAdchi23232 + F13*F22*chi13*dAdchi23332 + F13*F23*chi11*dAdchi33132 + F13*F23*chi12*dAdchi33232 + F13*F23*chi13*dAdchi33332;
        dadchi(9,7) = F11*F21*chi11*dAdchi11131 + F11*F21*chi12*dAdchi11231 + F11*F21*chi13*dAdchi11331 + F11*F22*chi11*dAdchi21131 + F11*F22*chi12*dAdchi21231 + F11*F22*chi13*dAdchi21331 + F11*F23*chi11*dAdchi31131 + F11*F23*chi12*dAdchi31231 + F11*F23*chi13*dAdchi31331 + F12*F21*chi11*dAdchi12131 + F12*F21*chi12*dAdchi12231 + F12*F21*chi13*dAdchi12331 + F12*F22*chi11*dAdchi22131 + F12*F22*chi12*dAdchi22231 + F12*F22*chi13*dAdchi22331 + F12*F23*chi11*dAdchi32131 + F12*F23*chi12*dAdchi32231 + F12*F23*chi13*dAdchi32331 + F13*F21*chi11*dAdchi13131 + F13*F21*chi12*dAdchi13231 + F13*F21*chi13*dAdchi13331 + F13*F22*chi11*dAdchi23131 + F13*F22*chi12*dAdchi23231 + F13*F22*chi13*dAdchi23331 + F13*F23*chi11*dAdchi33131 + F13*F23*chi12*dAdchi33231 + F13*F23*chi13*dAdchi33331;
        dadchi(9,8) = F11*F21*chi11*dAdchi11121 + F11*F21*chi12*dAdchi11221 + F11*F21*chi13*dAdchi11321 + F11*F22*chi11*dAdchi21121 + F11*F22*chi12*dAdchi21221 + F11*F22*chi13*dAdchi21321 + F11*F23*chi11*dAdchi31121 + F11*F23*chi12*dAdchi31221 + F11*F23*chi13*dAdchi31321 + F12*F21*chi11*dAdchi12121 + F12*F21*chi12*dAdchi12221 + F12*F21*chi13*dAdchi12321 + F12*F22*chi11*dAdchi22121 + F12*F22*chi12*dAdchi22221 + F12*F22*chi13*dAdchi22321 + F12*F23*chi11*dAdchi32121 + F12*F23*chi12*dAdchi32221 + F12*F23*chi13*dAdchi32321 + F13*F21*chi11*dAdchi13121 + F13*F21*chi12*dAdchi13221 + F13*F21*chi13*dAdchi13321 + F13*F22*chi11*dAdchi23121 + F13*F22*chi12*dAdchi23221 + F13*F22*chi13*dAdchi23321 + F13*F23*chi11*dAdchi33121 + F13*F23*chi12*dAdchi33221 + F13*F23*chi13*dAdchi33321;
        dadchi(10,0) = F21*F21*chi21*dAdchi11111 + F21*F21*chi22*dAdchi11211 + F21*F21*chi23*dAdchi11311 + F21*F22*chi21*dAdchi12111 + F21*F22*chi21*dAdchi21111 + F21*F22*chi22*dAdchi12211 + F21*F22*chi22*dAdchi21211 + F21*F22*chi23*dAdchi12311 + F21*F22*chi23*dAdchi21311 + F21*F23*chi21*dAdchi13111 + F21*F23*chi21*dAdchi31111 + F21*F23*chi22*dAdchi13211 + F21*F23*chi22*dAdchi31211 + F21*F23*chi23*dAdchi13311 + F21*F23*chi23*dAdchi31311 + F22*F22*chi21*dAdchi22111 + F22*F22*chi22*dAdchi22211 + F22*F22*chi23*dAdchi22311 + F22*F23*chi21*dAdchi23111 + F22*F23*chi21*dAdchi32111 + F22*F23*chi22*dAdchi23211 + F22*F23*chi22*dAdchi32211 + F22*F23*chi23*dAdchi23311 + F22*F23*chi23*dAdchi32311 + F23*F23*chi21*dAdchi33111 + F23*F23*chi22*dAdchi33211 + F23*F23*chi23*dAdchi33311;
        dadchi(10,1) = A112*F21*F21 + A122*F21*F22 + A132*F21*F23 + A212*F21*F22 + A222*F22*F22 + A232*F22*F23 + A312*F21*F23 + A322*F22*F23 + A332*F23*F23 + F21*F21*chi21*dAdchi11122 + F21*F21*chi22*dAdchi11222 + F21*F21*chi23*dAdchi11322 + F21*F22*chi21*dAdchi12122 + F21*F22*chi21*dAdchi21122 + F21*F22*chi22*dAdchi12222 + F21*F22*chi22*dAdchi21222 + F21*F22*chi23*dAdchi12322 + F21*F22*chi23*dAdchi21322 + F21*F23*chi21*dAdchi13122 + F21*F23*chi21*dAdchi31122 + F21*F23*chi22*dAdchi13222 + F21*F23*chi22*dAdchi31222 + F21*F23*chi23*dAdchi13322 + F21*F23*chi23*dAdchi31322 + F22*F22*chi21*dAdchi22122 + F22*F22*chi22*dAdchi22222 + F22*F22*chi23*dAdchi22322 + F22*F23*chi21*dAdchi23122 + F22*F23*chi21*dAdchi32122 + F22*F23*chi22*dAdchi23222 + F22*F23*chi22*dAdchi32222 + F22*F23*chi23*dAdchi23322 + F22*F23*chi23*dAdchi32322 + F23*F23*chi21*dAdchi33122 + F23*F23*chi22*dAdchi33222 + F23*F23*chi23*dAdchi33322;
        dadchi(10,2) = F21*F21*chi21*dAdchi11133 + F21*F21*chi22*dAdchi11233 + F21*F21*chi23*dAdchi11333 + F21*F22*chi21*dAdchi12133 + F21*F22*chi21*dAdchi21133 + F21*F22*chi22*dAdchi12233 + F21*F22*chi22*dAdchi21233 + F21*F22*chi23*dAdchi12333 + F21*F22*chi23*dAdchi21333 + F21*F23*chi21*dAdchi13133 + F21*F23*chi21*dAdchi31133 + F21*F23*chi22*dAdchi13233 + F21*F23*chi22*dAdchi31233 + F21*F23*chi23*dAdchi13333 + F21*F23*chi23*dAdchi31333 + F22*F22*chi21*dAdchi22133 + F22*F22*chi22*dAdchi22233 + F22*F22*chi23*dAdchi22333 + F22*F23*chi21*dAdchi23133 + F22*F23*chi21*dAdchi32133 + F22*F23*chi22*dAdchi23233 + F22*F23*chi22*dAdchi32233 + F22*F23*chi23*dAdchi23333 + F22*F23*chi23*dAdchi32333 + F23*F23*chi21*dAdchi33133 + F23*F23*chi22*dAdchi33233 + F23*F23*chi23*dAdchi33333;
        dadchi(10,3) = A112*F21*F21 + A122*F21*F22 + A132*F21*F23 + A212*F21*F22 + A222*F22*F22 + A232*F22*F23 + A312*F21*F23 + A322*F22*F23 + A332*F23*F23 + F21*F21*chi21*dAdchi11123 + F21*F21*chi22*dAdchi11223 + F21*F21*chi23*dAdchi11323 + F21*F22*chi21*dAdchi12123 + F21*F22*chi21*dAdchi21123 + F21*F22*chi22*dAdchi12223 + F21*F22*chi22*dAdchi21223 + F21*F22*chi23*dAdchi12323 + F21*F22*chi23*dAdchi21323 + F21*F23*chi21*dAdchi13123 + F21*F23*chi21*dAdchi31123 + F21*F23*chi22*dAdchi13223 + F21*F23*chi22*dAdchi31223 + F21*F23*chi23*dAdchi13323 + F21*F23*chi23*dAdchi31323 + F22*F22*chi21*dAdchi22123 + F22*F22*chi22*dAdchi22223 + F22*F22*chi23*dAdchi22323 + F22*F23*chi21*dAdchi23123 + F22*F23*chi21*dAdchi32123 + F22*F23*chi22*dAdchi23223 + F22*F23*chi22*dAdchi32223 + F22*F23*chi23*dAdchi23323 + F22*F23*chi23*dAdchi32323 + F23*F23*chi21*dAdchi33123 + F23*F23*chi22*dAdchi33223 + F23*F23*chi23*dAdchi33323;
        dadchi(10,4) = F21*F21*chi21*dAdchi11113 + F21*F21*chi22*dAdchi11213 + F21*F21*chi23*dAdchi11313 + F21*F22*chi21*dAdchi12113 + F21*F22*chi21*dAdchi21113 + F21*F22*chi22*dAdchi12213 + F21*F22*chi22*dAdchi21213 + F21*F22*chi23*dAdchi12313 + F21*F22*chi23*dAdchi21313 + F21*F23*chi21*dAdchi13113 + F21*F23*chi21*dAdchi31113 + F21*F23*chi22*dAdchi13213 + F21*F23*chi22*dAdchi31213 + F21*F23*chi23*dAdchi13313 + F21*F23*chi23*dAdchi31313 + F22*F22*chi21*dAdchi22113 + F22*F22*chi22*dAdchi22213 + F22*F22*chi23*dAdchi22313 + F22*F23*chi21*dAdchi23113 + F22*F23*chi21*dAdchi32113 + F22*F23*chi22*dAdchi23213 + F22*F23*chi22*dAdchi32213 + F22*F23*chi23*dAdchi23313 + F22*F23*chi23*dAdchi32313 + F23*F23*chi21*dAdchi33113 + F23*F23*chi22*dAdchi33213 + F23*F23*chi23*dAdchi33313;
        dadchi(10,5) = F21*F21*chi21*dAdchi11112 + F21*F21*chi22*dAdchi11212 + F21*F21*chi23*dAdchi11312 + F21*F22*chi21*dAdchi12112 + F21*F22*chi21*dAdchi21112 + F21*F22*chi22*dAdchi12212 + F21*F22*chi22*dAdchi21212 + F21*F22*chi23*dAdchi12312 + F21*F22*chi23*dAdchi21312 + F21*F23*chi21*dAdchi13112 + F21*F23*chi21*dAdchi31112 + F21*F23*chi22*dAdchi13212 + F21*F23*chi22*dAdchi31212 + F21*F23*chi23*dAdchi13312 + F21*F23*chi23*dAdchi31312 + F22*F22*chi21*dAdchi22112 + F22*F22*chi22*dAdchi22212 + F22*F22*chi23*dAdchi22312 + F22*F23*chi21*dAdchi23112 + F22*F23*chi21*dAdchi32112 + F22*F23*chi22*dAdchi23212 + F22*F23*chi22*dAdchi32212 + F22*F23*chi23*dAdchi23312 + F22*F23*chi23*dAdchi32312 + F23*F23*chi21*dAdchi33112 + F23*F23*chi22*dAdchi33212 + F23*F23*chi23*dAdchi33312;
        dadchi(10,6) = F21*F21*chi21*dAdchi11132 + F21*F21*chi22*dAdchi11232 + F21*F21*chi23*dAdchi11332 + F21*F22*chi21*dAdchi12132 + F21*F22*chi21*dAdchi21132 + F21*F22*chi22*dAdchi12232 + F21*F22*chi22*dAdchi21232 + F21*F22*chi23*dAdchi12332 + F21*F22*chi23*dAdchi21332 + F21*F23*chi21*dAdchi13132 + F21*F23*chi21*dAdchi31132 + F21*F23*chi22*dAdchi13232 + F21*F23*chi22*dAdchi31232 + F21*F23*chi23*dAdchi13332 + F21*F23*chi23*dAdchi31332 + F22*F22*chi21*dAdchi22132 + F22*F22*chi22*dAdchi22232 + F22*F22*chi23*dAdchi22332 + F22*F23*chi21*dAdchi23132 + F22*F23*chi21*dAdchi32132 + F22*F23*chi22*dAdchi23232 + F22*F23*chi22*dAdchi32232 + F22*F23*chi23*dAdchi23332 + F22*F23*chi23*dAdchi32332 + F23*F23*chi21*dAdchi33132 + F23*F23*chi22*dAdchi33232 + F23*F23*chi23*dAdchi33332;
        dadchi(10,7) = F21*F21*chi21*dAdchi11131 + F21*F21*chi22*dAdchi11231 + F21*F21*chi23*dAdchi11331 + F21*F22*chi21*dAdchi12131 + F21*F22*chi21*dAdchi21131 + F21*F22*chi22*dAdchi12231 + F21*F22*chi22*dAdchi21231 + F21*F22*chi23*dAdchi12331 + F21*F22*chi23*dAdchi21331 + F21*F23*chi21*dAdchi13131 + F21*F23*chi21*dAdchi31131 + F21*F23*chi22*dAdchi13231 + F21*F23*chi22*dAdchi31231 + F21*F23*chi23*dAdchi13331 + F21*F23*chi23*dAdchi31331 + F22*F22*chi21*dAdchi22131 + F22*F22*chi22*dAdchi22231 + F22*F22*chi23*dAdchi22331 + F22*F23*chi21*dAdchi23131 + F22*F23*chi21*dAdchi32131 + F22*F23*chi22*dAdchi23231 + F22*F23*chi22*dAdchi32231 + F22*F23*chi23*dAdchi23331 + F22*F23*chi23*dAdchi32331 + F23*F23*chi21*dAdchi33131 + F23*F23*chi22*dAdchi33231 + F23*F23*chi23*dAdchi33331;
        dadchi(10,8) = A112*F21*F21 + A122*F21*F22 + A132*F21*F23 + A212*F21*F22 + A222*F22*F22 + A232*F22*F23 + A312*F21*F23 + A322*F22*F23 + A332*F23*F23 + F21*F21*chi21*dAdchi11121 + F21*F21*chi22*dAdchi11221 + F21*F21*chi23*dAdchi11321 + F21*F22*chi21*dAdchi12121 + F21*F22*chi21*dAdchi21121 + F21*F22*chi22*dAdchi12221 + F21*F22*chi22*dAdchi21221 + F21*F22*chi23*dAdchi12321 + F21*F22*chi23*dAdchi21321 + F21*F23*chi21*dAdchi13121 + F21*F23*chi21*dAdchi31121 + F21*F23*chi22*dAdchi13221 + F21*F23*chi22*dAdchi31221 + F21*F23*chi23*dAdchi13321 + F21*F23*chi23*dAdchi31321 + F22*F22*chi21*dAdchi22121 + F22*F22*chi22*dAdchi22221 + F22*F22*chi23*dAdchi22321 + F22*F23*chi21*dAdchi23121 + F22*F23*chi21*dAdchi32121 + F22*F23*chi22*dAdchi23221 + F22*F23*chi22*dAdchi32221 + F22*F23*chi23*dAdchi23321 + F22*F23*chi23*dAdchi32321 + F23*F23*chi21*dAdchi33121 + F23*F23*chi22*dAdchi33221 + F23*F23*chi23*dAdchi33321;
        dadchi(11,0) = F21*F31*chi31*dAdchi11111 + F21*F31*chi32*dAdchi11211 + F21*F31*chi33*dAdchi11311 + F21*F32*chi31*dAdchi12111 + F21*F32*chi32*dAdchi12211 + F21*F32*chi33*dAdchi12311 + F21*F33*chi31*dAdchi13111 + F21*F33*chi32*dAdchi13211 + F21*F33*chi33*dAdchi13311 + F22*F31*chi31*dAdchi21111 + F22*F31*chi32*dAdchi21211 + F22*F31*chi33*dAdchi21311 + F22*F32*chi31*dAdchi22111 + F22*F32*chi32*dAdchi22211 + F22*F32*chi33*dAdchi22311 + F22*F33*chi31*dAdchi23111 + F22*F33*chi32*dAdchi23211 + F22*F33*chi33*dAdchi23311 + F23*F31*chi31*dAdchi31111 + F23*F31*chi32*dAdchi31211 + F23*F31*chi33*dAdchi31311 + F23*F32*chi31*dAdchi32111 + F23*F32*chi32*dAdchi32211 + F23*F32*chi33*dAdchi32311 + F23*F33*chi31*dAdchi33111 + F23*F33*chi32*dAdchi33211 + F23*F33*chi33*dAdchi33311;
        dadchi(11,1) = F21*F31*chi31*dAdchi11122 + F21*F31*chi32*dAdchi11222 + F21*F31*chi33*dAdchi11322 + F21*F32*chi31*dAdchi12122 + F21*F32*chi32*dAdchi12222 + F21*F32*chi33*dAdchi12322 + F21*F33*chi31*dAdchi13122 + F21*F33*chi32*dAdchi13222 + F21*F33*chi33*dAdchi13322 + F22*F31*chi31*dAdchi21122 + F22*F31*chi32*dAdchi21222 + F22*F31*chi33*dAdchi21322 + F22*F32*chi31*dAdchi22122 + F22*F32*chi32*dAdchi22222 + F22*F32*chi33*dAdchi22322 + F22*F33*chi31*dAdchi23122 + F22*F33*chi32*dAdchi23222 + F22*F33*chi33*dAdchi23322 + F23*F31*chi31*dAdchi31122 + F23*F31*chi32*dAdchi31222 + F23*F31*chi33*dAdchi31322 + F23*F32*chi31*dAdchi32122 + F23*F32*chi32*dAdchi32222 + F23*F32*chi33*dAdchi32322 + F23*F33*chi31*dAdchi33122 + F23*F33*chi32*dAdchi33222 + F23*F33*chi33*dAdchi33322;
        dadchi(11,2) = A113*F21*F31 + A123*F21*F32 + A133*F21*F33 + A213*F22*F31 + A223*F22*F32 + A233*F22*F33 + A313*F23*F31 + A323*F23*F32 + A333*F23*F33 + F21*F31*chi31*dAdchi11133 + F21*F31*chi32*dAdchi11233 + F21*F31*chi33*dAdchi11333 + F21*F32*chi31*dAdchi12133 + F21*F32*chi32*dAdchi12233 + F21*F32*chi33*dAdchi12333 + F21*F33*chi31*dAdchi13133 + F21*F33*chi32*dAdchi13233 + F21*F33*chi33*dAdchi13333 + F22*F31*chi31*dAdchi21133 + F22*F31*chi32*dAdchi21233 + F22*F31*chi33*dAdchi21333 + F22*F32*chi31*dAdchi22133 + F22*F32*chi32*dAdchi22233 + F22*F32*chi33*dAdchi22333 + F22*F33*chi31*dAdchi23133 + F22*F33*chi32*dAdchi23233 + F22*F33*chi33*dAdchi23333 + F23*F31*chi31*dAdchi31133 + F23*F31*chi32*dAdchi31233 + F23*F31*chi33*dAdchi31333 + F23*F32*chi31*dAdchi32133 + F23*F32*chi32*dAdchi32233 + F23*F32*chi33*dAdchi32333 + F23*F33*chi31*dAdchi33133 + F23*F33*chi32*dAdchi33233 + F23*F33*chi33*dAdchi33333;
        dadchi(11,3) = F21*F31*chi31*dAdchi11123 + F21*F31*chi32*dAdchi11223 + F21*F31*chi33*dAdchi11323 + F21*F32*chi31*dAdchi12123 + F21*F32*chi32*dAdchi12223 + F21*F32*chi33*dAdchi12323 + F21*F33*chi31*dAdchi13123 + F21*F33*chi32*dAdchi13223 + F21*F33*chi33*dAdchi13323 + F22*F31*chi31*dAdchi21123 + F22*F31*chi32*dAdchi21223 + F22*F31*chi33*dAdchi21323 + F22*F32*chi31*dAdchi22123 + F22*F32*chi32*dAdchi22223 + F22*F32*chi33*dAdchi22323 + F22*F33*chi31*dAdchi23123 + F22*F33*chi32*dAdchi23223 + F22*F33*chi33*dAdchi23323 + F23*F31*chi31*dAdchi31123 + F23*F31*chi32*dAdchi31223 + F23*F31*chi33*dAdchi31323 + F23*F32*chi31*dAdchi32123 + F23*F32*chi32*dAdchi32223 + F23*F32*chi33*dAdchi32323 + F23*F33*chi31*dAdchi33123 + F23*F33*chi32*dAdchi33223 + F23*F33*chi33*dAdchi33323;
        dadchi(11,4) = F21*F31*chi31*dAdchi11113 + F21*F31*chi32*dAdchi11213 + F21*F31*chi33*dAdchi11313 + F21*F32*chi31*dAdchi12113 + F21*F32*chi32*dAdchi12213 + F21*F32*chi33*dAdchi12313 + F21*F33*chi31*dAdchi13113 + F21*F33*chi32*dAdchi13213 + F21*F33*chi33*dAdchi13313 + F22*F31*chi31*dAdchi21113 + F22*F31*chi32*dAdchi21213 + F22*F31*chi33*dAdchi21313 + F22*F32*chi31*dAdchi22113 + F22*F32*chi32*dAdchi22213 + F22*F32*chi33*dAdchi22313 + F22*F33*chi31*dAdchi23113 + F22*F33*chi32*dAdchi23213 + F22*F33*chi33*dAdchi23313 + F23*F31*chi31*dAdchi31113 + F23*F31*chi32*dAdchi31213 + F23*F31*chi33*dAdchi31313 + F23*F32*chi31*dAdchi32113 + F23*F32*chi32*dAdchi32213 + F23*F32*chi33*dAdchi32313 + F23*F33*chi31*dAdchi33113 + F23*F33*chi32*dAdchi33213 + F23*F33*chi33*dAdchi33313;
        dadchi(11,5) = F21*F31*chi31*dAdchi11112 + F21*F31*chi32*dAdchi11212 + F21*F31*chi33*dAdchi11312 + F21*F32*chi31*dAdchi12112 + F21*F32*chi32*dAdchi12212 + F21*F32*chi33*dAdchi12312 + F21*F33*chi31*dAdchi13112 + F21*F33*chi32*dAdchi13212 + F21*F33*chi33*dAdchi13312 + F22*F31*chi31*dAdchi21112 + F22*F31*chi32*dAdchi21212 + F22*F31*chi33*dAdchi21312 + F22*F32*chi31*dAdchi22112 + F22*F32*chi32*dAdchi22212 + F22*F32*chi33*dAdchi22312 + F22*F33*chi31*dAdchi23112 + F22*F33*chi32*dAdchi23212 + F22*F33*chi33*dAdchi23312 + F23*F31*chi31*dAdchi31112 + F23*F31*chi32*dAdchi31212 + F23*F31*chi33*dAdchi31312 + F23*F32*chi31*dAdchi32112 + F23*F32*chi32*dAdchi32212 + F23*F32*chi33*dAdchi32312 + F23*F33*chi31*dAdchi33112 + F23*F33*chi32*dAdchi33212 + F23*F33*chi33*dAdchi33312;
        dadchi(11,6) = A113*F21*F31 + A123*F21*F32 + A133*F21*F33 + A213*F22*F31 + A223*F22*F32 + A233*F22*F33 + A313*F23*F31 + A323*F23*F32 + A333*F23*F33 + F21*F31*chi31*dAdchi11132 + F21*F31*chi32*dAdchi11232 + F21*F31*chi33*dAdchi11332 + F21*F32*chi31*dAdchi12132 + F21*F32*chi32*dAdchi12232 + F21*F32*chi33*dAdchi12332 + F21*F33*chi31*dAdchi13132 + F21*F33*chi32*dAdchi13232 + F21*F33*chi33*dAdchi13332 + F22*F31*chi31*dAdchi21132 + F22*F31*chi32*dAdchi21232 + F22*F31*chi33*dAdchi21332 + F22*F32*chi31*dAdchi22132 + F22*F32*chi32*dAdchi22232 + F22*F32*chi33*dAdchi22332 + F22*F33*chi31*dAdchi23132 + F22*F33*chi32*dAdchi23232 + F22*F33*chi33*dAdchi23332 + F23*F31*chi31*dAdchi31132 + F23*F31*chi32*dAdchi31232 + F23*F31*chi33*dAdchi31332 + F23*F32*chi31*dAdchi32132 + F23*F32*chi32*dAdchi32232 + F23*F32*chi33*dAdchi32332 + F23*F33*chi31*dAdchi33132 + F23*F33*chi32*dAdchi33232 + F23*F33*chi33*dAdchi33332;
        dadchi(11,7) = A113*F21*F31 + A123*F21*F32 + A133*F21*F33 + A213*F22*F31 + A223*F22*F32 + A233*F22*F33 + A313*F23*F31 + A323*F23*F32 + A333*F23*F33 + F21*F31*chi31*dAdchi11131 + F21*F31*chi32*dAdchi11231 + F21*F31*chi33*dAdchi11331 + F21*F32*chi31*dAdchi12131 + F21*F32*chi32*dAdchi12231 + F21*F32*chi33*dAdchi12331 + F21*F33*chi31*dAdchi13131 + F21*F33*chi32*dAdchi13231 + F21*F33*chi33*dAdchi13331 + F22*F31*chi31*dAdchi21131 + F22*F31*chi32*dAdchi21231 + F22*F31*chi33*dAdchi21331 + F22*F32*chi31*dAdchi22131 + F22*F32*chi32*dAdchi22231 + F22*F32*chi33*dAdchi22331 + F22*F33*chi31*dAdchi23131 + F22*F33*chi32*dAdchi23231 + F22*F33*chi33*dAdchi23331 + F23*F31*chi31*dAdchi31131 + F23*F31*chi32*dAdchi31231 + F23*F31*chi33*dAdchi31331 + F23*F32*chi31*dAdchi32131 + F23*F32*chi32*dAdchi32231 + F23*F32*chi33*dAdchi32331 + F23*F33*chi31*dAdchi33131 + F23*F33*chi32*dAdchi33231 + F23*F33*chi33*dAdchi33331;
        dadchi(11,8) = F21*F31*chi31*dAdchi11121 + F21*F31*chi32*dAdchi11221 + F21*F31*chi33*dAdchi11321 + F21*F32*chi31*dAdchi12121 + F21*F32*chi32*dAdchi12221 + F21*F32*chi33*dAdchi12321 + F21*F33*chi31*dAdchi13121 + F21*F33*chi32*dAdchi13221 + F21*F33*chi33*dAdchi13321 + F22*F31*chi31*dAdchi21121 + F22*F31*chi32*dAdchi21221 + F22*F31*chi33*dAdchi21321 + F22*F32*chi31*dAdchi22121 + F22*F32*chi32*dAdchi22221 + F22*F32*chi33*dAdchi22321 + F22*F33*chi31*dAdchi23121 + F22*F33*chi32*dAdchi23221 + F22*F33*chi33*dAdchi23321 + F23*F31*chi31*dAdchi31121 + F23*F31*chi32*dAdchi31221 + F23*F31*chi33*dAdchi31321 + F23*F32*chi31*dAdchi32121 + F23*F32*chi32*dAdchi32221 + F23*F32*chi33*dAdchi32321 + F23*F33*chi31*dAdchi33121 + F23*F33*chi32*dAdchi33221 + F23*F33*chi33*dAdchi33321;
        dadchi(12,0) = F21*F21*chi31*dAdchi11111 + F21*F21*chi32*dAdchi11211 + F21*F21*chi33*dAdchi11311 + F21*F22*chi31*dAdchi12111 + F21*F22*chi31*dAdchi21111 + F21*F22*chi32*dAdchi12211 + F21*F22*chi32*dAdchi21211 + F21*F22*chi33*dAdchi12311 + F21*F22*chi33*dAdchi21311 + F21*F23*chi31*dAdchi13111 + F21*F23*chi31*dAdchi31111 + F21*F23*chi32*dAdchi13211 + F21*F23*chi32*dAdchi31211 + F21*F23*chi33*dAdchi13311 + F21*F23*chi33*dAdchi31311 + F22*F22*chi31*dAdchi22111 + F22*F22*chi32*dAdchi22211 + F22*F22*chi33*dAdchi22311 + F22*F23*chi31*dAdchi23111 + F22*F23*chi31*dAdchi32111 + F22*F23*chi32*dAdchi23211 + F22*F23*chi32*dAdchi32211 + F22*F23*chi33*dAdchi23311 + F22*F23*chi33*dAdchi32311 + F23*F23*chi31*dAdchi33111 + F23*F23*chi32*dAdchi33211 + F23*F23*chi33*dAdchi33311;
        dadchi(12,1) = F21*F21*chi31*dAdchi11122 + F21*F21*chi32*dAdchi11222 + F21*F21*chi33*dAdchi11322 + F21*F22*chi31*dAdchi12122 + F21*F22*chi31*dAdchi21122 + F21*F22*chi32*dAdchi12222 + F21*F22*chi32*dAdchi21222 + F21*F22*chi33*dAdchi12322 + F21*F22*chi33*dAdchi21322 + F21*F23*chi31*dAdchi13122 + F21*F23*chi31*dAdchi31122 + F21*F23*chi32*dAdchi13222 + F21*F23*chi32*dAdchi31222 + F21*F23*chi33*dAdchi13322 + F21*F23*chi33*dAdchi31322 + F22*F22*chi31*dAdchi22122 + F22*F22*chi32*dAdchi22222 + F22*F22*chi33*dAdchi22322 + F22*F23*chi31*dAdchi23122 + F22*F23*chi31*dAdchi32122 + F22*F23*chi32*dAdchi23222 + F22*F23*chi32*dAdchi32222 + F22*F23*chi33*dAdchi23322 + F22*F23*chi33*dAdchi32322 + F23*F23*chi31*dAdchi33122 + F23*F23*chi32*dAdchi33222 + F23*F23*chi33*dAdchi33322;
        dadchi(12,2) = A113*F21*F21 + A123*F21*F22 + A133*F21*F23 + A213*F21*F22 + A223*F22*F22 + A233*F22*F23 + A313*F21*F23 + A323*F22*F23 + A333*F23*F23 + F21*F21*chi31*dAdchi11133 + F21*F21*chi32*dAdchi11233 + F21*F21*chi33*dAdchi11333 + F21*F22*chi31*dAdchi12133 + F21*F22*chi31*dAdchi21133 + F21*F22*chi32*dAdchi12233 + F21*F22*chi32*dAdchi21233 + F21*F22*chi33*dAdchi12333 + F21*F22*chi33*dAdchi21333 + F21*F23*chi31*dAdchi13133 + F21*F23*chi31*dAdchi31133 + F21*F23*chi32*dAdchi13233 + F21*F23*chi32*dAdchi31233 + F21*F23*chi33*dAdchi13333 + F21*F23*chi33*dAdchi31333 + F22*F22*chi31*dAdchi22133 + F22*F22*chi32*dAdchi22233 + F22*F22*chi33*dAdchi22333 + F22*F23*chi31*dAdchi23133 + F22*F23*chi31*dAdchi32133 + F22*F23*chi32*dAdchi23233 + F22*F23*chi32*dAdchi32233 + F22*F23*chi33*dAdchi23333 + F22*F23*chi33*dAdchi32333 + F23*F23*chi31*dAdchi33133 + F23*F23*chi32*dAdchi33233 + F23*F23*chi33*dAdchi33333;
        dadchi(12,3) = F21*F21*chi31*dAdchi11123 + F21*F21*chi32*dAdchi11223 + F21*F21*chi33*dAdchi11323 + F21*F22*chi31*dAdchi12123 + F21*F22*chi31*dAdchi21123 + F21*F22*chi32*dAdchi12223 + F21*F22*chi32*dAdchi21223 + F21*F22*chi33*dAdchi12323 + F21*F22*chi33*dAdchi21323 + F21*F23*chi31*dAdchi13123 + F21*F23*chi31*dAdchi31123 + F21*F23*chi32*dAdchi13223 + F21*F23*chi32*dAdchi31223 + F21*F23*chi33*dAdchi13323 + F21*F23*chi33*dAdchi31323 + F22*F22*chi31*dAdchi22123 + F22*F22*chi32*dAdchi22223 + F22*F22*chi33*dAdchi22323 + F22*F23*chi31*dAdchi23123 + F22*F23*chi31*dAdchi32123 + F22*F23*chi32*dAdchi23223 + F22*F23*chi32*dAdchi32223 + F22*F23*chi33*dAdchi23323 + F22*F23*chi33*dAdchi32323 + F23*F23*chi31*dAdchi33123 + F23*F23*chi32*dAdchi33223 + F23*F23*chi33*dAdchi33323;
        dadchi(12,4) = F21*F21*chi31*dAdchi11113 + F21*F21*chi32*dAdchi11213 + F21*F21*chi33*dAdchi11313 + F21*F22*chi31*dAdchi12113 + F21*F22*chi31*dAdchi21113 + F21*F22*chi32*dAdchi12213 + F21*F22*chi32*dAdchi21213 + F21*F22*chi33*dAdchi12313 + F21*F22*chi33*dAdchi21313 + F21*F23*chi31*dAdchi13113 + F21*F23*chi31*dAdchi31113 + F21*F23*chi32*dAdchi13213 + F21*F23*chi32*dAdchi31213 + F21*F23*chi33*dAdchi13313 + F21*F23*chi33*dAdchi31313 + F22*F22*chi31*dAdchi22113 + F22*F22*chi32*dAdchi22213 + F22*F22*chi33*dAdchi22313 + F22*F23*chi31*dAdchi23113 + F22*F23*chi31*dAdchi32113 + F22*F23*chi32*dAdchi23213 + F22*F23*chi32*dAdchi32213 + F22*F23*chi33*dAdchi23313 + F22*F23*chi33*dAdchi32313 + F23*F23*chi31*dAdchi33113 + F23*F23*chi32*dAdchi33213 + F23*F23*chi33*dAdchi33313;
        dadchi(12,5) = F21*F21*chi31*dAdchi11112 + F21*F21*chi32*dAdchi11212 + F21*F21*chi33*dAdchi11312 + F21*F22*chi31*dAdchi12112 + F21*F22*chi31*dAdchi21112 + F21*F22*chi32*dAdchi12212 + F21*F22*chi32*dAdchi21212 + F21*F22*chi33*dAdchi12312 + F21*F22*chi33*dAdchi21312 + F21*F23*chi31*dAdchi13112 + F21*F23*chi31*dAdchi31112 + F21*F23*chi32*dAdchi13212 + F21*F23*chi32*dAdchi31212 + F21*F23*chi33*dAdchi13312 + F21*F23*chi33*dAdchi31312 + F22*F22*chi31*dAdchi22112 + F22*F22*chi32*dAdchi22212 + F22*F22*chi33*dAdchi22312 + F22*F23*chi31*dAdchi23112 + F22*F23*chi31*dAdchi32112 + F22*F23*chi32*dAdchi23212 + F22*F23*chi32*dAdchi32212 + F22*F23*chi33*dAdchi23312 + F22*F23*chi33*dAdchi32312 + F23*F23*chi31*dAdchi33112 + F23*F23*chi32*dAdchi33212 + F23*F23*chi33*dAdchi33312;
        dadchi(12,6) = A113*F21*F21 + A123*F21*F22 + A133*F21*F23 + A213*F21*F22 + A223*F22*F22 + A233*F22*F23 + A313*F21*F23 + A323*F22*F23 + A333*F23*F23 + F21*F21*chi31*dAdchi11132 + F21*F21*chi32*dAdchi11232 + F21*F21*chi33*dAdchi11332 + F21*F22*chi31*dAdchi12132 + F21*F22*chi31*dAdchi21132 + F21*F22*chi32*dAdchi12232 + F21*F22*chi32*dAdchi21232 + F21*F22*chi33*dAdchi12332 + F21*F22*chi33*dAdchi21332 + F21*F23*chi31*dAdchi13132 + F21*F23*chi31*dAdchi31132 + F21*F23*chi32*dAdchi13232 + F21*F23*chi32*dAdchi31232 + F21*F23*chi33*dAdchi13332 + F21*F23*chi33*dAdchi31332 + F22*F22*chi31*dAdchi22132 + F22*F22*chi32*dAdchi22232 + F22*F22*chi33*dAdchi22332 + F22*F23*chi31*dAdchi23132 + F22*F23*chi31*dAdchi32132 + F22*F23*chi32*dAdchi23232 + F22*F23*chi32*dAdchi32232 + F22*F23*chi33*dAdchi23332 + F22*F23*chi33*dAdchi32332 + F23*F23*chi31*dAdchi33132 + F23*F23*chi32*dAdchi33232 + F23*F23*chi33*dAdchi33332;
        dadchi(12,7) = A113*F21*F21 + A123*F21*F22 + A133*F21*F23 + A213*F21*F22 + A223*F22*F22 + A233*F22*F23 + A313*F21*F23 + A323*F22*F23 + A333*F23*F23 + F21*F21*chi31*dAdchi11131 + F21*F21*chi32*dAdchi11231 + F21*F21*chi33*dAdchi11331 + F21*F22*chi31*dAdchi12131 + F21*F22*chi31*dAdchi21131 + F21*F22*chi32*dAdchi12231 + F21*F22*chi32*dAdchi21231 + F21*F22*chi33*dAdchi12331 + F21*F22*chi33*dAdchi21331 + F21*F23*chi31*dAdchi13131 + F21*F23*chi31*dAdchi31131 + F21*F23*chi32*dAdchi13231 + F21*F23*chi32*dAdchi31231 + F21*F23*chi33*dAdchi13331 + F21*F23*chi33*dAdchi31331 + F22*F22*chi31*dAdchi22131 + F22*F22*chi32*dAdchi22231 + F22*F22*chi33*dAdchi22331 + F22*F23*chi31*dAdchi23131 + F22*F23*chi31*dAdchi32131 + F22*F23*chi32*dAdchi23231 + F22*F23*chi32*dAdchi32231 + F22*F23*chi33*dAdchi23331 + F22*F23*chi33*dAdchi32331 + F23*F23*chi31*dAdchi33131 + F23*F23*chi32*dAdchi33231 + F23*F23*chi33*dAdchi33331;
        dadchi(12,8) = F21*F21*chi31*dAdchi11121 + F21*F21*chi32*dAdchi11221 + F21*F21*chi33*dAdchi11321 + F21*F22*chi31*dAdchi12121 + F21*F22*chi31*dAdchi21121 + F21*F22*chi32*dAdchi12221 + F21*F22*chi32*dAdchi21221 + F21*F22*chi33*dAdchi12321 + F21*F22*chi33*dAdchi21321 + F21*F23*chi31*dAdchi13121 + F21*F23*chi31*dAdchi31121 + F21*F23*chi32*dAdchi13221 + F21*F23*chi32*dAdchi31221 + F21*F23*chi33*dAdchi13321 + F21*F23*chi33*dAdchi31321 + F22*F22*chi31*dAdchi22121 + F22*F22*chi32*dAdchi22221 + F22*F22*chi33*dAdchi22321 + F22*F23*chi31*dAdchi23121 + F22*F23*chi31*dAdchi32121 + F22*F23*chi32*dAdchi23221 + F22*F23*chi32*dAdchi32221 + F22*F23*chi33*dAdchi23321 + F22*F23*chi33*dAdchi32321 + F23*F23*chi31*dAdchi33121 + F23*F23*chi32*dAdchi33221 + F23*F23*chi33*dAdchi33321;
        dadchi(13,0) = F11*F21*chi31*dAdchi11111 + F11*F21*chi32*dAdchi11211 + F11*F21*chi33*dAdchi11311 + F11*F22*chi31*dAdchi21111 + F11*F22*chi32*dAdchi21211 + F11*F22*chi33*dAdchi21311 + F11*F23*chi31*dAdchi31111 + F11*F23*chi32*dAdchi31211 + F11*F23*chi33*dAdchi31311 + F12*F21*chi31*dAdchi12111 + F12*F21*chi32*dAdchi12211 + F12*F21*chi33*dAdchi12311 + F12*F22*chi31*dAdchi22111 + F12*F22*chi32*dAdchi22211 + F12*F22*chi33*dAdchi22311 + F12*F23*chi31*dAdchi32111 + F12*F23*chi32*dAdchi32211 + F12*F23*chi33*dAdchi32311 + F13*F21*chi31*dAdchi13111 + F13*F21*chi32*dAdchi13211 + F13*F21*chi33*dAdchi13311 + F13*F22*chi31*dAdchi23111 + F13*F22*chi32*dAdchi23211 + F13*F22*chi33*dAdchi23311 + F13*F23*chi31*dAdchi33111 + F13*F23*chi32*dAdchi33211 + F13*F23*chi33*dAdchi33311;
        dadchi(13,1) = F11*F21*chi31*dAdchi11122 + F11*F21*chi32*dAdchi11222 + F11*F21*chi33*dAdchi11322 + F11*F22*chi31*dAdchi21122 + F11*F22*chi32*dAdchi21222 + F11*F22*chi33*dAdchi21322 + F11*F23*chi31*dAdchi31122 + F11*F23*chi32*dAdchi31222 + F11*F23*chi33*dAdchi31322 + F12*F21*chi31*dAdchi12122 + F12*F21*chi32*dAdchi12222 + F12*F21*chi33*dAdchi12322 + F12*F22*chi31*dAdchi22122 + F12*F22*chi32*dAdchi22222 + F12*F22*chi33*dAdchi22322 + F12*F23*chi31*dAdchi32122 + F12*F23*chi32*dAdchi32222 + F12*F23*chi33*dAdchi32322 + F13*F21*chi31*dAdchi13122 + F13*F21*chi32*dAdchi13222 + F13*F21*chi33*dAdchi13322 + F13*F22*chi31*dAdchi23122 + F13*F22*chi32*dAdchi23222 + F13*F22*chi33*dAdchi23322 + F13*F23*chi31*dAdchi33122 + F13*F23*chi32*dAdchi33222 + F13*F23*chi33*dAdchi33322;
        dadchi(13,2) = A113*F11*F21 + A123*F12*F21 + A133*F13*F21 + A213*F11*F22 + A223*F12*F22 + A233*F13*F22 + A313*F11*F23 + A323*F12*F23 + A333*F13*F23 + F11*F21*chi31*dAdchi11133 + F11*F21*chi32*dAdchi11233 + F11*F21*chi33*dAdchi11333 + F11*F22*chi31*dAdchi21133 + F11*F22*chi32*dAdchi21233 + F11*F22*chi33*dAdchi21333 + F11*F23*chi31*dAdchi31133 + F11*F23*chi32*dAdchi31233 + F11*F23*chi33*dAdchi31333 + F12*F21*chi31*dAdchi12133 + F12*F21*chi32*dAdchi12233 + F12*F21*chi33*dAdchi12333 + F12*F22*chi31*dAdchi22133 + F12*F22*chi32*dAdchi22233 + F12*F22*chi33*dAdchi22333 + F12*F23*chi31*dAdchi32133 + F12*F23*chi32*dAdchi32233 + F12*F23*chi33*dAdchi32333 + F13*F21*chi31*dAdchi13133 + F13*F21*chi32*dAdchi13233 + F13*F21*chi33*dAdchi13333 + F13*F22*chi31*dAdchi23133 + F13*F22*chi32*dAdchi23233 + F13*F22*chi33*dAdchi23333 + F13*F23*chi31*dAdchi33133 + F13*F23*chi32*dAdchi33233 + F13*F23*chi33*dAdchi33333;
        dadchi(13,3) = F11*F21*chi31*dAdchi11123 + F11*F21*chi32*dAdchi11223 + F11*F21*chi33*dAdchi11323 + F11*F22*chi31*dAdchi21123 + F11*F22*chi32*dAdchi21223 + F11*F22*chi33*dAdchi21323 + F11*F23*chi31*dAdchi31123 + F11*F23*chi32*dAdchi31223 + F11*F23*chi33*dAdchi31323 + F12*F21*chi31*dAdchi12123 + F12*F21*chi32*dAdchi12223 + F12*F21*chi33*dAdchi12323 + F12*F22*chi31*dAdchi22123 + F12*F22*chi32*dAdchi22223 + F12*F22*chi33*dAdchi22323 + F12*F23*chi31*dAdchi32123 + F12*F23*chi32*dAdchi32223 + F12*F23*chi33*dAdchi32323 + F13*F21*chi31*dAdchi13123 + F13*F21*chi32*dAdchi13223 + F13*F21*chi33*dAdchi13323 + F13*F22*chi31*dAdchi23123 + F13*F22*chi32*dAdchi23223 + F13*F22*chi33*dAdchi23323 + F13*F23*chi31*dAdchi33123 + F13*F23*chi32*dAdchi33223 + F13*F23*chi33*dAdchi33323;
        dadchi(13,4) = F11*F21*chi31*dAdchi11113 + F11*F21*chi32*dAdchi11213 + F11*F21*chi33*dAdchi11313 + F11*F22*chi31*dAdchi21113 + F11*F22*chi32*dAdchi21213 + F11*F22*chi33*dAdchi21313 + F11*F23*chi31*dAdchi31113 + F11*F23*chi32*dAdchi31213 + F11*F23*chi33*dAdchi31313 + F12*F21*chi31*dAdchi12113 + F12*F21*chi32*dAdchi12213 + F12*F21*chi33*dAdchi12313 + F12*F22*chi31*dAdchi22113 + F12*F22*chi32*dAdchi22213 + F12*F22*chi33*dAdchi22313 + F12*F23*chi31*dAdchi32113 + F12*F23*chi32*dAdchi32213 + F12*F23*chi33*dAdchi32313 + F13*F21*chi31*dAdchi13113 + F13*F21*chi32*dAdchi13213 + F13*F21*chi33*dAdchi13313 + F13*F22*chi31*dAdchi23113 + F13*F22*chi32*dAdchi23213 + F13*F22*chi33*dAdchi23313 + F13*F23*chi31*dAdchi33113 + F13*F23*chi32*dAdchi33213 + F13*F23*chi33*dAdchi33313;
        dadchi(13,5) = F11*F21*chi31*dAdchi11112 + F11*F21*chi32*dAdchi11212 + F11*F21*chi33*dAdchi11312 + F11*F22*chi31*dAdchi21112 + F11*F22*chi32*dAdchi21212 + F11*F22*chi33*dAdchi21312 + F11*F23*chi31*dAdchi31112 + F11*F23*chi32*dAdchi31212 + F11*F23*chi33*dAdchi31312 + F12*F21*chi31*dAdchi12112 + F12*F21*chi32*dAdchi12212 + F12*F21*chi33*dAdchi12312 + F12*F22*chi31*dAdchi22112 + F12*F22*chi32*dAdchi22212 + F12*F22*chi33*dAdchi22312 + F12*F23*chi31*dAdchi32112 + F12*F23*chi32*dAdchi32212 + F12*F23*chi33*dAdchi32312 + F13*F21*chi31*dAdchi13112 + F13*F21*chi32*dAdchi13212 + F13*F21*chi33*dAdchi13312 + F13*F22*chi31*dAdchi23112 + F13*F22*chi32*dAdchi23212 + F13*F22*chi33*dAdchi23312 + F13*F23*chi31*dAdchi33112 + F13*F23*chi32*dAdchi33212 + F13*F23*chi33*dAdchi33312;
        dadchi(13,6) = A113*F11*F21 + A123*F12*F21 + A133*F13*F21 + A213*F11*F22 + A223*F12*F22 + A233*F13*F22 + A313*F11*F23 + A323*F12*F23 + A333*F13*F23 + F11*F21*chi31*dAdchi11132 + F11*F21*chi32*dAdchi11232 + F11*F21*chi33*dAdchi11332 + F11*F22*chi31*dAdchi21132 + F11*F22*chi32*dAdchi21232 + F11*F22*chi33*dAdchi21332 + F11*F23*chi31*dAdchi31132 + F11*F23*chi32*dAdchi31232 + F11*F23*chi33*dAdchi31332 + F12*F21*chi31*dAdchi12132 + F12*F21*chi32*dAdchi12232 + F12*F21*chi33*dAdchi12332 + F12*F22*chi31*dAdchi22132 + F12*F22*chi32*dAdchi22232 + F12*F22*chi33*dAdchi22332 + F12*F23*chi31*dAdchi32132 + F12*F23*chi32*dAdchi32232 + F12*F23*chi33*dAdchi32332 + F13*F21*chi31*dAdchi13132 + F13*F21*chi32*dAdchi13232 + F13*F21*chi33*dAdchi13332 + F13*F22*chi31*dAdchi23132 + F13*F22*chi32*dAdchi23232 + F13*F22*chi33*dAdchi23332 + F13*F23*chi31*dAdchi33132 + F13*F23*chi32*dAdchi33232 + F13*F23*chi33*dAdchi33332;
        dadchi(13,7) = A113*F11*F21 + A123*F12*F21 + A133*F13*F21 + A213*F11*F22 + A223*F12*F22 + A233*F13*F22 + A313*F11*F23 + A323*F12*F23 + A333*F13*F23 + F11*F21*chi31*dAdchi11131 + F11*F21*chi32*dAdchi11231 + F11*F21*chi33*dAdchi11331 + F11*F22*chi31*dAdchi21131 + F11*F22*chi32*dAdchi21231 + F11*F22*chi33*dAdchi21331 + F11*F23*chi31*dAdchi31131 + F11*F23*chi32*dAdchi31231 + F11*F23*chi33*dAdchi31331 + F12*F21*chi31*dAdchi12131 + F12*F21*chi32*dAdchi12231 + F12*F21*chi33*dAdchi12331 + F12*F22*chi31*dAdchi22131 + F12*F22*chi32*dAdchi22231 + F12*F22*chi33*dAdchi22331 + F12*F23*chi31*dAdchi32131 + F12*F23*chi32*dAdchi32231 + F12*F23*chi33*dAdchi32331 + F13*F21*chi31*dAdchi13131 + F13*F21*chi32*dAdchi13231 + F13*F21*chi33*dAdchi13331 + F13*F22*chi31*dAdchi23131 + F13*F22*chi32*dAdchi23231 + F13*F22*chi33*dAdchi23331 + F13*F23*chi31*dAdchi33131 + F13*F23*chi32*dAdchi33231 + F13*F23*chi33*dAdchi33331;
        dadchi(13,8) = F11*F21*chi31*dAdchi11121 + F11*F21*chi32*dAdchi11221 + F11*F21*chi33*dAdchi11321 + F11*F22*chi31*dAdchi21121 + F11*F22*chi32*dAdchi21221 + F11*F22*chi33*dAdchi21321 + F11*F23*chi31*dAdchi31121 + F11*F23*chi32*dAdchi31221 + F11*F23*chi33*dAdchi31321 + F12*F21*chi31*dAdchi12121 + F12*F21*chi32*dAdchi12221 + F12*F21*chi33*dAdchi12321 + F12*F22*chi31*dAdchi22121 + F12*F22*chi32*dAdchi22221 + F12*F22*chi33*dAdchi22321 + F12*F23*chi31*dAdchi32121 + F12*F23*chi32*dAdchi32221 + F12*F23*chi33*dAdchi32321 + F13*F21*chi31*dAdchi13121 + F13*F21*chi32*dAdchi13221 + F13*F21*chi33*dAdchi13321 + F13*F22*chi31*dAdchi23121 + F13*F22*chi32*dAdchi23221 + F13*F22*chi33*dAdchi23321 + F13*F23*chi31*dAdchi33121 + F13*F23*chi32*dAdchi33221 + F13*F23*chi33*dAdchi33321;
        dadchi(14,0) = F11*F21*chi21*dAdchi11111 + F11*F21*chi22*dAdchi11211 + F11*F21*chi23*dAdchi11311 + F11*F22*chi21*dAdchi21111 + F11*F22*chi22*dAdchi21211 + F11*F22*chi23*dAdchi21311 + F11*F23*chi21*dAdchi31111 + F11*F23*chi22*dAdchi31211 + F11*F23*chi23*dAdchi31311 + F12*F21*chi21*dAdchi12111 + F12*F21*chi22*dAdchi12211 + F12*F21*chi23*dAdchi12311 + F12*F22*chi21*dAdchi22111 + F12*F22*chi22*dAdchi22211 + F12*F22*chi23*dAdchi22311 + F12*F23*chi21*dAdchi32111 + F12*F23*chi22*dAdchi32211 + F12*F23*chi23*dAdchi32311 + F13*F21*chi21*dAdchi13111 + F13*F21*chi22*dAdchi13211 + F13*F21*chi23*dAdchi13311 + F13*F22*chi21*dAdchi23111 + F13*F22*chi22*dAdchi23211 + F13*F22*chi23*dAdchi23311 + F13*F23*chi21*dAdchi33111 + F13*F23*chi22*dAdchi33211 + F13*F23*chi23*dAdchi33311;
        dadchi(14,1) = A112*F11*F21 + A122*F12*F21 + A132*F13*F21 + A212*F11*F22 + A222*F12*F22 + A232*F13*F22 + A312*F11*F23 + A322*F12*F23 + A332*F13*F23 + F11*F21*chi21*dAdchi11122 + F11*F21*chi22*dAdchi11222 + F11*F21*chi23*dAdchi11322 + F11*F22*chi21*dAdchi21122 + F11*F22*chi22*dAdchi21222 + F11*F22*chi23*dAdchi21322 + F11*F23*chi21*dAdchi31122 + F11*F23*chi22*dAdchi31222 + F11*F23*chi23*dAdchi31322 + F12*F21*chi21*dAdchi12122 + F12*F21*chi22*dAdchi12222 + F12*F21*chi23*dAdchi12322 + F12*F22*chi21*dAdchi22122 + F12*F22*chi22*dAdchi22222 + F12*F22*chi23*dAdchi22322 + F12*F23*chi21*dAdchi32122 + F12*F23*chi22*dAdchi32222 + F12*F23*chi23*dAdchi32322 + F13*F21*chi21*dAdchi13122 + F13*F21*chi22*dAdchi13222 + F13*F21*chi23*dAdchi13322 + F13*F22*chi21*dAdchi23122 + F13*F22*chi22*dAdchi23222 + F13*F22*chi23*dAdchi23322 + F13*F23*chi21*dAdchi33122 + F13*F23*chi22*dAdchi33222 + F13*F23*chi23*dAdchi33322;
        dadchi(14,2) = F11*F21*chi21*dAdchi11133 + F11*F21*chi22*dAdchi11233 + F11*F21*chi23*dAdchi11333 + F11*F22*chi21*dAdchi21133 + F11*F22*chi22*dAdchi21233 + F11*F22*chi23*dAdchi21333 + F11*F23*chi21*dAdchi31133 + F11*F23*chi22*dAdchi31233 + F11*F23*chi23*dAdchi31333 + F12*F21*chi21*dAdchi12133 + F12*F21*chi22*dAdchi12233 + F12*F21*chi23*dAdchi12333 + F12*F22*chi21*dAdchi22133 + F12*F22*chi22*dAdchi22233 + F12*F22*chi23*dAdchi22333 + F12*F23*chi21*dAdchi32133 + F12*F23*chi22*dAdchi32233 + F12*F23*chi23*dAdchi32333 + F13*F21*chi21*dAdchi13133 + F13*F21*chi22*dAdchi13233 + F13*F21*chi23*dAdchi13333 + F13*F22*chi21*dAdchi23133 + F13*F22*chi22*dAdchi23233 + F13*F22*chi23*dAdchi23333 + F13*F23*chi21*dAdchi33133 + F13*F23*chi22*dAdchi33233 + F13*F23*chi23*dAdchi33333;
        dadchi(14,3) = A112*F11*F21 + A122*F12*F21 + A132*F13*F21 + A212*F11*F22 + A222*F12*F22 + A232*F13*F22 + A312*F11*F23 + A322*F12*F23 + A332*F13*F23 + F11*F21*chi21*dAdchi11123 + F11*F21*chi22*dAdchi11223 + F11*F21*chi23*dAdchi11323 + F11*F22*chi21*dAdchi21123 + F11*F22*chi22*dAdchi21223 + F11*F22*chi23*dAdchi21323 + F11*F23*chi21*dAdchi31123 + F11*F23*chi22*dAdchi31223 + F11*F23*chi23*dAdchi31323 + F12*F21*chi21*dAdchi12123 + F12*F21*chi22*dAdchi12223 + F12*F21*chi23*dAdchi12323 + F12*F22*chi21*dAdchi22123 + F12*F22*chi22*dAdchi22223 + F12*F22*chi23*dAdchi22323 + F12*F23*chi21*dAdchi32123 + F12*F23*chi22*dAdchi32223 + F12*F23*chi23*dAdchi32323 + F13*F21*chi21*dAdchi13123 + F13*F21*chi22*dAdchi13223 + F13*F21*chi23*dAdchi13323 + F13*F22*chi21*dAdchi23123 + F13*F22*chi22*dAdchi23223 + F13*F22*chi23*dAdchi23323 + F13*F23*chi21*dAdchi33123 + F13*F23*chi22*dAdchi33223 + F13*F23*chi23*dAdchi33323;
        dadchi(14,4) = F11*F21*chi21*dAdchi11113 + F11*F21*chi22*dAdchi11213 + F11*F21*chi23*dAdchi11313 + F11*F22*chi21*dAdchi21113 + F11*F22*chi22*dAdchi21213 + F11*F22*chi23*dAdchi21313 + F11*F23*chi21*dAdchi31113 + F11*F23*chi22*dAdchi31213 + F11*F23*chi23*dAdchi31313 + F12*F21*chi21*dAdchi12113 + F12*F21*chi22*dAdchi12213 + F12*F21*chi23*dAdchi12313 + F12*F22*chi21*dAdchi22113 + F12*F22*chi22*dAdchi22213 + F12*F22*chi23*dAdchi22313 + F12*F23*chi21*dAdchi32113 + F12*F23*chi22*dAdchi32213 + F12*F23*chi23*dAdchi32313 + F13*F21*chi21*dAdchi13113 + F13*F21*chi22*dAdchi13213 + F13*F21*chi23*dAdchi13313 + F13*F22*chi21*dAdchi23113 + F13*F22*chi22*dAdchi23213 + F13*F22*chi23*dAdchi23313 + F13*F23*chi21*dAdchi33113 + F13*F23*chi22*dAdchi33213 + F13*F23*chi23*dAdchi33313;
        dadchi(14,5) = F11*F21*chi21*dAdchi11112 + F11*F21*chi22*dAdchi11212 + F11*F21*chi23*dAdchi11312 + F11*F22*chi21*dAdchi21112 + F11*F22*chi22*dAdchi21212 + F11*F22*chi23*dAdchi21312 + F11*F23*chi21*dAdchi31112 + F11*F23*chi22*dAdchi31212 + F11*F23*chi23*dAdchi31312 + F12*F21*chi21*dAdchi12112 + F12*F21*chi22*dAdchi12212 + F12*F21*chi23*dAdchi12312 + F12*F22*chi21*dAdchi22112 + F12*F22*chi22*dAdchi22212 + F12*F22*chi23*dAdchi22312 + F12*F23*chi21*dAdchi32112 + F12*F23*chi22*dAdchi32212 + F12*F23*chi23*dAdchi32312 + F13*F21*chi21*dAdchi13112 + F13*F21*chi22*dAdchi13212 + F13*F21*chi23*dAdchi13312 + F13*F22*chi21*dAdchi23112 + F13*F22*chi22*dAdchi23212 + F13*F22*chi23*dAdchi23312 + F13*F23*chi21*dAdchi33112 + F13*F23*chi22*dAdchi33212 + F13*F23*chi23*dAdchi33312;
        dadchi(14,6) = F11*F21*chi21*dAdchi11132 + F11*F21*chi22*dAdchi11232 + F11*F21*chi23*dAdchi11332 + F11*F22*chi21*dAdchi21132 + F11*F22*chi22*dAdchi21232 + F11*F22*chi23*dAdchi21332 + F11*F23*chi21*dAdchi31132 + F11*F23*chi22*dAdchi31232 + F11*F23*chi23*dAdchi31332 + F12*F21*chi21*dAdchi12132 + F12*F21*chi22*dAdchi12232 + F12*F21*chi23*dAdchi12332 + F12*F22*chi21*dAdchi22132 + F12*F22*chi22*dAdchi22232 + F12*F22*chi23*dAdchi22332 + F12*F23*chi21*dAdchi32132 + F12*F23*chi22*dAdchi32232 + F12*F23*chi23*dAdchi32332 + F13*F21*chi21*dAdchi13132 + F13*F21*chi22*dAdchi13232 + F13*F21*chi23*dAdchi13332 + F13*F22*chi21*dAdchi23132 + F13*F22*chi22*dAdchi23232 + F13*F22*chi23*dAdchi23332 + F13*F23*chi21*dAdchi33132 + F13*F23*chi22*dAdchi33232 + F13*F23*chi23*dAdchi33332;
        dadchi(14,7) = F11*F21*chi21*dAdchi11131 + F11*F21*chi22*dAdchi11231 + F11*F21*chi23*dAdchi11331 + F11*F22*chi21*dAdchi21131 + F11*F22*chi22*dAdchi21231 + F11*F22*chi23*dAdchi21331 + F11*F23*chi21*dAdchi31131 + F11*F23*chi22*dAdchi31231 + F11*F23*chi23*dAdchi31331 + F12*F21*chi21*dAdchi12131 + F12*F21*chi22*dAdchi12231 + F12*F21*chi23*dAdchi12331 + F12*F22*chi21*dAdchi22131 + F12*F22*chi22*dAdchi22231 + F12*F22*chi23*dAdchi22331 + F12*F23*chi21*dAdchi32131 + F12*F23*chi22*dAdchi32231 + F12*F23*chi23*dAdchi32331 + F13*F21*chi21*dAdchi13131 + F13*F21*chi22*dAdchi13231 + F13*F21*chi23*dAdchi13331 + F13*F22*chi21*dAdchi23131 + F13*F22*chi22*dAdchi23231 + F13*F22*chi23*dAdchi23331 + F13*F23*chi21*dAdchi33131 + F13*F23*chi22*dAdchi33231 + F13*F23*chi23*dAdchi33331;
        dadchi(14,8) = A112*F11*F21 + A122*F12*F21 + A132*F13*F21 + A212*F11*F22 + A222*F12*F22 + A232*F13*F22 + A312*F11*F23 + A322*F12*F23 + A332*F13*F23 + F11*F21*chi21*dAdchi11121 + F11*F21*chi22*dAdchi11221 + F11*F21*chi23*dAdchi11321 + F11*F22*chi21*dAdchi21121 + F11*F22*chi22*dAdchi21221 + F11*F22*chi23*dAdchi21321 + F11*F23*chi21*dAdchi31121 + F11*F23*chi22*dAdchi31221 + F11*F23*chi23*dAdchi31321 + F12*F21*chi21*dAdchi12121 + F12*F21*chi22*dAdchi12221 + F12*F21*chi23*dAdchi12321 + F12*F22*chi21*dAdchi22121 + F12*F22*chi22*dAdchi22221 + F12*F22*chi23*dAdchi22321 + F12*F23*chi21*dAdchi32121 + F12*F23*chi22*dAdchi32221 + F12*F23*chi23*dAdchi32321 + F13*F21*chi21*dAdchi13121 + F13*F21*chi22*dAdchi13221 + F13*F21*chi23*dAdchi13321 + F13*F22*chi21*dAdchi23121 + F13*F22*chi22*dAdchi23221 + F13*F22*chi23*dAdchi23321 + F13*F23*chi21*dAdchi33121 + F13*F23*chi22*dAdchi33221 + F13*F23*chi23*dAdchi33321;
        dadchi(15,0) = F21*F31*chi21*dAdchi11111 + F21*F31*chi22*dAdchi11211 + F21*F31*chi23*dAdchi11311 + F21*F32*chi21*dAdchi12111 + F21*F32*chi22*dAdchi12211 + F21*F32*chi23*dAdchi12311 + F21*F33*chi21*dAdchi13111 + F21*F33*chi22*dAdchi13211 + F21*F33*chi23*dAdchi13311 + F22*F31*chi21*dAdchi21111 + F22*F31*chi22*dAdchi21211 + F22*F31*chi23*dAdchi21311 + F22*F32*chi21*dAdchi22111 + F22*F32*chi22*dAdchi22211 + F22*F32*chi23*dAdchi22311 + F22*F33*chi21*dAdchi23111 + F22*F33*chi22*dAdchi23211 + F22*F33*chi23*dAdchi23311 + F23*F31*chi21*dAdchi31111 + F23*F31*chi22*dAdchi31211 + F23*F31*chi23*dAdchi31311 + F23*F32*chi21*dAdchi32111 + F23*F32*chi22*dAdchi32211 + F23*F32*chi23*dAdchi32311 + F23*F33*chi21*dAdchi33111 + F23*F33*chi22*dAdchi33211 + F23*F33*chi23*dAdchi33311;
        dadchi(15,1) = A112*F21*F31 + A122*F21*F32 + A132*F21*F33 + A212*F22*F31 + A222*F22*F32 + A232*F22*F33 + A312*F23*F31 + A322*F23*F32 + A332*F23*F33 + F21*F31*chi21*dAdchi11122 + F21*F31*chi22*dAdchi11222 + F21*F31*chi23*dAdchi11322 + F21*F32*chi21*dAdchi12122 + F21*F32*chi22*dAdchi12222 + F21*F32*chi23*dAdchi12322 + F21*F33*chi21*dAdchi13122 + F21*F33*chi22*dAdchi13222 + F21*F33*chi23*dAdchi13322 + F22*F31*chi21*dAdchi21122 + F22*F31*chi22*dAdchi21222 + F22*F31*chi23*dAdchi21322 + F22*F32*chi21*dAdchi22122 + F22*F32*chi22*dAdchi22222 + F22*F32*chi23*dAdchi22322 + F22*F33*chi21*dAdchi23122 + F22*F33*chi22*dAdchi23222 + F22*F33*chi23*dAdchi23322 + F23*F31*chi21*dAdchi31122 + F23*F31*chi22*dAdchi31222 + F23*F31*chi23*dAdchi31322 + F23*F32*chi21*dAdchi32122 + F23*F32*chi22*dAdchi32222 + F23*F32*chi23*dAdchi32322 + F23*F33*chi21*dAdchi33122 + F23*F33*chi22*dAdchi33222 + F23*F33*chi23*dAdchi33322;
        dadchi(15,2) = F21*F31*chi21*dAdchi11133 + F21*F31*chi22*dAdchi11233 + F21*F31*chi23*dAdchi11333 + F21*F32*chi21*dAdchi12133 + F21*F32*chi22*dAdchi12233 + F21*F32*chi23*dAdchi12333 + F21*F33*chi21*dAdchi13133 + F21*F33*chi22*dAdchi13233 + F21*F33*chi23*dAdchi13333 + F22*F31*chi21*dAdchi21133 + F22*F31*chi22*dAdchi21233 + F22*F31*chi23*dAdchi21333 + F22*F32*chi21*dAdchi22133 + F22*F32*chi22*dAdchi22233 + F22*F32*chi23*dAdchi22333 + F22*F33*chi21*dAdchi23133 + F22*F33*chi22*dAdchi23233 + F22*F33*chi23*dAdchi23333 + F23*F31*chi21*dAdchi31133 + F23*F31*chi22*dAdchi31233 + F23*F31*chi23*dAdchi31333 + F23*F32*chi21*dAdchi32133 + F23*F32*chi22*dAdchi32233 + F23*F32*chi23*dAdchi32333 + F23*F33*chi21*dAdchi33133 + F23*F33*chi22*dAdchi33233 + F23*F33*chi23*dAdchi33333;
        dadchi(15,3) = A112*F21*F31 + A122*F21*F32 + A132*F21*F33 + A212*F22*F31 + A222*F22*F32 + A232*F22*F33 + A312*F23*F31 + A322*F23*F32 + A332*F23*F33 + F21*F31*chi21*dAdchi11123 + F21*F31*chi22*dAdchi11223 + F21*F31*chi23*dAdchi11323 + F21*F32*chi21*dAdchi12123 + F21*F32*chi22*dAdchi12223 + F21*F32*chi23*dAdchi12323 + F21*F33*chi21*dAdchi13123 + F21*F33*chi22*dAdchi13223 + F21*F33*chi23*dAdchi13323 + F22*F31*chi21*dAdchi21123 + F22*F31*chi22*dAdchi21223 + F22*F31*chi23*dAdchi21323 + F22*F32*chi21*dAdchi22123 + F22*F32*chi22*dAdchi22223 + F22*F32*chi23*dAdchi22323 + F22*F33*chi21*dAdchi23123 + F22*F33*chi22*dAdchi23223 + F22*F33*chi23*dAdchi23323 + F23*F31*chi21*dAdchi31123 + F23*F31*chi22*dAdchi31223 + F23*F31*chi23*dAdchi31323 + F23*F32*chi21*dAdchi32123 + F23*F32*chi22*dAdchi32223 + F23*F32*chi23*dAdchi32323 + F23*F33*chi21*dAdchi33123 + F23*F33*chi22*dAdchi33223 + F23*F33*chi23*dAdchi33323;
        dadchi(15,4) = F21*F31*chi21*dAdchi11113 + F21*F31*chi22*dAdchi11213 + F21*F31*chi23*dAdchi11313 + F21*F32*chi21*dAdchi12113 + F21*F32*chi22*dAdchi12213 + F21*F32*chi23*dAdchi12313 + F21*F33*chi21*dAdchi13113 + F21*F33*chi22*dAdchi13213 + F21*F33*chi23*dAdchi13313 + F22*F31*chi21*dAdchi21113 + F22*F31*chi22*dAdchi21213 + F22*F31*chi23*dAdchi21313 + F22*F32*chi21*dAdchi22113 + F22*F32*chi22*dAdchi22213 + F22*F32*chi23*dAdchi22313 + F22*F33*chi21*dAdchi23113 + F22*F33*chi22*dAdchi23213 + F22*F33*chi23*dAdchi23313 + F23*F31*chi21*dAdchi31113 + F23*F31*chi22*dAdchi31213 + F23*F31*chi23*dAdchi31313 + F23*F32*chi21*dAdchi32113 + F23*F32*chi22*dAdchi32213 + F23*F32*chi23*dAdchi32313 + F23*F33*chi21*dAdchi33113 + F23*F33*chi22*dAdchi33213 + F23*F33*chi23*dAdchi33313;
        dadchi(15,5) = F21*F31*chi21*dAdchi11112 + F21*F31*chi22*dAdchi11212 + F21*F31*chi23*dAdchi11312 + F21*F32*chi21*dAdchi12112 + F21*F32*chi22*dAdchi12212 + F21*F32*chi23*dAdchi12312 + F21*F33*chi21*dAdchi13112 + F21*F33*chi22*dAdchi13212 + F21*F33*chi23*dAdchi13312 + F22*F31*chi21*dAdchi21112 + F22*F31*chi22*dAdchi21212 + F22*F31*chi23*dAdchi21312 + F22*F32*chi21*dAdchi22112 + F22*F32*chi22*dAdchi22212 + F22*F32*chi23*dAdchi22312 + F22*F33*chi21*dAdchi23112 + F22*F33*chi22*dAdchi23212 + F22*F33*chi23*dAdchi23312 + F23*F31*chi21*dAdchi31112 + F23*F31*chi22*dAdchi31212 + F23*F31*chi23*dAdchi31312 + F23*F32*chi21*dAdchi32112 + F23*F32*chi22*dAdchi32212 + F23*F32*chi23*dAdchi32312 + F23*F33*chi21*dAdchi33112 + F23*F33*chi22*dAdchi33212 + F23*F33*chi23*dAdchi33312;
        dadchi(15,6) = F21*F31*chi21*dAdchi11132 + F21*F31*chi22*dAdchi11232 + F21*F31*chi23*dAdchi11332 + F21*F32*chi21*dAdchi12132 + F21*F32*chi22*dAdchi12232 + F21*F32*chi23*dAdchi12332 + F21*F33*chi21*dAdchi13132 + F21*F33*chi22*dAdchi13232 + F21*F33*chi23*dAdchi13332 + F22*F31*chi21*dAdchi21132 + F22*F31*chi22*dAdchi21232 + F22*F31*chi23*dAdchi21332 + F22*F32*chi21*dAdchi22132 + F22*F32*chi22*dAdchi22232 + F22*F32*chi23*dAdchi22332 + F22*F33*chi21*dAdchi23132 + F22*F33*chi22*dAdchi23232 + F22*F33*chi23*dAdchi23332 + F23*F31*chi21*dAdchi31132 + F23*F31*chi22*dAdchi31232 + F23*F31*chi23*dAdchi31332 + F23*F32*chi21*dAdchi32132 + F23*F32*chi22*dAdchi32232 + F23*F32*chi23*dAdchi32332 + F23*F33*chi21*dAdchi33132 + F23*F33*chi22*dAdchi33232 + F23*F33*chi23*dAdchi33332;
        dadchi(15,7) = F21*F31*chi21*dAdchi11131 + F21*F31*chi22*dAdchi11231 + F21*F31*chi23*dAdchi11331 + F21*F32*chi21*dAdchi12131 + F21*F32*chi22*dAdchi12231 + F21*F32*chi23*dAdchi12331 + F21*F33*chi21*dAdchi13131 + F21*F33*chi22*dAdchi13231 + F21*F33*chi23*dAdchi13331 + F22*F31*chi21*dAdchi21131 + F22*F31*chi22*dAdchi21231 + F22*F31*chi23*dAdchi21331 + F22*F32*chi21*dAdchi22131 + F22*F32*chi22*dAdchi22231 + F22*F32*chi23*dAdchi22331 + F22*F33*chi21*dAdchi23131 + F22*F33*chi22*dAdchi23231 + F22*F33*chi23*dAdchi23331 + F23*F31*chi21*dAdchi31131 + F23*F31*chi22*dAdchi31231 + F23*F31*chi23*dAdchi31331 + F23*F32*chi21*dAdchi32131 + F23*F32*chi22*dAdchi32231 + F23*F32*chi23*dAdchi32331 + F23*F33*chi21*dAdchi33131 + F23*F33*chi22*dAdchi33231 + F23*F33*chi23*dAdchi33331;
        dadchi(15,8) = A112*F21*F31 + A122*F21*F32 + A132*F21*F33 + A212*F22*F31 + A222*F22*F32 + A232*F22*F33 + A312*F23*F31 + A322*F23*F32 + A332*F23*F33 + F21*F31*chi21*dAdchi11121 + F21*F31*chi22*dAdchi11221 + F21*F31*chi23*dAdchi11321 + F21*F32*chi21*dAdchi12121 + F21*F32*chi22*dAdchi12221 + F21*F32*chi23*dAdchi12321 + F21*F33*chi21*dAdchi13121 + F21*F33*chi22*dAdchi13221 + F21*F33*chi23*dAdchi13321 + F22*F31*chi21*dAdchi21121 + F22*F31*chi22*dAdchi21221 + F22*F31*chi23*dAdchi21321 + F22*F32*chi21*dAdchi22121 + F22*F32*chi22*dAdchi22221 + F22*F32*chi23*dAdchi22321 + F22*F33*chi21*dAdchi23121 + F22*F33*chi22*dAdchi23221 + F22*F33*chi23*dAdchi23321 + F23*F31*chi21*dAdchi31121 + F23*F31*chi22*dAdchi31221 + F23*F31*chi23*dAdchi31321 + F23*F32*chi21*dAdchi32121 + F23*F32*chi22*dAdchi32221 + F23*F32*chi23*dAdchi32321 + F23*F33*chi21*dAdchi33121 + F23*F33*chi22*dAdchi33221 + F23*F33*chi23*dAdchi33321;
        dadchi(16,0) = A111*F21*F31 + A121*F21*F32 + A131*F21*F33 + A211*F22*F31 + A221*F22*F32 + A231*F22*F33 + A311*F23*F31 + A321*F23*F32 + A331*F23*F33 + F21*F31*chi11*dAdchi11111 + F21*F31*chi12*dAdchi11211 + F21*F31*chi13*dAdchi11311 + F21*F32*chi11*dAdchi12111 + F21*F32*chi12*dAdchi12211 + F21*F32*chi13*dAdchi12311 + F21*F33*chi11*dAdchi13111 + F21*F33*chi12*dAdchi13211 + F21*F33*chi13*dAdchi13311 + F22*F31*chi11*dAdchi21111 + F22*F31*chi12*dAdchi21211 + F22*F31*chi13*dAdchi21311 + F22*F32*chi11*dAdchi22111 + F22*F32*chi12*dAdchi22211 + F22*F32*chi13*dAdchi22311 + F22*F33*chi11*dAdchi23111 + F22*F33*chi12*dAdchi23211 + F22*F33*chi13*dAdchi23311 + F23*F31*chi11*dAdchi31111 + F23*F31*chi12*dAdchi31211 + F23*F31*chi13*dAdchi31311 + F23*F32*chi11*dAdchi32111 + F23*F32*chi12*dAdchi32211 + F23*F32*chi13*dAdchi32311 + F23*F33*chi11*dAdchi33111 + F23*F33*chi12*dAdchi33211 + F23*F33*chi13*dAdchi33311;
        dadchi(16,1) = F21*F31*chi11*dAdchi11122 + F21*F31*chi12*dAdchi11222 + F21*F31*chi13*dAdchi11322 + F21*F32*chi11*dAdchi12122 + F21*F32*chi12*dAdchi12222 + F21*F32*chi13*dAdchi12322 + F21*F33*chi11*dAdchi13122 + F21*F33*chi12*dAdchi13222 + F21*F33*chi13*dAdchi13322 + F22*F31*chi11*dAdchi21122 + F22*F31*chi12*dAdchi21222 + F22*F31*chi13*dAdchi21322 + F22*F32*chi11*dAdchi22122 + F22*F32*chi12*dAdchi22222 + F22*F32*chi13*dAdchi22322 + F22*F33*chi11*dAdchi23122 + F22*F33*chi12*dAdchi23222 + F22*F33*chi13*dAdchi23322 + F23*F31*chi11*dAdchi31122 + F23*F31*chi12*dAdchi31222 + F23*F31*chi13*dAdchi31322 + F23*F32*chi11*dAdchi32122 + F23*F32*chi12*dAdchi32222 + F23*F32*chi13*dAdchi32322 + F23*F33*chi11*dAdchi33122 + F23*F33*chi12*dAdchi33222 + F23*F33*chi13*dAdchi33322;
        dadchi(16,2) = F21*F31*chi11*dAdchi11133 + F21*F31*chi12*dAdchi11233 + F21*F31*chi13*dAdchi11333 + F21*F32*chi11*dAdchi12133 + F21*F32*chi12*dAdchi12233 + F21*F32*chi13*dAdchi12333 + F21*F33*chi11*dAdchi13133 + F21*F33*chi12*dAdchi13233 + F21*F33*chi13*dAdchi13333 + F22*F31*chi11*dAdchi21133 + F22*F31*chi12*dAdchi21233 + F22*F31*chi13*dAdchi21333 + F22*F32*chi11*dAdchi22133 + F22*F32*chi12*dAdchi22233 + F22*F32*chi13*dAdchi22333 + F22*F33*chi11*dAdchi23133 + F22*F33*chi12*dAdchi23233 + F22*F33*chi13*dAdchi23333 + F23*F31*chi11*dAdchi31133 + F23*F31*chi12*dAdchi31233 + F23*F31*chi13*dAdchi31333 + F23*F32*chi11*dAdchi32133 + F23*F32*chi12*dAdchi32233 + F23*F32*chi13*dAdchi32333 + F23*F33*chi11*dAdchi33133 + F23*F33*chi12*dAdchi33233 + F23*F33*chi13*dAdchi33333;
        dadchi(16,3) = F21*F31*chi11*dAdchi11123 + F21*F31*chi12*dAdchi11223 + F21*F31*chi13*dAdchi11323 + F21*F32*chi11*dAdchi12123 + F21*F32*chi12*dAdchi12223 + F21*F32*chi13*dAdchi12323 + F21*F33*chi11*dAdchi13123 + F21*F33*chi12*dAdchi13223 + F21*F33*chi13*dAdchi13323 + F22*F31*chi11*dAdchi21123 + F22*F31*chi12*dAdchi21223 + F22*F31*chi13*dAdchi21323 + F22*F32*chi11*dAdchi22123 + F22*F32*chi12*dAdchi22223 + F22*F32*chi13*dAdchi22323 + F22*F33*chi11*dAdchi23123 + F22*F33*chi12*dAdchi23223 + F22*F33*chi13*dAdchi23323 + F23*F31*chi11*dAdchi31123 + F23*F31*chi12*dAdchi31223 + F23*F31*chi13*dAdchi31323 + F23*F32*chi11*dAdchi32123 + F23*F32*chi12*dAdchi32223 + F23*F32*chi13*dAdchi32323 + F23*F33*chi11*dAdchi33123 + F23*F33*chi12*dAdchi33223 + F23*F33*chi13*dAdchi33323;
        dadchi(16,4) = A111*F21*F31 + A121*F21*F32 + A131*F21*F33 + A211*F22*F31 + A221*F22*F32 + A231*F22*F33 + A311*F23*F31 + A321*F23*F32 + A331*F23*F33 + F21*F31*chi11*dAdchi11113 + F21*F31*chi12*dAdchi11213 + F21*F31*chi13*dAdchi11313 + F21*F32*chi11*dAdchi12113 + F21*F32*chi12*dAdchi12213 + F21*F32*chi13*dAdchi12313 + F21*F33*chi11*dAdchi13113 + F21*F33*chi12*dAdchi13213 + F21*F33*chi13*dAdchi13313 + F22*F31*chi11*dAdchi21113 + F22*F31*chi12*dAdchi21213 + F22*F31*chi13*dAdchi21313 + F22*F32*chi11*dAdchi22113 + F22*F32*chi12*dAdchi22213 + F22*F32*chi13*dAdchi22313 + F22*F33*chi11*dAdchi23113 + F22*F33*chi12*dAdchi23213 + F22*F33*chi13*dAdchi23313 + F23*F31*chi11*dAdchi31113 + F23*F31*chi12*dAdchi31213 + F23*F31*chi13*dAdchi31313 + F23*F32*chi11*dAdchi32113 + F23*F32*chi12*dAdchi32213 + F23*F32*chi13*dAdchi32313 + F23*F33*chi11*dAdchi33113 + F23*F33*chi12*dAdchi33213 + F23*F33*chi13*dAdchi33313;
        dadchi(16,5) = A111*F21*F31 + A121*F21*F32 + A131*F21*F33 + A211*F22*F31 + A221*F22*F32 + A231*F22*F33 + A311*F23*F31 + A321*F23*F32 + A331*F23*F33 + F21*F31*chi11*dAdchi11112 + F21*F31*chi12*dAdchi11212 + F21*F31*chi13*dAdchi11312 + F21*F32*chi11*dAdchi12112 + F21*F32*chi12*dAdchi12212 + F21*F32*chi13*dAdchi12312 + F21*F33*chi11*dAdchi13112 + F21*F33*chi12*dAdchi13212 + F21*F33*chi13*dAdchi13312 + F22*F31*chi11*dAdchi21112 + F22*F31*chi12*dAdchi21212 + F22*F31*chi13*dAdchi21312 + F22*F32*chi11*dAdchi22112 + F22*F32*chi12*dAdchi22212 + F22*F32*chi13*dAdchi22312 + F22*F33*chi11*dAdchi23112 + F22*F33*chi12*dAdchi23212 + F22*F33*chi13*dAdchi23312 + F23*F31*chi11*dAdchi31112 + F23*F31*chi12*dAdchi31212 + F23*F31*chi13*dAdchi31312 + F23*F32*chi11*dAdchi32112 + F23*F32*chi12*dAdchi32212 + F23*F32*chi13*dAdchi32312 + F23*F33*chi11*dAdchi33112 + F23*F33*chi12*dAdchi33212 + F23*F33*chi13*dAdchi33312;
        dadchi(16,6) = F21*F31*chi11*dAdchi11132 + F21*F31*chi12*dAdchi11232 + F21*F31*chi13*dAdchi11332 + F21*F32*chi11*dAdchi12132 + F21*F32*chi12*dAdchi12232 + F21*F32*chi13*dAdchi12332 + F21*F33*chi11*dAdchi13132 + F21*F33*chi12*dAdchi13232 + F21*F33*chi13*dAdchi13332 + F22*F31*chi11*dAdchi21132 + F22*F31*chi12*dAdchi21232 + F22*F31*chi13*dAdchi21332 + F22*F32*chi11*dAdchi22132 + F22*F32*chi12*dAdchi22232 + F22*F32*chi13*dAdchi22332 + F22*F33*chi11*dAdchi23132 + F22*F33*chi12*dAdchi23232 + F22*F33*chi13*dAdchi23332 + F23*F31*chi11*dAdchi31132 + F23*F31*chi12*dAdchi31232 + F23*F31*chi13*dAdchi31332 + F23*F32*chi11*dAdchi32132 + F23*F32*chi12*dAdchi32232 + F23*F32*chi13*dAdchi32332 + F23*F33*chi11*dAdchi33132 + F23*F33*chi12*dAdchi33232 + F23*F33*chi13*dAdchi33332;
        dadchi(16,7) = F21*F31*chi11*dAdchi11131 + F21*F31*chi12*dAdchi11231 + F21*F31*chi13*dAdchi11331 + F21*F32*chi11*dAdchi12131 + F21*F32*chi12*dAdchi12231 + F21*F32*chi13*dAdchi12331 + F21*F33*chi11*dAdchi13131 + F21*F33*chi12*dAdchi13231 + F21*F33*chi13*dAdchi13331 + F22*F31*chi11*dAdchi21131 + F22*F31*chi12*dAdchi21231 + F22*F31*chi13*dAdchi21331 + F22*F32*chi11*dAdchi22131 + F22*F32*chi12*dAdchi22231 + F22*F32*chi13*dAdchi22331 + F22*F33*chi11*dAdchi23131 + F22*F33*chi12*dAdchi23231 + F22*F33*chi13*dAdchi23331 + F23*F31*chi11*dAdchi31131 + F23*F31*chi12*dAdchi31231 + F23*F31*chi13*dAdchi31331 + F23*F32*chi11*dAdchi32131 + F23*F32*chi12*dAdchi32231 + F23*F32*chi13*dAdchi32331 + F23*F33*chi11*dAdchi33131 + F23*F33*chi12*dAdchi33231 + F23*F33*chi13*dAdchi33331;
        dadchi(16,8) = F21*F31*chi11*dAdchi11121 + F21*F31*chi12*dAdchi11221 + F21*F31*chi13*dAdchi11321 + F21*F32*chi11*dAdchi12121 + F21*F32*chi12*dAdchi12221 + F21*F32*chi13*dAdchi12321 + F21*F33*chi11*dAdchi13121 + F21*F33*chi12*dAdchi13221 + F21*F33*chi13*dAdchi13321 + F22*F31*chi11*dAdchi21121 + F22*F31*chi12*dAdchi21221 + F22*F31*chi13*dAdchi21321 + F22*F32*chi11*dAdchi22121 + F22*F32*chi12*dAdchi22221 + F22*F32*chi13*dAdchi22321 + F22*F33*chi11*dAdchi23121 + F22*F33*chi12*dAdchi23221 + F22*F33*chi13*dAdchi23321 + F23*F31*chi11*dAdchi31121 + F23*F31*chi12*dAdchi31221 + F23*F31*chi13*dAdchi31321 + F23*F32*chi11*dAdchi32121 + F23*F32*chi12*dAdchi32221 + F23*F32*chi13*dAdchi32321 + F23*F33*chi11*dAdchi33121 + F23*F33*chi12*dAdchi33221 + F23*F33*chi13*dAdchi33321;
        dadchi(17,0) = A111*F21*F21 + A121*F21*F22 + A131*F21*F23 + A211*F21*F22 + A221*F22*F22 + A231*F22*F23 + A311*F21*F23 + A321*F22*F23 + A331*F23*F23 + F21*F21*chi11*dAdchi11111 + F21*F21*chi12*dAdchi11211 + F21*F21*chi13*dAdchi11311 + F21*F22*chi11*dAdchi12111 + F21*F22*chi11*dAdchi21111 + F21*F22*chi12*dAdchi12211 + F21*F22*chi12*dAdchi21211 + F21*F22*chi13*dAdchi12311 + F21*F22*chi13*dAdchi21311 + F21*F23*chi11*dAdchi13111 + F21*F23*chi11*dAdchi31111 + F21*F23*chi12*dAdchi13211 + F21*F23*chi12*dAdchi31211 + F21*F23*chi13*dAdchi13311 + F21*F23*chi13*dAdchi31311 + F22*F22*chi11*dAdchi22111 + F22*F22*chi12*dAdchi22211 + F22*F22*chi13*dAdchi22311 + F22*F23*chi11*dAdchi23111 + F22*F23*chi11*dAdchi32111 + F22*F23*chi12*dAdchi23211 + F22*F23*chi12*dAdchi32211 + F22*F23*chi13*dAdchi23311 + F22*F23*chi13*dAdchi32311 + F23*F23*chi11*dAdchi33111 + F23*F23*chi12*dAdchi33211 + F23*F23*chi13*dAdchi33311;
        dadchi(17,1) = F21*F21*chi11*dAdchi11122 + F21*F21*chi12*dAdchi11222 + F21*F21*chi13*dAdchi11322 + F21*F22*chi11*dAdchi12122 + F21*F22*chi11*dAdchi21122 + F21*F22*chi12*dAdchi12222 + F21*F22*chi12*dAdchi21222 + F21*F22*chi13*dAdchi12322 + F21*F22*chi13*dAdchi21322 + F21*F23*chi11*dAdchi13122 + F21*F23*chi11*dAdchi31122 + F21*F23*chi12*dAdchi13222 + F21*F23*chi12*dAdchi31222 + F21*F23*chi13*dAdchi13322 + F21*F23*chi13*dAdchi31322 + F22*F22*chi11*dAdchi22122 + F22*F22*chi12*dAdchi22222 + F22*F22*chi13*dAdchi22322 + F22*F23*chi11*dAdchi23122 + F22*F23*chi11*dAdchi32122 + F22*F23*chi12*dAdchi23222 + F22*F23*chi12*dAdchi32222 + F22*F23*chi13*dAdchi23322 + F22*F23*chi13*dAdchi32322 + F23*F23*chi11*dAdchi33122 + F23*F23*chi12*dAdchi33222 + F23*F23*chi13*dAdchi33322;
        dadchi(17,2) = F21*F21*chi11*dAdchi11133 + F21*F21*chi12*dAdchi11233 + F21*F21*chi13*dAdchi11333 + F21*F22*chi11*dAdchi12133 + F21*F22*chi11*dAdchi21133 + F21*F22*chi12*dAdchi12233 + F21*F22*chi12*dAdchi21233 + F21*F22*chi13*dAdchi12333 + F21*F22*chi13*dAdchi21333 + F21*F23*chi11*dAdchi13133 + F21*F23*chi11*dAdchi31133 + F21*F23*chi12*dAdchi13233 + F21*F23*chi12*dAdchi31233 + F21*F23*chi13*dAdchi13333 + F21*F23*chi13*dAdchi31333 + F22*F22*chi11*dAdchi22133 + F22*F22*chi12*dAdchi22233 + F22*F22*chi13*dAdchi22333 + F22*F23*chi11*dAdchi23133 + F22*F23*chi11*dAdchi32133 + F22*F23*chi12*dAdchi23233 + F22*F23*chi12*dAdchi32233 + F22*F23*chi13*dAdchi23333 + F22*F23*chi13*dAdchi32333 + F23*F23*chi11*dAdchi33133 + F23*F23*chi12*dAdchi33233 + F23*F23*chi13*dAdchi33333;
        dadchi(17,3) = F21*F21*chi11*dAdchi11123 + F21*F21*chi12*dAdchi11223 + F21*F21*chi13*dAdchi11323 + F21*F22*chi11*dAdchi12123 + F21*F22*chi11*dAdchi21123 + F21*F22*chi12*dAdchi12223 + F21*F22*chi12*dAdchi21223 + F21*F22*chi13*dAdchi12323 + F21*F22*chi13*dAdchi21323 + F21*F23*chi11*dAdchi13123 + F21*F23*chi11*dAdchi31123 + F21*F23*chi12*dAdchi13223 + F21*F23*chi12*dAdchi31223 + F21*F23*chi13*dAdchi13323 + F21*F23*chi13*dAdchi31323 + F22*F22*chi11*dAdchi22123 + F22*F22*chi12*dAdchi22223 + F22*F22*chi13*dAdchi22323 + F22*F23*chi11*dAdchi23123 + F22*F23*chi11*dAdchi32123 + F22*F23*chi12*dAdchi23223 + F22*F23*chi12*dAdchi32223 + F22*F23*chi13*dAdchi23323 + F22*F23*chi13*dAdchi32323 + F23*F23*chi11*dAdchi33123 + F23*F23*chi12*dAdchi33223 + F23*F23*chi13*dAdchi33323;
        dadchi(17,4) = A111*F21*F21 + A121*F21*F22 + A131*F21*F23 + A211*F21*F22 + A221*F22*F22 + A231*F22*F23 + A311*F21*F23 + A321*F22*F23 + A331*F23*F23 + F21*F21*chi11*dAdchi11113 + F21*F21*chi12*dAdchi11213 + F21*F21*chi13*dAdchi11313 + F21*F22*chi11*dAdchi12113 + F21*F22*chi11*dAdchi21113 + F21*F22*chi12*dAdchi12213 + F21*F22*chi12*dAdchi21213 + F21*F22*chi13*dAdchi12313 + F21*F22*chi13*dAdchi21313 + F21*F23*chi11*dAdchi13113 + F21*F23*chi11*dAdchi31113 + F21*F23*chi12*dAdchi13213 + F21*F23*chi12*dAdchi31213 + F21*F23*chi13*dAdchi13313 + F21*F23*chi13*dAdchi31313 + F22*F22*chi11*dAdchi22113 + F22*F22*chi12*dAdchi22213 + F22*F22*chi13*dAdchi22313 + F22*F23*chi11*dAdchi23113 + F22*F23*chi11*dAdchi32113 + F22*F23*chi12*dAdchi23213 + F22*F23*chi12*dAdchi32213 + F22*F23*chi13*dAdchi23313 + F22*F23*chi13*dAdchi32313 + F23*F23*chi11*dAdchi33113 + F23*F23*chi12*dAdchi33213 + F23*F23*chi13*dAdchi33313;
        dadchi(17,5) = A111*F21*F21 + A121*F21*F22 + A131*F21*F23 + A211*F21*F22 + A221*F22*F22 + A231*F22*F23 + A311*F21*F23 + A321*F22*F23 + A331*F23*F23 + F21*F21*chi11*dAdchi11112 + F21*F21*chi12*dAdchi11212 + F21*F21*chi13*dAdchi11312 + F21*F22*chi11*dAdchi12112 + F21*F22*chi11*dAdchi21112 + F21*F22*chi12*dAdchi12212 + F21*F22*chi12*dAdchi21212 + F21*F22*chi13*dAdchi12312 + F21*F22*chi13*dAdchi21312 + F21*F23*chi11*dAdchi13112 + F21*F23*chi11*dAdchi31112 + F21*F23*chi12*dAdchi13212 + F21*F23*chi12*dAdchi31212 + F21*F23*chi13*dAdchi13312 + F21*F23*chi13*dAdchi31312 + F22*F22*chi11*dAdchi22112 + F22*F22*chi12*dAdchi22212 + F22*F22*chi13*dAdchi22312 + F22*F23*chi11*dAdchi23112 + F22*F23*chi11*dAdchi32112 + F22*F23*chi12*dAdchi23212 + F22*F23*chi12*dAdchi32212 + F22*F23*chi13*dAdchi23312 + F22*F23*chi13*dAdchi32312 + F23*F23*chi11*dAdchi33112 + F23*F23*chi12*dAdchi33212 + F23*F23*chi13*dAdchi33312;
        dadchi(17,6) = F21*F21*chi11*dAdchi11132 + F21*F21*chi12*dAdchi11232 + F21*F21*chi13*dAdchi11332 + F21*F22*chi11*dAdchi12132 + F21*F22*chi11*dAdchi21132 + F21*F22*chi12*dAdchi12232 + F21*F22*chi12*dAdchi21232 + F21*F22*chi13*dAdchi12332 + F21*F22*chi13*dAdchi21332 + F21*F23*chi11*dAdchi13132 + F21*F23*chi11*dAdchi31132 + F21*F23*chi12*dAdchi13232 + F21*F23*chi12*dAdchi31232 + F21*F23*chi13*dAdchi13332 + F21*F23*chi13*dAdchi31332 + F22*F22*chi11*dAdchi22132 + F22*F22*chi12*dAdchi22232 + F22*F22*chi13*dAdchi22332 + F22*F23*chi11*dAdchi23132 + F22*F23*chi11*dAdchi32132 + F22*F23*chi12*dAdchi23232 + F22*F23*chi12*dAdchi32232 + F22*F23*chi13*dAdchi23332 + F22*F23*chi13*dAdchi32332 + F23*F23*chi11*dAdchi33132 + F23*F23*chi12*dAdchi33232 + F23*F23*chi13*dAdchi33332;
        dadchi(17,7) = F21*F21*chi11*dAdchi11131 + F21*F21*chi12*dAdchi11231 + F21*F21*chi13*dAdchi11331 + F21*F22*chi11*dAdchi12131 + F21*F22*chi11*dAdchi21131 + F21*F22*chi12*dAdchi12231 + F21*F22*chi12*dAdchi21231 + F21*F22*chi13*dAdchi12331 + F21*F22*chi13*dAdchi21331 + F21*F23*chi11*dAdchi13131 + F21*F23*chi11*dAdchi31131 + F21*F23*chi12*dAdchi13231 + F21*F23*chi12*dAdchi31231 + F21*F23*chi13*dAdchi13331 + F21*F23*chi13*dAdchi31331 + F22*F22*chi11*dAdchi22131 + F22*F22*chi12*dAdchi22231 + F22*F22*chi13*dAdchi22331 + F22*F23*chi11*dAdchi23131 + F22*F23*chi11*dAdchi32131 + F22*F23*chi12*dAdchi23231 + F22*F23*chi12*dAdchi32231 + F22*F23*chi13*dAdchi23331 + F22*F23*chi13*dAdchi32331 + F23*F23*chi11*dAdchi33131 + F23*F23*chi12*dAdchi33231 + F23*F23*chi13*dAdchi33331;
        dadchi(17,8) = F21*F21*chi11*dAdchi11121 + F21*F21*chi12*dAdchi11221 + F21*F21*chi13*dAdchi11321 + F21*F22*chi11*dAdchi12121 + F21*F22*chi11*dAdchi21121 + F21*F22*chi12*dAdchi12221 + F21*F22*chi12*dAdchi21221 + F21*F22*chi13*dAdchi12321 + F21*F22*chi13*dAdchi21321 + F21*F23*chi11*dAdchi13121 + F21*F23*chi11*dAdchi31121 + F21*F23*chi12*dAdchi13221 + F21*F23*chi12*dAdchi31221 + F21*F23*chi13*dAdchi13321 + F21*F23*chi13*dAdchi31321 + F22*F22*chi11*dAdchi22121 + F22*F22*chi12*dAdchi22221 + F22*F22*chi13*dAdchi22321 + F22*F23*chi11*dAdchi23121 + F22*F23*chi11*dAdchi32121 + F22*F23*chi12*dAdchi23221 + F22*F23*chi12*dAdchi32221 + F22*F23*chi13*dAdchi23321 + F22*F23*chi13*dAdchi32321 + F23*F23*chi11*dAdchi33121 + F23*F23*chi12*dAdchi33221 + F23*F23*chi13*dAdchi33321;
        dadchi(18,0) = A111*F11*F31 + A121*F12*F31 + A131*F13*F31 + A211*F11*F32 + A221*F12*F32 + A231*F13*F32 + A311*F11*F33 + A321*F12*F33 + A331*F13*F33 + F11*F31*chi11*dAdchi11111 + F11*F31*chi12*dAdchi11211 + F11*F31*chi13*dAdchi11311 + F11*F32*chi11*dAdchi21111 + F11*F32*chi12*dAdchi21211 + F11*F32*chi13*dAdchi21311 + F11*F33*chi11*dAdchi31111 + F11*F33*chi12*dAdchi31211 + F11*F33*chi13*dAdchi31311 + F12*F31*chi11*dAdchi12111 + F12*F31*chi12*dAdchi12211 + F12*F31*chi13*dAdchi12311 + F12*F32*chi11*dAdchi22111 + F12*F32*chi12*dAdchi22211 + F12*F32*chi13*dAdchi22311 + F12*F33*chi11*dAdchi32111 + F12*F33*chi12*dAdchi32211 + F12*F33*chi13*dAdchi32311 + F13*F31*chi11*dAdchi13111 + F13*F31*chi12*dAdchi13211 + F13*F31*chi13*dAdchi13311 + F13*F32*chi11*dAdchi23111 + F13*F32*chi12*dAdchi23211 + F13*F32*chi13*dAdchi23311 + F13*F33*chi11*dAdchi33111 + F13*F33*chi12*dAdchi33211 + F13*F33*chi13*dAdchi33311;
        dadchi(18,1) = F11*F31*chi11*dAdchi11122 + F11*F31*chi12*dAdchi11222 + F11*F31*chi13*dAdchi11322 + F11*F32*chi11*dAdchi21122 + F11*F32*chi12*dAdchi21222 + F11*F32*chi13*dAdchi21322 + F11*F33*chi11*dAdchi31122 + F11*F33*chi12*dAdchi31222 + F11*F33*chi13*dAdchi31322 + F12*F31*chi11*dAdchi12122 + F12*F31*chi12*dAdchi12222 + F12*F31*chi13*dAdchi12322 + F12*F32*chi11*dAdchi22122 + F12*F32*chi12*dAdchi22222 + F12*F32*chi13*dAdchi22322 + F12*F33*chi11*dAdchi32122 + F12*F33*chi12*dAdchi32222 + F12*F33*chi13*dAdchi32322 + F13*F31*chi11*dAdchi13122 + F13*F31*chi12*dAdchi13222 + F13*F31*chi13*dAdchi13322 + F13*F32*chi11*dAdchi23122 + F13*F32*chi12*dAdchi23222 + F13*F32*chi13*dAdchi23322 + F13*F33*chi11*dAdchi33122 + F13*F33*chi12*dAdchi33222 + F13*F33*chi13*dAdchi33322;
        dadchi(18,2) = F11*F31*chi11*dAdchi11133 + F11*F31*chi12*dAdchi11233 + F11*F31*chi13*dAdchi11333 + F11*F32*chi11*dAdchi21133 + F11*F32*chi12*dAdchi21233 + F11*F32*chi13*dAdchi21333 + F11*F33*chi11*dAdchi31133 + F11*F33*chi12*dAdchi31233 + F11*F33*chi13*dAdchi31333 + F12*F31*chi11*dAdchi12133 + F12*F31*chi12*dAdchi12233 + F12*F31*chi13*dAdchi12333 + F12*F32*chi11*dAdchi22133 + F12*F32*chi12*dAdchi22233 + F12*F32*chi13*dAdchi22333 + F12*F33*chi11*dAdchi32133 + F12*F33*chi12*dAdchi32233 + F12*F33*chi13*dAdchi32333 + F13*F31*chi11*dAdchi13133 + F13*F31*chi12*dAdchi13233 + F13*F31*chi13*dAdchi13333 + F13*F32*chi11*dAdchi23133 + F13*F32*chi12*dAdchi23233 + F13*F32*chi13*dAdchi23333 + F13*F33*chi11*dAdchi33133 + F13*F33*chi12*dAdchi33233 + F13*F33*chi13*dAdchi33333;
        dadchi(18,3) = F11*F31*chi11*dAdchi11123 + F11*F31*chi12*dAdchi11223 + F11*F31*chi13*dAdchi11323 + F11*F32*chi11*dAdchi21123 + F11*F32*chi12*dAdchi21223 + F11*F32*chi13*dAdchi21323 + F11*F33*chi11*dAdchi31123 + F11*F33*chi12*dAdchi31223 + F11*F33*chi13*dAdchi31323 + F12*F31*chi11*dAdchi12123 + F12*F31*chi12*dAdchi12223 + F12*F31*chi13*dAdchi12323 + F12*F32*chi11*dAdchi22123 + F12*F32*chi12*dAdchi22223 + F12*F32*chi13*dAdchi22323 + F12*F33*chi11*dAdchi32123 + F12*F33*chi12*dAdchi32223 + F12*F33*chi13*dAdchi32323 + F13*F31*chi11*dAdchi13123 + F13*F31*chi12*dAdchi13223 + F13*F31*chi13*dAdchi13323 + F13*F32*chi11*dAdchi23123 + F13*F32*chi12*dAdchi23223 + F13*F32*chi13*dAdchi23323 + F13*F33*chi11*dAdchi33123 + F13*F33*chi12*dAdchi33223 + F13*F33*chi13*dAdchi33323;
        dadchi(18,4) = A111*F11*F31 + A121*F12*F31 + A131*F13*F31 + A211*F11*F32 + A221*F12*F32 + A231*F13*F32 + A311*F11*F33 + A321*F12*F33 + A331*F13*F33 + F11*F31*chi11*dAdchi11113 + F11*F31*chi12*dAdchi11213 + F11*F31*chi13*dAdchi11313 + F11*F32*chi11*dAdchi21113 + F11*F32*chi12*dAdchi21213 + F11*F32*chi13*dAdchi21313 + F11*F33*chi11*dAdchi31113 + F11*F33*chi12*dAdchi31213 + F11*F33*chi13*dAdchi31313 + F12*F31*chi11*dAdchi12113 + F12*F31*chi12*dAdchi12213 + F12*F31*chi13*dAdchi12313 + F12*F32*chi11*dAdchi22113 + F12*F32*chi12*dAdchi22213 + F12*F32*chi13*dAdchi22313 + F12*F33*chi11*dAdchi32113 + F12*F33*chi12*dAdchi32213 + F12*F33*chi13*dAdchi32313 + F13*F31*chi11*dAdchi13113 + F13*F31*chi12*dAdchi13213 + F13*F31*chi13*dAdchi13313 + F13*F32*chi11*dAdchi23113 + F13*F32*chi12*dAdchi23213 + F13*F32*chi13*dAdchi23313 + F13*F33*chi11*dAdchi33113 + F13*F33*chi12*dAdchi33213 + F13*F33*chi13*dAdchi33313;
        dadchi(18,5) = A111*F11*F31 + A121*F12*F31 + A131*F13*F31 + A211*F11*F32 + A221*F12*F32 + A231*F13*F32 + A311*F11*F33 + A321*F12*F33 + A331*F13*F33 + F11*F31*chi11*dAdchi11112 + F11*F31*chi12*dAdchi11212 + F11*F31*chi13*dAdchi11312 + F11*F32*chi11*dAdchi21112 + F11*F32*chi12*dAdchi21212 + F11*F32*chi13*dAdchi21312 + F11*F33*chi11*dAdchi31112 + F11*F33*chi12*dAdchi31212 + F11*F33*chi13*dAdchi31312 + F12*F31*chi11*dAdchi12112 + F12*F31*chi12*dAdchi12212 + F12*F31*chi13*dAdchi12312 + F12*F32*chi11*dAdchi22112 + F12*F32*chi12*dAdchi22212 + F12*F32*chi13*dAdchi22312 + F12*F33*chi11*dAdchi32112 + F12*F33*chi12*dAdchi32212 + F12*F33*chi13*dAdchi32312 + F13*F31*chi11*dAdchi13112 + F13*F31*chi12*dAdchi13212 + F13*F31*chi13*dAdchi13312 + F13*F32*chi11*dAdchi23112 + F13*F32*chi12*dAdchi23212 + F13*F32*chi13*dAdchi23312 + F13*F33*chi11*dAdchi33112 + F13*F33*chi12*dAdchi33212 + F13*F33*chi13*dAdchi33312;
        dadchi(18,6) = F11*F31*chi11*dAdchi11132 + F11*F31*chi12*dAdchi11232 + F11*F31*chi13*dAdchi11332 + F11*F32*chi11*dAdchi21132 + F11*F32*chi12*dAdchi21232 + F11*F32*chi13*dAdchi21332 + F11*F33*chi11*dAdchi31132 + F11*F33*chi12*dAdchi31232 + F11*F33*chi13*dAdchi31332 + F12*F31*chi11*dAdchi12132 + F12*F31*chi12*dAdchi12232 + F12*F31*chi13*dAdchi12332 + F12*F32*chi11*dAdchi22132 + F12*F32*chi12*dAdchi22232 + F12*F32*chi13*dAdchi22332 + F12*F33*chi11*dAdchi32132 + F12*F33*chi12*dAdchi32232 + F12*F33*chi13*dAdchi32332 + F13*F31*chi11*dAdchi13132 + F13*F31*chi12*dAdchi13232 + F13*F31*chi13*dAdchi13332 + F13*F32*chi11*dAdchi23132 + F13*F32*chi12*dAdchi23232 + F13*F32*chi13*dAdchi23332 + F13*F33*chi11*dAdchi33132 + F13*F33*chi12*dAdchi33232 + F13*F33*chi13*dAdchi33332;
        dadchi(18,7) = F11*F31*chi11*dAdchi11131 + F11*F31*chi12*dAdchi11231 + F11*F31*chi13*dAdchi11331 + F11*F32*chi11*dAdchi21131 + F11*F32*chi12*dAdchi21231 + F11*F32*chi13*dAdchi21331 + F11*F33*chi11*dAdchi31131 + F11*F33*chi12*dAdchi31231 + F11*F33*chi13*dAdchi31331 + F12*F31*chi11*dAdchi12131 + F12*F31*chi12*dAdchi12231 + F12*F31*chi13*dAdchi12331 + F12*F32*chi11*dAdchi22131 + F12*F32*chi12*dAdchi22231 + F12*F32*chi13*dAdchi22331 + F12*F33*chi11*dAdchi32131 + F12*F33*chi12*dAdchi32231 + F12*F33*chi13*dAdchi32331 + F13*F31*chi11*dAdchi13131 + F13*F31*chi12*dAdchi13231 + F13*F31*chi13*dAdchi13331 + F13*F32*chi11*dAdchi23131 + F13*F32*chi12*dAdchi23231 + F13*F32*chi13*dAdchi23331 + F13*F33*chi11*dAdchi33131 + F13*F33*chi12*dAdchi33231 + F13*F33*chi13*dAdchi33331;
        dadchi(18,8) = F11*F31*chi11*dAdchi11121 + F11*F31*chi12*dAdchi11221 + F11*F31*chi13*dAdchi11321 + F11*F32*chi11*dAdchi21121 + F11*F32*chi12*dAdchi21221 + F11*F32*chi13*dAdchi21321 + F11*F33*chi11*dAdchi31121 + F11*F33*chi12*dAdchi31221 + F11*F33*chi13*dAdchi31321 + F12*F31*chi11*dAdchi12121 + F12*F31*chi12*dAdchi12221 + F12*F31*chi13*dAdchi12321 + F12*F32*chi11*dAdchi22121 + F12*F32*chi12*dAdchi22221 + F12*F32*chi13*dAdchi22321 + F12*F33*chi11*dAdchi32121 + F12*F33*chi12*dAdchi32221 + F12*F33*chi13*dAdchi32321 + F13*F31*chi11*dAdchi13121 + F13*F31*chi12*dAdchi13221 + F13*F31*chi13*dAdchi13321 + F13*F32*chi11*dAdchi23121 + F13*F32*chi12*dAdchi23221 + F13*F32*chi13*dAdchi23321 + F13*F33*chi11*dAdchi33121 + F13*F33*chi12*dAdchi33221 + F13*F33*chi13*dAdchi33321;
        dadchi(19,0) = F21*F31*chi21*dAdchi11111 + F21*F31*chi22*dAdchi11211 + F21*F31*chi23*dAdchi11311 + F21*F32*chi21*dAdchi21111 + F21*F32*chi22*dAdchi21211 + F21*F32*chi23*dAdchi21311 + F21*F33*chi21*dAdchi31111 + F21*F33*chi22*dAdchi31211 + F21*F33*chi23*dAdchi31311 + F22*F31*chi21*dAdchi12111 + F22*F31*chi22*dAdchi12211 + F22*F31*chi23*dAdchi12311 + F22*F32*chi21*dAdchi22111 + F22*F32*chi22*dAdchi22211 + F22*F32*chi23*dAdchi22311 + F22*F33*chi21*dAdchi32111 + F22*F33*chi22*dAdchi32211 + F22*F33*chi23*dAdchi32311 + F23*F31*chi21*dAdchi13111 + F23*F31*chi22*dAdchi13211 + F23*F31*chi23*dAdchi13311 + F23*F32*chi21*dAdchi23111 + F23*F32*chi22*dAdchi23211 + F23*F32*chi23*dAdchi23311 + F23*F33*chi21*dAdchi33111 + F23*F33*chi22*dAdchi33211 + F23*F33*chi23*dAdchi33311;
        dadchi(19,1) = A112*F21*F31 + A122*F22*F31 + A132*F23*F31 + A212*F21*F32 + A222*F22*F32 + A232*F23*F32 + A312*F21*F33 + A322*F22*F33 + A332*F23*F33 + F21*F31*chi21*dAdchi11122 + F21*F31*chi22*dAdchi11222 + F21*F31*chi23*dAdchi11322 + F21*F32*chi21*dAdchi21122 + F21*F32*chi22*dAdchi21222 + F21*F32*chi23*dAdchi21322 + F21*F33*chi21*dAdchi31122 + F21*F33*chi22*dAdchi31222 + F21*F33*chi23*dAdchi31322 + F22*F31*chi21*dAdchi12122 + F22*F31*chi22*dAdchi12222 + F22*F31*chi23*dAdchi12322 + F22*F32*chi21*dAdchi22122 + F22*F32*chi22*dAdchi22222 + F22*F32*chi23*dAdchi22322 + F22*F33*chi21*dAdchi32122 + F22*F33*chi22*dAdchi32222 + F22*F33*chi23*dAdchi32322 + F23*F31*chi21*dAdchi13122 + F23*F31*chi22*dAdchi13222 + F23*F31*chi23*dAdchi13322 + F23*F32*chi21*dAdchi23122 + F23*F32*chi22*dAdchi23222 + F23*F32*chi23*dAdchi23322 + F23*F33*chi21*dAdchi33122 + F23*F33*chi22*dAdchi33222 + F23*F33*chi23*dAdchi33322;
        dadchi(19,2) = F21*F31*chi21*dAdchi11133 + F21*F31*chi22*dAdchi11233 + F21*F31*chi23*dAdchi11333 + F21*F32*chi21*dAdchi21133 + F21*F32*chi22*dAdchi21233 + F21*F32*chi23*dAdchi21333 + F21*F33*chi21*dAdchi31133 + F21*F33*chi22*dAdchi31233 + F21*F33*chi23*dAdchi31333 + F22*F31*chi21*dAdchi12133 + F22*F31*chi22*dAdchi12233 + F22*F31*chi23*dAdchi12333 + F22*F32*chi21*dAdchi22133 + F22*F32*chi22*dAdchi22233 + F22*F32*chi23*dAdchi22333 + F22*F33*chi21*dAdchi32133 + F22*F33*chi22*dAdchi32233 + F22*F33*chi23*dAdchi32333 + F23*F31*chi21*dAdchi13133 + F23*F31*chi22*dAdchi13233 + F23*F31*chi23*dAdchi13333 + F23*F32*chi21*dAdchi23133 + F23*F32*chi22*dAdchi23233 + F23*F32*chi23*dAdchi23333 + F23*F33*chi21*dAdchi33133 + F23*F33*chi22*dAdchi33233 + F23*F33*chi23*dAdchi33333;
        dadchi(19,3) = A112*F21*F31 + A122*F22*F31 + A132*F23*F31 + A212*F21*F32 + A222*F22*F32 + A232*F23*F32 + A312*F21*F33 + A322*F22*F33 + A332*F23*F33 + F21*F31*chi21*dAdchi11123 + F21*F31*chi22*dAdchi11223 + F21*F31*chi23*dAdchi11323 + F21*F32*chi21*dAdchi21123 + F21*F32*chi22*dAdchi21223 + F21*F32*chi23*dAdchi21323 + F21*F33*chi21*dAdchi31123 + F21*F33*chi22*dAdchi31223 + F21*F33*chi23*dAdchi31323 + F22*F31*chi21*dAdchi12123 + F22*F31*chi22*dAdchi12223 + F22*F31*chi23*dAdchi12323 + F22*F32*chi21*dAdchi22123 + F22*F32*chi22*dAdchi22223 + F22*F32*chi23*dAdchi22323 + F22*F33*chi21*dAdchi32123 + F22*F33*chi22*dAdchi32223 + F22*F33*chi23*dAdchi32323 + F23*F31*chi21*dAdchi13123 + F23*F31*chi22*dAdchi13223 + F23*F31*chi23*dAdchi13323 + F23*F32*chi21*dAdchi23123 + F23*F32*chi22*dAdchi23223 + F23*F32*chi23*dAdchi23323 + F23*F33*chi21*dAdchi33123 + F23*F33*chi22*dAdchi33223 + F23*F33*chi23*dAdchi33323;
        dadchi(19,4) = F21*F31*chi21*dAdchi11113 + F21*F31*chi22*dAdchi11213 + F21*F31*chi23*dAdchi11313 + F21*F32*chi21*dAdchi21113 + F21*F32*chi22*dAdchi21213 + F21*F32*chi23*dAdchi21313 + F21*F33*chi21*dAdchi31113 + F21*F33*chi22*dAdchi31213 + F21*F33*chi23*dAdchi31313 + F22*F31*chi21*dAdchi12113 + F22*F31*chi22*dAdchi12213 + F22*F31*chi23*dAdchi12313 + F22*F32*chi21*dAdchi22113 + F22*F32*chi22*dAdchi22213 + F22*F32*chi23*dAdchi22313 + F22*F33*chi21*dAdchi32113 + F22*F33*chi22*dAdchi32213 + F22*F33*chi23*dAdchi32313 + F23*F31*chi21*dAdchi13113 + F23*F31*chi22*dAdchi13213 + F23*F31*chi23*dAdchi13313 + F23*F32*chi21*dAdchi23113 + F23*F32*chi22*dAdchi23213 + F23*F32*chi23*dAdchi23313 + F23*F33*chi21*dAdchi33113 + F23*F33*chi22*dAdchi33213 + F23*F33*chi23*dAdchi33313;
        dadchi(19,5) = F21*F31*chi21*dAdchi11112 + F21*F31*chi22*dAdchi11212 + F21*F31*chi23*dAdchi11312 + F21*F32*chi21*dAdchi21112 + F21*F32*chi22*dAdchi21212 + F21*F32*chi23*dAdchi21312 + F21*F33*chi21*dAdchi31112 + F21*F33*chi22*dAdchi31212 + F21*F33*chi23*dAdchi31312 + F22*F31*chi21*dAdchi12112 + F22*F31*chi22*dAdchi12212 + F22*F31*chi23*dAdchi12312 + F22*F32*chi21*dAdchi22112 + F22*F32*chi22*dAdchi22212 + F22*F32*chi23*dAdchi22312 + F22*F33*chi21*dAdchi32112 + F22*F33*chi22*dAdchi32212 + F22*F33*chi23*dAdchi32312 + F23*F31*chi21*dAdchi13112 + F23*F31*chi22*dAdchi13212 + F23*F31*chi23*dAdchi13312 + F23*F32*chi21*dAdchi23112 + F23*F32*chi22*dAdchi23212 + F23*F32*chi23*dAdchi23312 + F23*F33*chi21*dAdchi33112 + F23*F33*chi22*dAdchi33212 + F23*F33*chi23*dAdchi33312;
        dadchi(19,6) = F21*F31*chi21*dAdchi11132 + F21*F31*chi22*dAdchi11232 + F21*F31*chi23*dAdchi11332 + F21*F32*chi21*dAdchi21132 + F21*F32*chi22*dAdchi21232 + F21*F32*chi23*dAdchi21332 + F21*F33*chi21*dAdchi31132 + F21*F33*chi22*dAdchi31232 + F21*F33*chi23*dAdchi31332 + F22*F31*chi21*dAdchi12132 + F22*F31*chi22*dAdchi12232 + F22*F31*chi23*dAdchi12332 + F22*F32*chi21*dAdchi22132 + F22*F32*chi22*dAdchi22232 + F22*F32*chi23*dAdchi22332 + F22*F33*chi21*dAdchi32132 + F22*F33*chi22*dAdchi32232 + F22*F33*chi23*dAdchi32332 + F23*F31*chi21*dAdchi13132 + F23*F31*chi22*dAdchi13232 + F23*F31*chi23*dAdchi13332 + F23*F32*chi21*dAdchi23132 + F23*F32*chi22*dAdchi23232 + F23*F32*chi23*dAdchi23332 + F23*F33*chi21*dAdchi33132 + F23*F33*chi22*dAdchi33232 + F23*F33*chi23*dAdchi33332;
        dadchi(19,7) = F21*F31*chi21*dAdchi11131 + F21*F31*chi22*dAdchi11231 + F21*F31*chi23*dAdchi11331 + F21*F32*chi21*dAdchi21131 + F21*F32*chi22*dAdchi21231 + F21*F32*chi23*dAdchi21331 + F21*F33*chi21*dAdchi31131 + F21*F33*chi22*dAdchi31231 + F21*F33*chi23*dAdchi31331 + F22*F31*chi21*dAdchi12131 + F22*F31*chi22*dAdchi12231 + F22*F31*chi23*dAdchi12331 + F22*F32*chi21*dAdchi22131 + F22*F32*chi22*dAdchi22231 + F22*F32*chi23*dAdchi22331 + F22*F33*chi21*dAdchi32131 + F22*F33*chi22*dAdchi32231 + F22*F33*chi23*dAdchi32331 + F23*F31*chi21*dAdchi13131 + F23*F31*chi22*dAdchi13231 + F23*F31*chi23*dAdchi13331 + F23*F32*chi21*dAdchi23131 + F23*F32*chi22*dAdchi23231 + F23*F32*chi23*dAdchi23331 + F23*F33*chi21*dAdchi33131 + F23*F33*chi22*dAdchi33231 + F23*F33*chi23*dAdchi33331;
        dadchi(19,8) = A112*F21*F31 + A122*F22*F31 + A132*F23*F31 + A212*F21*F32 + A222*F22*F32 + A232*F23*F32 + A312*F21*F33 + A322*F22*F33 + A332*F23*F33 + F21*F31*chi21*dAdchi11121 + F21*F31*chi22*dAdchi11221 + F21*F31*chi23*dAdchi11321 + F21*F32*chi21*dAdchi21121 + F21*F32*chi22*dAdchi21221 + F21*F32*chi23*dAdchi21321 + F21*F33*chi21*dAdchi31121 + F21*F33*chi22*dAdchi31221 + F21*F33*chi23*dAdchi31321 + F22*F31*chi21*dAdchi12121 + F22*F31*chi22*dAdchi12221 + F22*F31*chi23*dAdchi12321 + F22*F32*chi21*dAdchi22121 + F22*F32*chi22*dAdchi22221 + F22*F32*chi23*dAdchi22321 + F22*F33*chi21*dAdchi32121 + F22*F33*chi22*dAdchi32221 + F22*F33*chi23*dAdchi32321 + F23*F31*chi21*dAdchi13121 + F23*F31*chi22*dAdchi13221 + F23*F31*chi23*dAdchi13321 + F23*F32*chi21*dAdchi23121 + F23*F32*chi22*dAdchi23221 + F23*F32*chi23*dAdchi23321 + F23*F33*chi21*dAdchi33121 + F23*F33*chi22*dAdchi33221 + F23*F33*chi23*dAdchi33321;
        dadchi(20,0) = F31*F31*chi31*dAdchi11111 + F31*F31*chi32*dAdchi11211 + F31*F31*chi33*dAdchi11311 + F31*F32*chi31*dAdchi12111 + F31*F32*chi31*dAdchi21111 + F31*F32*chi32*dAdchi12211 + F31*F32*chi32*dAdchi21211 + F31*F32*chi33*dAdchi12311 + F31*F32*chi33*dAdchi21311 + F31*F33*chi31*dAdchi13111 + F31*F33*chi31*dAdchi31111 + F31*F33*chi32*dAdchi13211 + F31*F33*chi32*dAdchi31211 + F31*F33*chi33*dAdchi13311 + F31*F33*chi33*dAdchi31311 + F32*F32*chi31*dAdchi22111 + F32*F32*chi32*dAdchi22211 + F32*F32*chi33*dAdchi22311 + F32*F33*chi31*dAdchi23111 + F32*F33*chi31*dAdchi32111 + F32*F33*chi32*dAdchi23211 + F32*F33*chi32*dAdchi32211 + F32*F33*chi33*dAdchi23311 + F32*F33*chi33*dAdchi32311 + F33*F33*chi31*dAdchi33111 + F33*F33*chi32*dAdchi33211 + F33*F33*chi33*dAdchi33311;
        dadchi(20,1) = F31*F31*chi31*dAdchi11122 + F31*F31*chi32*dAdchi11222 + F31*F31*chi33*dAdchi11322 + F31*F32*chi31*dAdchi12122 + F31*F32*chi31*dAdchi21122 + F31*F32*chi32*dAdchi12222 + F31*F32*chi32*dAdchi21222 + F31*F32*chi33*dAdchi12322 + F31*F32*chi33*dAdchi21322 + F31*F33*chi31*dAdchi13122 + F31*F33*chi31*dAdchi31122 + F31*F33*chi32*dAdchi13222 + F31*F33*chi32*dAdchi31222 + F31*F33*chi33*dAdchi13322 + F31*F33*chi33*dAdchi31322 + F32*F32*chi31*dAdchi22122 + F32*F32*chi32*dAdchi22222 + F32*F32*chi33*dAdchi22322 + F32*F33*chi31*dAdchi23122 + F32*F33*chi31*dAdchi32122 + F32*F33*chi32*dAdchi23222 + F32*F33*chi32*dAdchi32222 + F32*F33*chi33*dAdchi23322 + F32*F33*chi33*dAdchi32322 + F33*F33*chi31*dAdchi33122 + F33*F33*chi32*dAdchi33222 + F33*F33*chi33*dAdchi33322;
        dadchi(20,2) = A113*F31*F31 + A123*F31*F32 + A133*F31*F33 + A213*F31*F32 + A223*F32*F32 + A233*F32*F33 + A313*F31*F33 + A323*F32*F33 + A333*F33*F33 + F31*F31*chi31*dAdchi11133 + F31*F31*chi32*dAdchi11233 + F31*F31*chi33*dAdchi11333 + F31*F32*chi31*dAdchi12133 + F31*F32*chi31*dAdchi21133 + F31*F32*chi32*dAdchi12233 + F31*F32*chi32*dAdchi21233 + F31*F32*chi33*dAdchi12333 + F31*F32*chi33*dAdchi21333 + F31*F33*chi31*dAdchi13133 + F31*F33*chi31*dAdchi31133 + F31*F33*chi32*dAdchi13233 + F31*F33*chi32*dAdchi31233 + F31*F33*chi33*dAdchi13333 + F31*F33*chi33*dAdchi31333 + F32*F32*chi31*dAdchi22133 + F32*F32*chi32*dAdchi22233 + F32*F32*chi33*dAdchi22333 + F32*F33*chi31*dAdchi23133 + F32*F33*chi31*dAdchi32133 + F32*F33*chi32*dAdchi23233 + F32*F33*chi32*dAdchi32233 + F32*F33*chi33*dAdchi23333 + F32*F33*chi33*dAdchi32333 + F33*F33*chi31*dAdchi33133 + F33*F33*chi32*dAdchi33233 + F33*F33*chi33*dAdchi33333;
        dadchi(20,3) = F31*F31*chi31*dAdchi11123 + F31*F31*chi32*dAdchi11223 + F31*F31*chi33*dAdchi11323 + F31*F32*chi31*dAdchi12123 + F31*F32*chi31*dAdchi21123 + F31*F32*chi32*dAdchi12223 + F31*F32*chi32*dAdchi21223 + F31*F32*chi33*dAdchi12323 + F31*F32*chi33*dAdchi21323 + F31*F33*chi31*dAdchi13123 + F31*F33*chi31*dAdchi31123 + F31*F33*chi32*dAdchi13223 + F31*F33*chi32*dAdchi31223 + F31*F33*chi33*dAdchi13323 + F31*F33*chi33*dAdchi31323 + F32*F32*chi31*dAdchi22123 + F32*F32*chi32*dAdchi22223 + F32*F32*chi33*dAdchi22323 + F32*F33*chi31*dAdchi23123 + F32*F33*chi31*dAdchi32123 + F32*F33*chi32*dAdchi23223 + F32*F33*chi32*dAdchi32223 + F32*F33*chi33*dAdchi23323 + F32*F33*chi33*dAdchi32323 + F33*F33*chi31*dAdchi33123 + F33*F33*chi32*dAdchi33223 + F33*F33*chi33*dAdchi33323;
        dadchi(20,4) = F31*F31*chi31*dAdchi11113 + F31*F31*chi32*dAdchi11213 + F31*F31*chi33*dAdchi11313 + F31*F32*chi31*dAdchi12113 + F31*F32*chi31*dAdchi21113 + F31*F32*chi32*dAdchi12213 + F31*F32*chi32*dAdchi21213 + F31*F32*chi33*dAdchi12313 + F31*F32*chi33*dAdchi21313 + F31*F33*chi31*dAdchi13113 + F31*F33*chi31*dAdchi31113 + F31*F33*chi32*dAdchi13213 + F31*F33*chi32*dAdchi31213 + F31*F33*chi33*dAdchi13313 + F31*F33*chi33*dAdchi31313 + F32*F32*chi31*dAdchi22113 + F32*F32*chi32*dAdchi22213 + F32*F32*chi33*dAdchi22313 + F32*F33*chi31*dAdchi23113 + F32*F33*chi31*dAdchi32113 + F32*F33*chi32*dAdchi23213 + F32*F33*chi32*dAdchi32213 + F32*F33*chi33*dAdchi23313 + F32*F33*chi33*dAdchi32313 + F33*F33*chi31*dAdchi33113 + F33*F33*chi32*dAdchi33213 + F33*F33*chi33*dAdchi33313;
        dadchi(20,5) = F31*F31*chi31*dAdchi11112 + F31*F31*chi32*dAdchi11212 + F31*F31*chi33*dAdchi11312 + F31*F32*chi31*dAdchi12112 + F31*F32*chi31*dAdchi21112 + F31*F32*chi32*dAdchi12212 + F31*F32*chi32*dAdchi21212 + F31*F32*chi33*dAdchi12312 + F31*F32*chi33*dAdchi21312 + F31*F33*chi31*dAdchi13112 + F31*F33*chi31*dAdchi31112 + F31*F33*chi32*dAdchi13212 + F31*F33*chi32*dAdchi31212 + F31*F33*chi33*dAdchi13312 + F31*F33*chi33*dAdchi31312 + F32*F32*chi31*dAdchi22112 + F32*F32*chi32*dAdchi22212 + F32*F32*chi33*dAdchi22312 + F32*F33*chi31*dAdchi23112 + F32*F33*chi31*dAdchi32112 + F32*F33*chi32*dAdchi23212 + F32*F33*chi32*dAdchi32212 + F32*F33*chi33*dAdchi23312 + F32*F33*chi33*dAdchi32312 + F33*F33*chi31*dAdchi33112 + F33*F33*chi32*dAdchi33212 + F33*F33*chi33*dAdchi33312;
        dadchi(20,6) = A113*F31*F31 + A123*F31*F32 + A133*F31*F33 + A213*F31*F32 + A223*F32*F32 + A233*F32*F33 + A313*F31*F33 + A323*F32*F33 + A333*F33*F33 + F31*F31*chi31*dAdchi11132 + F31*F31*chi32*dAdchi11232 + F31*F31*chi33*dAdchi11332 + F31*F32*chi31*dAdchi12132 + F31*F32*chi31*dAdchi21132 + F31*F32*chi32*dAdchi12232 + F31*F32*chi32*dAdchi21232 + F31*F32*chi33*dAdchi12332 + F31*F32*chi33*dAdchi21332 + F31*F33*chi31*dAdchi13132 + F31*F33*chi31*dAdchi31132 + F31*F33*chi32*dAdchi13232 + F31*F33*chi32*dAdchi31232 + F31*F33*chi33*dAdchi13332 + F31*F33*chi33*dAdchi31332 + F32*F32*chi31*dAdchi22132 + F32*F32*chi32*dAdchi22232 + F32*F32*chi33*dAdchi22332 + F32*F33*chi31*dAdchi23132 + F32*F33*chi31*dAdchi32132 + F32*F33*chi32*dAdchi23232 + F32*F33*chi32*dAdchi32232 + F32*F33*chi33*dAdchi23332 + F32*F33*chi33*dAdchi32332 + F33*F33*chi31*dAdchi33132 + F33*F33*chi32*dAdchi33232 + F33*F33*chi33*dAdchi33332;
        dadchi(20,7) = A113*F31*F31 + A123*F31*F32 + A133*F31*F33 + A213*F31*F32 + A223*F32*F32 + A233*F32*F33 + A313*F31*F33 + A323*F32*F33 + A333*F33*F33 + F31*F31*chi31*dAdchi11131 + F31*F31*chi32*dAdchi11231 + F31*F31*chi33*dAdchi11331 + F31*F32*chi31*dAdchi12131 + F31*F32*chi31*dAdchi21131 + F31*F32*chi32*dAdchi12231 + F31*F32*chi32*dAdchi21231 + F31*F32*chi33*dAdchi12331 + F31*F32*chi33*dAdchi21331 + F31*F33*chi31*dAdchi13131 + F31*F33*chi31*dAdchi31131 + F31*F33*chi32*dAdchi13231 + F31*F33*chi32*dAdchi31231 + F31*F33*chi33*dAdchi13331 + F31*F33*chi33*dAdchi31331 + F32*F32*chi31*dAdchi22131 + F32*F32*chi32*dAdchi22231 + F32*F32*chi33*dAdchi22331 + F32*F33*chi31*dAdchi23131 + F32*F33*chi31*dAdchi32131 + F32*F33*chi32*dAdchi23231 + F32*F33*chi32*dAdchi32231 + F32*F33*chi33*dAdchi23331 + F32*F33*chi33*dAdchi32331 + F33*F33*chi31*dAdchi33131 + F33*F33*chi32*dAdchi33231 + F33*F33*chi33*dAdchi33331;
        dadchi(20,8) = F31*F31*chi31*dAdchi11121 + F31*F31*chi32*dAdchi11221 + F31*F31*chi33*dAdchi11321 + F31*F32*chi31*dAdchi12121 + F31*F32*chi31*dAdchi21121 + F31*F32*chi32*dAdchi12221 + F31*F32*chi32*dAdchi21221 + F31*F32*chi33*dAdchi12321 + F31*F32*chi33*dAdchi21321 + F31*F33*chi31*dAdchi13121 + F31*F33*chi31*dAdchi31121 + F31*F33*chi32*dAdchi13221 + F31*F33*chi32*dAdchi31221 + F31*F33*chi33*dAdchi13321 + F31*F33*chi33*dAdchi31321 + F32*F32*chi31*dAdchi22121 + F32*F32*chi32*dAdchi22221 + F32*F32*chi33*dAdchi22321 + F32*F33*chi31*dAdchi23121 + F32*F33*chi31*dAdchi32121 + F32*F33*chi32*dAdchi23221 + F32*F33*chi32*dAdchi32221 + F32*F33*chi33*dAdchi23321 + F32*F33*chi33*dAdchi32321 + F33*F33*chi31*dAdchi33121 + F33*F33*chi32*dAdchi33221 + F33*F33*chi33*dAdchi33321;
        dadchi(21,0) = F21*F31*chi31*dAdchi11111 + F21*F31*chi32*dAdchi11211 + F21*F31*chi33*dAdchi11311 + F21*F32*chi31*dAdchi21111 + F21*F32*chi32*dAdchi21211 + F21*F32*chi33*dAdchi21311 + F21*F33*chi31*dAdchi31111 + F21*F33*chi32*dAdchi31211 + F21*F33*chi33*dAdchi31311 + F22*F31*chi31*dAdchi12111 + F22*F31*chi32*dAdchi12211 + F22*F31*chi33*dAdchi12311 + F22*F32*chi31*dAdchi22111 + F22*F32*chi32*dAdchi22211 + F22*F32*chi33*dAdchi22311 + F22*F33*chi31*dAdchi32111 + F22*F33*chi32*dAdchi32211 + F22*F33*chi33*dAdchi32311 + F23*F31*chi31*dAdchi13111 + F23*F31*chi32*dAdchi13211 + F23*F31*chi33*dAdchi13311 + F23*F32*chi31*dAdchi23111 + F23*F32*chi32*dAdchi23211 + F23*F32*chi33*dAdchi23311 + F23*F33*chi31*dAdchi33111 + F23*F33*chi32*dAdchi33211 + F23*F33*chi33*dAdchi33311;
        dadchi(21,1) = F21*F31*chi31*dAdchi11122 + F21*F31*chi32*dAdchi11222 + F21*F31*chi33*dAdchi11322 + F21*F32*chi31*dAdchi21122 + F21*F32*chi32*dAdchi21222 + F21*F32*chi33*dAdchi21322 + F21*F33*chi31*dAdchi31122 + F21*F33*chi32*dAdchi31222 + F21*F33*chi33*dAdchi31322 + F22*F31*chi31*dAdchi12122 + F22*F31*chi32*dAdchi12222 + F22*F31*chi33*dAdchi12322 + F22*F32*chi31*dAdchi22122 + F22*F32*chi32*dAdchi22222 + F22*F32*chi33*dAdchi22322 + F22*F33*chi31*dAdchi32122 + F22*F33*chi32*dAdchi32222 + F22*F33*chi33*dAdchi32322 + F23*F31*chi31*dAdchi13122 + F23*F31*chi32*dAdchi13222 + F23*F31*chi33*dAdchi13322 + F23*F32*chi31*dAdchi23122 + F23*F32*chi32*dAdchi23222 + F23*F32*chi33*dAdchi23322 + F23*F33*chi31*dAdchi33122 + F23*F33*chi32*dAdchi33222 + F23*F33*chi33*dAdchi33322;
        dadchi(21,2) = A113*F21*F31 + A123*F22*F31 + A133*F23*F31 + A213*F21*F32 + A223*F22*F32 + A233*F23*F32 + A313*F21*F33 + A323*F22*F33 + A333*F23*F33 + F21*F31*chi31*dAdchi11133 + F21*F31*chi32*dAdchi11233 + F21*F31*chi33*dAdchi11333 + F21*F32*chi31*dAdchi21133 + F21*F32*chi32*dAdchi21233 + F21*F32*chi33*dAdchi21333 + F21*F33*chi31*dAdchi31133 + F21*F33*chi32*dAdchi31233 + F21*F33*chi33*dAdchi31333 + F22*F31*chi31*dAdchi12133 + F22*F31*chi32*dAdchi12233 + F22*F31*chi33*dAdchi12333 + F22*F32*chi31*dAdchi22133 + F22*F32*chi32*dAdchi22233 + F22*F32*chi33*dAdchi22333 + F22*F33*chi31*dAdchi32133 + F22*F33*chi32*dAdchi32233 + F22*F33*chi33*dAdchi32333 + F23*F31*chi31*dAdchi13133 + F23*F31*chi32*dAdchi13233 + F23*F31*chi33*dAdchi13333 + F23*F32*chi31*dAdchi23133 + F23*F32*chi32*dAdchi23233 + F23*F32*chi33*dAdchi23333 + F23*F33*chi31*dAdchi33133 + F23*F33*chi32*dAdchi33233 + F23*F33*chi33*dAdchi33333;
        dadchi(21,3) = F21*F31*chi31*dAdchi11123 + F21*F31*chi32*dAdchi11223 + F21*F31*chi33*dAdchi11323 + F21*F32*chi31*dAdchi21123 + F21*F32*chi32*dAdchi21223 + F21*F32*chi33*dAdchi21323 + F21*F33*chi31*dAdchi31123 + F21*F33*chi32*dAdchi31223 + F21*F33*chi33*dAdchi31323 + F22*F31*chi31*dAdchi12123 + F22*F31*chi32*dAdchi12223 + F22*F31*chi33*dAdchi12323 + F22*F32*chi31*dAdchi22123 + F22*F32*chi32*dAdchi22223 + F22*F32*chi33*dAdchi22323 + F22*F33*chi31*dAdchi32123 + F22*F33*chi32*dAdchi32223 + F22*F33*chi33*dAdchi32323 + F23*F31*chi31*dAdchi13123 + F23*F31*chi32*dAdchi13223 + F23*F31*chi33*dAdchi13323 + F23*F32*chi31*dAdchi23123 + F23*F32*chi32*dAdchi23223 + F23*F32*chi33*dAdchi23323 + F23*F33*chi31*dAdchi33123 + F23*F33*chi32*dAdchi33223 + F23*F33*chi33*dAdchi33323;
        dadchi(21,4) = F21*F31*chi31*dAdchi11113 + F21*F31*chi32*dAdchi11213 + F21*F31*chi33*dAdchi11313 + F21*F32*chi31*dAdchi21113 + F21*F32*chi32*dAdchi21213 + F21*F32*chi33*dAdchi21313 + F21*F33*chi31*dAdchi31113 + F21*F33*chi32*dAdchi31213 + F21*F33*chi33*dAdchi31313 + F22*F31*chi31*dAdchi12113 + F22*F31*chi32*dAdchi12213 + F22*F31*chi33*dAdchi12313 + F22*F32*chi31*dAdchi22113 + F22*F32*chi32*dAdchi22213 + F22*F32*chi33*dAdchi22313 + F22*F33*chi31*dAdchi32113 + F22*F33*chi32*dAdchi32213 + F22*F33*chi33*dAdchi32313 + F23*F31*chi31*dAdchi13113 + F23*F31*chi32*dAdchi13213 + F23*F31*chi33*dAdchi13313 + F23*F32*chi31*dAdchi23113 + F23*F32*chi32*dAdchi23213 + F23*F32*chi33*dAdchi23313 + F23*F33*chi31*dAdchi33113 + F23*F33*chi32*dAdchi33213 + F23*F33*chi33*dAdchi33313;
        dadchi(21,5) = F21*F31*chi31*dAdchi11112 + F21*F31*chi32*dAdchi11212 + F21*F31*chi33*dAdchi11312 + F21*F32*chi31*dAdchi21112 + F21*F32*chi32*dAdchi21212 + F21*F32*chi33*dAdchi21312 + F21*F33*chi31*dAdchi31112 + F21*F33*chi32*dAdchi31212 + F21*F33*chi33*dAdchi31312 + F22*F31*chi31*dAdchi12112 + F22*F31*chi32*dAdchi12212 + F22*F31*chi33*dAdchi12312 + F22*F32*chi31*dAdchi22112 + F22*F32*chi32*dAdchi22212 + F22*F32*chi33*dAdchi22312 + F22*F33*chi31*dAdchi32112 + F22*F33*chi32*dAdchi32212 + F22*F33*chi33*dAdchi32312 + F23*F31*chi31*dAdchi13112 + F23*F31*chi32*dAdchi13212 + F23*F31*chi33*dAdchi13312 + F23*F32*chi31*dAdchi23112 + F23*F32*chi32*dAdchi23212 + F23*F32*chi33*dAdchi23312 + F23*F33*chi31*dAdchi33112 + F23*F33*chi32*dAdchi33212 + F23*F33*chi33*dAdchi33312;
        dadchi(21,6) = A113*F21*F31 + A123*F22*F31 + A133*F23*F31 + A213*F21*F32 + A223*F22*F32 + A233*F23*F32 + A313*F21*F33 + A323*F22*F33 + A333*F23*F33 + F21*F31*chi31*dAdchi11132 + F21*F31*chi32*dAdchi11232 + F21*F31*chi33*dAdchi11332 + F21*F32*chi31*dAdchi21132 + F21*F32*chi32*dAdchi21232 + F21*F32*chi33*dAdchi21332 + F21*F33*chi31*dAdchi31132 + F21*F33*chi32*dAdchi31232 + F21*F33*chi33*dAdchi31332 + F22*F31*chi31*dAdchi12132 + F22*F31*chi32*dAdchi12232 + F22*F31*chi33*dAdchi12332 + F22*F32*chi31*dAdchi22132 + F22*F32*chi32*dAdchi22232 + F22*F32*chi33*dAdchi22332 + F22*F33*chi31*dAdchi32132 + F22*F33*chi32*dAdchi32232 + F22*F33*chi33*dAdchi32332 + F23*F31*chi31*dAdchi13132 + F23*F31*chi32*dAdchi13232 + F23*F31*chi33*dAdchi13332 + F23*F32*chi31*dAdchi23132 + F23*F32*chi32*dAdchi23232 + F23*F32*chi33*dAdchi23332 + F23*F33*chi31*dAdchi33132 + F23*F33*chi32*dAdchi33232 + F23*F33*chi33*dAdchi33332;
        dadchi(21,7) = A113*F21*F31 + A123*F22*F31 + A133*F23*F31 + A213*F21*F32 + A223*F22*F32 + A233*F23*F32 + A313*F21*F33 + A323*F22*F33 + A333*F23*F33 + F21*F31*chi31*dAdchi11131 + F21*F31*chi32*dAdchi11231 + F21*F31*chi33*dAdchi11331 + F21*F32*chi31*dAdchi21131 + F21*F32*chi32*dAdchi21231 + F21*F32*chi33*dAdchi21331 + F21*F33*chi31*dAdchi31131 + F21*F33*chi32*dAdchi31231 + F21*F33*chi33*dAdchi31331 + F22*F31*chi31*dAdchi12131 + F22*F31*chi32*dAdchi12231 + F22*F31*chi33*dAdchi12331 + F22*F32*chi31*dAdchi22131 + F22*F32*chi32*dAdchi22231 + F22*F32*chi33*dAdchi22331 + F22*F33*chi31*dAdchi32131 + F22*F33*chi32*dAdchi32231 + F22*F33*chi33*dAdchi32331 + F23*F31*chi31*dAdchi13131 + F23*F31*chi32*dAdchi13231 + F23*F31*chi33*dAdchi13331 + F23*F32*chi31*dAdchi23131 + F23*F32*chi32*dAdchi23231 + F23*F32*chi33*dAdchi23331 + F23*F33*chi31*dAdchi33131 + F23*F33*chi32*dAdchi33231 + F23*F33*chi33*dAdchi33331;
        dadchi(21,8) = F21*F31*chi31*dAdchi11121 + F21*F31*chi32*dAdchi11221 + F21*F31*chi33*dAdchi11321 + F21*F32*chi31*dAdchi21121 + F21*F32*chi32*dAdchi21221 + F21*F32*chi33*dAdchi21321 + F21*F33*chi31*dAdchi31121 + F21*F33*chi32*dAdchi31221 + F21*F33*chi33*dAdchi31321 + F22*F31*chi31*dAdchi12121 + F22*F31*chi32*dAdchi12221 + F22*F31*chi33*dAdchi12321 + F22*F32*chi31*dAdchi22121 + F22*F32*chi32*dAdchi22221 + F22*F32*chi33*dAdchi22321 + F22*F33*chi31*dAdchi32121 + F22*F33*chi32*dAdchi32221 + F22*F33*chi33*dAdchi32321 + F23*F31*chi31*dAdchi13121 + F23*F31*chi32*dAdchi13221 + F23*F31*chi33*dAdchi13321 + F23*F32*chi31*dAdchi23121 + F23*F32*chi32*dAdchi23221 + F23*F32*chi33*dAdchi23321 + F23*F33*chi31*dAdchi33121 + F23*F33*chi32*dAdchi33221 + F23*F33*chi33*dAdchi33321;
        dadchi(22,0) = F11*F31*chi31*dAdchi11111 + F11*F31*chi32*dAdchi11211 + F11*F31*chi33*dAdchi11311 + F11*F32*chi31*dAdchi21111 + F11*F32*chi32*dAdchi21211 + F11*F32*chi33*dAdchi21311 + F11*F33*chi31*dAdchi31111 + F11*F33*chi32*dAdchi31211 + F11*F33*chi33*dAdchi31311 + F12*F31*chi31*dAdchi12111 + F12*F31*chi32*dAdchi12211 + F12*F31*chi33*dAdchi12311 + F12*F32*chi31*dAdchi22111 + F12*F32*chi32*dAdchi22211 + F12*F32*chi33*dAdchi22311 + F12*F33*chi31*dAdchi32111 + F12*F33*chi32*dAdchi32211 + F12*F33*chi33*dAdchi32311 + F13*F31*chi31*dAdchi13111 + F13*F31*chi32*dAdchi13211 + F13*F31*chi33*dAdchi13311 + F13*F32*chi31*dAdchi23111 + F13*F32*chi32*dAdchi23211 + F13*F32*chi33*dAdchi23311 + F13*F33*chi31*dAdchi33111 + F13*F33*chi32*dAdchi33211 + F13*F33*chi33*dAdchi33311;
        dadchi(22,1) = F11*F31*chi31*dAdchi11122 + F11*F31*chi32*dAdchi11222 + F11*F31*chi33*dAdchi11322 + F11*F32*chi31*dAdchi21122 + F11*F32*chi32*dAdchi21222 + F11*F32*chi33*dAdchi21322 + F11*F33*chi31*dAdchi31122 + F11*F33*chi32*dAdchi31222 + F11*F33*chi33*dAdchi31322 + F12*F31*chi31*dAdchi12122 + F12*F31*chi32*dAdchi12222 + F12*F31*chi33*dAdchi12322 + F12*F32*chi31*dAdchi22122 + F12*F32*chi32*dAdchi22222 + F12*F32*chi33*dAdchi22322 + F12*F33*chi31*dAdchi32122 + F12*F33*chi32*dAdchi32222 + F12*F33*chi33*dAdchi32322 + F13*F31*chi31*dAdchi13122 + F13*F31*chi32*dAdchi13222 + F13*F31*chi33*dAdchi13322 + F13*F32*chi31*dAdchi23122 + F13*F32*chi32*dAdchi23222 + F13*F32*chi33*dAdchi23322 + F13*F33*chi31*dAdchi33122 + F13*F33*chi32*dAdchi33222 + F13*F33*chi33*dAdchi33322;
        dadchi(22,2) = A113*F11*F31 + A123*F12*F31 + A133*F13*F31 + A213*F11*F32 + A223*F12*F32 + A233*F13*F32 + A313*F11*F33 + A323*F12*F33 + A333*F13*F33 + F11*F31*chi31*dAdchi11133 + F11*F31*chi32*dAdchi11233 + F11*F31*chi33*dAdchi11333 + F11*F32*chi31*dAdchi21133 + F11*F32*chi32*dAdchi21233 + F11*F32*chi33*dAdchi21333 + F11*F33*chi31*dAdchi31133 + F11*F33*chi32*dAdchi31233 + F11*F33*chi33*dAdchi31333 + F12*F31*chi31*dAdchi12133 + F12*F31*chi32*dAdchi12233 + F12*F31*chi33*dAdchi12333 + F12*F32*chi31*dAdchi22133 + F12*F32*chi32*dAdchi22233 + F12*F32*chi33*dAdchi22333 + F12*F33*chi31*dAdchi32133 + F12*F33*chi32*dAdchi32233 + F12*F33*chi33*dAdchi32333 + F13*F31*chi31*dAdchi13133 + F13*F31*chi32*dAdchi13233 + F13*F31*chi33*dAdchi13333 + F13*F32*chi31*dAdchi23133 + F13*F32*chi32*dAdchi23233 + F13*F32*chi33*dAdchi23333 + F13*F33*chi31*dAdchi33133 + F13*F33*chi32*dAdchi33233 + F13*F33*chi33*dAdchi33333;
        dadchi(22,3) = F11*F31*chi31*dAdchi11123 + F11*F31*chi32*dAdchi11223 + F11*F31*chi33*dAdchi11323 + F11*F32*chi31*dAdchi21123 + F11*F32*chi32*dAdchi21223 + F11*F32*chi33*dAdchi21323 + F11*F33*chi31*dAdchi31123 + F11*F33*chi32*dAdchi31223 + F11*F33*chi33*dAdchi31323 + F12*F31*chi31*dAdchi12123 + F12*F31*chi32*dAdchi12223 + F12*F31*chi33*dAdchi12323 + F12*F32*chi31*dAdchi22123 + F12*F32*chi32*dAdchi22223 + F12*F32*chi33*dAdchi22323 + F12*F33*chi31*dAdchi32123 + F12*F33*chi32*dAdchi32223 + F12*F33*chi33*dAdchi32323 + F13*F31*chi31*dAdchi13123 + F13*F31*chi32*dAdchi13223 + F13*F31*chi33*dAdchi13323 + F13*F32*chi31*dAdchi23123 + F13*F32*chi32*dAdchi23223 + F13*F32*chi33*dAdchi23323 + F13*F33*chi31*dAdchi33123 + F13*F33*chi32*dAdchi33223 + F13*F33*chi33*dAdchi33323;
        dadchi(22,4) = F11*F31*chi31*dAdchi11113 + F11*F31*chi32*dAdchi11213 + F11*F31*chi33*dAdchi11313 + F11*F32*chi31*dAdchi21113 + F11*F32*chi32*dAdchi21213 + F11*F32*chi33*dAdchi21313 + F11*F33*chi31*dAdchi31113 + F11*F33*chi32*dAdchi31213 + F11*F33*chi33*dAdchi31313 + F12*F31*chi31*dAdchi12113 + F12*F31*chi32*dAdchi12213 + F12*F31*chi33*dAdchi12313 + F12*F32*chi31*dAdchi22113 + F12*F32*chi32*dAdchi22213 + F12*F32*chi33*dAdchi22313 + F12*F33*chi31*dAdchi32113 + F12*F33*chi32*dAdchi32213 + F12*F33*chi33*dAdchi32313 + F13*F31*chi31*dAdchi13113 + F13*F31*chi32*dAdchi13213 + F13*F31*chi33*dAdchi13313 + F13*F32*chi31*dAdchi23113 + F13*F32*chi32*dAdchi23213 + F13*F32*chi33*dAdchi23313 + F13*F33*chi31*dAdchi33113 + F13*F33*chi32*dAdchi33213 + F13*F33*chi33*dAdchi33313;
        dadchi(22,5) = F11*F31*chi31*dAdchi11112 + F11*F31*chi32*dAdchi11212 + F11*F31*chi33*dAdchi11312 + F11*F32*chi31*dAdchi21112 + F11*F32*chi32*dAdchi21212 + F11*F32*chi33*dAdchi21312 + F11*F33*chi31*dAdchi31112 + F11*F33*chi32*dAdchi31212 + F11*F33*chi33*dAdchi31312 + F12*F31*chi31*dAdchi12112 + F12*F31*chi32*dAdchi12212 + F12*F31*chi33*dAdchi12312 + F12*F32*chi31*dAdchi22112 + F12*F32*chi32*dAdchi22212 + F12*F32*chi33*dAdchi22312 + F12*F33*chi31*dAdchi32112 + F12*F33*chi32*dAdchi32212 + F12*F33*chi33*dAdchi32312 + F13*F31*chi31*dAdchi13112 + F13*F31*chi32*dAdchi13212 + F13*F31*chi33*dAdchi13312 + F13*F32*chi31*dAdchi23112 + F13*F32*chi32*dAdchi23212 + F13*F32*chi33*dAdchi23312 + F13*F33*chi31*dAdchi33112 + F13*F33*chi32*dAdchi33212 + F13*F33*chi33*dAdchi33312;
        dadchi(22,6) = A113*F11*F31 + A123*F12*F31 + A133*F13*F31 + A213*F11*F32 + A223*F12*F32 + A233*F13*F32 + A313*F11*F33 + A323*F12*F33 + A333*F13*F33 + F11*F31*chi31*dAdchi11132 + F11*F31*chi32*dAdchi11232 + F11*F31*chi33*dAdchi11332 + F11*F32*chi31*dAdchi21132 + F11*F32*chi32*dAdchi21232 + F11*F32*chi33*dAdchi21332 + F11*F33*chi31*dAdchi31132 + F11*F33*chi32*dAdchi31232 + F11*F33*chi33*dAdchi31332 + F12*F31*chi31*dAdchi12132 + F12*F31*chi32*dAdchi12232 + F12*F31*chi33*dAdchi12332 + F12*F32*chi31*dAdchi22132 + F12*F32*chi32*dAdchi22232 + F12*F32*chi33*dAdchi22332 + F12*F33*chi31*dAdchi32132 + F12*F33*chi32*dAdchi32232 + F12*F33*chi33*dAdchi32332 + F13*F31*chi31*dAdchi13132 + F13*F31*chi32*dAdchi13232 + F13*F31*chi33*dAdchi13332 + F13*F32*chi31*dAdchi23132 + F13*F32*chi32*dAdchi23232 + F13*F32*chi33*dAdchi23332 + F13*F33*chi31*dAdchi33132 + F13*F33*chi32*dAdchi33232 + F13*F33*chi33*dAdchi33332;
        dadchi(22,7) = A113*F11*F31 + A123*F12*F31 + A133*F13*F31 + A213*F11*F32 + A223*F12*F32 + A233*F13*F32 + A313*F11*F33 + A323*F12*F33 + A333*F13*F33 + F11*F31*chi31*dAdchi11131 + F11*F31*chi32*dAdchi11231 + F11*F31*chi33*dAdchi11331 + F11*F32*chi31*dAdchi21131 + F11*F32*chi32*dAdchi21231 + F11*F32*chi33*dAdchi21331 + F11*F33*chi31*dAdchi31131 + F11*F33*chi32*dAdchi31231 + F11*F33*chi33*dAdchi31331 + F12*F31*chi31*dAdchi12131 + F12*F31*chi32*dAdchi12231 + F12*F31*chi33*dAdchi12331 + F12*F32*chi31*dAdchi22131 + F12*F32*chi32*dAdchi22231 + F12*F32*chi33*dAdchi22331 + F12*F33*chi31*dAdchi32131 + F12*F33*chi32*dAdchi32231 + F12*F33*chi33*dAdchi32331 + F13*F31*chi31*dAdchi13131 + F13*F31*chi32*dAdchi13231 + F13*F31*chi33*dAdchi13331 + F13*F32*chi31*dAdchi23131 + F13*F32*chi32*dAdchi23231 + F13*F32*chi33*dAdchi23331 + F13*F33*chi31*dAdchi33131 + F13*F33*chi32*dAdchi33231 + F13*F33*chi33*dAdchi33331;
        dadchi(22,8) = F11*F31*chi31*dAdchi11121 + F11*F31*chi32*dAdchi11221 + F11*F31*chi33*dAdchi11321 + F11*F32*chi31*dAdchi21121 + F11*F32*chi32*dAdchi21221 + F11*F32*chi33*dAdchi21321 + F11*F33*chi31*dAdchi31121 + F11*F33*chi32*dAdchi31221 + F11*F33*chi33*dAdchi31321 + F12*F31*chi31*dAdchi12121 + F12*F31*chi32*dAdchi12221 + F12*F31*chi33*dAdchi12321 + F12*F32*chi31*dAdchi22121 + F12*F32*chi32*dAdchi22221 + F12*F32*chi33*dAdchi22321 + F12*F33*chi31*dAdchi32121 + F12*F33*chi32*dAdchi32221 + F12*F33*chi33*dAdchi32321 + F13*F31*chi31*dAdchi13121 + F13*F31*chi32*dAdchi13221 + F13*F31*chi33*dAdchi13321 + F13*F32*chi31*dAdchi23121 + F13*F32*chi32*dAdchi23221 + F13*F32*chi33*dAdchi23321 + F13*F33*chi31*dAdchi33121 + F13*F33*chi32*dAdchi33221 + F13*F33*chi33*dAdchi33321;
        dadchi(23,0) = F11*F31*chi21*dAdchi11111 + F11*F31*chi22*dAdchi11211 + F11*F31*chi23*dAdchi11311 + F11*F32*chi21*dAdchi21111 + F11*F32*chi22*dAdchi21211 + F11*F32*chi23*dAdchi21311 + F11*F33*chi21*dAdchi31111 + F11*F33*chi22*dAdchi31211 + F11*F33*chi23*dAdchi31311 + F12*F31*chi21*dAdchi12111 + F12*F31*chi22*dAdchi12211 + F12*F31*chi23*dAdchi12311 + F12*F32*chi21*dAdchi22111 + F12*F32*chi22*dAdchi22211 + F12*F32*chi23*dAdchi22311 + F12*F33*chi21*dAdchi32111 + F12*F33*chi22*dAdchi32211 + F12*F33*chi23*dAdchi32311 + F13*F31*chi21*dAdchi13111 + F13*F31*chi22*dAdchi13211 + F13*F31*chi23*dAdchi13311 + F13*F32*chi21*dAdchi23111 + F13*F32*chi22*dAdchi23211 + F13*F32*chi23*dAdchi23311 + F13*F33*chi21*dAdchi33111 + F13*F33*chi22*dAdchi33211 + F13*F33*chi23*dAdchi33311;
        dadchi(23,1) = A112*F11*F31 + A122*F12*F31 + A132*F13*F31 + A212*F11*F32 + A222*F12*F32 + A232*F13*F32 + A312*F11*F33 + A322*F12*F33 + A332*F13*F33 + F11*F31*chi21*dAdchi11122 + F11*F31*chi22*dAdchi11222 + F11*F31*chi23*dAdchi11322 + F11*F32*chi21*dAdchi21122 + F11*F32*chi22*dAdchi21222 + F11*F32*chi23*dAdchi21322 + F11*F33*chi21*dAdchi31122 + F11*F33*chi22*dAdchi31222 + F11*F33*chi23*dAdchi31322 + F12*F31*chi21*dAdchi12122 + F12*F31*chi22*dAdchi12222 + F12*F31*chi23*dAdchi12322 + F12*F32*chi21*dAdchi22122 + F12*F32*chi22*dAdchi22222 + F12*F32*chi23*dAdchi22322 + F12*F33*chi21*dAdchi32122 + F12*F33*chi22*dAdchi32222 + F12*F33*chi23*dAdchi32322 + F13*F31*chi21*dAdchi13122 + F13*F31*chi22*dAdchi13222 + F13*F31*chi23*dAdchi13322 + F13*F32*chi21*dAdchi23122 + F13*F32*chi22*dAdchi23222 + F13*F32*chi23*dAdchi23322 + F13*F33*chi21*dAdchi33122 + F13*F33*chi22*dAdchi33222 + F13*F33*chi23*dAdchi33322;
        dadchi(23,2) = F11*F31*chi21*dAdchi11133 + F11*F31*chi22*dAdchi11233 + F11*F31*chi23*dAdchi11333 + F11*F32*chi21*dAdchi21133 + F11*F32*chi22*dAdchi21233 + F11*F32*chi23*dAdchi21333 + F11*F33*chi21*dAdchi31133 + F11*F33*chi22*dAdchi31233 + F11*F33*chi23*dAdchi31333 + F12*F31*chi21*dAdchi12133 + F12*F31*chi22*dAdchi12233 + F12*F31*chi23*dAdchi12333 + F12*F32*chi21*dAdchi22133 + F12*F32*chi22*dAdchi22233 + F12*F32*chi23*dAdchi22333 + F12*F33*chi21*dAdchi32133 + F12*F33*chi22*dAdchi32233 + F12*F33*chi23*dAdchi32333 + F13*F31*chi21*dAdchi13133 + F13*F31*chi22*dAdchi13233 + F13*F31*chi23*dAdchi13333 + F13*F32*chi21*dAdchi23133 + F13*F32*chi22*dAdchi23233 + F13*F32*chi23*dAdchi23333 + F13*F33*chi21*dAdchi33133 + F13*F33*chi22*dAdchi33233 + F13*F33*chi23*dAdchi33333;
        dadchi(23,3) = A112*F11*F31 + A122*F12*F31 + A132*F13*F31 + A212*F11*F32 + A222*F12*F32 + A232*F13*F32 + A312*F11*F33 + A322*F12*F33 + A332*F13*F33 + F11*F31*chi21*dAdchi11123 + F11*F31*chi22*dAdchi11223 + F11*F31*chi23*dAdchi11323 + F11*F32*chi21*dAdchi21123 + F11*F32*chi22*dAdchi21223 + F11*F32*chi23*dAdchi21323 + F11*F33*chi21*dAdchi31123 + F11*F33*chi22*dAdchi31223 + F11*F33*chi23*dAdchi31323 + F12*F31*chi21*dAdchi12123 + F12*F31*chi22*dAdchi12223 + F12*F31*chi23*dAdchi12323 + F12*F32*chi21*dAdchi22123 + F12*F32*chi22*dAdchi22223 + F12*F32*chi23*dAdchi22323 + F12*F33*chi21*dAdchi32123 + F12*F33*chi22*dAdchi32223 + F12*F33*chi23*dAdchi32323 + F13*F31*chi21*dAdchi13123 + F13*F31*chi22*dAdchi13223 + F13*F31*chi23*dAdchi13323 + F13*F32*chi21*dAdchi23123 + F13*F32*chi22*dAdchi23223 + F13*F32*chi23*dAdchi23323 + F13*F33*chi21*dAdchi33123 + F13*F33*chi22*dAdchi33223 + F13*F33*chi23*dAdchi33323;
        dadchi(23,4) = F11*F31*chi21*dAdchi11113 + F11*F31*chi22*dAdchi11213 + F11*F31*chi23*dAdchi11313 + F11*F32*chi21*dAdchi21113 + F11*F32*chi22*dAdchi21213 + F11*F32*chi23*dAdchi21313 + F11*F33*chi21*dAdchi31113 + F11*F33*chi22*dAdchi31213 + F11*F33*chi23*dAdchi31313 + F12*F31*chi21*dAdchi12113 + F12*F31*chi22*dAdchi12213 + F12*F31*chi23*dAdchi12313 + F12*F32*chi21*dAdchi22113 + F12*F32*chi22*dAdchi22213 + F12*F32*chi23*dAdchi22313 + F12*F33*chi21*dAdchi32113 + F12*F33*chi22*dAdchi32213 + F12*F33*chi23*dAdchi32313 + F13*F31*chi21*dAdchi13113 + F13*F31*chi22*dAdchi13213 + F13*F31*chi23*dAdchi13313 + F13*F32*chi21*dAdchi23113 + F13*F32*chi22*dAdchi23213 + F13*F32*chi23*dAdchi23313 + F13*F33*chi21*dAdchi33113 + F13*F33*chi22*dAdchi33213 + F13*F33*chi23*dAdchi33313;
        dadchi(23,5) = F11*F31*chi21*dAdchi11112 + F11*F31*chi22*dAdchi11212 + F11*F31*chi23*dAdchi11312 + F11*F32*chi21*dAdchi21112 + F11*F32*chi22*dAdchi21212 + F11*F32*chi23*dAdchi21312 + F11*F33*chi21*dAdchi31112 + F11*F33*chi22*dAdchi31212 + F11*F33*chi23*dAdchi31312 + F12*F31*chi21*dAdchi12112 + F12*F31*chi22*dAdchi12212 + F12*F31*chi23*dAdchi12312 + F12*F32*chi21*dAdchi22112 + F12*F32*chi22*dAdchi22212 + F12*F32*chi23*dAdchi22312 + F12*F33*chi21*dAdchi32112 + F12*F33*chi22*dAdchi32212 + F12*F33*chi23*dAdchi32312 + F13*F31*chi21*dAdchi13112 + F13*F31*chi22*dAdchi13212 + F13*F31*chi23*dAdchi13312 + F13*F32*chi21*dAdchi23112 + F13*F32*chi22*dAdchi23212 + F13*F32*chi23*dAdchi23312 + F13*F33*chi21*dAdchi33112 + F13*F33*chi22*dAdchi33212 + F13*F33*chi23*dAdchi33312;
        dadchi(23,6) = F11*F31*chi21*dAdchi11132 + F11*F31*chi22*dAdchi11232 + F11*F31*chi23*dAdchi11332 + F11*F32*chi21*dAdchi21132 + F11*F32*chi22*dAdchi21232 + F11*F32*chi23*dAdchi21332 + F11*F33*chi21*dAdchi31132 + F11*F33*chi22*dAdchi31232 + F11*F33*chi23*dAdchi31332 + F12*F31*chi21*dAdchi12132 + F12*F31*chi22*dAdchi12232 + F12*F31*chi23*dAdchi12332 + F12*F32*chi21*dAdchi22132 + F12*F32*chi22*dAdchi22232 + F12*F32*chi23*dAdchi22332 + F12*F33*chi21*dAdchi32132 + F12*F33*chi22*dAdchi32232 + F12*F33*chi23*dAdchi32332 + F13*F31*chi21*dAdchi13132 + F13*F31*chi22*dAdchi13232 + F13*F31*chi23*dAdchi13332 + F13*F32*chi21*dAdchi23132 + F13*F32*chi22*dAdchi23232 + F13*F32*chi23*dAdchi23332 + F13*F33*chi21*dAdchi33132 + F13*F33*chi22*dAdchi33232 + F13*F33*chi23*dAdchi33332;
        dadchi(23,7) = F11*F31*chi21*dAdchi11131 + F11*F31*chi22*dAdchi11231 + F11*F31*chi23*dAdchi11331 + F11*F32*chi21*dAdchi21131 + F11*F32*chi22*dAdchi21231 + F11*F32*chi23*dAdchi21331 + F11*F33*chi21*dAdchi31131 + F11*F33*chi22*dAdchi31231 + F11*F33*chi23*dAdchi31331 + F12*F31*chi21*dAdchi12131 + F12*F31*chi22*dAdchi12231 + F12*F31*chi23*dAdchi12331 + F12*F32*chi21*dAdchi22131 + F12*F32*chi22*dAdchi22231 + F12*F32*chi23*dAdchi22331 + F12*F33*chi21*dAdchi32131 + F12*F33*chi22*dAdchi32231 + F12*F33*chi23*dAdchi32331 + F13*F31*chi21*dAdchi13131 + F13*F31*chi22*dAdchi13231 + F13*F31*chi23*dAdchi13331 + F13*F32*chi21*dAdchi23131 + F13*F32*chi22*dAdchi23231 + F13*F32*chi23*dAdchi23331 + F13*F33*chi21*dAdchi33131 + F13*F33*chi22*dAdchi33231 + F13*F33*chi23*dAdchi33331;
        dadchi(23,8) = A112*F11*F31 + A122*F12*F31 + A132*F13*F31 + A212*F11*F32 + A222*F12*F32 + A232*F13*F32 + A312*F11*F33 + A322*F12*F33 + A332*F13*F33 + F11*F31*chi21*dAdchi11121 + F11*F31*chi22*dAdchi11221 + F11*F31*chi23*dAdchi11321 + F11*F32*chi21*dAdchi21121 + F11*F32*chi22*dAdchi21221 + F11*F32*chi23*dAdchi21321 + F11*F33*chi21*dAdchi31121 + F11*F33*chi22*dAdchi31221 + F11*F33*chi23*dAdchi31321 + F12*F31*chi21*dAdchi12121 + F12*F31*chi22*dAdchi12221 + F12*F31*chi23*dAdchi12321 + F12*F32*chi21*dAdchi22121 + F12*F32*chi22*dAdchi22221 + F12*F32*chi23*dAdchi22321 + F12*F33*chi21*dAdchi32121 + F12*F33*chi22*dAdchi32221 + F12*F33*chi23*dAdchi32321 + F13*F31*chi21*dAdchi13121 + F13*F31*chi22*dAdchi13221 + F13*F31*chi23*dAdchi13321 + F13*F32*chi21*dAdchi23121 + F13*F32*chi22*dAdchi23221 + F13*F32*chi23*dAdchi23321 + F13*F33*chi21*dAdchi33121 + F13*F33*chi22*dAdchi33221 + F13*F33*chi23*dAdchi33321;
        dadchi(24,0) = F31*F31*chi21*dAdchi11111 + F31*F31*chi22*dAdchi11211 + F31*F31*chi23*dAdchi11311 + F31*F32*chi21*dAdchi12111 + F31*F32*chi21*dAdchi21111 + F31*F32*chi22*dAdchi12211 + F31*F32*chi22*dAdchi21211 + F31*F32*chi23*dAdchi12311 + F31*F32*chi23*dAdchi21311 + F31*F33*chi21*dAdchi13111 + F31*F33*chi21*dAdchi31111 + F31*F33*chi22*dAdchi13211 + F31*F33*chi22*dAdchi31211 + F31*F33*chi23*dAdchi13311 + F31*F33*chi23*dAdchi31311 + F32*F32*chi21*dAdchi22111 + F32*F32*chi22*dAdchi22211 + F32*F32*chi23*dAdchi22311 + F32*F33*chi21*dAdchi23111 + F32*F33*chi21*dAdchi32111 + F32*F33*chi22*dAdchi23211 + F32*F33*chi22*dAdchi32211 + F32*F33*chi23*dAdchi23311 + F32*F33*chi23*dAdchi32311 + F33*F33*chi21*dAdchi33111 + F33*F33*chi22*dAdchi33211 + F33*F33*chi23*dAdchi33311;
        dadchi(24,1) = A112*F31*F31 + A122*F31*F32 + A132*F31*F33 + A212*F31*F32 + A222*F32*F32 + A232*F32*F33 + A312*F31*F33 + A322*F32*F33 + A332*F33*F33 + F31*F31*chi21*dAdchi11122 + F31*F31*chi22*dAdchi11222 + F31*F31*chi23*dAdchi11322 + F31*F32*chi21*dAdchi12122 + F31*F32*chi21*dAdchi21122 + F31*F32*chi22*dAdchi12222 + F31*F32*chi22*dAdchi21222 + F31*F32*chi23*dAdchi12322 + F31*F32*chi23*dAdchi21322 + F31*F33*chi21*dAdchi13122 + F31*F33*chi21*dAdchi31122 + F31*F33*chi22*dAdchi13222 + F31*F33*chi22*dAdchi31222 + F31*F33*chi23*dAdchi13322 + F31*F33*chi23*dAdchi31322 + F32*F32*chi21*dAdchi22122 + F32*F32*chi22*dAdchi22222 + F32*F32*chi23*dAdchi22322 + F32*F33*chi21*dAdchi23122 + F32*F33*chi21*dAdchi32122 + F32*F33*chi22*dAdchi23222 + F32*F33*chi22*dAdchi32222 + F32*F33*chi23*dAdchi23322 + F32*F33*chi23*dAdchi32322 + F33*F33*chi21*dAdchi33122 + F33*F33*chi22*dAdchi33222 + F33*F33*chi23*dAdchi33322;
        dadchi(24,2) = F31*F31*chi21*dAdchi11133 + F31*F31*chi22*dAdchi11233 + F31*F31*chi23*dAdchi11333 + F31*F32*chi21*dAdchi12133 + F31*F32*chi21*dAdchi21133 + F31*F32*chi22*dAdchi12233 + F31*F32*chi22*dAdchi21233 + F31*F32*chi23*dAdchi12333 + F31*F32*chi23*dAdchi21333 + F31*F33*chi21*dAdchi13133 + F31*F33*chi21*dAdchi31133 + F31*F33*chi22*dAdchi13233 + F31*F33*chi22*dAdchi31233 + F31*F33*chi23*dAdchi13333 + F31*F33*chi23*dAdchi31333 + F32*F32*chi21*dAdchi22133 + F32*F32*chi22*dAdchi22233 + F32*F32*chi23*dAdchi22333 + F32*F33*chi21*dAdchi23133 + F32*F33*chi21*dAdchi32133 + F32*F33*chi22*dAdchi23233 + F32*F33*chi22*dAdchi32233 + F32*F33*chi23*dAdchi23333 + F32*F33*chi23*dAdchi32333 + F33*F33*chi21*dAdchi33133 + F33*F33*chi22*dAdchi33233 + F33*F33*chi23*dAdchi33333;
        dadchi(24,3) = A112*F31*F31 + A122*F31*F32 + A132*F31*F33 + A212*F31*F32 + A222*F32*F32 + A232*F32*F33 + A312*F31*F33 + A322*F32*F33 + A332*F33*F33 + F31*F31*chi21*dAdchi11123 + F31*F31*chi22*dAdchi11223 + F31*F31*chi23*dAdchi11323 + F31*F32*chi21*dAdchi12123 + F31*F32*chi21*dAdchi21123 + F31*F32*chi22*dAdchi12223 + F31*F32*chi22*dAdchi21223 + F31*F32*chi23*dAdchi12323 + F31*F32*chi23*dAdchi21323 + F31*F33*chi21*dAdchi13123 + F31*F33*chi21*dAdchi31123 + F31*F33*chi22*dAdchi13223 + F31*F33*chi22*dAdchi31223 + F31*F33*chi23*dAdchi13323 + F31*F33*chi23*dAdchi31323 + F32*F32*chi21*dAdchi22123 + F32*F32*chi22*dAdchi22223 + F32*F32*chi23*dAdchi22323 + F32*F33*chi21*dAdchi23123 + F32*F33*chi21*dAdchi32123 + F32*F33*chi22*dAdchi23223 + F32*F33*chi22*dAdchi32223 + F32*F33*chi23*dAdchi23323 + F32*F33*chi23*dAdchi32323 + F33*F33*chi21*dAdchi33123 + F33*F33*chi22*dAdchi33223 + F33*F33*chi23*dAdchi33323;
        dadchi(24,4) = F31*F31*chi21*dAdchi11113 + F31*F31*chi22*dAdchi11213 + F31*F31*chi23*dAdchi11313 + F31*F32*chi21*dAdchi12113 + F31*F32*chi21*dAdchi21113 + F31*F32*chi22*dAdchi12213 + F31*F32*chi22*dAdchi21213 + F31*F32*chi23*dAdchi12313 + F31*F32*chi23*dAdchi21313 + F31*F33*chi21*dAdchi13113 + F31*F33*chi21*dAdchi31113 + F31*F33*chi22*dAdchi13213 + F31*F33*chi22*dAdchi31213 + F31*F33*chi23*dAdchi13313 + F31*F33*chi23*dAdchi31313 + F32*F32*chi21*dAdchi22113 + F32*F32*chi22*dAdchi22213 + F32*F32*chi23*dAdchi22313 + F32*F33*chi21*dAdchi23113 + F32*F33*chi21*dAdchi32113 + F32*F33*chi22*dAdchi23213 + F32*F33*chi22*dAdchi32213 + F32*F33*chi23*dAdchi23313 + F32*F33*chi23*dAdchi32313 + F33*F33*chi21*dAdchi33113 + F33*F33*chi22*dAdchi33213 + F33*F33*chi23*dAdchi33313;
        dadchi(24,5) = F31*F31*chi21*dAdchi11112 + F31*F31*chi22*dAdchi11212 + F31*F31*chi23*dAdchi11312 + F31*F32*chi21*dAdchi12112 + F31*F32*chi21*dAdchi21112 + F31*F32*chi22*dAdchi12212 + F31*F32*chi22*dAdchi21212 + F31*F32*chi23*dAdchi12312 + F31*F32*chi23*dAdchi21312 + F31*F33*chi21*dAdchi13112 + F31*F33*chi21*dAdchi31112 + F31*F33*chi22*dAdchi13212 + F31*F33*chi22*dAdchi31212 + F31*F33*chi23*dAdchi13312 + F31*F33*chi23*dAdchi31312 + F32*F32*chi21*dAdchi22112 + F32*F32*chi22*dAdchi22212 + F32*F32*chi23*dAdchi22312 + F32*F33*chi21*dAdchi23112 + F32*F33*chi21*dAdchi32112 + F32*F33*chi22*dAdchi23212 + F32*F33*chi22*dAdchi32212 + F32*F33*chi23*dAdchi23312 + F32*F33*chi23*dAdchi32312 + F33*F33*chi21*dAdchi33112 + F33*F33*chi22*dAdchi33212 + F33*F33*chi23*dAdchi33312;
        dadchi(24,6) = F31*F31*chi21*dAdchi11132 + F31*F31*chi22*dAdchi11232 + F31*F31*chi23*dAdchi11332 + F31*F32*chi21*dAdchi12132 + F31*F32*chi21*dAdchi21132 + F31*F32*chi22*dAdchi12232 + F31*F32*chi22*dAdchi21232 + F31*F32*chi23*dAdchi12332 + F31*F32*chi23*dAdchi21332 + F31*F33*chi21*dAdchi13132 + F31*F33*chi21*dAdchi31132 + F31*F33*chi22*dAdchi13232 + F31*F33*chi22*dAdchi31232 + F31*F33*chi23*dAdchi13332 + F31*F33*chi23*dAdchi31332 + F32*F32*chi21*dAdchi22132 + F32*F32*chi22*dAdchi22232 + F32*F32*chi23*dAdchi22332 + F32*F33*chi21*dAdchi23132 + F32*F33*chi21*dAdchi32132 + F32*F33*chi22*dAdchi23232 + F32*F33*chi22*dAdchi32232 + F32*F33*chi23*dAdchi23332 + F32*F33*chi23*dAdchi32332 + F33*F33*chi21*dAdchi33132 + F33*F33*chi22*dAdchi33232 + F33*F33*chi23*dAdchi33332;
        dadchi(24,7) = F31*F31*chi21*dAdchi11131 + F31*F31*chi22*dAdchi11231 + F31*F31*chi23*dAdchi11331 + F31*F32*chi21*dAdchi12131 + F31*F32*chi21*dAdchi21131 + F31*F32*chi22*dAdchi12231 + F31*F32*chi22*dAdchi21231 + F31*F32*chi23*dAdchi12331 + F31*F32*chi23*dAdchi21331 + F31*F33*chi21*dAdchi13131 + F31*F33*chi21*dAdchi31131 + F31*F33*chi22*dAdchi13231 + F31*F33*chi22*dAdchi31231 + F31*F33*chi23*dAdchi13331 + F31*F33*chi23*dAdchi31331 + F32*F32*chi21*dAdchi22131 + F32*F32*chi22*dAdchi22231 + F32*F32*chi23*dAdchi22331 + F32*F33*chi21*dAdchi23131 + F32*F33*chi21*dAdchi32131 + F32*F33*chi22*dAdchi23231 + F32*F33*chi22*dAdchi32231 + F32*F33*chi23*dAdchi23331 + F32*F33*chi23*dAdchi32331 + F33*F33*chi21*dAdchi33131 + F33*F33*chi22*dAdchi33231 + F33*F33*chi23*dAdchi33331;
        dadchi(24,8) = A112*F31*F31 + A122*F31*F32 + A132*F31*F33 + A212*F31*F32 + A222*F32*F32 + A232*F32*F33 + A312*F31*F33 + A322*F32*F33 + A332*F33*F33 + F31*F31*chi21*dAdchi11121 + F31*F31*chi22*dAdchi11221 + F31*F31*chi23*dAdchi11321 + F31*F32*chi21*dAdchi12121 + F31*F32*chi21*dAdchi21121 + F31*F32*chi22*dAdchi12221 + F31*F32*chi22*dAdchi21221 + F31*F32*chi23*dAdchi12321 + F31*F32*chi23*dAdchi21321 + F31*F33*chi21*dAdchi13121 + F31*F33*chi21*dAdchi31121 + F31*F33*chi22*dAdchi13221 + F31*F33*chi22*dAdchi31221 + F31*F33*chi23*dAdchi13321 + F31*F33*chi23*dAdchi31321 + F32*F32*chi21*dAdchi22121 + F32*F32*chi22*dAdchi22221 + F32*F32*chi23*dAdchi22321 + F32*F33*chi21*dAdchi23121 + F32*F33*chi21*dAdchi32121 + F32*F33*chi22*dAdchi23221 + F32*F33*chi22*dAdchi32221 + F32*F33*chi23*dAdchi23321 + F32*F33*chi23*dAdchi32321 + F33*F33*chi21*dAdchi33121 + F33*F33*chi22*dAdchi33221 + F33*F33*chi23*dAdchi33321;
        dadchi(25,0) = A111*F31*F31 + A121*F31*F32 + A131*F31*F33 + A211*F31*F32 + A221*F32*F32 + A231*F32*F33 + A311*F31*F33 + A321*F32*F33 + A331*F33*F33 + F31*F31*chi11*dAdchi11111 + F31*F31*chi12*dAdchi11211 + F31*F31*chi13*dAdchi11311 + F31*F32*chi11*dAdchi12111 + F31*F32*chi11*dAdchi21111 + F31*F32*chi12*dAdchi12211 + F31*F32*chi12*dAdchi21211 + F31*F32*chi13*dAdchi12311 + F31*F32*chi13*dAdchi21311 + F31*F33*chi11*dAdchi13111 + F31*F33*chi11*dAdchi31111 + F31*F33*chi12*dAdchi13211 + F31*F33*chi12*dAdchi31211 + F31*F33*chi13*dAdchi13311 + F31*F33*chi13*dAdchi31311 + F32*F32*chi11*dAdchi22111 + F32*F32*chi12*dAdchi22211 + F32*F32*chi13*dAdchi22311 + F32*F33*chi11*dAdchi23111 + F32*F33*chi11*dAdchi32111 + F32*F33*chi12*dAdchi23211 + F32*F33*chi12*dAdchi32211 + F32*F33*chi13*dAdchi23311 + F32*F33*chi13*dAdchi32311 + F33*F33*chi11*dAdchi33111 + F33*F33*chi12*dAdchi33211 + F33*F33*chi13*dAdchi33311;
        dadchi(25,1) = F31*F31*chi11*dAdchi11122 + F31*F31*chi12*dAdchi11222 + F31*F31*chi13*dAdchi11322 + F31*F32*chi11*dAdchi12122 + F31*F32*chi11*dAdchi21122 + F31*F32*chi12*dAdchi12222 + F31*F32*chi12*dAdchi21222 + F31*F32*chi13*dAdchi12322 + F31*F32*chi13*dAdchi21322 + F31*F33*chi11*dAdchi13122 + F31*F33*chi11*dAdchi31122 + F31*F33*chi12*dAdchi13222 + F31*F33*chi12*dAdchi31222 + F31*F33*chi13*dAdchi13322 + F31*F33*chi13*dAdchi31322 + F32*F32*chi11*dAdchi22122 + F32*F32*chi12*dAdchi22222 + F32*F32*chi13*dAdchi22322 + F32*F33*chi11*dAdchi23122 + F32*F33*chi11*dAdchi32122 + F32*F33*chi12*dAdchi23222 + F32*F33*chi12*dAdchi32222 + F32*F33*chi13*dAdchi23322 + F32*F33*chi13*dAdchi32322 + F33*F33*chi11*dAdchi33122 + F33*F33*chi12*dAdchi33222 + F33*F33*chi13*dAdchi33322;
        dadchi(25,2) = F31*F31*chi11*dAdchi11133 + F31*F31*chi12*dAdchi11233 + F31*F31*chi13*dAdchi11333 + F31*F32*chi11*dAdchi12133 + F31*F32*chi11*dAdchi21133 + F31*F32*chi12*dAdchi12233 + F31*F32*chi12*dAdchi21233 + F31*F32*chi13*dAdchi12333 + F31*F32*chi13*dAdchi21333 + F31*F33*chi11*dAdchi13133 + F31*F33*chi11*dAdchi31133 + F31*F33*chi12*dAdchi13233 + F31*F33*chi12*dAdchi31233 + F31*F33*chi13*dAdchi13333 + F31*F33*chi13*dAdchi31333 + F32*F32*chi11*dAdchi22133 + F32*F32*chi12*dAdchi22233 + F32*F32*chi13*dAdchi22333 + F32*F33*chi11*dAdchi23133 + F32*F33*chi11*dAdchi32133 + F32*F33*chi12*dAdchi23233 + F32*F33*chi12*dAdchi32233 + F32*F33*chi13*dAdchi23333 + F32*F33*chi13*dAdchi32333 + F33*F33*chi11*dAdchi33133 + F33*F33*chi12*dAdchi33233 + F33*F33*chi13*dAdchi33333;
        dadchi(25,3) = F31*F31*chi11*dAdchi11123 + F31*F31*chi12*dAdchi11223 + F31*F31*chi13*dAdchi11323 + F31*F32*chi11*dAdchi12123 + F31*F32*chi11*dAdchi21123 + F31*F32*chi12*dAdchi12223 + F31*F32*chi12*dAdchi21223 + F31*F32*chi13*dAdchi12323 + F31*F32*chi13*dAdchi21323 + F31*F33*chi11*dAdchi13123 + F31*F33*chi11*dAdchi31123 + F31*F33*chi12*dAdchi13223 + F31*F33*chi12*dAdchi31223 + F31*F33*chi13*dAdchi13323 + F31*F33*chi13*dAdchi31323 + F32*F32*chi11*dAdchi22123 + F32*F32*chi12*dAdchi22223 + F32*F32*chi13*dAdchi22323 + F32*F33*chi11*dAdchi23123 + F32*F33*chi11*dAdchi32123 + F32*F33*chi12*dAdchi23223 + F32*F33*chi12*dAdchi32223 + F32*F33*chi13*dAdchi23323 + F32*F33*chi13*dAdchi32323 + F33*F33*chi11*dAdchi33123 + F33*F33*chi12*dAdchi33223 + F33*F33*chi13*dAdchi33323;
        dadchi(25,4) = A111*F31*F31 + A121*F31*F32 + A131*F31*F33 + A211*F31*F32 + A221*F32*F32 + A231*F32*F33 + A311*F31*F33 + A321*F32*F33 + A331*F33*F33 + F31*F31*chi11*dAdchi11113 + F31*F31*chi12*dAdchi11213 + F31*F31*chi13*dAdchi11313 + F31*F32*chi11*dAdchi12113 + F31*F32*chi11*dAdchi21113 + F31*F32*chi12*dAdchi12213 + F31*F32*chi12*dAdchi21213 + F31*F32*chi13*dAdchi12313 + F31*F32*chi13*dAdchi21313 + F31*F33*chi11*dAdchi13113 + F31*F33*chi11*dAdchi31113 + F31*F33*chi12*dAdchi13213 + F31*F33*chi12*dAdchi31213 + F31*F33*chi13*dAdchi13313 + F31*F33*chi13*dAdchi31313 + F32*F32*chi11*dAdchi22113 + F32*F32*chi12*dAdchi22213 + F32*F32*chi13*dAdchi22313 + F32*F33*chi11*dAdchi23113 + F32*F33*chi11*dAdchi32113 + F32*F33*chi12*dAdchi23213 + F32*F33*chi12*dAdchi32213 + F32*F33*chi13*dAdchi23313 + F32*F33*chi13*dAdchi32313 + F33*F33*chi11*dAdchi33113 + F33*F33*chi12*dAdchi33213 + F33*F33*chi13*dAdchi33313;
        dadchi(25,5) = A111*F31*F31 + A121*F31*F32 + A131*F31*F33 + A211*F31*F32 + A221*F32*F32 + A231*F32*F33 + A311*F31*F33 + A321*F32*F33 + A331*F33*F33 + F31*F31*chi11*dAdchi11112 + F31*F31*chi12*dAdchi11212 + F31*F31*chi13*dAdchi11312 + F31*F32*chi11*dAdchi12112 + F31*F32*chi11*dAdchi21112 + F31*F32*chi12*dAdchi12212 + F31*F32*chi12*dAdchi21212 + F31*F32*chi13*dAdchi12312 + F31*F32*chi13*dAdchi21312 + F31*F33*chi11*dAdchi13112 + F31*F33*chi11*dAdchi31112 + F31*F33*chi12*dAdchi13212 + F31*F33*chi12*dAdchi31212 + F31*F33*chi13*dAdchi13312 + F31*F33*chi13*dAdchi31312 + F32*F32*chi11*dAdchi22112 + F32*F32*chi12*dAdchi22212 + F32*F32*chi13*dAdchi22312 + F32*F33*chi11*dAdchi23112 + F32*F33*chi11*dAdchi32112 + F32*F33*chi12*dAdchi23212 + F32*F33*chi12*dAdchi32212 + F32*F33*chi13*dAdchi23312 + F32*F33*chi13*dAdchi32312 + F33*F33*chi11*dAdchi33112 + F33*F33*chi12*dAdchi33212 + F33*F33*chi13*dAdchi33312;
        dadchi(25,6) = F31*F31*chi11*dAdchi11132 + F31*F31*chi12*dAdchi11232 + F31*F31*chi13*dAdchi11332 + F31*F32*chi11*dAdchi12132 + F31*F32*chi11*dAdchi21132 + F31*F32*chi12*dAdchi12232 + F31*F32*chi12*dAdchi21232 + F31*F32*chi13*dAdchi12332 + F31*F32*chi13*dAdchi21332 + F31*F33*chi11*dAdchi13132 + F31*F33*chi11*dAdchi31132 + F31*F33*chi12*dAdchi13232 + F31*F33*chi12*dAdchi31232 + F31*F33*chi13*dAdchi13332 + F31*F33*chi13*dAdchi31332 + F32*F32*chi11*dAdchi22132 + F32*F32*chi12*dAdchi22232 + F32*F32*chi13*dAdchi22332 + F32*F33*chi11*dAdchi23132 + F32*F33*chi11*dAdchi32132 + F32*F33*chi12*dAdchi23232 + F32*F33*chi12*dAdchi32232 + F32*F33*chi13*dAdchi23332 + F32*F33*chi13*dAdchi32332 + F33*F33*chi11*dAdchi33132 + F33*F33*chi12*dAdchi33232 + F33*F33*chi13*dAdchi33332;
        dadchi(25,7) = F31*F31*chi11*dAdchi11131 + F31*F31*chi12*dAdchi11231 + F31*F31*chi13*dAdchi11331 + F31*F32*chi11*dAdchi12131 + F31*F32*chi11*dAdchi21131 + F31*F32*chi12*dAdchi12231 + F31*F32*chi12*dAdchi21231 + F31*F32*chi13*dAdchi12331 + F31*F32*chi13*dAdchi21331 + F31*F33*chi11*dAdchi13131 + F31*F33*chi11*dAdchi31131 + F31*F33*chi12*dAdchi13231 + F31*F33*chi12*dAdchi31231 + F31*F33*chi13*dAdchi13331 + F31*F33*chi13*dAdchi31331 + F32*F32*chi11*dAdchi22131 + F32*F32*chi12*dAdchi22231 + F32*F32*chi13*dAdchi22331 + F32*F33*chi11*dAdchi23131 + F32*F33*chi11*dAdchi32131 + F32*F33*chi12*dAdchi23231 + F32*F33*chi12*dAdchi32231 + F32*F33*chi13*dAdchi23331 + F32*F33*chi13*dAdchi32331 + F33*F33*chi11*dAdchi33131 + F33*F33*chi12*dAdchi33231 + F33*F33*chi13*dAdchi33331;
        dadchi(25,8) = F31*F31*chi11*dAdchi11121 + F31*F31*chi12*dAdchi11221 + F31*F31*chi13*dAdchi11321 + F31*F32*chi11*dAdchi12121 + F31*F32*chi11*dAdchi21121 + F31*F32*chi12*dAdchi12221 + F31*F32*chi12*dAdchi21221 + F31*F32*chi13*dAdchi12321 + F31*F32*chi13*dAdchi21321 + F31*F33*chi11*dAdchi13121 + F31*F33*chi11*dAdchi31121 + F31*F33*chi12*dAdchi13221 + F31*F33*chi12*dAdchi31221 + F31*F33*chi13*dAdchi13321 + F31*F33*chi13*dAdchi31321 + F32*F32*chi11*dAdchi22121 + F32*F32*chi12*dAdchi22221 + F32*F32*chi13*dAdchi22321 + F32*F33*chi11*dAdchi23121 + F32*F33*chi11*dAdchi32121 + F32*F33*chi12*dAdchi23221 + F32*F33*chi12*dAdchi32221 + F32*F33*chi13*dAdchi23321 + F32*F33*chi13*dAdchi32321 + F33*F33*chi11*dAdchi33121 + F33*F33*chi12*dAdchi33221 + F33*F33*chi13*dAdchi33321;
        dadchi(26,0) = A111*F21*F31 + A121*F22*F31 + A131*F23*F31 + A211*F21*F32 + A221*F22*F32 + A231*F23*F32 + A311*F21*F33 + A321*F22*F33 + A331*F23*F33 + F21*F31*chi11*dAdchi11111 + F21*F31*chi12*dAdchi11211 + F21*F31*chi13*dAdchi11311 + F21*F32*chi11*dAdchi21111 + F21*F32*chi12*dAdchi21211 + F21*F32*chi13*dAdchi21311 + F21*F33*chi11*dAdchi31111 + F21*F33*chi12*dAdchi31211 + F21*F33*chi13*dAdchi31311 + F22*F31*chi11*dAdchi12111 + F22*F31*chi12*dAdchi12211 + F22*F31*chi13*dAdchi12311 + F22*F32*chi11*dAdchi22111 + F22*F32*chi12*dAdchi22211 + F22*F32*chi13*dAdchi22311 + F22*F33*chi11*dAdchi32111 + F22*F33*chi12*dAdchi32211 + F22*F33*chi13*dAdchi32311 + F23*F31*chi11*dAdchi13111 + F23*F31*chi12*dAdchi13211 + F23*F31*chi13*dAdchi13311 + F23*F32*chi11*dAdchi23111 + F23*F32*chi12*dAdchi23211 + F23*F32*chi13*dAdchi23311 + F23*F33*chi11*dAdchi33111 + F23*F33*chi12*dAdchi33211 + F23*F33*chi13*dAdchi33311;
        dadchi(26,1) = F21*F31*chi11*dAdchi11122 + F21*F31*chi12*dAdchi11222 + F21*F31*chi13*dAdchi11322 + F21*F32*chi11*dAdchi21122 + F21*F32*chi12*dAdchi21222 + F21*F32*chi13*dAdchi21322 + F21*F33*chi11*dAdchi31122 + F21*F33*chi12*dAdchi31222 + F21*F33*chi13*dAdchi31322 + F22*F31*chi11*dAdchi12122 + F22*F31*chi12*dAdchi12222 + F22*F31*chi13*dAdchi12322 + F22*F32*chi11*dAdchi22122 + F22*F32*chi12*dAdchi22222 + F22*F32*chi13*dAdchi22322 + F22*F33*chi11*dAdchi32122 + F22*F33*chi12*dAdchi32222 + F22*F33*chi13*dAdchi32322 + F23*F31*chi11*dAdchi13122 + F23*F31*chi12*dAdchi13222 + F23*F31*chi13*dAdchi13322 + F23*F32*chi11*dAdchi23122 + F23*F32*chi12*dAdchi23222 + F23*F32*chi13*dAdchi23322 + F23*F33*chi11*dAdchi33122 + F23*F33*chi12*dAdchi33222 + F23*F33*chi13*dAdchi33322;
        dadchi(26,2) = F21*F31*chi11*dAdchi11133 + F21*F31*chi12*dAdchi11233 + F21*F31*chi13*dAdchi11333 + F21*F32*chi11*dAdchi21133 + F21*F32*chi12*dAdchi21233 + F21*F32*chi13*dAdchi21333 + F21*F33*chi11*dAdchi31133 + F21*F33*chi12*dAdchi31233 + F21*F33*chi13*dAdchi31333 + F22*F31*chi11*dAdchi12133 + F22*F31*chi12*dAdchi12233 + F22*F31*chi13*dAdchi12333 + F22*F32*chi11*dAdchi22133 + F22*F32*chi12*dAdchi22233 + F22*F32*chi13*dAdchi22333 + F22*F33*chi11*dAdchi32133 + F22*F33*chi12*dAdchi32233 + F22*F33*chi13*dAdchi32333 + F23*F31*chi11*dAdchi13133 + F23*F31*chi12*dAdchi13233 + F23*F31*chi13*dAdchi13333 + F23*F32*chi11*dAdchi23133 + F23*F32*chi12*dAdchi23233 + F23*F32*chi13*dAdchi23333 + F23*F33*chi11*dAdchi33133 + F23*F33*chi12*dAdchi33233 + F23*F33*chi13*dAdchi33333;
        dadchi(26,3) = F21*F31*chi11*dAdchi11123 + F21*F31*chi12*dAdchi11223 + F21*F31*chi13*dAdchi11323 + F21*F32*chi11*dAdchi21123 + F21*F32*chi12*dAdchi21223 + F21*F32*chi13*dAdchi21323 + F21*F33*chi11*dAdchi31123 + F21*F33*chi12*dAdchi31223 + F21*F33*chi13*dAdchi31323 + F22*F31*chi11*dAdchi12123 + F22*F31*chi12*dAdchi12223 + F22*F31*chi13*dAdchi12323 + F22*F32*chi11*dAdchi22123 + F22*F32*chi12*dAdchi22223 + F22*F32*chi13*dAdchi22323 + F22*F33*chi11*dAdchi32123 + F22*F33*chi12*dAdchi32223 + F22*F33*chi13*dAdchi32323 + F23*F31*chi11*dAdchi13123 + F23*F31*chi12*dAdchi13223 + F23*F31*chi13*dAdchi13323 + F23*F32*chi11*dAdchi23123 + F23*F32*chi12*dAdchi23223 + F23*F32*chi13*dAdchi23323 + F23*F33*chi11*dAdchi33123 + F23*F33*chi12*dAdchi33223 + F23*F33*chi13*dAdchi33323;
        dadchi(26,4) = A111*F21*F31 + A121*F22*F31 + A131*F23*F31 + A211*F21*F32 + A221*F22*F32 + A231*F23*F32 + A311*F21*F33 + A321*F22*F33 + A331*F23*F33 + F21*F31*chi11*dAdchi11113 + F21*F31*chi12*dAdchi11213 + F21*F31*chi13*dAdchi11313 + F21*F32*chi11*dAdchi21113 + F21*F32*chi12*dAdchi21213 + F21*F32*chi13*dAdchi21313 + F21*F33*chi11*dAdchi31113 + F21*F33*chi12*dAdchi31213 + F21*F33*chi13*dAdchi31313 + F22*F31*chi11*dAdchi12113 + F22*F31*chi12*dAdchi12213 + F22*F31*chi13*dAdchi12313 + F22*F32*chi11*dAdchi22113 + F22*F32*chi12*dAdchi22213 + F22*F32*chi13*dAdchi22313 + F22*F33*chi11*dAdchi32113 + F22*F33*chi12*dAdchi32213 + F22*F33*chi13*dAdchi32313 + F23*F31*chi11*dAdchi13113 + F23*F31*chi12*dAdchi13213 + F23*F31*chi13*dAdchi13313 + F23*F32*chi11*dAdchi23113 + F23*F32*chi12*dAdchi23213 + F23*F32*chi13*dAdchi23313 + F23*F33*chi11*dAdchi33113 + F23*F33*chi12*dAdchi33213 + F23*F33*chi13*dAdchi33313;
        dadchi(26,5) = A111*F21*F31 + A121*F22*F31 + A131*F23*F31 + A211*F21*F32 + A221*F22*F32 + A231*F23*F32 + A311*F21*F33 + A321*F22*F33 + A331*F23*F33 + F21*F31*chi11*dAdchi11112 + F21*F31*chi12*dAdchi11212 + F21*F31*chi13*dAdchi11312 + F21*F32*chi11*dAdchi21112 + F21*F32*chi12*dAdchi21212 + F21*F32*chi13*dAdchi21312 + F21*F33*chi11*dAdchi31112 + F21*F33*chi12*dAdchi31212 + F21*F33*chi13*dAdchi31312 + F22*F31*chi11*dAdchi12112 + F22*F31*chi12*dAdchi12212 + F22*F31*chi13*dAdchi12312 + F22*F32*chi11*dAdchi22112 + F22*F32*chi12*dAdchi22212 + F22*F32*chi13*dAdchi22312 + F22*F33*chi11*dAdchi32112 + F22*F33*chi12*dAdchi32212 + F22*F33*chi13*dAdchi32312 + F23*F31*chi11*dAdchi13112 + F23*F31*chi12*dAdchi13212 + F23*F31*chi13*dAdchi13312 + F23*F32*chi11*dAdchi23112 + F23*F32*chi12*dAdchi23212 + F23*F32*chi13*dAdchi23312 + F23*F33*chi11*dAdchi33112 + F23*F33*chi12*dAdchi33212 + F23*F33*chi13*dAdchi33312;
        dadchi(26,6) = F21*F31*chi11*dAdchi11132 + F21*F31*chi12*dAdchi11232 + F21*F31*chi13*dAdchi11332 + F21*F32*chi11*dAdchi21132 + F21*F32*chi12*dAdchi21232 + F21*F32*chi13*dAdchi21332 + F21*F33*chi11*dAdchi31132 + F21*F33*chi12*dAdchi31232 + F21*F33*chi13*dAdchi31332 + F22*F31*chi11*dAdchi12132 + F22*F31*chi12*dAdchi12232 + F22*F31*chi13*dAdchi12332 + F22*F32*chi11*dAdchi22132 + F22*F32*chi12*dAdchi22232 + F22*F32*chi13*dAdchi22332 + F22*F33*chi11*dAdchi32132 + F22*F33*chi12*dAdchi32232 + F22*F33*chi13*dAdchi32332 + F23*F31*chi11*dAdchi13132 + F23*F31*chi12*dAdchi13232 + F23*F31*chi13*dAdchi13332 + F23*F32*chi11*dAdchi23132 + F23*F32*chi12*dAdchi23232 + F23*F32*chi13*dAdchi23332 + F23*F33*chi11*dAdchi33132 + F23*F33*chi12*dAdchi33232 + F23*F33*chi13*dAdchi33332;
        dadchi(26,7) = F21*F31*chi11*dAdchi11131 + F21*F31*chi12*dAdchi11231 + F21*F31*chi13*dAdchi11331 + F21*F32*chi11*dAdchi21131 + F21*F32*chi12*dAdchi21231 + F21*F32*chi13*dAdchi21331 + F21*F33*chi11*dAdchi31131 + F21*F33*chi12*dAdchi31231 + F21*F33*chi13*dAdchi31331 + F22*F31*chi11*dAdchi12131 + F22*F31*chi12*dAdchi12231 + F22*F31*chi13*dAdchi12331 + F22*F32*chi11*dAdchi22131 + F22*F32*chi12*dAdchi22231 + F22*F32*chi13*dAdchi22331 + F22*F33*chi11*dAdchi32131 + F22*F33*chi12*dAdchi32231 + F22*F33*chi13*dAdchi32331 + F23*F31*chi11*dAdchi13131 + F23*F31*chi12*dAdchi13231 + F23*F31*chi13*dAdchi13331 + F23*F32*chi11*dAdchi23131 + F23*F32*chi12*dAdchi23231 + F23*F32*chi13*dAdchi23331 + F23*F33*chi11*dAdchi33131 + F23*F33*chi12*dAdchi33231 + F23*F33*chi13*dAdchi33331;
        dadchi(26,8) = F21*F31*chi11*dAdchi11121 + F21*F31*chi12*dAdchi11221 + F21*F31*chi13*dAdchi11321 + F21*F32*chi11*dAdchi21121 + F21*F32*chi12*dAdchi21221 + F21*F32*chi13*dAdchi21321 + F21*F33*chi11*dAdchi31121 + F21*F33*chi12*dAdchi31221 + F21*F33*chi13*dAdchi31321 + F22*F31*chi11*dAdchi12121 + F22*F31*chi12*dAdchi12221 + F22*F31*chi13*dAdchi12321 + F22*F32*chi11*dAdchi22121 + F22*F32*chi12*dAdchi22221 + F22*F32*chi13*dAdchi22321 + F22*F33*chi11*dAdchi32121 + F22*F33*chi12*dAdchi32221 + F22*F33*chi13*dAdchi32321 + F23*F31*chi11*dAdchi13121 + F23*F31*chi12*dAdchi13221 + F23*F31*chi13*dAdchi13321 + F23*F32*chi11*dAdchi23121 + F23*F32*chi12*dAdchi23221 + F23*F32*chi13*dAdchi23321 + F23*F33*chi11*dAdchi33121 + F23*F33*chi12*dAdchi33221 + F23*F33*chi13*dAdchi33321;


        dadchi /= J;
        
        return;
    }

    void map_dAdgrad_chi_to_dadgrad_chi(const Vector_9 &A,  const Matrix_9x27 &dAdgrad_chi,  const double &J, const Matrix_3x3 &F, Matrix_9x27 dadgrad_chi){
        /*!========================================
        |    map_dAdgrad_chi_to_dadgrad_chi    |
        ========================================
        
        Map the gradient of a stress tensor w.r.t. the gradient w.r.t. the reference coordinate X of the micro-deformation tensor 
        in the reference configuration to the current configuration.
        
        Note that grad_chi is chi_iI,J to the resulting gradient is dadgrad_chi_ijkK,L.
        */
        
        dadgrad_chi = Matrix_9x27::Zero();
        
        //Compute the jacobian of deformation
        double J = F.determinant();
        
        //Extracting A
        double A11= A(0);
        double A22= A(1);
        double A33= A(2);
        double A23= A(3);
        double A13= A(4);
        double A12= A(5);
        double A32= A(6);
        double A31= A(7);
        double A21= A(8);

        //Extracting dAdgrad_chi
        double dAdgrad_chi11111= dAdgrad_chi(0,0);
        double dAdgrad_chi11122= dAdgrad_chi(0,1);
        double dAdgrad_chi11133= dAdgrad_chi(0,2);
        double dAdgrad_chi11123= dAdgrad_chi(0,3);
        double dAdgrad_chi11113= dAdgrad_chi(0,4);
        double dAdgrad_chi11112= dAdgrad_chi(0,5);
        double dAdgrad_chi11132= dAdgrad_chi(0,6);
        double dAdgrad_chi11131= dAdgrad_chi(0,7);
        double dAdgrad_chi11121= dAdgrad_chi(0,8);
        double dAdgrad_chi11211= dAdgrad_chi(0,9);
        double dAdgrad_chi11222= dAdgrad_chi(0,10);
        double dAdgrad_chi11233= dAdgrad_chi(0,11);
        double dAdgrad_chi11223= dAdgrad_chi(0,12);
        double dAdgrad_chi11213= dAdgrad_chi(0,13);
        double dAdgrad_chi11212= dAdgrad_chi(0,14);
        double dAdgrad_chi11232= dAdgrad_chi(0,15);
        double dAdgrad_chi11231= dAdgrad_chi(0,16);
        double dAdgrad_chi11221= dAdgrad_chi(0,17);
        double dAdgrad_chi11311= dAdgrad_chi(0,18);
        double dAdgrad_chi11322= dAdgrad_chi(0,19);
        double dAdgrad_chi11333= dAdgrad_chi(0,20);
        double dAdgrad_chi11323= dAdgrad_chi(0,21);
        double dAdgrad_chi11313= dAdgrad_chi(0,22);
        double dAdgrad_chi11312= dAdgrad_chi(0,23);
        double dAdgrad_chi11332= dAdgrad_chi(0,24);
        double dAdgrad_chi11331= dAdgrad_chi(0,25);
        double dAdgrad_chi11321= dAdgrad_chi(0,26);
        double dAdgrad_chi22111= dAdgrad_chi(1,0);
        double dAdgrad_chi22122= dAdgrad_chi(1,1);
        double dAdgrad_chi22133= dAdgrad_chi(1,2);
        double dAdgrad_chi22123= dAdgrad_chi(1,3);
        double dAdgrad_chi22113= dAdgrad_chi(1,4);
        double dAdgrad_chi22112= dAdgrad_chi(1,5);
        double dAdgrad_chi22132= dAdgrad_chi(1,6);
        double dAdgrad_chi22131= dAdgrad_chi(1,7);
        double dAdgrad_chi22121= dAdgrad_chi(1,8);
        double dAdgrad_chi22211= dAdgrad_chi(1,9);
        double dAdgrad_chi22222= dAdgrad_chi(1,10);
        double dAdgrad_chi22233= dAdgrad_chi(1,11);
        double dAdgrad_chi22223= dAdgrad_chi(1,12);
        double dAdgrad_chi22213= dAdgrad_chi(1,13);
        double dAdgrad_chi22212= dAdgrad_chi(1,14);
        double dAdgrad_chi22232= dAdgrad_chi(1,15);
        double dAdgrad_chi22231= dAdgrad_chi(1,16);
        double dAdgrad_chi22221= dAdgrad_chi(1,17);
        double dAdgrad_chi22311= dAdgrad_chi(1,18);
        double dAdgrad_chi22322= dAdgrad_chi(1,19);
        double dAdgrad_chi22333= dAdgrad_chi(1,20);
        double dAdgrad_chi22323= dAdgrad_chi(1,21);
        double dAdgrad_chi22313= dAdgrad_chi(1,22);
        double dAdgrad_chi22312= dAdgrad_chi(1,23);
        double dAdgrad_chi22332= dAdgrad_chi(1,24);
        double dAdgrad_chi22331= dAdgrad_chi(1,25);
        double dAdgrad_chi22321= dAdgrad_chi(1,26);
        double dAdgrad_chi33111= dAdgrad_chi(2,0);
        double dAdgrad_chi33122= dAdgrad_chi(2,1);
        double dAdgrad_chi33133= dAdgrad_chi(2,2);
        double dAdgrad_chi33123= dAdgrad_chi(2,3);
        double dAdgrad_chi33113= dAdgrad_chi(2,4);
        double dAdgrad_chi33112= dAdgrad_chi(2,5);
        double dAdgrad_chi33132= dAdgrad_chi(2,6);
        double dAdgrad_chi33131= dAdgrad_chi(2,7);
        double dAdgrad_chi33121= dAdgrad_chi(2,8);
        double dAdgrad_chi33211= dAdgrad_chi(2,9);
        double dAdgrad_chi33222= dAdgrad_chi(2,10);
        double dAdgrad_chi33233= dAdgrad_chi(2,11);
        double dAdgrad_chi33223= dAdgrad_chi(2,12);
        double dAdgrad_chi33213= dAdgrad_chi(2,13);
        double dAdgrad_chi33212= dAdgrad_chi(2,14);
        double dAdgrad_chi33232= dAdgrad_chi(2,15);
        double dAdgrad_chi33231= dAdgrad_chi(2,16);
        double dAdgrad_chi33221= dAdgrad_chi(2,17);
        double dAdgrad_chi33311= dAdgrad_chi(2,18);
        double dAdgrad_chi33322= dAdgrad_chi(2,19);
        double dAdgrad_chi33333= dAdgrad_chi(2,20);
        double dAdgrad_chi33323= dAdgrad_chi(2,21);
        double dAdgrad_chi33313= dAdgrad_chi(2,22);
        double dAdgrad_chi33312= dAdgrad_chi(2,23);
        double dAdgrad_chi33332= dAdgrad_chi(2,24);
        double dAdgrad_chi33331= dAdgrad_chi(2,25);
        double dAdgrad_chi33321= dAdgrad_chi(2,26);
        double dAdgrad_chi23111= dAdgrad_chi(3,0);
        double dAdgrad_chi23122= dAdgrad_chi(3,1);
        double dAdgrad_chi23133= dAdgrad_chi(3,2);
        double dAdgrad_chi23123= dAdgrad_chi(3,3);
        double dAdgrad_chi23113= dAdgrad_chi(3,4);
        double dAdgrad_chi23112= dAdgrad_chi(3,5);
        double dAdgrad_chi23132= dAdgrad_chi(3,6);
        double dAdgrad_chi23131= dAdgrad_chi(3,7);
        double dAdgrad_chi23121= dAdgrad_chi(3,8);
        double dAdgrad_chi23211= dAdgrad_chi(3,9);
        double dAdgrad_chi23222= dAdgrad_chi(3,10);
        double dAdgrad_chi23233= dAdgrad_chi(3,11);
        double dAdgrad_chi23223= dAdgrad_chi(3,12);
        double dAdgrad_chi23213= dAdgrad_chi(3,13);
        double dAdgrad_chi23212= dAdgrad_chi(3,14);
        double dAdgrad_chi23232= dAdgrad_chi(3,15);
        double dAdgrad_chi23231= dAdgrad_chi(3,16);
        double dAdgrad_chi23221= dAdgrad_chi(3,17);
        double dAdgrad_chi23311= dAdgrad_chi(3,18);
        double dAdgrad_chi23322= dAdgrad_chi(3,19);
        double dAdgrad_chi23333= dAdgrad_chi(3,20);
        double dAdgrad_chi23323= dAdgrad_chi(3,21);
        double dAdgrad_chi23313= dAdgrad_chi(3,22);
        double dAdgrad_chi23312= dAdgrad_chi(3,23);
        double dAdgrad_chi23332= dAdgrad_chi(3,24);
        double dAdgrad_chi23331= dAdgrad_chi(3,25);
        double dAdgrad_chi23321= dAdgrad_chi(3,26);
        double dAdgrad_chi13111= dAdgrad_chi(4,0);
        double dAdgrad_chi13122= dAdgrad_chi(4,1);
        double dAdgrad_chi13133= dAdgrad_chi(4,2);
        double dAdgrad_chi13123= dAdgrad_chi(4,3);
        double dAdgrad_chi13113= dAdgrad_chi(4,4);
        double dAdgrad_chi13112= dAdgrad_chi(4,5);
        double dAdgrad_chi13132= dAdgrad_chi(4,6);
        double dAdgrad_chi13131= dAdgrad_chi(4,7);
        double dAdgrad_chi13121= dAdgrad_chi(4,8);
        double dAdgrad_chi13211= dAdgrad_chi(4,9);
        double dAdgrad_chi13222= dAdgrad_chi(4,10);
        double dAdgrad_chi13233= dAdgrad_chi(4,11);
        double dAdgrad_chi13223= dAdgrad_chi(4,12);
        double dAdgrad_chi13213= dAdgrad_chi(4,13);
        double dAdgrad_chi13212= dAdgrad_chi(4,14);
        double dAdgrad_chi13232= dAdgrad_chi(4,15);
        double dAdgrad_chi13231= dAdgrad_chi(4,16);
        double dAdgrad_chi13221= dAdgrad_chi(4,17);
        double dAdgrad_chi13311= dAdgrad_chi(4,18);
        double dAdgrad_chi13322= dAdgrad_chi(4,19);
        double dAdgrad_chi13333= dAdgrad_chi(4,20);
        double dAdgrad_chi13323= dAdgrad_chi(4,21);
        double dAdgrad_chi13313= dAdgrad_chi(4,22);
        double dAdgrad_chi13312= dAdgrad_chi(4,23);
        double dAdgrad_chi13332= dAdgrad_chi(4,24);
        double dAdgrad_chi13331= dAdgrad_chi(4,25);
        double dAdgrad_chi13321= dAdgrad_chi(4,26);
        double dAdgrad_chi12111= dAdgrad_chi(5,0);
        double dAdgrad_chi12122= dAdgrad_chi(5,1);
        double dAdgrad_chi12133= dAdgrad_chi(5,2);
        double dAdgrad_chi12123= dAdgrad_chi(5,3);
        double dAdgrad_chi12113= dAdgrad_chi(5,4);
        double dAdgrad_chi12112= dAdgrad_chi(5,5);
        double dAdgrad_chi12132= dAdgrad_chi(5,6);
        double dAdgrad_chi12131= dAdgrad_chi(5,7);
        double dAdgrad_chi12121= dAdgrad_chi(5,8);
        double dAdgrad_chi12211= dAdgrad_chi(5,9);
        double dAdgrad_chi12222= dAdgrad_chi(5,10);
        double dAdgrad_chi12233= dAdgrad_chi(5,11);
        double dAdgrad_chi12223= dAdgrad_chi(5,12);
        double dAdgrad_chi12213= dAdgrad_chi(5,13);
        double dAdgrad_chi12212= dAdgrad_chi(5,14);
        double dAdgrad_chi12232= dAdgrad_chi(5,15);
        double dAdgrad_chi12231= dAdgrad_chi(5,16);
        double dAdgrad_chi12221= dAdgrad_chi(5,17);
        double dAdgrad_chi12311= dAdgrad_chi(5,18);
        double dAdgrad_chi12322= dAdgrad_chi(5,19);
        double dAdgrad_chi12333= dAdgrad_chi(5,20);
        double dAdgrad_chi12323= dAdgrad_chi(5,21);
        double dAdgrad_chi12313= dAdgrad_chi(5,22);
        double dAdgrad_chi12312= dAdgrad_chi(5,23);
        double dAdgrad_chi12332= dAdgrad_chi(5,24);
        double dAdgrad_chi12331= dAdgrad_chi(5,25);
        double dAdgrad_chi12321= dAdgrad_chi(5,26);
        double dAdgrad_chi32111= dAdgrad_chi(6,0);
        double dAdgrad_chi32122= dAdgrad_chi(6,1);
        double dAdgrad_chi32133= dAdgrad_chi(6,2);
        double dAdgrad_chi32123= dAdgrad_chi(6,3);
        double dAdgrad_chi32113= dAdgrad_chi(6,4);
        double dAdgrad_chi32112= dAdgrad_chi(6,5);
        double dAdgrad_chi32132= dAdgrad_chi(6,6);
        double dAdgrad_chi32131= dAdgrad_chi(6,7);
        double dAdgrad_chi32121= dAdgrad_chi(6,8);
        double dAdgrad_chi32211= dAdgrad_chi(6,9);
        double dAdgrad_chi32222= dAdgrad_chi(6,10);
        double dAdgrad_chi32233= dAdgrad_chi(6,11);
        double dAdgrad_chi32223= dAdgrad_chi(6,12);
        double dAdgrad_chi32213= dAdgrad_chi(6,13);
        double dAdgrad_chi32212= dAdgrad_chi(6,14);
        double dAdgrad_chi32232= dAdgrad_chi(6,15);
        double dAdgrad_chi32231= dAdgrad_chi(6,16);
        double dAdgrad_chi32221= dAdgrad_chi(6,17);
        double dAdgrad_chi32311= dAdgrad_chi(6,18);
        double dAdgrad_chi32322= dAdgrad_chi(6,19);
        double dAdgrad_chi32333= dAdgrad_chi(6,20);
        double dAdgrad_chi32323= dAdgrad_chi(6,21);
        double dAdgrad_chi32313= dAdgrad_chi(6,22);
        double dAdgrad_chi32312= dAdgrad_chi(6,23);
        double dAdgrad_chi32332= dAdgrad_chi(6,24);
        double dAdgrad_chi32331= dAdgrad_chi(6,25);
        double dAdgrad_chi32321= dAdgrad_chi(6,26);
        double dAdgrad_chi31111= dAdgrad_chi(7,0);
        double dAdgrad_chi31122= dAdgrad_chi(7,1);
        double dAdgrad_chi31133= dAdgrad_chi(7,2);
        double dAdgrad_chi31123= dAdgrad_chi(7,3);
        double dAdgrad_chi31113= dAdgrad_chi(7,4);
        double dAdgrad_chi31112= dAdgrad_chi(7,5);
        double dAdgrad_chi31132= dAdgrad_chi(7,6);
        double dAdgrad_chi31131= dAdgrad_chi(7,7);
        double dAdgrad_chi31121= dAdgrad_chi(7,8);
        double dAdgrad_chi31211= dAdgrad_chi(7,9);
        double dAdgrad_chi31222= dAdgrad_chi(7,10);
        double dAdgrad_chi31233= dAdgrad_chi(7,11);
        double dAdgrad_chi31223= dAdgrad_chi(7,12);
        double dAdgrad_chi31213= dAdgrad_chi(7,13);
        double dAdgrad_chi31212= dAdgrad_chi(7,14);
        double dAdgrad_chi31232= dAdgrad_chi(7,15);
        double dAdgrad_chi31231= dAdgrad_chi(7,16);
        double dAdgrad_chi31221= dAdgrad_chi(7,17);
        double dAdgrad_chi31311= dAdgrad_chi(7,18);
        double dAdgrad_chi31322= dAdgrad_chi(7,19);
        double dAdgrad_chi31333= dAdgrad_chi(7,20);
        double dAdgrad_chi31323= dAdgrad_chi(7,21);
        double dAdgrad_chi31313= dAdgrad_chi(7,22);
        double dAdgrad_chi31312= dAdgrad_chi(7,23);
        double dAdgrad_chi31332= dAdgrad_chi(7,24);
        double dAdgrad_chi31331= dAdgrad_chi(7,25);
        double dAdgrad_chi31321= dAdgrad_chi(7,26);
        double dAdgrad_chi21111= dAdgrad_chi(8,0);
        double dAdgrad_chi21122= dAdgrad_chi(8,1);
        double dAdgrad_chi21133= dAdgrad_chi(8,2);
        double dAdgrad_chi21123= dAdgrad_chi(8,3);
        double dAdgrad_chi21113= dAdgrad_chi(8,4);
        double dAdgrad_chi21112= dAdgrad_chi(8,5);
        double dAdgrad_chi21132= dAdgrad_chi(8,6);
        double dAdgrad_chi21131= dAdgrad_chi(8,7);
        double dAdgrad_chi21121= dAdgrad_chi(8,8);
        double dAdgrad_chi21211= dAdgrad_chi(8,9);
        double dAdgrad_chi21222= dAdgrad_chi(8,10);
        double dAdgrad_chi21233= dAdgrad_chi(8,11);
        double dAdgrad_chi21223= dAdgrad_chi(8,12);
        double dAdgrad_chi21213= dAdgrad_chi(8,13);
        double dAdgrad_chi21212= dAdgrad_chi(8,14);
        double dAdgrad_chi21232= dAdgrad_chi(8,15);
        double dAdgrad_chi21231= dAdgrad_chi(8,16);
        double dAdgrad_chi21221= dAdgrad_chi(8,17);
        double dAdgrad_chi21311= dAdgrad_chi(8,18);
        double dAdgrad_chi21322= dAdgrad_chi(8,19);
        double dAdgrad_chi21333= dAdgrad_chi(8,20);
        double dAdgrad_chi21323= dAdgrad_chi(8,21);
        double dAdgrad_chi21313= dAdgrad_chi(8,22);
        double dAdgrad_chi21312= dAdgrad_chi(8,23);
        double dAdgrad_chi21332= dAdgrad_chi(8,24);
        double dAdgrad_chi21331= dAdgrad_chi(8,25);
        double dAdgrad_chi21321= dAdgrad_chi(8,26);

        //Extracting F
        double F11= F(0,0);
        double F12= F(0,1);
        double F13= F(0,2);
        double F21= F(1,0);
        double F22= F(1,1);
        double F23= F(1,2);
        double F31= F(2,0);
        double F32= F(2,1);
        double F33= F(2,2);

        dadgrad_chi(0,0) = F11*F11*dAdgrad_chi11111 + F11*F12*dAdgrad_chi12111 + F11*F12*dAdgrad_chi21111 + F11*F13*dAdgrad_chi13111 + F11*F13*dAdgrad_chi31111 + F12*F12*dAdgrad_chi22111 + F12*F13*dAdgrad_chi23111 + F12*F13*dAdgrad_chi32111 + F13*F13*dAdgrad_chi33111;
        dadgrad_chi(0,1) = F11*F11*dAdgrad_chi11122 + F11*F12*dAdgrad_chi12122 + F11*F12*dAdgrad_chi21122 + F11*F13*dAdgrad_chi13122 + F11*F13*dAdgrad_chi31122 + F12*F12*dAdgrad_chi22122 + F12*F13*dAdgrad_chi23122 + F12*F13*dAdgrad_chi32122 + F13*F13*dAdgrad_chi33122;
        dadgrad_chi(0,2) = F11*F11*dAdgrad_chi11133 + F11*F12*dAdgrad_chi12133 + F11*F12*dAdgrad_chi21133 + F11*F13*dAdgrad_chi13133 + F11*F13*dAdgrad_chi31133 + F12*F12*dAdgrad_chi22133 + F12*F13*dAdgrad_chi23133 + F12*F13*dAdgrad_chi32133 + F13*F13*dAdgrad_chi33133;
        dadgrad_chi(0,3) = F11*F11*dAdgrad_chi11123 + F11*F12*dAdgrad_chi12123 + F11*F12*dAdgrad_chi21123 + F11*F13*dAdgrad_chi13123 + F11*F13*dAdgrad_chi31123 + F12*F12*dAdgrad_chi22123 + F12*F13*dAdgrad_chi23123 + F12*F13*dAdgrad_chi32123 + F13*F13*dAdgrad_chi33123;
        dadgrad_chi(0,4) = F11*F11*dAdgrad_chi11113 + F11*F12*dAdgrad_chi12113 + F11*F12*dAdgrad_chi21113 + F11*F13*dAdgrad_chi13113 + F11*F13*dAdgrad_chi31113 + F12*F12*dAdgrad_chi22113 + F12*F13*dAdgrad_chi23113 + F12*F13*dAdgrad_chi32113 + F13*F13*dAdgrad_chi33113;
        dadgrad_chi(0,5) = F11*F11*dAdgrad_chi11112 + F11*F12*dAdgrad_chi12112 + F11*F12*dAdgrad_chi21112 + F11*F13*dAdgrad_chi13112 + F11*F13*dAdgrad_chi31112 + F12*F12*dAdgrad_chi22112 + F12*F13*dAdgrad_chi23112 + F12*F13*dAdgrad_chi32112 + F13*F13*dAdgrad_chi33112;
        dadgrad_chi(0,6) = F11*F11*dAdgrad_chi11132 + F11*F12*dAdgrad_chi12132 + F11*F12*dAdgrad_chi21132 + F11*F13*dAdgrad_chi13132 + F11*F13*dAdgrad_chi31132 + F12*F12*dAdgrad_chi22132 + F12*F13*dAdgrad_chi23132 + F12*F13*dAdgrad_chi32132 + F13*F13*dAdgrad_chi33132;
        dadgrad_chi(0,7) = F11*F11*dAdgrad_chi11131 + F11*F12*dAdgrad_chi12131 + F11*F12*dAdgrad_chi21131 + F11*F13*dAdgrad_chi13131 + F11*F13*dAdgrad_chi31131 + F12*F12*dAdgrad_chi22131 + F12*F13*dAdgrad_chi23131 + F12*F13*dAdgrad_chi32131 + F13*F13*dAdgrad_chi33131;
        dadgrad_chi(0,8) = F11*F11*dAdgrad_chi11121 + F11*F12*dAdgrad_chi12121 + F11*F12*dAdgrad_chi21121 + F11*F13*dAdgrad_chi13121 + F11*F13*dAdgrad_chi31121 + F12*F12*dAdgrad_chi22121 + F12*F13*dAdgrad_chi23121 + F12*F13*dAdgrad_chi32121 + F13*F13*dAdgrad_chi33121;
        dadgrad_chi(0,9) = F11*F11*dAdgrad_chi11211 + F11*F12*dAdgrad_chi12211 + F11*F12*dAdgrad_chi21211 + F11*F13*dAdgrad_chi13211 + F11*F13*dAdgrad_chi31211 + F12*F12*dAdgrad_chi22211 + F12*F13*dAdgrad_chi23211 + F12*F13*dAdgrad_chi32211 + F13*F13*dAdgrad_chi33211;
        dadgrad_chi(0,10) = F11*F11*dAdgrad_chi11222 + F11*F12*dAdgrad_chi12222 + F11*F12*dAdgrad_chi21222 + F11*F13*dAdgrad_chi13222 + F11*F13*dAdgrad_chi31222 + F12*F12*dAdgrad_chi22222 + F12*F13*dAdgrad_chi23222 + F12*F13*dAdgrad_chi32222 + F13*F13*dAdgrad_chi33222;
        dadgrad_chi(0,11) = F11*F11*dAdgrad_chi11233 + F11*F12*dAdgrad_chi12233 + F11*F12*dAdgrad_chi21233 + F11*F13*dAdgrad_chi13233 + F11*F13*dAdgrad_chi31233 + F12*F12*dAdgrad_chi22233 + F12*F13*dAdgrad_chi23233 + F12*F13*dAdgrad_chi32233 + F13*F13*dAdgrad_chi33233;
        dadgrad_chi(0,12) = F11*F11*dAdgrad_chi11223 + F11*F12*dAdgrad_chi12223 + F11*F12*dAdgrad_chi21223 + F11*F13*dAdgrad_chi13223 + F11*F13*dAdgrad_chi31223 + F12*F12*dAdgrad_chi22223 + F12*F13*dAdgrad_chi23223 + F12*F13*dAdgrad_chi32223 + F13*F13*dAdgrad_chi33223;
        dadgrad_chi(0,13) = F11*F11*dAdgrad_chi11213 + F11*F12*dAdgrad_chi12213 + F11*F12*dAdgrad_chi21213 + F11*F13*dAdgrad_chi13213 + F11*F13*dAdgrad_chi31213 + F12*F12*dAdgrad_chi22213 + F12*F13*dAdgrad_chi23213 + F12*F13*dAdgrad_chi32213 + F13*F13*dAdgrad_chi33213;
        dadgrad_chi(0,14) = F11*F11*dAdgrad_chi11212 + F11*F12*dAdgrad_chi12212 + F11*F12*dAdgrad_chi21212 + F11*F13*dAdgrad_chi13212 + F11*F13*dAdgrad_chi31212 + F12*F12*dAdgrad_chi22212 + F12*F13*dAdgrad_chi23212 + F12*F13*dAdgrad_chi32212 + F13*F13*dAdgrad_chi33212;
        dadgrad_chi(0,15) = F11*F11*dAdgrad_chi11232 + F11*F12*dAdgrad_chi12232 + F11*F12*dAdgrad_chi21232 + F11*F13*dAdgrad_chi13232 + F11*F13*dAdgrad_chi31232 + F12*F12*dAdgrad_chi22232 + F12*F13*dAdgrad_chi23232 + F12*F13*dAdgrad_chi32232 + F13*F13*dAdgrad_chi33232;
        dadgrad_chi(0,16) = F11*F11*dAdgrad_chi11231 + F11*F12*dAdgrad_chi12231 + F11*F12*dAdgrad_chi21231 + F11*F13*dAdgrad_chi13231 + F11*F13*dAdgrad_chi31231 + F12*F12*dAdgrad_chi22231 + F12*F13*dAdgrad_chi23231 + F12*F13*dAdgrad_chi32231 + F13*F13*dAdgrad_chi33231;
        dadgrad_chi(0,17) = F11*F11*dAdgrad_chi11221 + F11*F12*dAdgrad_chi12221 + F11*F12*dAdgrad_chi21221 + F11*F13*dAdgrad_chi13221 + F11*F13*dAdgrad_chi31221 + F12*F12*dAdgrad_chi22221 + F12*F13*dAdgrad_chi23221 + F12*F13*dAdgrad_chi32221 + F13*F13*dAdgrad_chi33221;
        dadgrad_chi(0,18) = F11*F11*dAdgrad_chi11311 + F11*F12*dAdgrad_chi12311 + F11*F12*dAdgrad_chi21311 + F11*F13*dAdgrad_chi13311 + F11*F13*dAdgrad_chi31311 + F12*F12*dAdgrad_chi22311 + F12*F13*dAdgrad_chi23311 + F12*F13*dAdgrad_chi32311 + F13*F13*dAdgrad_chi33311;
        dadgrad_chi(0,19) = F11*F11*dAdgrad_chi11322 + F11*F12*dAdgrad_chi12322 + F11*F12*dAdgrad_chi21322 + F11*F13*dAdgrad_chi13322 + F11*F13*dAdgrad_chi31322 + F12*F12*dAdgrad_chi22322 + F12*F13*dAdgrad_chi23322 + F12*F13*dAdgrad_chi32322 + F13*F13*dAdgrad_chi33322;
        dadgrad_chi(0,20) = F11*F11*dAdgrad_chi11333 + F11*F12*dAdgrad_chi12333 + F11*F12*dAdgrad_chi21333 + F11*F13*dAdgrad_chi13333 + F11*F13*dAdgrad_chi31333 + F12*F12*dAdgrad_chi22333 + F12*F13*dAdgrad_chi23333 + F12*F13*dAdgrad_chi32333 + F13*F13*dAdgrad_chi33333;
        dadgrad_chi(0,21) = F11*F11*dAdgrad_chi11323 + F11*F12*dAdgrad_chi12323 + F11*F12*dAdgrad_chi21323 + F11*F13*dAdgrad_chi13323 + F11*F13*dAdgrad_chi31323 + F12*F12*dAdgrad_chi22323 + F12*F13*dAdgrad_chi23323 + F12*F13*dAdgrad_chi32323 + F13*F13*dAdgrad_chi33323;
        dadgrad_chi(0,22) = F11*F11*dAdgrad_chi11313 + F11*F12*dAdgrad_chi12313 + F11*F12*dAdgrad_chi21313 + F11*F13*dAdgrad_chi13313 + F11*F13*dAdgrad_chi31313 + F12*F12*dAdgrad_chi22313 + F12*F13*dAdgrad_chi23313 + F12*F13*dAdgrad_chi32313 + F13*F13*dAdgrad_chi33313;
        dadgrad_chi(0,23) = F11*F11*dAdgrad_chi11312 + F11*F12*dAdgrad_chi12312 + F11*F12*dAdgrad_chi21312 + F11*F13*dAdgrad_chi13312 + F11*F13*dAdgrad_chi31312 + F12*F12*dAdgrad_chi22312 + F12*F13*dAdgrad_chi23312 + F12*F13*dAdgrad_chi32312 + F13*F13*dAdgrad_chi33312;
        dadgrad_chi(0,24) = F11*F11*dAdgrad_chi11332 + F11*F12*dAdgrad_chi12332 + F11*F12*dAdgrad_chi21332 + F11*F13*dAdgrad_chi13332 + F11*F13*dAdgrad_chi31332 + F12*F12*dAdgrad_chi22332 + F12*F13*dAdgrad_chi23332 + F12*F13*dAdgrad_chi32332 + F13*F13*dAdgrad_chi33332;
        dadgrad_chi(0,25) = F11*F11*dAdgrad_chi11331 + F11*F12*dAdgrad_chi12331 + F11*F12*dAdgrad_chi21331 + F11*F13*dAdgrad_chi13331 + F11*F13*dAdgrad_chi31331 + F12*F12*dAdgrad_chi22331 + F12*F13*dAdgrad_chi23331 + F12*F13*dAdgrad_chi32331 + F13*F13*dAdgrad_chi33331;
        dadgrad_chi(0,26) = F11*F11*dAdgrad_chi11321 + F11*F12*dAdgrad_chi12321 + F11*F12*dAdgrad_chi21321 + F11*F13*dAdgrad_chi13321 + F11*F13*dAdgrad_chi31321 + F12*F12*dAdgrad_chi22321 + F12*F13*dAdgrad_chi23321 + F12*F13*dAdgrad_chi32321 + F13*F13*dAdgrad_chi33321;
        dadgrad_chi(1,0) = F21*F21*dAdgrad_chi11111 + F21*F22*dAdgrad_chi12111 + F21*F22*dAdgrad_chi21111 + F21*F23*dAdgrad_chi13111 + F21*F23*dAdgrad_chi31111 + F22*F22*dAdgrad_chi22111 + F22*F23*dAdgrad_chi23111 + F22*F23*dAdgrad_chi32111 + F23*F23*dAdgrad_chi33111;
        dadgrad_chi(1,1) = F21*F21*dAdgrad_chi11122 + F21*F22*dAdgrad_chi12122 + F21*F22*dAdgrad_chi21122 + F21*F23*dAdgrad_chi13122 + F21*F23*dAdgrad_chi31122 + F22*F22*dAdgrad_chi22122 + F22*F23*dAdgrad_chi23122 + F22*F23*dAdgrad_chi32122 + F23*F23*dAdgrad_chi33122;
        dadgrad_chi(1,2) = F21*F21*dAdgrad_chi11133 + F21*F22*dAdgrad_chi12133 + F21*F22*dAdgrad_chi21133 + F21*F23*dAdgrad_chi13133 + F21*F23*dAdgrad_chi31133 + F22*F22*dAdgrad_chi22133 + F22*F23*dAdgrad_chi23133 + F22*F23*dAdgrad_chi32133 + F23*F23*dAdgrad_chi33133;
        dadgrad_chi(1,3) = F21*F21*dAdgrad_chi11123 + F21*F22*dAdgrad_chi12123 + F21*F22*dAdgrad_chi21123 + F21*F23*dAdgrad_chi13123 + F21*F23*dAdgrad_chi31123 + F22*F22*dAdgrad_chi22123 + F22*F23*dAdgrad_chi23123 + F22*F23*dAdgrad_chi32123 + F23*F23*dAdgrad_chi33123;
        dadgrad_chi(1,4) = F21*F21*dAdgrad_chi11113 + F21*F22*dAdgrad_chi12113 + F21*F22*dAdgrad_chi21113 + F21*F23*dAdgrad_chi13113 + F21*F23*dAdgrad_chi31113 + F22*F22*dAdgrad_chi22113 + F22*F23*dAdgrad_chi23113 + F22*F23*dAdgrad_chi32113 + F23*F23*dAdgrad_chi33113;
        dadgrad_chi(1,5) = F21*F21*dAdgrad_chi11112 + F21*F22*dAdgrad_chi12112 + F21*F22*dAdgrad_chi21112 + F21*F23*dAdgrad_chi13112 + F21*F23*dAdgrad_chi31112 + F22*F22*dAdgrad_chi22112 + F22*F23*dAdgrad_chi23112 + F22*F23*dAdgrad_chi32112 + F23*F23*dAdgrad_chi33112;
        dadgrad_chi(1,6) = F21*F21*dAdgrad_chi11132 + F21*F22*dAdgrad_chi12132 + F21*F22*dAdgrad_chi21132 + F21*F23*dAdgrad_chi13132 + F21*F23*dAdgrad_chi31132 + F22*F22*dAdgrad_chi22132 + F22*F23*dAdgrad_chi23132 + F22*F23*dAdgrad_chi32132 + F23*F23*dAdgrad_chi33132;
        dadgrad_chi(1,7) = F21*F21*dAdgrad_chi11131 + F21*F22*dAdgrad_chi12131 + F21*F22*dAdgrad_chi21131 + F21*F23*dAdgrad_chi13131 + F21*F23*dAdgrad_chi31131 + F22*F22*dAdgrad_chi22131 + F22*F23*dAdgrad_chi23131 + F22*F23*dAdgrad_chi32131 + F23*F23*dAdgrad_chi33131;
        dadgrad_chi(1,8) = F21*F21*dAdgrad_chi11121 + F21*F22*dAdgrad_chi12121 + F21*F22*dAdgrad_chi21121 + F21*F23*dAdgrad_chi13121 + F21*F23*dAdgrad_chi31121 + F22*F22*dAdgrad_chi22121 + F22*F23*dAdgrad_chi23121 + F22*F23*dAdgrad_chi32121 + F23*F23*dAdgrad_chi33121;
        dadgrad_chi(1,9) = F21*F21*dAdgrad_chi11211 + F21*F22*dAdgrad_chi12211 + F21*F22*dAdgrad_chi21211 + F21*F23*dAdgrad_chi13211 + F21*F23*dAdgrad_chi31211 + F22*F22*dAdgrad_chi22211 + F22*F23*dAdgrad_chi23211 + F22*F23*dAdgrad_chi32211 + F23*F23*dAdgrad_chi33211;
        dadgrad_chi(1,10) = F21*F21*dAdgrad_chi11222 + F21*F22*dAdgrad_chi12222 + F21*F22*dAdgrad_chi21222 + F21*F23*dAdgrad_chi13222 + F21*F23*dAdgrad_chi31222 + F22*F22*dAdgrad_chi22222 + F22*F23*dAdgrad_chi23222 + F22*F23*dAdgrad_chi32222 + F23*F23*dAdgrad_chi33222;
        dadgrad_chi(1,11) = F21*F21*dAdgrad_chi11233 + F21*F22*dAdgrad_chi12233 + F21*F22*dAdgrad_chi21233 + F21*F23*dAdgrad_chi13233 + F21*F23*dAdgrad_chi31233 + F22*F22*dAdgrad_chi22233 + F22*F23*dAdgrad_chi23233 + F22*F23*dAdgrad_chi32233 + F23*F23*dAdgrad_chi33233;
        dadgrad_chi(1,12) = F21*F21*dAdgrad_chi11223 + F21*F22*dAdgrad_chi12223 + F21*F22*dAdgrad_chi21223 + F21*F23*dAdgrad_chi13223 + F21*F23*dAdgrad_chi31223 + F22*F22*dAdgrad_chi22223 + F22*F23*dAdgrad_chi23223 + F22*F23*dAdgrad_chi32223 + F23*F23*dAdgrad_chi33223;
        dadgrad_chi(1,13) = F21*F21*dAdgrad_chi11213 + F21*F22*dAdgrad_chi12213 + F21*F22*dAdgrad_chi21213 + F21*F23*dAdgrad_chi13213 + F21*F23*dAdgrad_chi31213 + F22*F22*dAdgrad_chi22213 + F22*F23*dAdgrad_chi23213 + F22*F23*dAdgrad_chi32213 + F23*F23*dAdgrad_chi33213;
        dadgrad_chi(1,14) = F21*F21*dAdgrad_chi11212 + F21*F22*dAdgrad_chi12212 + F21*F22*dAdgrad_chi21212 + F21*F23*dAdgrad_chi13212 + F21*F23*dAdgrad_chi31212 + F22*F22*dAdgrad_chi22212 + F22*F23*dAdgrad_chi23212 + F22*F23*dAdgrad_chi32212 + F23*F23*dAdgrad_chi33212;
        dadgrad_chi(1,15) = F21*F21*dAdgrad_chi11232 + F21*F22*dAdgrad_chi12232 + F21*F22*dAdgrad_chi21232 + F21*F23*dAdgrad_chi13232 + F21*F23*dAdgrad_chi31232 + F22*F22*dAdgrad_chi22232 + F22*F23*dAdgrad_chi23232 + F22*F23*dAdgrad_chi32232 + F23*F23*dAdgrad_chi33232;
        dadgrad_chi(1,16) = F21*F21*dAdgrad_chi11231 + F21*F22*dAdgrad_chi12231 + F21*F22*dAdgrad_chi21231 + F21*F23*dAdgrad_chi13231 + F21*F23*dAdgrad_chi31231 + F22*F22*dAdgrad_chi22231 + F22*F23*dAdgrad_chi23231 + F22*F23*dAdgrad_chi32231 + F23*F23*dAdgrad_chi33231;
        dadgrad_chi(1,17) = F21*F21*dAdgrad_chi11221 + F21*F22*dAdgrad_chi12221 + F21*F22*dAdgrad_chi21221 + F21*F23*dAdgrad_chi13221 + F21*F23*dAdgrad_chi31221 + F22*F22*dAdgrad_chi22221 + F22*F23*dAdgrad_chi23221 + F22*F23*dAdgrad_chi32221 + F23*F23*dAdgrad_chi33221;
        dadgrad_chi(1,18) = F21*F21*dAdgrad_chi11311 + F21*F22*dAdgrad_chi12311 + F21*F22*dAdgrad_chi21311 + F21*F23*dAdgrad_chi13311 + F21*F23*dAdgrad_chi31311 + F22*F22*dAdgrad_chi22311 + F22*F23*dAdgrad_chi23311 + F22*F23*dAdgrad_chi32311 + F23*F23*dAdgrad_chi33311;
        dadgrad_chi(1,19) = F21*F21*dAdgrad_chi11322 + F21*F22*dAdgrad_chi12322 + F21*F22*dAdgrad_chi21322 + F21*F23*dAdgrad_chi13322 + F21*F23*dAdgrad_chi31322 + F22*F22*dAdgrad_chi22322 + F22*F23*dAdgrad_chi23322 + F22*F23*dAdgrad_chi32322 + F23*F23*dAdgrad_chi33322;
        dadgrad_chi(1,20) = F21*F21*dAdgrad_chi11333 + F21*F22*dAdgrad_chi12333 + F21*F22*dAdgrad_chi21333 + F21*F23*dAdgrad_chi13333 + F21*F23*dAdgrad_chi31333 + F22*F22*dAdgrad_chi22333 + F22*F23*dAdgrad_chi23333 + F22*F23*dAdgrad_chi32333 + F23*F23*dAdgrad_chi33333;
        dadgrad_chi(1,21) = F21*F21*dAdgrad_chi11323 + F21*F22*dAdgrad_chi12323 + F21*F22*dAdgrad_chi21323 + F21*F23*dAdgrad_chi13323 + F21*F23*dAdgrad_chi31323 + F22*F22*dAdgrad_chi22323 + F22*F23*dAdgrad_chi23323 + F22*F23*dAdgrad_chi32323 + F23*F23*dAdgrad_chi33323;
        dadgrad_chi(1,22) = F21*F21*dAdgrad_chi11313 + F21*F22*dAdgrad_chi12313 + F21*F22*dAdgrad_chi21313 + F21*F23*dAdgrad_chi13313 + F21*F23*dAdgrad_chi31313 + F22*F22*dAdgrad_chi22313 + F22*F23*dAdgrad_chi23313 + F22*F23*dAdgrad_chi32313 + F23*F23*dAdgrad_chi33313;
        dadgrad_chi(1,23) = F21*F21*dAdgrad_chi11312 + F21*F22*dAdgrad_chi12312 + F21*F22*dAdgrad_chi21312 + F21*F23*dAdgrad_chi13312 + F21*F23*dAdgrad_chi31312 + F22*F22*dAdgrad_chi22312 + F22*F23*dAdgrad_chi23312 + F22*F23*dAdgrad_chi32312 + F23*F23*dAdgrad_chi33312;
        dadgrad_chi(1,24) = F21*F21*dAdgrad_chi11332 + F21*F22*dAdgrad_chi12332 + F21*F22*dAdgrad_chi21332 + F21*F23*dAdgrad_chi13332 + F21*F23*dAdgrad_chi31332 + F22*F22*dAdgrad_chi22332 + F22*F23*dAdgrad_chi23332 + F22*F23*dAdgrad_chi32332 + F23*F23*dAdgrad_chi33332;
        dadgrad_chi(1,25) = F21*F21*dAdgrad_chi11331 + F21*F22*dAdgrad_chi12331 + F21*F22*dAdgrad_chi21331 + F21*F23*dAdgrad_chi13331 + F21*F23*dAdgrad_chi31331 + F22*F22*dAdgrad_chi22331 + F22*F23*dAdgrad_chi23331 + F22*F23*dAdgrad_chi32331 + F23*F23*dAdgrad_chi33331;
        dadgrad_chi(1,26) = F21*F21*dAdgrad_chi11321 + F21*F22*dAdgrad_chi12321 + F21*F22*dAdgrad_chi21321 + F21*F23*dAdgrad_chi13321 + F21*F23*dAdgrad_chi31321 + F22*F22*dAdgrad_chi22321 + F22*F23*dAdgrad_chi23321 + F22*F23*dAdgrad_chi32321 + F23*F23*dAdgrad_chi33321;
        dadgrad_chi(2,0) = F31*F31*dAdgrad_chi11111 + F31*F32*dAdgrad_chi12111 + F31*F32*dAdgrad_chi21111 + F31*F33*dAdgrad_chi13111 + F31*F33*dAdgrad_chi31111 + F32*F32*dAdgrad_chi22111 + F32*F33*dAdgrad_chi23111 + F32*F33*dAdgrad_chi32111 + F33*F33*dAdgrad_chi33111;
        dadgrad_chi(2,1) = F31*F31*dAdgrad_chi11122 + F31*F32*dAdgrad_chi12122 + F31*F32*dAdgrad_chi21122 + F31*F33*dAdgrad_chi13122 + F31*F33*dAdgrad_chi31122 + F32*F32*dAdgrad_chi22122 + F32*F33*dAdgrad_chi23122 + F32*F33*dAdgrad_chi32122 + F33*F33*dAdgrad_chi33122;
        dadgrad_chi(2,2) = F31*F31*dAdgrad_chi11133 + F31*F32*dAdgrad_chi12133 + F31*F32*dAdgrad_chi21133 + F31*F33*dAdgrad_chi13133 + F31*F33*dAdgrad_chi31133 + F32*F32*dAdgrad_chi22133 + F32*F33*dAdgrad_chi23133 + F32*F33*dAdgrad_chi32133 + F33*F33*dAdgrad_chi33133;
        dadgrad_chi(2,3) = F31*F31*dAdgrad_chi11123 + F31*F32*dAdgrad_chi12123 + F31*F32*dAdgrad_chi21123 + F31*F33*dAdgrad_chi13123 + F31*F33*dAdgrad_chi31123 + F32*F32*dAdgrad_chi22123 + F32*F33*dAdgrad_chi23123 + F32*F33*dAdgrad_chi32123 + F33*F33*dAdgrad_chi33123;
        dadgrad_chi(2,4) = F31*F31*dAdgrad_chi11113 + F31*F32*dAdgrad_chi12113 + F31*F32*dAdgrad_chi21113 + F31*F33*dAdgrad_chi13113 + F31*F33*dAdgrad_chi31113 + F32*F32*dAdgrad_chi22113 + F32*F33*dAdgrad_chi23113 + F32*F33*dAdgrad_chi32113 + F33*F33*dAdgrad_chi33113;
        dadgrad_chi(2,5) = F31*F31*dAdgrad_chi11112 + F31*F32*dAdgrad_chi12112 + F31*F32*dAdgrad_chi21112 + F31*F33*dAdgrad_chi13112 + F31*F33*dAdgrad_chi31112 + F32*F32*dAdgrad_chi22112 + F32*F33*dAdgrad_chi23112 + F32*F33*dAdgrad_chi32112 + F33*F33*dAdgrad_chi33112;
        dadgrad_chi(2,6) = F31*F31*dAdgrad_chi11132 + F31*F32*dAdgrad_chi12132 + F31*F32*dAdgrad_chi21132 + F31*F33*dAdgrad_chi13132 + F31*F33*dAdgrad_chi31132 + F32*F32*dAdgrad_chi22132 + F32*F33*dAdgrad_chi23132 + F32*F33*dAdgrad_chi32132 + F33*F33*dAdgrad_chi33132;
        dadgrad_chi(2,7) = F31*F31*dAdgrad_chi11131 + F31*F32*dAdgrad_chi12131 + F31*F32*dAdgrad_chi21131 + F31*F33*dAdgrad_chi13131 + F31*F33*dAdgrad_chi31131 + F32*F32*dAdgrad_chi22131 + F32*F33*dAdgrad_chi23131 + F32*F33*dAdgrad_chi32131 + F33*F33*dAdgrad_chi33131;
        dadgrad_chi(2,8) = F31*F31*dAdgrad_chi11121 + F31*F32*dAdgrad_chi12121 + F31*F32*dAdgrad_chi21121 + F31*F33*dAdgrad_chi13121 + F31*F33*dAdgrad_chi31121 + F32*F32*dAdgrad_chi22121 + F32*F33*dAdgrad_chi23121 + F32*F33*dAdgrad_chi32121 + F33*F33*dAdgrad_chi33121;
        dadgrad_chi(2,9) = F31*F31*dAdgrad_chi11211 + F31*F32*dAdgrad_chi12211 + F31*F32*dAdgrad_chi21211 + F31*F33*dAdgrad_chi13211 + F31*F33*dAdgrad_chi31211 + F32*F32*dAdgrad_chi22211 + F32*F33*dAdgrad_chi23211 + F32*F33*dAdgrad_chi32211 + F33*F33*dAdgrad_chi33211;
        dadgrad_chi(2,10) = F31*F31*dAdgrad_chi11222 + F31*F32*dAdgrad_chi12222 + F31*F32*dAdgrad_chi21222 + F31*F33*dAdgrad_chi13222 + F31*F33*dAdgrad_chi31222 + F32*F32*dAdgrad_chi22222 + F32*F33*dAdgrad_chi23222 + F32*F33*dAdgrad_chi32222 + F33*F33*dAdgrad_chi33222;
        dadgrad_chi(2,11) = F31*F31*dAdgrad_chi11233 + F31*F32*dAdgrad_chi12233 + F31*F32*dAdgrad_chi21233 + F31*F33*dAdgrad_chi13233 + F31*F33*dAdgrad_chi31233 + F32*F32*dAdgrad_chi22233 + F32*F33*dAdgrad_chi23233 + F32*F33*dAdgrad_chi32233 + F33*F33*dAdgrad_chi33233;
        dadgrad_chi(2,12) = F31*F31*dAdgrad_chi11223 + F31*F32*dAdgrad_chi12223 + F31*F32*dAdgrad_chi21223 + F31*F33*dAdgrad_chi13223 + F31*F33*dAdgrad_chi31223 + F32*F32*dAdgrad_chi22223 + F32*F33*dAdgrad_chi23223 + F32*F33*dAdgrad_chi32223 + F33*F33*dAdgrad_chi33223;
        dadgrad_chi(2,13) = F31*F31*dAdgrad_chi11213 + F31*F32*dAdgrad_chi12213 + F31*F32*dAdgrad_chi21213 + F31*F33*dAdgrad_chi13213 + F31*F33*dAdgrad_chi31213 + F32*F32*dAdgrad_chi22213 + F32*F33*dAdgrad_chi23213 + F32*F33*dAdgrad_chi32213 + F33*F33*dAdgrad_chi33213;
        dadgrad_chi(2,14) = F31*F31*dAdgrad_chi11212 + F31*F32*dAdgrad_chi12212 + F31*F32*dAdgrad_chi21212 + F31*F33*dAdgrad_chi13212 + F31*F33*dAdgrad_chi31212 + F32*F32*dAdgrad_chi22212 + F32*F33*dAdgrad_chi23212 + F32*F33*dAdgrad_chi32212 + F33*F33*dAdgrad_chi33212;
        dadgrad_chi(2,15) = F31*F31*dAdgrad_chi11232 + F31*F32*dAdgrad_chi12232 + F31*F32*dAdgrad_chi21232 + F31*F33*dAdgrad_chi13232 + F31*F33*dAdgrad_chi31232 + F32*F32*dAdgrad_chi22232 + F32*F33*dAdgrad_chi23232 + F32*F33*dAdgrad_chi32232 + F33*F33*dAdgrad_chi33232;
        dadgrad_chi(2,16) = F31*F31*dAdgrad_chi11231 + F31*F32*dAdgrad_chi12231 + F31*F32*dAdgrad_chi21231 + F31*F33*dAdgrad_chi13231 + F31*F33*dAdgrad_chi31231 + F32*F32*dAdgrad_chi22231 + F32*F33*dAdgrad_chi23231 + F32*F33*dAdgrad_chi32231 + F33*F33*dAdgrad_chi33231;
        dadgrad_chi(2,17) = F31*F31*dAdgrad_chi11221 + F31*F32*dAdgrad_chi12221 + F31*F32*dAdgrad_chi21221 + F31*F33*dAdgrad_chi13221 + F31*F33*dAdgrad_chi31221 + F32*F32*dAdgrad_chi22221 + F32*F33*dAdgrad_chi23221 + F32*F33*dAdgrad_chi32221 + F33*F33*dAdgrad_chi33221;
        dadgrad_chi(2,18) = F31*F31*dAdgrad_chi11311 + F31*F32*dAdgrad_chi12311 + F31*F32*dAdgrad_chi21311 + F31*F33*dAdgrad_chi13311 + F31*F33*dAdgrad_chi31311 + F32*F32*dAdgrad_chi22311 + F32*F33*dAdgrad_chi23311 + F32*F33*dAdgrad_chi32311 + F33*F33*dAdgrad_chi33311;
        dadgrad_chi(2,19) = F31*F31*dAdgrad_chi11322 + F31*F32*dAdgrad_chi12322 + F31*F32*dAdgrad_chi21322 + F31*F33*dAdgrad_chi13322 + F31*F33*dAdgrad_chi31322 + F32*F32*dAdgrad_chi22322 + F32*F33*dAdgrad_chi23322 + F32*F33*dAdgrad_chi32322 + F33*F33*dAdgrad_chi33322;
        dadgrad_chi(2,20) = F31*F31*dAdgrad_chi11333 + F31*F32*dAdgrad_chi12333 + F31*F32*dAdgrad_chi21333 + F31*F33*dAdgrad_chi13333 + F31*F33*dAdgrad_chi31333 + F32*F32*dAdgrad_chi22333 + F32*F33*dAdgrad_chi23333 + F32*F33*dAdgrad_chi32333 + F33*F33*dAdgrad_chi33333;
        dadgrad_chi(2,21) = F31*F31*dAdgrad_chi11323 + F31*F32*dAdgrad_chi12323 + F31*F32*dAdgrad_chi21323 + F31*F33*dAdgrad_chi13323 + F31*F33*dAdgrad_chi31323 + F32*F32*dAdgrad_chi22323 + F32*F33*dAdgrad_chi23323 + F32*F33*dAdgrad_chi32323 + F33*F33*dAdgrad_chi33323;
        dadgrad_chi(2,22) = F31*F31*dAdgrad_chi11313 + F31*F32*dAdgrad_chi12313 + F31*F32*dAdgrad_chi21313 + F31*F33*dAdgrad_chi13313 + F31*F33*dAdgrad_chi31313 + F32*F32*dAdgrad_chi22313 + F32*F33*dAdgrad_chi23313 + F32*F33*dAdgrad_chi32313 + F33*F33*dAdgrad_chi33313;
        dadgrad_chi(2,23) = F31*F31*dAdgrad_chi11312 + F31*F32*dAdgrad_chi12312 + F31*F32*dAdgrad_chi21312 + F31*F33*dAdgrad_chi13312 + F31*F33*dAdgrad_chi31312 + F32*F32*dAdgrad_chi22312 + F32*F33*dAdgrad_chi23312 + F32*F33*dAdgrad_chi32312 + F33*F33*dAdgrad_chi33312;
        dadgrad_chi(2,24) = F31*F31*dAdgrad_chi11332 + F31*F32*dAdgrad_chi12332 + F31*F32*dAdgrad_chi21332 + F31*F33*dAdgrad_chi13332 + F31*F33*dAdgrad_chi31332 + F32*F32*dAdgrad_chi22332 + F32*F33*dAdgrad_chi23332 + F32*F33*dAdgrad_chi32332 + F33*F33*dAdgrad_chi33332;
        dadgrad_chi(2,25) = F31*F31*dAdgrad_chi11331 + F31*F32*dAdgrad_chi12331 + F31*F32*dAdgrad_chi21331 + F31*F33*dAdgrad_chi13331 + F31*F33*dAdgrad_chi31331 + F32*F32*dAdgrad_chi22331 + F32*F33*dAdgrad_chi23331 + F32*F33*dAdgrad_chi32331 + F33*F33*dAdgrad_chi33331;
        dadgrad_chi(2,26) = F31*F31*dAdgrad_chi11321 + F31*F32*dAdgrad_chi12321 + F31*F32*dAdgrad_chi21321 + F31*F33*dAdgrad_chi13321 + F31*F33*dAdgrad_chi31321 + F32*F32*dAdgrad_chi22321 + F32*F33*dAdgrad_chi23321 + F32*F33*dAdgrad_chi32321 + F33*F33*dAdgrad_chi33321;
        dadgrad_chi(3,0) = F21*F31*dAdgrad_chi11111 + F21*F32*dAdgrad_chi12111 + F21*F33*dAdgrad_chi13111 + F22*F31*dAdgrad_chi21111 + F22*F32*dAdgrad_chi22111 + F22*F33*dAdgrad_chi23111 + F23*F31*dAdgrad_chi31111 + F23*F32*dAdgrad_chi32111 + F23*F33*dAdgrad_chi33111;
        dadgrad_chi(3,1) = F21*F31*dAdgrad_chi11122 + F21*F32*dAdgrad_chi12122 + F21*F33*dAdgrad_chi13122 + F22*F31*dAdgrad_chi21122 + F22*F32*dAdgrad_chi22122 + F22*F33*dAdgrad_chi23122 + F23*F31*dAdgrad_chi31122 + F23*F32*dAdgrad_chi32122 + F23*F33*dAdgrad_chi33122;
        dadgrad_chi(3,2) = F21*F31*dAdgrad_chi11133 + F21*F32*dAdgrad_chi12133 + F21*F33*dAdgrad_chi13133 + F22*F31*dAdgrad_chi21133 + F22*F32*dAdgrad_chi22133 + F22*F33*dAdgrad_chi23133 + F23*F31*dAdgrad_chi31133 + F23*F32*dAdgrad_chi32133 + F23*F33*dAdgrad_chi33133;
        dadgrad_chi(3,3) = F21*F31*dAdgrad_chi11123 + F21*F32*dAdgrad_chi12123 + F21*F33*dAdgrad_chi13123 + F22*F31*dAdgrad_chi21123 + F22*F32*dAdgrad_chi22123 + F22*F33*dAdgrad_chi23123 + F23*F31*dAdgrad_chi31123 + F23*F32*dAdgrad_chi32123 + F23*F33*dAdgrad_chi33123;
        dadgrad_chi(3,4) = F21*F31*dAdgrad_chi11113 + F21*F32*dAdgrad_chi12113 + F21*F33*dAdgrad_chi13113 + F22*F31*dAdgrad_chi21113 + F22*F32*dAdgrad_chi22113 + F22*F33*dAdgrad_chi23113 + F23*F31*dAdgrad_chi31113 + F23*F32*dAdgrad_chi32113 + F23*F33*dAdgrad_chi33113;
        dadgrad_chi(3,5) = F21*F31*dAdgrad_chi11112 + F21*F32*dAdgrad_chi12112 + F21*F33*dAdgrad_chi13112 + F22*F31*dAdgrad_chi21112 + F22*F32*dAdgrad_chi22112 + F22*F33*dAdgrad_chi23112 + F23*F31*dAdgrad_chi31112 + F23*F32*dAdgrad_chi32112 + F23*F33*dAdgrad_chi33112;
        dadgrad_chi(3,6) = F21*F31*dAdgrad_chi11132 + F21*F32*dAdgrad_chi12132 + F21*F33*dAdgrad_chi13132 + F22*F31*dAdgrad_chi21132 + F22*F32*dAdgrad_chi22132 + F22*F33*dAdgrad_chi23132 + F23*F31*dAdgrad_chi31132 + F23*F32*dAdgrad_chi32132 + F23*F33*dAdgrad_chi33132;
        dadgrad_chi(3,7) = F21*F31*dAdgrad_chi11131 + F21*F32*dAdgrad_chi12131 + F21*F33*dAdgrad_chi13131 + F22*F31*dAdgrad_chi21131 + F22*F32*dAdgrad_chi22131 + F22*F33*dAdgrad_chi23131 + F23*F31*dAdgrad_chi31131 + F23*F32*dAdgrad_chi32131 + F23*F33*dAdgrad_chi33131;
        dadgrad_chi(3,8) = F21*F31*dAdgrad_chi11121 + F21*F32*dAdgrad_chi12121 + F21*F33*dAdgrad_chi13121 + F22*F31*dAdgrad_chi21121 + F22*F32*dAdgrad_chi22121 + F22*F33*dAdgrad_chi23121 + F23*F31*dAdgrad_chi31121 + F23*F32*dAdgrad_chi32121 + F23*F33*dAdgrad_chi33121;
        dadgrad_chi(3,9) = F21*F31*dAdgrad_chi11211 + F21*F32*dAdgrad_chi12211 + F21*F33*dAdgrad_chi13211 + F22*F31*dAdgrad_chi21211 + F22*F32*dAdgrad_chi22211 + F22*F33*dAdgrad_chi23211 + F23*F31*dAdgrad_chi31211 + F23*F32*dAdgrad_chi32211 + F23*F33*dAdgrad_chi33211;
        dadgrad_chi(3,10) = F21*F31*dAdgrad_chi11222 + F21*F32*dAdgrad_chi12222 + F21*F33*dAdgrad_chi13222 + F22*F31*dAdgrad_chi21222 + F22*F32*dAdgrad_chi22222 + F22*F33*dAdgrad_chi23222 + F23*F31*dAdgrad_chi31222 + F23*F32*dAdgrad_chi32222 + F23*F33*dAdgrad_chi33222;
        dadgrad_chi(3,11) = F21*F31*dAdgrad_chi11233 + F21*F32*dAdgrad_chi12233 + F21*F33*dAdgrad_chi13233 + F22*F31*dAdgrad_chi21233 + F22*F32*dAdgrad_chi22233 + F22*F33*dAdgrad_chi23233 + F23*F31*dAdgrad_chi31233 + F23*F32*dAdgrad_chi32233 + F23*F33*dAdgrad_chi33233;
        dadgrad_chi(3,12) = F21*F31*dAdgrad_chi11223 + F21*F32*dAdgrad_chi12223 + F21*F33*dAdgrad_chi13223 + F22*F31*dAdgrad_chi21223 + F22*F32*dAdgrad_chi22223 + F22*F33*dAdgrad_chi23223 + F23*F31*dAdgrad_chi31223 + F23*F32*dAdgrad_chi32223 + F23*F33*dAdgrad_chi33223;
        dadgrad_chi(3,13) = F21*F31*dAdgrad_chi11213 + F21*F32*dAdgrad_chi12213 + F21*F33*dAdgrad_chi13213 + F22*F31*dAdgrad_chi21213 + F22*F32*dAdgrad_chi22213 + F22*F33*dAdgrad_chi23213 + F23*F31*dAdgrad_chi31213 + F23*F32*dAdgrad_chi32213 + F23*F33*dAdgrad_chi33213;
        dadgrad_chi(3,14) = F21*F31*dAdgrad_chi11212 + F21*F32*dAdgrad_chi12212 + F21*F33*dAdgrad_chi13212 + F22*F31*dAdgrad_chi21212 + F22*F32*dAdgrad_chi22212 + F22*F33*dAdgrad_chi23212 + F23*F31*dAdgrad_chi31212 + F23*F32*dAdgrad_chi32212 + F23*F33*dAdgrad_chi33212;
        dadgrad_chi(3,15) = F21*F31*dAdgrad_chi11232 + F21*F32*dAdgrad_chi12232 + F21*F33*dAdgrad_chi13232 + F22*F31*dAdgrad_chi21232 + F22*F32*dAdgrad_chi22232 + F22*F33*dAdgrad_chi23232 + F23*F31*dAdgrad_chi31232 + F23*F32*dAdgrad_chi32232 + F23*F33*dAdgrad_chi33232;
        dadgrad_chi(3,16) = F21*F31*dAdgrad_chi11231 + F21*F32*dAdgrad_chi12231 + F21*F33*dAdgrad_chi13231 + F22*F31*dAdgrad_chi21231 + F22*F32*dAdgrad_chi22231 + F22*F33*dAdgrad_chi23231 + F23*F31*dAdgrad_chi31231 + F23*F32*dAdgrad_chi32231 + F23*F33*dAdgrad_chi33231;
        dadgrad_chi(3,17) = F21*F31*dAdgrad_chi11221 + F21*F32*dAdgrad_chi12221 + F21*F33*dAdgrad_chi13221 + F22*F31*dAdgrad_chi21221 + F22*F32*dAdgrad_chi22221 + F22*F33*dAdgrad_chi23221 + F23*F31*dAdgrad_chi31221 + F23*F32*dAdgrad_chi32221 + F23*F33*dAdgrad_chi33221;
        dadgrad_chi(3,18) = F21*F31*dAdgrad_chi11311 + F21*F32*dAdgrad_chi12311 + F21*F33*dAdgrad_chi13311 + F22*F31*dAdgrad_chi21311 + F22*F32*dAdgrad_chi22311 + F22*F33*dAdgrad_chi23311 + F23*F31*dAdgrad_chi31311 + F23*F32*dAdgrad_chi32311 + F23*F33*dAdgrad_chi33311;
        dadgrad_chi(3,19) = F21*F31*dAdgrad_chi11322 + F21*F32*dAdgrad_chi12322 + F21*F33*dAdgrad_chi13322 + F22*F31*dAdgrad_chi21322 + F22*F32*dAdgrad_chi22322 + F22*F33*dAdgrad_chi23322 + F23*F31*dAdgrad_chi31322 + F23*F32*dAdgrad_chi32322 + F23*F33*dAdgrad_chi33322;
        dadgrad_chi(3,20) = F21*F31*dAdgrad_chi11333 + F21*F32*dAdgrad_chi12333 + F21*F33*dAdgrad_chi13333 + F22*F31*dAdgrad_chi21333 + F22*F32*dAdgrad_chi22333 + F22*F33*dAdgrad_chi23333 + F23*F31*dAdgrad_chi31333 + F23*F32*dAdgrad_chi32333 + F23*F33*dAdgrad_chi33333;
        dadgrad_chi(3,21) = F21*F31*dAdgrad_chi11323 + F21*F32*dAdgrad_chi12323 + F21*F33*dAdgrad_chi13323 + F22*F31*dAdgrad_chi21323 + F22*F32*dAdgrad_chi22323 + F22*F33*dAdgrad_chi23323 + F23*F31*dAdgrad_chi31323 + F23*F32*dAdgrad_chi32323 + F23*F33*dAdgrad_chi33323;
        dadgrad_chi(3,22) = F21*F31*dAdgrad_chi11313 + F21*F32*dAdgrad_chi12313 + F21*F33*dAdgrad_chi13313 + F22*F31*dAdgrad_chi21313 + F22*F32*dAdgrad_chi22313 + F22*F33*dAdgrad_chi23313 + F23*F31*dAdgrad_chi31313 + F23*F32*dAdgrad_chi32313 + F23*F33*dAdgrad_chi33313;
        dadgrad_chi(3,23) = F21*F31*dAdgrad_chi11312 + F21*F32*dAdgrad_chi12312 + F21*F33*dAdgrad_chi13312 + F22*F31*dAdgrad_chi21312 + F22*F32*dAdgrad_chi22312 + F22*F33*dAdgrad_chi23312 + F23*F31*dAdgrad_chi31312 + F23*F32*dAdgrad_chi32312 + F23*F33*dAdgrad_chi33312;
        dadgrad_chi(3,24) = F21*F31*dAdgrad_chi11332 + F21*F32*dAdgrad_chi12332 + F21*F33*dAdgrad_chi13332 + F22*F31*dAdgrad_chi21332 + F22*F32*dAdgrad_chi22332 + F22*F33*dAdgrad_chi23332 + F23*F31*dAdgrad_chi31332 + F23*F32*dAdgrad_chi32332 + F23*F33*dAdgrad_chi33332;
        dadgrad_chi(3,25) = F21*F31*dAdgrad_chi11331 + F21*F32*dAdgrad_chi12331 + F21*F33*dAdgrad_chi13331 + F22*F31*dAdgrad_chi21331 + F22*F32*dAdgrad_chi22331 + F22*F33*dAdgrad_chi23331 + F23*F31*dAdgrad_chi31331 + F23*F32*dAdgrad_chi32331 + F23*F33*dAdgrad_chi33331;
        dadgrad_chi(3,26) = F21*F31*dAdgrad_chi11321 + F21*F32*dAdgrad_chi12321 + F21*F33*dAdgrad_chi13321 + F22*F31*dAdgrad_chi21321 + F22*F32*dAdgrad_chi22321 + F22*F33*dAdgrad_chi23321 + F23*F31*dAdgrad_chi31321 + F23*F32*dAdgrad_chi32321 + F23*F33*dAdgrad_chi33321;
        dadgrad_chi(4,0) = F11*F31*dAdgrad_chi11111 + F11*F32*dAdgrad_chi12111 + F11*F33*dAdgrad_chi13111 + F12*F31*dAdgrad_chi21111 + F12*F32*dAdgrad_chi22111 + F12*F33*dAdgrad_chi23111 + F13*F31*dAdgrad_chi31111 + F13*F32*dAdgrad_chi32111 + F13*F33*dAdgrad_chi33111;
        dadgrad_chi(4,1) = F11*F31*dAdgrad_chi11122 + F11*F32*dAdgrad_chi12122 + F11*F33*dAdgrad_chi13122 + F12*F31*dAdgrad_chi21122 + F12*F32*dAdgrad_chi22122 + F12*F33*dAdgrad_chi23122 + F13*F31*dAdgrad_chi31122 + F13*F32*dAdgrad_chi32122 + F13*F33*dAdgrad_chi33122;
        dadgrad_chi(4,2) = F11*F31*dAdgrad_chi11133 + F11*F32*dAdgrad_chi12133 + F11*F33*dAdgrad_chi13133 + F12*F31*dAdgrad_chi21133 + F12*F32*dAdgrad_chi22133 + F12*F33*dAdgrad_chi23133 + F13*F31*dAdgrad_chi31133 + F13*F32*dAdgrad_chi32133 + F13*F33*dAdgrad_chi33133;
        dadgrad_chi(4,3) = F11*F31*dAdgrad_chi11123 + F11*F32*dAdgrad_chi12123 + F11*F33*dAdgrad_chi13123 + F12*F31*dAdgrad_chi21123 + F12*F32*dAdgrad_chi22123 + F12*F33*dAdgrad_chi23123 + F13*F31*dAdgrad_chi31123 + F13*F32*dAdgrad_chi32123 + F13*F33*dAdgrad_chi33123;
        dadgrad_chi(4,4) = F11*F31*dAdgrad_chi11113 + F11*F32*dAdgrad_chi12113 + F11*F33*dAdgrad_chi13113 + F12*F31*dAdgrad_chi21113 + F12*F32*dAdgrad_chi22113 + F12*F33*dAdgrad_chi23113 + F13*F31*dAdgrad_chi31113 + F13*F32*dAdgrad_chi32113 + F13*F33*dAdgrad_chi33113;
        dadgrad_chi(4,5) = F11*F31*dAdgrad_chi11112 + F11*F32*dAdgrad_chi12112 + F11*F33*dAdgrad_chi13112 + F12*F31*dAdgrad_chi21112 + F12*F32*dAdgrad_chi22112 + F12*F33*dAdgrad_chi23112 + F13*F31*dAdgrad_chi31112 + F13*F32*dAdgrad_chi32112 + F13*F33*dAdgrad_chi33112;
        dadgrad_chi(4,6) = F11*F31*dAdgrad_chi11132 + F11*F32*dAdgrad_chi12132 + F11*F33*dAdgrad_chi13132 + F12*F31*dAdgrad_chi21132 + F12*F32*dAdgrad_chi22132 + F12*F33*dAdgrad_chi23132 + F13*F31*dAdgrad_chi31132 + F13*F32*dAdgrad_chi32132 + F13*F33*dAdgrad_chi33132;
        dadgrad_chi(4,7) = F11*F31*dAdgrad_chi11131 + F11*F32*dAdgrad_chi12131 + F11*F33*dAdgrad_chi13131 + F12*F31*dAdgrad_chi21131 + F12*F32*dAdgrad_chi22131 + F12*F33*dAdgrad_chi23131 + F13*F31*dAdgrad_chi31131 + F13*F32*dAdgrad_chi32131 + F13*F33*dAdgrad_chi33131;
        dadgrad_chi(4,8) = F11*F31*dAdgrad_chi11121 + F11*F32*dAdgrad_chi12121 + F11*F33*dAdgrad_chi13121 + F12*F31*dAdgrad_chi21121 + F12*F32*dAdgrad_chi22121 + F12*F33*dAdgrad_chi23121 + F13*F31*dAdgrad_chi31121 + F13*F32*dAdgrad_chi32121 + F13*F33*dAdgrad_chi33121;
        dadgrad_chi(4,9) = F11*F31*dAdgrad_chi11211 + F11*F32*dAdgrad_chi12211 + F11*F33*dAdgrad_chi13211 + F12*F31*dAdgrad_chi21211 + F12*F32*dAdgrad_chi22211 + F12*F33*dAdgrad_chi23211 + F13*F31*dAdgrad_chi31211 + F13*F32*dAdgrad_chi32211 + F13*F33*dAdgrad_chi33211;
        dadgrad_chi(4,10) = F11*F31*dAdgrad_chi11222 + F11*F32*dAdgrad_chi12222 + F11*F33*dAdgrad_chi13222 + F12*F31*dAdgrad_chi21222 + F12*F32*dAdgrad_chi22222 + F12*F33*dAdgrad_chi23222 + F13*F31*dAdgrad_chi31222 + F13*F32*dAdgrad_chi32222 + F13*F33*dAdgrad_chi33222;
        dadgrad_chi(4,11) = F11*F31*dAdgrad_chi11233 + F11*F32*dAdgrad_chi12233 + F11*F33*dAdgrad_chi13233 + F12*F31*dAdgrad_chi21233 + F12*F32*dAdgrad_chi22233 + F12*F33*dAdgrad_chi23233 + F13*F31*dAdgrad_chi31233 + F13*F32*dAdgrad_chi32233 + F13*F33*dAdgrad_chi33233;
        dadgrad_chi(4,12) = F11*F31*dAdgrad_chi11223 + F11*F32*dAdgrad_chi12223 + F11*F33*dAdgrad_chi13223 + F12*F31*dAdgrad_chi21223 + F12*F32*dAdgrad_chi22223 + F12*F33*dAdgrad_chi23223 + F13*F31*dAdgrad_chi31223 + F13*F32*dAdgrad_chi32223 + F13*F33*dAdgrad_chi33223;
        dadgrad_chi(4,13) = F11*F31*dAdgrad_chi11213 + F11*F32*dAdgrad_chi12213 + F11*F33*dAdgrad_chi13213 + F12*F31*dAdgrad_chi21213 + F12*F32*dAdgrad_chi22213 + F12*F33*dAdgrad_chi23213 + F13*F31*dAdgrad_chi31213 + F13*F32*dAdgrad_chi32213 + F13*F33*dAdgrad_chi33213;
        dadgrad_chi(4,14) = F11*F31*dAdgrad_chi11212 + F11*F32*dAdgrad_chi12212 + F11*F33*dAdgrad_chi13212 + F12*F31*dAdgrad_chi21212 + F12*F32*dAdgrad_chi22212 + F12*F33*dAdgrad_chi23212 + F13*F31*dAdgrad_chi31212 + F13*F32*dAdgrad_chi32212 + F13*F33*dAdgrad_chi33212;
        dadgrad_chi(4,15) = F11*F31*dAdgrad_chi11232 + F11*F32*dAdgrad_chi12232 + F11*F33*dAdgrad_chi13232 + F12*F31*dAdgrad_chi21232 + F12*F32*dAdgrad_chi22232 + F12*F33*dAdgrad_chi23232 + F13*F31*dAdgrad_chi31232 + F13*F32*dAdgrad_chi32232 + F13*F33*dAdgrad_chi33232;
        dadgrad_chi(4,16) = F11*F31*dAdgrad_chi11231 + F11*F32*dAdgrad_chi12231 + F11*F33*dAdgrad_chi13231 + F12*F31*dAdgrad_chi21231 + F12*F32*dAdgrad_chi22231 + F12*F33*dAdgrad_chi23231 + F13*F31*dAdgrad_chi31231 + F13*F32*dAdgrad_chi32231 + F13*F33*dAdgrad_chi33231;
        dadgrad_chi(4,17) = F11*F31*dAdgrad_chi11221 + F11*F32*dAdgrad_chi12221 + F11*F33*dAdgrad_chi13221 + F12*F31*dAdgrad_chi21221 + F12*F32*dAdgrad_chi22221 + F12*F33*dAdgrad_chi23221 + F13*F31*dAdgrad_chi31221 + F13*F32*dAdgrad_chi32221 + F13*F33*dAdgrad_chi33221;
        dadgrad_chi(4,18) = F11*F31*dAdgrad_chi11311 + F11*F32*dAdgrad_chi12311 + F11*F33*dAdgrad_chi13311 + F12*F31*dAdgrad_chi21311 + F12*F32*dAdgrad_chi22311 + F12*F33*dAdgrad_chi23311 + F13*F31*dAdgrad_chi31311 + F13*F32*dAdgrad_chi32311 + F13*F33*dAdgrad_chi33311;
        dadgrad_chi(4,19) = F11*F31*dAdgrad_chi11322 + F11*F32*dAdgrad_chi12322 + F11*F33*dAdgrad_chi13322 + F12*F31*dAdgrad_chi21322 + F12*F32*dAdgrad_chi22322 + F12*F33*dAdgrad_chi23322 + F13*F31*dAdgrad_chi31322 + F13*F32*dAdgrad_chi32322 + F13*F33*dAdgrad_chi33322;
        dadgrad_chi(4,20) = F11*F31*dAdgrad_chi11333 + F11*F32*dAdgrad_chi12333 + F11*F33*dAdgrad_chi13333 + F12*F31*dAdgrad_chi21333 + F12*F32*dAdgrad_chi22333 + F12*F33*dAdgrad_chi23333 + F13*F31*dAdgrad_chi31333 + F13*F32*dAdgrad_chi32333 + F13*F33*dAdgrad_chi33333;
        dadgrad_chi(4,21) = F11*F31*dAdgrad_chi11323 + F11*F32*dAdgrad_chi12323 + F11*F33*dAdgrad_chi13323 + F12*F31*dAdgrad_chi21323 + F12*F32*dAdgrad_chi22323 + F12*F33*dAdgrad_chi23323 + F13*F31*dAdgrad_chi31323 + F13*F32*dAdgrad_chi32323 + F13*F33*dAdgrad_chi33323;
        dadgrad_chi(4,22) = F11*F31*dAdgrad_chi11313 + F11*F32*dAdgrad_chi12313 + F11*F33*dAdgrad_chi13313 + F12*F31*dAdgrad_chi21313 + F12*F32*dAdgrad_chi22313 + F12*F33*dAdgrad_chi23313 + F13*F31*dAdgrad_chi31313 + F13*F32*dAdgrad_chi32313 + F13*F33*dAdgrad_chi33313;
        dadgrad_chi(4,23) = F11*F31*dAdgrad_chi11312 + F11*F32*dAdgrad_chi12312 + F11*F33*dAdgrad_chi13312 + F12*F31*dAdgrad_chi21312 + F12*F32*dAdgrad_chi22312 + F12*F33*dAdgrad_chi23312 + F13*F31*dAdgrad_chi31312 + F13*F32*dAdgrad_chi32312 + F13*F33*dAdgrad_chi33312;
        dadgrad_chi(4,24) = F11*F31*dAdgrad_chi11332 + F11*F32*dAdgrad_chi12332 + F11*F33*dAdgrad_chi13332 + F12*F31*dAdgrad_chi21332 + F12*F32*dAdgrad_chi22332 + F12*F33*dAdgrad_chi23332 + F13*F31*dAdgrad_chi31332 + F13*F32*dAdgrad_chi32332 + F13*F33*dAdgrad_chi33332;
        dadgrad_chi(4,25) = F11*F31*dAdgrad_chi11331 + F11*F32*dAdgrad_chi12331 + F11*F33*dAdgrad_chi13331 + F12*F31*dAdgrad_chi21331 + F12*F32*dAdgrad_chi22331 + F12*F33*dAdgrad_chi23331 + F13*F31*dAdgrad_chi31331 + F13*F32*dAdgrad_chi32331 + F13*F33*dAdgrad_chi33331;
        dadgrad_chi(4,26) = F11*F31*dAdgrad_chi11321 + F11*F32*dAdgrad_chi12321 + F11*F33*dAdgrad_chi13321 + F12*F31*dAdgrad_chi21321 + F12*F32*dAdgrad_chi22321 + F12*F33*dAdgrad_chi23321 + F13*F31*dAdgrad_chi31321 + F13*F32*dAdgrad_chi32321 + F13*F33*dAdgrad_chi33321;
        dadgrad_chi(5,0) = F11*F21*dAdgrad_chi11111 + F11*F22*dAdgrad_chi12111 + F11*F23*dAdgrad_chi13111 + F12*F21*dAdgrad_chi21111 + F12*F22*dAdgrad_chi22111 + F12*F23*dAdgrad_chi23111 + F13*F21*dAdgrad_chi31111 + F13*F22*dAdgrad_chi32111 + F13*F23*dAdgrad_chi33111;
        dadgrad_chi(5,1) = F11*F21*dAdgrad_chi11122 + F11*F22*dAdgrad_chi12122 + F11*F23*dAdgrad_chi13122 + F12*F21*dAdgrad_chi21122 + F12*F22*dAdgrad_chi22122 + F12*F23*dAdgrad_chi23122 + F13*F21*dAdgrad_chi31122 + F13*F22*dAdgrad_chi32122 + F13*F23*dAdgrad_chi33122;
        dadgrad_chi(5,2) = F11*F21*dAdgrad_chi11133 + F11*F22*dAdgrad_chi12133 + F11*F23*dAdgrad_chi13133 + F12*F21*dAdgrad_chi21133 + F12*F22*dAdgrad_chi22133 + F12*F23*dAdgrad_chi23133 + F13*F21*dAdgrad_chi31133 + F13*F22*dAdgrad_chi32133 + F13*F23*dAdgrad_chi33133;
        dadgrad_chi(5,3) = F11*F21*dAdgrad_chi11123 + F11*F22*dAdgrad_chi12123 + F11*F23*dAdgrad_chi13123 + F12*F21*dAdgrad_chi21123 + F12*F22*dAdgrad_chi22123 + F12*F23*dAdgrad_chi23123 + F13*F21*dAdgrad_chi31123 + F13*F22*dAdgrad_chi32123 + F13*F23*dAdgrad_chi33123;
        dadgrad_chi(5,4) = F11*F21*dAdgrad_chi11113 + F11*F22*dAdgrad_chi12113 + F11*F23*dAdgrad_chi13113 + F12*F21*dAdgrad_chi21113 + F12*F22*dAdgrad_chi22113 + F12*F23*dAdgrad_chi23113 + F13*F21*dAdgrad_chi31113 + F13*F22*dAdgrad_chi32113 + F13*F23*dAdgrad_chi33113;
        dadgrad_chi(5,5) = F11*F21*dAdgrad_chi11112 + F11*F22*dAdgrad_chi12112 + F11*F23*dAdgrad_chi13112 + F12*F21*dAdgrad_chi21112 + F12*F22*dAdgrad_chi22112 + F12*F23*dAdgrad_chi23112 + F13*F21*dAdgrad_chi31112 + F13*F22*dAdgrad_chi32112 + F13*F23*dAdgrad_chi33112;
        dadgrad_chi(5,6) = F11*F21*dAdgrad_chi11132 + F11*F22*dAdgrad_chi12132 + F11*F23*dAdgrad_chi13132 + F12*F21*dAdgrad_chi21132 + F12*F22*dAdgrad_chi22132 + F12*F23*dAdgrad_chi23132 + F13*F21*dAdgrad_chi31132 + F13*F22*dAdgrad_chi32132 + F13*F23*dAdgrad_chi33132;
        dadgrad_chi(5,7) = F11*F21*dAdgrad_chi11131 + F11*F22*dAdgrad_chi12131 + F11*F23*dAdgrad_chi13131 + F12*F21*dAdgrad_chi21131 + F12*F22*dAdgrad_chi22131 + F12*F23*dAdgrad_chi23131 + F13*F21*dAdgrad_chi31131 + F13*F22*dAdgrad_chi32131 + F13*F23*dAdgrad_chi33131;
        dadgrad_chi(5,8) = F11*F21*dAdgrad_chi11121 + F11*F22*dAdgrad_chi12121 + F11*F23*dAdgrad_chi13121 + F12*F21*dAdgrad_chi21121 + F12*F22*dAdgrad_chi22121 + F12*F23*dAdgrad_chi23121 + F13*F21*dAdgrad_chi31121 + F13*F22*dAdgrad_chi32121 + F13*F23*dAdgrad_chi33121;
        dadgrad_chi(5,9) = F11*F21*dAdgrad_chi11211 + F11*F22*dAdgrad_chi12211 + F11*F23*dAdgrad_chi13211 + F12*F21*dAdgrad_chi21211 + F12*F22*dAdgrad_chi22211 + F12*F23*dAdgrad_chi23211 + F13*F21*dAdgrad_chi31211 + F13*F22*dAdgrad_chi32211 + F13*F23*dAdgrad_chi33211;
        dadgrad_chi(5,10) = F11*F21*dAdgrad_chi11222 + F11*F22*dAdgrad_chi12222 + F11*F23*dAdgrad_chi13222 + F12*F21*dAdgrad_chi21222 + F12*F22*dAdgrad_chi22222 + F12*F23*dAdgrad_chi23222 + F13*F21*dAdgrad_chi31222 + F13*F22*dAdgrad_chi32222 + F13*F23*dAdgrad_chi33222;
        dadgrad_chi(5,11) = F11*F21*dAdgrad_chi11233 + F11*F22*dAdgrad_chi12233 + F11*F23*dAdgrad_chi13233 + F12*F21*dAdgrad_chi21233 + F12*F22*dAdgrad_chi22233 + F12*F23*dAdgrad_chi23233 + F13*F21*dAdgrad_chi31233 + F13*F22*dAdgrad_chi32233 + F13*F23*dAdgrad_chi33233;
        dadgrad_chi(5,12) = F11*F21*dAdgrad_chi11223 + F11*F22*dAdgrad_chi12223 + F11*F23*dAdgrad_chi13223 + F12*F21*dAdgrad_chi21223 + F12*F22*dAdgrad_chi22223 + F12*F23*dAdgrad_chi23223 + F13*F21*dAdgrad_chi31223 + F13*F22*dAdgrad_chi32223 + F13*F23*dAdgrad_chi33223;
        dadgrad_chi(5,13) = F11*F21*dAdgrad_chi11213 + F11*F22*dAdgrad_chi12213 + F11*F23*dAdgrad_chi13213 + F12*F21*dAdgrad_chi21213 + F12*F22*dAdgrad_chi22213 + F12*F23*dAdgrad_chi23213 + F13*F21*dAdgrad_chi31213 + F13*F22*dAdgrad_chi32213 + F13*F23*dAdgrad_chi33213;
        dadgrad_chi(5,14) = F11*F21*dAdgrad_chi11212 + F11*F22*dAdgrad_chi12212 + F11*F23*dAdgrad_chi13212 + F12*F21*dAdgrad_chi21212 + F12*F22*dAdgrad_chi22212 + F12*F23*dAdgrad_chi23212 + F13*F21*dAdgrad_chi31212 + F13*F22*dAdgrad_chi32212 + F13*F23*dAdgrad_chi33212;
        dadgrad_chi(5,15) = F11*F21*dAdgrad_chi11232 + F11*F22*dAdgrad_chi12232 + F11*F23*dAdgrad_chi13232 + F12*F21*dAdgrad_chi21232 + F12*F22*dAdgrad_chi22232 + F12*F23*dAdgrad_chi23232 + F13*F21*dAdgrad_chi31232 + F13*F22*dAdgrad_chi32232 + F13*F23*dAdgrad_chi33232;
        dadgrad_chi(5,16) = F11*F21*dAdgrad_chi11231 + F11*F22*dAdgrad_chi12231 + F11*F23*dAdgrad_chi13231 + F12*F21*dAdgrad_chi21231 + F12*F22*dAdgrad_chi22231 + F12*F23*dAdgrad_chi23231 + F13*F21*dAdgrad_chi31231 + F13*F22*dAdgrad_chi32231 + F13*F23*dAdgrad_chi33231;
        dadgrad_chi(5,17) = F11*F21*dAdgrad_chi11221 + F11*F22*dAdgrad_chi12221 + F11*F23*dAdgrad_chi13221 + F12*F21*dAdgrad_chi21221 + F12*F22*dAdgrad_chi22221 + F12*F23*dAdgrad_chi23221 + F13*F21*dAdgrad_chi31221 + F13*F22*dAdgrad_chi32221 + F13*F23*dAdgrad_chi33221;
        dadgrad_chi(5,18) = F11*F21*dAdgrad_chi11311 + F11*F22*dAdgrad_chi12311 + F11*F23*dAdgrad_chi13311 + F12*F21*dAdgrad_chi21311 + F12*F22*dAdgrad_chi22311 + F12*F23*dAdgrad_chi23311 + F13*F21*dAdgrad_chi31311 + F13*F22*dAdgrad_chi32311 + F13*F23*dAdgrad_chi33311;
        dadgrad_chi(5,19) = F11*F21*dAdgrad_chi11322 + F11*F22*dAdgrad_chi12322 + F11*F23*dAdgrad_chi13322 + F12*F21*dAdgrad_chi21322 + F12*F22*dAdgrad_chi22322 + F12*F23*dAdgrad_chi23322 + F13*F21*dAdgrad_chi31322 + F13*F22*dAdgrad_chi32322 + F13*F23*dAdgrad_chi33322;
        dadgrad_chi(5,20) = F11*F21*dAdgrad_chi11333 + F11*F22*dAdgrad_chi12333 + F11*F23*dAdgrad_chi13333 + F12*F21*dAdgrad_chi21333 + F12*F22*dAdgrad_chi22333 + F12*F23*dAdgrad_chi23333 + F13*F21*dAdgrad_chi31333 + F13*F22*dAdgrad_chi32333 + F13*F23*dAdgrad_chi33333;
        dadgrad_chi(5,21) = F11*F21*dAdgrad_chi11323 + F11*F22*dAdgrad_chi12323 + F11*F23*dAdgrad_chi13323 + F12*F21*dAdgrad_chi21323 + F12*F22*dAdgrad_chi22323 + F12*F23*dAdgrad_chi23323 + F13*F21*dAdgrad_chi31323 + F13*F22*dAdgrad_chi32323 + F13*F23*dAdgrad_chi33323;
        dadgrad_chi(5,22) = F11*F21*dAdgrad_chi11313 + F11*F22*dAdgrad_chi12313 + F11*F23*dAdgrad_chi13313 + F12*F21*dAdgrad_chi21313 + F12*F22*dAdgrad_chi22313 + F12*F23*dAdgrad_chi23313 + F13*F21*dAdgrad_chi31313 + F13*F22*dAdgrad_chi32313 + F13*F23*dAdgrad_chi33313;
        dadgrad_chi(5,23) = F11*F21*dAdgrad_chi11312 + F11*F22*dAdgrad_chi12312 + F11*F23*dAdgrad_chi13312 + F12*F21*dAdgrad_chi21312 + F12*F22*dAdgrad_chi22312 + F12*F23*dAdgrad_chi23312 + F13*F21*dAdgrad_chi31312 + F13*F22*dAdgrad_chi32312 + F13*F23*dAdgrad_chi33312;
        dadgrad_chi(5,24) = F11*F21*dAdgrad_chi11332 + F11*F22*dAdgrad_chi12332 + F11*F23*dAdgrad_chi13332 + F12*F21*dAdgrad_chi21332 + F12*F22*dAdgrad_chi22332 + F12*F23*dAdgrad_chi23332 + F13*F21*dAdgrad_chi31332 + F13*F22*dAdgrad_chi32332 + F13*F23*dAdgrad_chi33332;
        dadgrad_chi(5,25) = F11*F21*dAdgrad_chi11331 + F11*F22*dAdgrad_chi12331 + F11*F23*dAdgrad_chi13331 + F12*F21*dAdgrad_chi21331 + F12*F22*dAdgrad_chi22331 + F12*F23*dAdgrad_chi23331 + F13*F21*dAdgrad_chi31331 + F13*F22*dAdgrad_chi32331 + F13*F23*dAdgrad_chi33331;
        dadgrad_chi(5,26) = F11*F21*dAdgrad_chi11321 + F11*F22*dAdgrad_chi12321 + F11*F23*dAdgrad_chi13321 + F12*F21*dAdgrad_chi21321 + F12*F22*dAdgrad_chi22321 + F12*F23*dAdgrad_chi23321 + F13*F21*dAdgrad_chi31321 + F13*F22*dAdgrad_chi32321 + F13*F23*dAdgrad_chi33321;
        dadgrad_chi(6,0) = F21*F31*dAdgrad_chi11111 + F21*F32*dAdgrad_chi21111 + F21*F33*dAdgrad_chi31111 + F22*F31*dAdgrad_chi12111 + F22*F32*dAdgrad_chi22111 + F22*F33*dAdgrad_chi32111 + F23*F31*dAdgrad_chi13111 + F23*F32*dAdgrad_chi23111 + F23*F33*dAdgrad_chi33111;
        dadgrad_chi(6,1) = F21*F31*dAdgrad_chi11122 + F21*F32*dAdgrad_chi21122 + F21*F33*dAdgrad_chi31122 + F22*F31*dAdgrad_chi12122 + F22*F32*dAdgrad_chi22122 + F22*F33*dAdgrad_chi32122 + F23*F31*dAdgrad_chi13122 + F23*F32*dAdgrad_chi23122 + F23*F33*dAdgrad_chi33122;
        dadgrad_chi(6,2) = F21*F31*dAdgrad_chi11133 + F21*F32*dAdgrad_chi21133 + F21*F33*dAdgrad_chi31133 + F22*F31*dAdgrad_chi12133 + F22*F32*dAdgrad_chi22133 + F22*F33*dAdgrad_chi32133 + F23*F31*dAdgrad_chi13133 + F23*F32*dAdgrad_chi23133 + F23*F33*dAdgrad_chi33133;
        dadgrad_chi(6,3) = F21*F31*dAdgrad_chi11123 + F21*F32*dAdgrad_chi21123 + F21*F33*dAdgrad_chi31123 + F22*F31*dAdgrad_chi12123 + F22*F32*dAdgrad_chi22123 + F22*F33*dAdgrad_chi32123 + F23*F31*dAdgrad_chi13123 + F23*F32*dAdgrad_chi23123 + F23*F33*dAdgrad_chi33123;
        dadgrad_chi(6,4) = F21*F31*dAdgrad_chi11113 + F21*F32*dAdgrad_chi21113 + F21*F33*dAdgrad_chi31113 + F22*F31*dAdgrad_chi12113 + F22*F32*dAdgrad_chi22113 + F22*F33*dAdgrad_chi32113 + F23*F31*dAdgrad_chi13113 + F23*F32*dAdgrad_chi23113 + F23*F33*dAdgrad_chi33113;
        dadgrad_chi(6,5) = F21*F31*dAdgrad_chi11112 + F21*F32*dAdgrad_chi21112 + F21*F33*dAdgrad_chi31112 + F22*F31*dAdgrad_chi12112 + F22*F32*dAdgrad_chi22112 + F22*F33*dAdgrad_chi32112 + F23*F31*dAdgrad_chi13112 + F23*F32*dAdgrad_chi23112 + F23*F33*dAdgrad_chi33112;
        dadgrad_chi(6,6) = F21*F31*dAdgrad_chi11132 + F21*F32*dAdgrad_chi21132 + F21*F33*dAdgrad_chi31132 + F22*F31*dAdgrad_chi12132 + F22*F32*dAdgrad_chi22132 + F22*F33*dAdgrad_chi32132 + F23*F31*dAdgrad_chi13132 + F23*F32*dAdgrad_chi23132 + F23*F33*dAdgrad_chi33132;
        dadgrad_chi(6,7) = F21*F31*dAdgrad_chi11131 + F21*F32*dAdgrad_chi21131 + F21*F33*dAdgrad_chi31131 + F22*F31*dAdgrad_chi12131 + F22*F32*dAdgrad_chi22131 + F22*F33*dAdgrad_chi32131 + F23*F31*dAdgrad_chi13131 + F23*F32*dAdgrad_chi23131 + F23*F33*dAdgrad_chi33131;
        dadgrad_chi(6,8) = F21*F31*dAdgrad_chi11121 + F21*F32*dAdgrad_chi21121 + F21*F33*dAdgrad_chi31121 + F22*F31*dAdgrad_chi12121 + F22*F32*dAdgrad_chi22121 + F22*F33*dAdgrad_chi32121 + F23*F31*dAdgrad_chi13121 + F23*F32*dAdgrad_chi23121 + F23*F33*dAdgrad_chi33121;
        dadgrad_chi(6,9) = F21*F31*dAdgrad_chi11211 + F21*F32*dAdgrad_chi21211 + F21*F33*dAdgrad_chi31211 + F22*F31*dAdgrad_chi12211 + F22*F32*dAdgrad_chi22211 + F22*F33*dAdgrad_chi32211 + F23*F31*dAdgrad_chi13211 + F23*F32*dAdgrad_chi23211 + F23*F33*dAdgrad_chi33211;
        dadgrad_chi(6,10) = F21*F31*dAdgrad_chi11222 + F21*F32*dAdgrad_chi21222 + F21*F33*dAdgrad_chi31222 + F22*F31*dAdgrad_chi12222 + F22*F32*dAdgrad_chi22222 + F22*F33*dAdgrad_chi32222 + F23*F31*dAdgrad_chi13222 + F23*F32*dAdgrad_chi23222 + F23*F33*dAdgrad_chi33222;
        dadgrad_chi(6,11) = F21*F31*dAdgrad_chi11233 + F21*F32*dAdgrad_chi21233 + F21*F33*dAdgrad_chi31233 + F22*F31*dAdgrad_chi12233 + F22*F32*dAdgrad_chi22233 + F22*F33*dAdgrad_chi32233 + F23*F31*dAdgrad_chi13233 + F23*F32*dAdgrad_chi23233 + F23*F33*dAdgrad_chi33233;
        dadgrad_chi(6,12) = F21*F31*dAdgrad_chi11223 + F21*F32*dAdgrad_chi21223 + F21*F33*dAdgrad_chi31223 + F22*F31*dAdgrad_chi12223 + F22*F32*dAdgrad_chi22223 + F22*F33*dAdgrad_chi32223 + F23*F31*dAdgrad_chi13223 + F23*F32*dAdgrad_chi23223 + F23*F33*dAdgrad_chi33223;
        dadgrad_chi(6,13) = F21*F31*dAdgrad_chi11213 + F21*F32*dAdgrad_chi21213 + F21*F33*dAdgrad_chi31213 + F22*F31*dAdgrad_chi12213 + F22*F32*dAdgrad_chi22213 + F22*F33*dAdgrad_chi32213 + F23*F31*dAdgrad_chi13213 + F23*F32*dAdgrad_chi23213 + F23*F33*dAdgrad_chi33213;
        dadgrad_chi(6,14) = F21*F31*dAdgrad_chi11212 + F21*F32*dAdgrad_chi21212 + F21*F33*dAdgrad_chi31212 + F22*F31*dAdgrad_chi12212 + F22*F32*dAdgrad_chi22212 + F22*F33*dAdgrad_chi32212 + F23*F31*dAdgrad_chi13212 + F23*F32*dAdgrad_chi23212 + F23*F33*dAdgrad_chi33212;
        dadgrad_chi(6,15) = F21*F31*dAdgrad_chi11232 + F21*F32*dAdgrad_chi21232 + F21*F33*dAdgrad_chi31232 + F22*F31*dAdgrad_chi12232 + F22*F32*dAdgrad_chi22232 + F22*F33*dAdgrad_chi32232 + F23*F31*dAdgrad_chi13232 + F23*F32*dAdgrad_chi23232 + F23*F33*dAdgrad_chi33232;
        dadgrad_chi(6,16) = F21*F31*dAdgrad_chi11231 + F21*F32*dAdgrad_chi21231 + F21*F33*dAdgrad_chi31231 + F22*F31*dAdgrad_chi12231 + F22*F32*dAdgrad_chi22231 + F22*F33*dAdgrad_chi32231 + F23*F31*dAdgrad_chi13231 + F23*F32*dAdgrad_chi23231 + F23*F33*dAdgrad_chi33231;
        dadgrad_chi(6,17) = F21*F31*dAdgrad_chi11221 + F21*F32*dAdgrad_chi21221 + F21*F33*dAdgrad_chi31221 + F22*F31*dAdgrad_chi12221 + F22*F32*dAdgrad_chi22221 + F22*F33*dAdgrad_chi32221 + F23*F31*dAdgrad_chi13221 + F23*F32*dAdgrad_chi23221 + F23*F33*dAdgrad_chi33221;
        dadgrad_chi(6,18) = F21*F31*dAdgrad_chi11311 + F21*F32*dAdgrad_chi21311 + F21*F33*dAdgrad_chi31311 + F22*F31*dAdgrad_chi12311 + F22*F32*dAdgrad_chi22311 + F22*F33*dAdgrad_chi32311 + F23*F31*dAdgrad_chi13311 + F23*F32*dAdgrad_chi23311 + F23*F33*dAdgrad_chi33311;
        dadgrad_chi(6,19) = F21*F31*dAdgrad_chi11322 + F21*F32*dAdgrad_chi21322 + F21*F33*dAdgrad_chi31322 + F22*F31*dAdgrad_chi12322 + F22*F32*dAdgrad_chi22322 + F22*F33*dAdgrad_chi32322 + F23*F31*dAdgrad_chi13322 + F23*F32*dAdgrad_chi23322 + F23*F33*dAdgrad_chi33322;
        dadgrad_chi(6,20) = F21*F31*dAdgrad_chi11333 + F21*F32*dAdgrad_chi21333 + F21*F33*dAdgrad_chi31333 + F22*F31*dAdgrad_chi12333 + F22*F32*dAdgrad_chi22333 + F22*F33*dAdgrad_chi32333 + F23*F31*dAdgrad_chi13333 + F23*F32*dAdgrad_chi23333 + F23*F33*dAdgrad_chi33333;
        dadgrad_chi(6,21) = F21*F31*dAdgrad_chi11323 + F21*F32*dAdgrad_chi21323 + F21*F33*dAdgrad_chi31323 + F22*F31*dAdgrad_chi12323 + F22*F32*dAdgrad_chi22323 + F22*F33*dAdgrad_chi32323 + F23*F31*dAdgrad_chi13323 + F23*F32*dAdgrad_chi23323 + F23*F33*dAdgrad_chi33323;
        dadgrad_chi(6,22) = F21*F31*dAdgrad_chi11313 + F21*F32*dAdgrad_chi21313 + F21*F33*dAdgrad_chi31313 + F22*F31*dAdgrad_chi12313 + F22*F32*dAdgrad_chi22313 + F22*F33*dAdgrad_chi32313 + F23*F31*dAdgrad_chi13313 + F23*F32*dAdgrad_chi23313 + F23*F33*dAdgrad_chi33313;
        dadgrad_chi(6,23) = F21*F31*dAdgrad_chi11312 + F21*F32*dAdgrad_chi21312 + F21*F33*dAdgrad_chi31312 + F22*F31*dAdgrad_chi12312 + F22*F32*dAdgrad_chi22312 + F22*F33*dAdgrad_chi32312 + F23*F31*dAdgrad_chi13312 + F23*F32*dAdgrad_chi23312 + F23*F33*dAdgrad_chi33312;
        dadgrad_chi(6,24) = F21*F31*dAdgrad_chi11332 + F21*F32*dAdgrad_chi21332 + F21*F33*dAdgrad_chi31332 + F22*F31*dAdgrad_chi12332 + F22*F32*dAdgrad_chi22332 + F22*F33*dAdgrad_chi32332 + F23*F31*dAdgrad_chi13332 + F23*F32*dAdgrad_chi23332 + F23*F33*dAdgrad_chi33332;
        dadgrad_chi(6,25) = F21*F31*dAdgrad_chi11331 + F21*F32*dAdgrad_chi21331 + F21*F33*dAdgrad_chi31331 + F22*F31*dAdgrad_chi12331 + F22*F32*dAdgrad_chi22331 + F22*F33*dAdgrad_chi32331 + F23*F31*dAdgrad_chi13331 + F23*F32*dAdgrad_chi23331 + F23*F33*dAdgrad_chi33331;
        dadgrad_chi(6,26) = F21*F31*dAdgrad_chi11321 + F21*F32*dAdgrad_chi21321 + F21*F33*dAdgrad_chi31321 + F22*F31*dAdgrad_chi12321 + F22*F32*dAdgrad_chi22321 + F22*F33*dAdgrad_chi32321 + F23*F31*dAdgrad_chi13321 + F23*F32*dAdgrad_chi23321 + F23*F33*dAdgrad_chi33321;
        dadgrad_chi(7,0) = F11*F31*dAdgrad_chi11111 + F11*F32*dAdgrad_chi21111 + F11*F33*dAdgrad_chi31111 + F12*F31*dAdgrad_chi12111 + F12*F32*dAdgrad_chi22111 + F12*F33*dAdgrad_chi32111 + F13*F31*dAdgrad_chi13111 + F13*F32*dAdgrad_chi23111 + F13*F33*dAdgrad_chi33111;
        dadgrad_chi(7,1) = F11*F31*dAdgrad_chi11122 + F11*F32*dAdgrad_chi21122 + F11*F33*dAdgrad_chi31122 + F12*F31*dAdgrad_chi12122 + F12*F32*dAdgrad_chi22122 + F12*F33*dAdgrad_chi32122 + F13*F31*dAdgrad_chi13122 + F13*F32*dAdgrad_chi23122 + F13*F33*dAdgrad_chi33122;
        dadgrad_chi(7,2) = F11*F31*dAdgrad_chi11133 + F11*F32*dAdgrad_chi21133 + F11*F33*dAdgrad_chi31133 + F12*F31*dAdgrad_chi12133 + F12*F32*dAdgrad_chi22133 + F12*F33*dAdgrad_chi32133 + F13*F31*dAdgrad_chi13133 + F13*F32*dAdgrad_chi23133 + F13*F33*dAdgrad_chi33133;
        dadgrad_chi(7,3) = F11*F31*dAdgrad_chi11123 + F11*F32*dAdgrad_chi21123 + F11*F33*dAdgrad_chi31123 + F12*F31*dAdgrad_chi12123 + F12*F32*dAdgrad_chi22123 + F12*F33*dAdgrad_chi32123 + F13*F31*dAdgrad_chi13123 + F13*F32*dAdgrad_chi23123 + F13*F33*dAdgrad_chi33123;
        dadgrad_chi(7,4) = F11*F31*dAdgrad_chi11113 + F11*F32*dAdgrad_chi21113 + F11*F33*dAdgrad_chi31113 + F12*F31*dAdgrad_chi12113 + F12*F32*dAdgrad_chi22113 + F12*F33*dAdgrad_chi32113 + F13*F31*dAdgrad_chi13113 + F13*F32*dAdgrad_chi23113 + F13*F33*dAdgrad_chi33113;
        dadgrad_chi(7,5) = F11*F31*dAdgrad_chi11112 + F11*F32*dAdgrad_chi21112 + F11*F33*dAdgrad_chi31112 + F12*F31*dAdgrad_chi12112 + F12*F32*dAdgrad_chi22112 + F12*F33*dAdgrad_chi32112 + F13*F31*dAdgrad_chi13112 + F13*F32*dAdgrad_chi23112 + F13*F33*dAdgrad_chi33112;
        dadgrad_chi(7,6) = F11*F31*dAdgrad_chi11132 + F11*F32*dAdgrad_chi21132 + F11*F33*dAdgrad_chi31132 + F12*F31*dAdgrad_chi12132 + F12*F32*dAdgrad_chi22132 + F12*F33*dAdgrad_chi32132 + F13*F31*dAdgrad_chi13132 + F13*F32*dAdgrad_chi23132 + F13*F33*dAdgrad_chi33132;
        dadgrad_chi(7,7) = F11*F31*dAdgrad_chi11131 + F11*F32*dAdgrad_chi21131 + F11*F33*dAdgrad_chi31131 + F12*F31*dAdgrad_chi12131 + F12*F32*dAdgrad_chi22131 + F12*F33*dAdgrad_chi32131 + F13*F31*dAdgrad_chi13131 + F13*F32*dAdgrad_chi23131 + F13*F33*dAdgrad_chi33131;
        dadgrad_chi(7,8) = F11*F31*dAdgrad_chi11121 + F11*F32*dAdgrad_chi21121 + F11*F33*dAdgrad_chi31121 + F12*F31*dAdgrad_chi12121 + F12*F32*dAdgrad_chi22121 + F12*F33*dAdgrad_chi32121 + F13*F31*dAdgrad_chi13121 + F13*F32*dAdgrad_chi23121 + F13*F33*dAdgrad_chi33121;
        dadgrad_chi(7,9) = F11*F31*dAdgrad_chi11211 + F11*F32*dAdgrad_chi21211 + F11*F33*dAdgrad_chi31211 + F12*F31*dAdgrad_chi12211 + F12*F32*dAdgrad_chi22211 + F12*F33*dAdgrad_chi32211 + F13*F31*dAdgrad_chi13211 + F13*F32*dAdgrad_chi23211 + F13*F33*dAdgrad_chi33211;
        dadgrad_chi(7,10) = F11*F31*dAdgrad_chi11222 + F11*F32*dAdgrad_chi21222 + F11*F33*dAdgrad_chi31222 + F12*F31*dAdgrad_chi12222 + F12*F32*dAdgrad_chi22222 + F12*F33*dAdgrad_chi32222 + F13*F31*dAdgrad_chi13222 + F13*F32*dAdgrad_chi23222 + F13*F33*dAdgrad_chi33222;
        dadgrad_chi(7,11) = F11*F31*dAdgrad_chi11233 + F11*F32*dAdgrad_chi21233 + F11*F33*dAdgrad_chi31233 + F12*F31*dAdgrad_chi12233 + F12*F32*dAdgrad_chi22233 + F12*F33*dAdgrad_chi32233 + F13*F31*dAdgrad_chi13233 + F13*F32*dAdgrad_chi23233 + F13*F33*dAdgrad_chi33233;
        dadgrad_chi(7,12) = F11*F31*dAdgrad_chi11223 + F11*F32*dAdgrad_chi21223 + F11*F33*dAdgrad_chi31223 + F12*F31*dAdgrad_chi12223 + F12*F32*dAdgrad_chi22223 + F12*F33*dAdgrad_chi32223 + F13*F31*dAdgrad_chi13223 + F13*F32*dAdgrad_chi23223 + F13*F33*dAdgrad_chi33223;
        dadgrad_chi(7,13) = F11*F31*dAdgrad_chi11213 + F11*F32*dAdgrad_chi21213 + F11*F33*dAdgrad_chi31213 + F12*F31*dAdgrad_chi12213 + F12*F32*dAdgrad_chi22213 + F12*F33*dAdgrad_chi32213 + F13*F31*dAdgrad_chi13213 + F13*F32*dAdgrad_chi23213 + F13*F33*dAdgrad_chi33213;
        dadgrad_chi(7,14) = F11*F31*dAdgrad_chi11212 + F11*F32*dAdgrad_chi21212 + F11*F33*dAdgrad_chi31212 + F12*F31*dAdgrad_chi12212 + F12*F32*dAdgrad_chi22212 + F12*F33*dAdgrad_chi32212 + F13*F31*dAdgrad_chi13212 + F13*F32*dAdgrad_chi23212 + F13*F33*dAdgrad_chi33212;
        dadgrad_chi(7,15) = F11*F31*dAdgrad_chi11232 + F11*F32*dAdgrad_chi21232 + F11*F33*dAdgrad_chi31232 + F12*F31*dAdgrad_chi12232 + F12*F32*dAdgrad_chi22232 + F12*F33*dAdgrad_chi32232 + F13*F31*dAdgrad_chi13232 + F13*F32*dAdgrad_chi23232 + F13*F33*dAdgrad_chi33232;
        dadgrad_chi(7,16) = F11*F31*dAdgrad_chi11231 + F11*F32*dAdgrad_chi21231 + F11*F33*dAdgrad_chi31231 + F12*F31*dAdgrad_chi12231 + F12*F32*dAdgrad_chi22231 + F12*F33*dAdgrad_chi32231 + F13*F31*dAdgrad_chi13231 + F13*F32*dAdgrad_chi23231 + F13*F33*dAdgrad_chi33231;
        dadgrad_chi(7,17) = F11*F31*dAdgrad_chi11221 + F11*F32*dAdgrad_chi21221 + F11*F33*dAdgrad_chi31221 + F12*F31*dAdgrad_chi12221 + F12*F32*dAdgrad_chi22221 + F12*F33*dAdgrad_chi32221 + F13*F31*dAdgrad_chi13221 + F13*F32*dAdgrad_chi23221 + F13*F33*dAdgrad_chi33221;
        dadgrad_chi(7,18) = F11*F31*dAdgrad_chi11311 + F11*F32*dAdgrad_chi21311 + F11*F33*dAdgrad_chi31311 + F12*F31*dAdgrad_chi12311 + F12*F32*dAdgrad_chi22311 + F12*F33*dAdgrad_chi32311 + F13*F31*dAdgrad_chi13311 + F13*F32*dAdgrad_chi23311 + F13*F33*dAdgrad_chi33311;
        dadgrad_chi(7,19) = F11*F31*dAdgrad_chi11322 + F11*F32*dAdgrad_chi21322 + F11*F33*dAdgrad_chi31322 + F12*F31*dAdgrad_chi12322 + F12*F32*dAdgrad_chi22322 + F12*F33*dAdgrad_chi32322 + F13*F31*dAdgrad_chi13322 + F13*F32*dAdgrad_chi23322 + F13*F33*dAdgrad_chi33322;
        dadgrad_chi(7,20) = F11*F31*dAdgrad_chi11333 + F11*F32*dAdgrad_chi21333 + F11*F33*dAdgrad_chi31333 + F12*F31*dAdgrad_chi12333 + F12*F32*dAdgrad_chi22333 + F12*F33*dAdgrad_chi32333 + F13*F31*dAdgrad_chi13333 + F13*F32*dAdgrad_chi23333 + F13*F33*dAdgrad_chi33333;
        dadgrad_chi(7,21) = F11*F31*dAdgrad_chi11323 + F11*F32*dAdgrad_chi21323 + F11*F33*dAdgrad_chi31323 + F12*F31*dAdgrad_chi12323 + F12*F32*dAdgrad_chi22323 + F12*F33*dAdgrad_chi32323 + F13*F31*dAdgrad_chi13323 + F13*F32*dAdgrad_chi23323 + F13*F33*dAdgrad_chi33323;
        dadgrad_chi(7,22) = F11*F31*dAdgrad_chi11313 + F11*F32*dAdgrad_chi21313 + F11*F33*dAdgrad_chi31313 + F12*F31*dAdgrad_chi12313 + F12*F32*dAdgrad_chi22313 + F12*F33*dAdgrad_chi32313 + F13*F31*dAdgrad_chi13313 + F13*F32*dAdgrad_chi23313 + F13*F33*dAdgrad_chi33313;
        dadgrad_chi(7,23) = F11*F31*dAdgrad_chi11312 + F11*F32*dAdgrad_chi21312 + F11*F33*dAdgrad_chi31312 + F12*F31*dAdgrad_chi12312 + F12*F32*dAdgrad_chi22312 + F12*F33*dAdgrad_chi32312 + F13*F31*dAdgrad_chi13312 + F13*F32*dAdgrad_chi23312 + F13*F33*dAdgrad_chi33312;
        dadgrad_chi(7,24) = F11*F31*dAdgrad_chi11332 + F11*F32*dAdgrad_chi21332 + F11*F33*dAdgrad_chi31332 + F12*F31*dAdgrad_chi12332 + F12*F32*dAdgrad_chi22332 + F12*F33*dAdgrad_chi32332 + F13*F31*dAdgrad_chi13332 + F13*F32*dAdgrad_chi23332 + F13*F33*dAdgrad_chi33332;
        dadgrad_chi(7,25) = F11*F31*dAdgrad_chi11331 + F11*F32*dAdgrad_chi21331 + F11*F33*dAdgrad_chi31331 + F12*F31*dAdgrad_chi12331 + F12*F32*dAdgrad_chi22331 + F12*F33*dAdgrad_chi32331 + F13*F31*dAdgrad_chi13331 + F13*F32*dAdgrad_chi23331 + F13*F33*dAdgrad_chi33331;
        dadgrad_chi(7,26) = F11*F31*dAdgrad_chi11321 + F11*F32*dAdgrad_chi21321 + F11*F33*dAdgrad_chi31321 + F12*F31*dAdgrad_chi12321 + F12*F32*dAdgrad_chi22321 + F12*F33*dAdgrad_chi32321 + F13*F31*dAdgrad_chi13321 + F13*F32*dAdgrad_chi23321 + F13*F33*dAdgrad_chi33321;
        dadgrad_chi(8,0) = F11*F21*dAdgrad_chi11111 + F11*F22*dAdgrad_chi21111 + F11*F23*dAdgrad_chi31111 + F12*F21*dAdgrad_chi12111 + F12*F22*dAdgrad_chi22111 + F12*F23*dAdgrad_chi32111 + F13*F21*dAdgrad_chi13111 + F13*F22*dAdgrad_chi23111 + F13*F23*dAdgrad_chi33111;
        dadgrad_chi(8,1) = F11*F21*dAdgrad_chi11122 + F11*F22*dAdgrad_chi21122 + F11*F23*dAdgrad_chi31122 + F12*F21*dAdgrad_chi12122 + F12*F22*dAdgrad_chi22122 + F12*F23*dAdgrad_chi32122 + F13*F21*dAdgrad_chi13122 + F13*F22*dAdgrad_chi23122 + F13*F23*dAdgrad_chi33122;
        dadgrad_chi(8,2) = F11*F21*dAdgrad_chi11133 + F11*F22*dAdgrad_chi21133 + F11*F23*dAdgrad_chi31133 + F12*F21*dAdgrad_chi12133 + F12*F22*dAdgrad_chi22133 + F12*F23*dAdgrad_chi32133 + F13*F21*dAdgrad_chi13133 + F13*F22*dAdgrad_chi23133 + F13*F23*dAdgrad_chi33133;
        dadgrad_chi(8,3) = F11*F21*dAdgrad_chi11123 + F11*F22*dAdgrad_chi21123 + F11*F23*dAdgrad_chi31123 + F12*F21*dAdgrad_chi12123 + F12*F22*dAdgrad_chi22123 + F12*F23*dAdgrad_chi32123 + F13*F21*dAdgrad_chi13123 + F13*F22*dAdgrad_chi23123 + F13*F23*dAdgrad_chi33123;
        dadgrad_chi(8,4) = F11*F21*dAdgrad_chi11113 + F11*F22*dAdgrad_chi21113 + F11*F23*dAdgrad_chi31113 + F12*F21*dAdgrad_chi12113 + F12*F22*dAdgrad_chi22113 + F12*F23*dAdgrad_chi32113 + F13*F21*dAdgrad_chi13113 + F13*F22*dAdgrad_chi23113 + F13*F23*dAdgrad_chi33113;
        dadgrad_chi(8,5) = F11*F21*dAdgrad_chi11112 + F11*F22*dAdgrad_chi21112 + F11*F23*dAdgrad_chi31112 + F12*F21*dAdgrad_chi12112 + F12*F22*dAdgrad_chi22112 + F12*F23*dAdgrad_chi32112 + F13*F21*dAdgrad_chi13112 + F13*F22*dAdgrad_chi23112 + F13*F23*dAdgrad_chi33112;
        dadgrad_chi(8,6) = F11*F21*dAdgrad_chi11132 + F11*F22*dAdgrad_chi21132 + F11*F23*dAdgrad_chi31132 + F12*F21*dAdgrad_chi12132 + F12*F22*dAdgrad_chi22132 + F12*F23*dAdgrad_chi32132 + F13*F21*dAdgrad_chi13132 + F13*F22*dAdgrad_chi23132 + F13*F23*dAdgrad_chi33132;
        dadgrad_chi(8,7) = F11*F21*dAdgrad_chi11131 + F11*F22*dAdgrad_chi21131 + F11*F23*dAdgrad_chi31131 + F12*F21*dAdgrad_chi12131 + F12*F22*dAdgrad_chi22131 + F12*F23*dAdgrad_chi32131 + F13*F21*dAdgrad_chi13131 + F13*F22*dAdgrad_chi23131 + F13*F23*dAdgrad_chi33131;
        dadgrad_chi(8,8) = F11*F21*dAdgrad_chi11121 + F11*F22*dAdgrad_chi21121 + F11*F23*dAdgrad_chi31121 + F12*F21*dAdgrad_chi12121 + F12*F22*dAdgrad_chi22121 + F12*F23*dAdgrad_chi32121 + F13*F21*dAdgrad_chi13121 + F13*F22*dAdgrad_chi23121 + F13*F23*dAdgrad_chi33121;
        dadgrad_chi(8,9) = F11*F21*dAdgrad_chi11211 + F11*F22*dAdgrad_chi21211 + F11*F23*dAdgrad_chi31211 + F12*F21*dAdgrad_chi12211 + F12*F22*dAdgrad_chi22211 + F12*F23*dAdgrad_chi32211 + F13*F21*dAdgrad_chi13211 + F13*F22*dAdgrad_chi23211 + F13*F23*dAdgrad_chi33211;
        dadgrad_chi(8,10) = F11*F21*dAdgrad_chi11222 + F11*F22*dAdgrad_chi21222 + F11*F23*dAdgrad_chi31222 + F12*F21*dAdgrad_chi12222 + F12*F22*dAdgrad_chi22222 + F12*F23*dAdgrad_chi32222 + F13*F21*dAdgrad_chi13222 + F13*F22*dAdgrad_chi23222 + F13*F23*dAdgrad_chi33222;
        dadgrad_chi(8,11) = F11*F21*dAdgrad_chi11233 + F11*F22*dAdgrad_chi21233 + F11*F23*dAdgrad_chi31233 + F12*F21*dAdgrad_chi12233 + F12*F22*dAdgrad_chi22233 + F12*F23*dAdgrad_chi32233 + F13*F21*dAdgrad_chi13233 + F13*F22*dAdgrad_chi23233 + F13*F23*dAdgrad_chi33233;
        dadgrad_chi(8,12) = F11*F21*dAdgrad_chi11223 + F11*F22*dAdgrad_chi21223 + F11*F23*dAdgrad_chi31223 + F12*F21*dAdgrad_chi12223 + F12*F22*dAdgrad_chi22223 + F12*F23*dAdgrad_chi32223 + F13*F21*dAdgrad_chi13223 + F13*F22*dAdgrad_chi23223 + F13*F23*dAdgrad_chi33223;
        dadgrad_chi(8,13) = F11*F21*dAdgrad_chi11213 + F11*F22*dAdgrad_chi21213 + F11*F23*dAdgrad_chi31213 + F12*F21*dAdgrad_chi12213 + F12*F22*dAdgrad_chi22213 + F12*F23*dAdgrad_chi32213 + F13*F21*dAdgrad_chi13213 + F13*F22*dAdgrad_chi23213 + F13*F23*dAdgrad_chi33213;
        dadgrad_chi(8,14) = F11*F21*dAdgrad_chi11212 + F11*F22*dAdgrad_chi21212 + F11*F23*dAdgrad_chi31212 + F12*F21*dAdgrad_chi12212 + F12*F22*dAdgrad_chi22212 + F12*F23*dAdgrad_chi32212 + F13*F21*dAdgrad_chi13212 + F13*F22*dAdgrad_chi23212 + F13*F23*dAdgrad_chi33212;
        dadgrad_chi(8,15) = F11*F21*dAdgrad_chi11232 + F11*F22*dAdgrad_chi21232 + F11*F23*dAdgrad_chi31232 + F12*F21*dAdgrad_chi12232 + F12*F22*dAdgrad_chi22232 + F12*F23*dAdgrad_chi32232 + F13*F21*dAdgrad_chi13232 + F13*F22*dAdgrad_chi23232 + F13*F23*dAdgrad_chi33232;
        dadgrad_chi(8,16) = F11*F21*dAdgrad_chi11231 + F11*F22*dAdgrad_chi21231 + F11*F23*dAdgrad_chi31231 + F12*F21*dAdgrad_chi12231 + F12*F22*dAdgrad_chi22231 + F12*F23*dAdgrad_chi32231 + F13*F21*dAdgrad_chi13231 + F13*F22*dAdgrad_chi23231 + F13*F23*dAdgrad_chi33231;
        dadgrad_chi(8,17) = F11*F21*dAdgrad_chi11221 + F11*F22*dAdgrad_chi21221 + F11*F23*dAdgrad_chi31221 + F12*F21*dAdgrad_chi12221 + F12*F22*dAdgrad_chi22221 + F12*F23*dAdgrad_chi32221 + F13*F21*dAdgrad_chi13221 + F13*F22*dAdgrad_chi23221 + F13*F23*dAdgrad_chi33221;
        dadgrad_chi(8,18) = F11*F21*dAdgrad_chi11311 + F11*F22*dAdgrad_chi21311 + F11*F23*dAdgrad_chi31311 + F12*F21*dAdgrad_chi12311 + F12*F22*dAdgrad_chi22311 + F12*F23*dAdgrad_chi32311 + F13*F21*dAdgrad_chi13311 + F13*F22*dAdgrad_chi23311 + F13*F23*dAdgrad_chi33311;
        dadgrad_chi(8,19) = F11*F21*dAdgrad_chi11322 + F11*F22*dAdgrad_chi21322 + F11*F23*dAdgrad_chi31322 + F12*F21*dAdgrad_chi12322 + F12*F22*dAdgrad_chi22322 + F12*F23*dAdgrad_chi32322 + F13*F21*dAdgrad_chi13322 + F13*F22*dAdgrad_chi23322 + F13*F23*dAdgrad_chi33322;
        dadgrad_chi(8,20) = F11*F21*dAdgrad_chi11333 + F11*F22*dAdgrad_chi21333 + F11*F23*dAdgrad_chi31333 + F12*F21*dAdgrad_chi12333 + F12*F22*dAdgrad_chi22333 + F12*F23*dAdgrad_chi32333 + F13*F21*dAdgrad_chi13333 + F13*F22*dAdgrad_chi23333 + F13*F23*dAdgrad_chi33333;
        dadgrad_chi(8,21) = F11*F21*dAdgrad_chi11323 + F11*F22*dAdgrad_chi21323 + F11*F23*dAdgrad_chi31323 + F12*F21*dAdgrad_chi12323 + F12*F22*dAdgrad_chi22323 + F12*F23*dAdgrad_chi32323 + F13*F21*dAdgrad_chi13323 + F13*F22*dAdgrad_chi23323 + F13*F23*dAdgrad_chi33323;
        dadgrad_chi(8,22) = F11*F21*dAdgrad_chi11313 + F11*F22*dAdgrad_chi21313 + F11*F23*dAdgrad_chi31313 + F12*F21*dAdgrad_chi12313 + F12*F22*dAdgrad_chi22313 + F12*F23*dAdgrad_chi32313 + F13*F21*dAdgrad_chi13313 + F13*F22*dAdgrad_chi23313 + F13*F23*dAdgrad_chi33313;
        dadgrad_chi(8,23) = F11*F21*dAdgrad_chi11312 + F11*F22*dAdgrad_chi21312 + F11*F23*dAdgrad_chi31312 + F12*F21*dAdgrad_chi12312 + F12*F22*dAdgrad_chi22312 + F12*F23*dAdgrad_chi32312 + F13*F21*dAdgrad_chi13312 + F13*F22*dAdgrad_chi23312 + F13*F23*dAdgrad_chi33312;
        dadgrad_chi(8,24) = F11*F21*dAdgrad_chi11332 + F11*F22*dAdgrad_chi21332 + F11*F23*dAdgrad_chi31332 + F12*F21*dAdgrad_chi12332 + F12*F22*dAdgrad_chi22332 + F12*F23*dAdgrad_chi32332 + F13*F21*dAdgrad_chi13332 + F13*F22*dAdgrad_chi23332 + F13*F23*dAdgrad_chi33332;
        dadgrad_chi(8,25) = F11*F21*dAdgrad_chi11331 + F11*F22*dAdgrad_chi21331 + F11*F23*dAdgrad_chi31331 + F12*F21*dAdgrad_chi12331 + F12*F22*dAdgrad_chi22331 + F12*F23*dAdgrad_chi32331 + F13*F21*dAdgrad_chi13331 + F13*F22*dAdgrad_chi23331 + F13*F23*dAdgrad_chi33331;
        dadgrad_chi(8,26) = F11*F21*dAdgrad_chi11321 + F11*F22*dAdgrad_chi21321 + F11*F23*dAdgrad_chi31321 + F12*F21*dAdgrad_chi12321 + F12*F22*dAdgrad_chi22321 + F12*F23*dAdgrad_chi32321 + F13*F21*dAdgrad_chi13321 + F13*F22*dAdgrad_chi23321 + F13*F23*dAdgrad_chi33321;


        dadF /= J;
        return;
    }
    
    void map_dAdgrad_chi_to_dadgrad_chi(const Vector_27 &A, const Matrix_27x27 &dAdgrad_chi, const double &J, const Matrix_3x3 &F, const Matrix_3x3 &chi, Matrix_27x27 dadgrad_chi){
        /*!========================================
        |    map_dAdgrad_chi_to_dadgrad_chi    |
        ========================================
        
        Map the gradient of a stress tensor w.r.t. the gradient w.r.t. the reference coordinate X of the micro-deformation tensor 
        in the reference configuration to the current configuration.
        
        Note that grad_chi is chi_iI,J to the resulting gradient is dadgrad_chi_ijklK,L.
        
        This is for the higher order stress
        */
        
        dadgrad_chi = Matrix_27x27::Zero();
        
        //Compute the jacobian of deformation
        double J = F.determinant()
        
        //Extracting A
        double A111= A(0);
        double A122= A(1);
        double A133= A(2);
        double A123= A(3);
        double A113= A(4);
        double A112= A(5);
        double A132= A(6);
        double A131= A(7);
        double A121= A(8);
        double A211= A(9);
        double A222= A(10);
        double A233= A(11);
        double A223= A(12);
        double A213= A(13);
        double A212= A(14);
        double A232= A(15);
        double A231= A(16);
        double A221= A(17);
        double A311= A(18);
        double A322= A(19);
        double A333= A(20);
        double A323= A(21);
        double A313= A(22);
        double A312= A(23);
        double A332= A(24);
        double A331= A(25);
        double A321= A(26);

        //Extracting chi
        double chi11= chi(0,0);
        double chi12= chi(0,1);
        double chi13= chi(0,2);
        double chi21= chi(1,0);
        double chi22= chi(1,1);
        double chi23= chi(1,2);
        double chi31= chi(2,0);
        double chi32= chi(2,1);
        double chi33= chi(2,2);

        //Extracting dAdchi
        double dAdchi111111= dAdchi(0,0);
        double dAdchi111122= dAdchi(0,1);
        double dAdchi111133= dAdchi(0,2);
        double dAdchi111123= dAdchi(0,3);
        double dAdchi111113= dAdchi(0,4);
        double dAdchi111112= dAdchi(0,5);
        double dAdchi111132= dAdchi(0,6);
        double dAdchi111131= dAdchi(0,7);
        double dAdchi111121= dAdchi(0,8);
        double dAdchi111211= dAdchi(0,9);
        double dAdchi111222= dAdchi(0,10);
        double dAdchi111233= dAdchi(0,11);
        double dAdchi111223= dAdchi(0,12);
        double dAdchi111213= dAdchi(0,13);
        double dAdchi111212= dAdchi(0,14);
        double dAdchi111232= dAdchi(0,15);
        double dAdchi111231= dAdchi(0,16);
        double dAdchi111221= dAdchi(0,17);
        double dAdchi111311= dAdchi(0,18);
        double dAdchi111322= dAdchi(0,19);
        double dAdchi111333= dAdchi(0,20);
        double dAdchi111323= dAdchi(0,21);
        double dAdchi111313= dAdchi(0,22);
        double dAdchi111312= dAdchi(0,23);
        double dAdchi111332= dAdchi(0,24);
        double dAdchi111331= dAdchi(0,25);
        double dAdchi111321= dAdchi(0,26);
        double dAdchi122111= dAdchi(1,0);
        double dAdchi122122= dAdchi(1,1);
        double dAdchi122133= dAdchi(1,2);
        double dAdchi122123= dAdchi(1,3);
        double dAdchi122113= dAdchi(1,4);
        double dAdchi122112= dAdchi(1,5);
        double dAdchi122132= dAdchi(1,6);
        double dAdchi122131= dAdchi(1,7);
        double dAdchi122121= dAdchi(1,8);
        double dAdchi122211= dAdchi(1,9);
        double dAdchi122222= dAdchi(1,10);
        double dAdchi122233= dAdchi(1,11);
        double dAdchi122223= dAdchi(1,12);
        double dAdchi122213= dAdchi(1,13);
        double dAdchi122212= dAdchi(1,14);
        double dAdchi122232= dAdchi(1,15);
        double dAdchi122231= dAdchi(1,16);
        double dAdchi122221= dAdchi(1,17);
        double dAdchi122311= dAdchi(1,18);
        double dAdchi122322= dAdchi(1,19);
        double dAdchi122333= dAdchi(1,20);
        double dAdchi122323= dAdchi(1,21);
        double dAdchi122313= dAdchi(1,22);
        double dAdchi122312= dAdchi(1,23);
        double dAdchi122332= dAdchi(1,24);
        double dAdchi122331= dAdchi(1,25);
        double dAdchi122321= dAdchi(1,26);
        double dAdchi133111= dAdchi(2,0);
        double dAdchi133122= dAdchi(2,1);
        double dAdchi133133= dAdchi(2,2);
        double dAdchi133123= dAdchi(2,3);
        double dAdchi133113= dAdchi(2,4);
        double dAdchi133112= dAdchi(2,5);
        double dAdchi133132= dAdchi(2,6);
        double dAdchi133131= dAdchi(2,7);
        double dAdchi133121= dAdchi(2,8);
        double dAdchi133211= dAdchi(2,9);
        double dAdchi133222= dAdchi(2,10);
        double dAdchi133233= dAdchi(2,11);
        double dAdchi133223= dAdchi(2,12);
        double dAdchi133213= dAdchi(2,13);
        double dAdchi133212= dAdchi(2,14);
        double dAdchi133232= dAdchi(2,15);
        double dAdchi133231= dAdchi(2,16);
        double dAdchi133221= dAdchi(2,17);
        double dAdchi133311= dAdchi(2,18);
        double dAdchi133322= dAdchi(2,19);
        double dAdchi133333= dAdchi(2,20);
        double dAdchi133323= dAdchi(2,21);
        double dAdchi133313= dAdchi(2,22);
        double dAdchi133312= dAdchi(2,23);
        double dAdchi133332= dAdchi(2,24);
        double dAdchi133331= dAdchi(2,25);
        double dAdchi133321= dAdchi(2,26);
        double dAdchi123111= dAdchi(3,0);
        double dAdchi123122= dAdchi(3,1);
        double dAdchi123133= dAdchi(3,2);
        double dAdchi123123= dAdchi(3,3);
        double dAdchi123113= dAdchi(3,4);
        double dAdchi123112= dAdchi(3,5);
        double dAdchi123132= dAdchi(3,6);
        double dAdchi123131= dAdchi(3,7);
        double dAdchi123121= dAdchi(3,8);
        double dAdchi123211= dAdchi(3,9);
        double dAdchi123222= dAdchi(3,10);
        double dAdchi123233= dAdchi(3,11);
        double dAdchi123223= dAdchi(3,12);
        double dAdchi123213= dAdchi(3,13);
        double dAdchi123212= dAdchi(3,14);
        double dAdchi123232= dAdchi(3,15);
        double dAdchi123231= dAdchi(3,16);
        double dAdchi123221= dAdchi(3,17);
        double dAdchi123311= dAdchi(3,18);
        double dAdchi123322= dAdchi(3,19);
        double dAdchi123333= dAdchi(3,20);
        double dAdchi123323= dAdchi(3,21);
        double dAdchi123313= dAdchi(3,22);
        double dAdchi123312= dAdchi(3,23);
        double dAdchi123332= dAdchi(3,24);
        double dAdchi123331= dAdchi(3,25);
        double dAdchi123321= dAdchi(3,26);
        double dAdchi113111= dAdchi(4,0);
        double dAdchi113122= dAdchi(4,1);
        double dAdchi113133= dAdchi(4,2);
        double dAdchi113123= dAdchi(4,3);
        double dAdchi113113= dAdchi(4,4);
        double dAdchi113112= dAdchi(4,5);
        double dAdchi113132= dAdchi(4,6);
        double dAdchi113131= dAdchi(4,7);
        double dAdchi113121= dAdchi(4,8);
        double dAdchi113211= dAdchi(4,9);
        double dAdchi113222= dAdchi(4,10);
        double dAdchi113233= dAdchi(4,11);
        double dAdchi113223= dAdchi(4,12);
        double dAdchi113213= dAdchi(4,13);
        double dAdchi113212= dAdchi(4,14);
        double dAdchi113232= dAdchi(4,15);
        double dAdchi113231= dAdchi(4,16);
        double dAdchi113221= dAdchi(4,17);
        double dAdchi113311= dAdchi(4,18);
        double dAdchi113322= dAdchi(4,19);
        double dAdchi113333= dAdchi(4,20);
        double dAdchi113323= dAdchi(4,21);
        double dAdchi113313= dAdchi(4,22);
        double dAdchi113312= dAdchi(4,23);
        double dAdchi113332= dAdchi(4,24);
        double dAdchi113331= dAdchi(4,25);
        double dAdchi113321= dAdchi(4,26);
        double dAdchi112111= dAdchi(5,0);
        double dAdchi112122= dAdchi(5,1);
        double dAdchi112133= dAdchi(5,2);
        double dAdchi112123= dAdchi(5,3);
        double dAdchi112113= dAdchi(5,4);
        double dAdchi112112= dAdchi(5,5);
        double dAdchi112132= dAdchi(5,6);
        double dAdchi112131= dAdchi(5,7);
        double dAdchi112121= dAdchi(5,8);
        double dAdchi112211= dAdchi(5,9);
        double dAdchi112222= dAdchi(5,10);
        double dAdchi112233= dAdchi(5,11);
        double dAdchi112223= dAdchi(5,12);
        double dAdchi112213= dAdchi(5,13);
        double dAdchi112212= dAdchi(5,14);
        double dAdchi112232= dAdchi(5,15);
        double dAdchi112231= dAdchi(5,16);
        double dAdchi112221= dAdchi(5,17);
        double dAdchi112311= dAdchi(5,18);
        double dAdchi112322= dAdchi(5,19);
        double dAdchi112333= dAdchi(5,20);
        double dAdchi112323= dAdchi(5,21);
        double dAdchi112313= dAdchi(5,22);
        double dAdchi112312= dAdchi(5,23);
        double dAdchi112332= dAdchi(5,24);
        double dAdchi112331= dAdchi(5,25);
        double dAdchi112321= dAdchi(5,26);
        double dAdchi132111= dAdchi(6,0);
        double dAdchi132122= dAdchi(6,1);
        double dAdchi132133= dAdchi(6,2);
        double dAdchi132123= dAdchi(6,3);
        double dAdchi132113= dAdchi(6,4);
        double dAdchi132112= dAdchi(6,5);
        double dAdchi132132= dAdchi(6,6);
        double dAdchi132131= dAdchi(6,7);
        double dAdchi132121= dAdchi(6,8);
        double dAdchi132211= dAdchi(6,9);
        double dAdchi132222= dAdchi(6,10);
        double dAdchi132233= dAdchi(6,11);
        double dAdchi132223= dAdchi(6,12);
        double dAdchi132213= dAdchi(6,13);
        double dAdchi132212= dAdchi(6,14);
        double dAdchi132232= dAdchi(6,15);
        double dAdchi132231= dAdchi(6,16);
        double dAdchi132221= dAdchi(6,17);
        double dAdchi132311= dAdchi(6,18);
        double dAdchi132322= dAdchi(6,19);
        double dAdchi132333= dAdchi(6,20);
        double dAdchi132323= dAdchi(6,21);
        double dAdchi132313= dAdchi(6,22);
        double dAdchi132312= dAdchi(6,23);
        double dAdchi132332= dAdchi(6,24);
        double dAdchi132331= dAdchi(6,25);
        double dAdchi132321= dAdchi(6,26);
        double dAdchi131111= dAdchi(7,0);
        double dAdchi131122= dAdchi(7,1);
        double dAdchi131133= dAdchi(7,2);
        double dAdchi131123= dAdchi(7,3);
        double dAdchi131113= dAdchi(7,4);
        double dAdchi131112= dAdchi(7,5);
        double dAdchi131132= dAdchi(7,6);
        double dAdchi131131= dAdchi(7,7);
        double dAdchi131121= dAdchi(7,8);
        double dAdchi131211= dAdchi(7,9);
        double dAdchi131222= dAdchi(7,10);
        double dAdchi131233= dAdchi(7,11);
        double dAdchi131223= dAdchi(7,12);
        double dAdchi131213= dAdchi(7,13);
        double dAdchi131212= dAdchi(7,14);
        double dAdchi131232= dAdchi(7,15);
        double dAdchi131231= dAdchi(7,16);
        double dAdchi131221= dAdchi(7,17);
        double dAdchi131311= dAdchi(7,18);
        double dAdchi131322= dAdchi(7,19);
        double dAdchi131333= dAdchi(7,20);
        double dAdchi131323= dAdchi(7,21);
        double dAdchi131313= dAdchi(7,22);
        double dAdchi131312= dAdchi(7,23);
        double dAdchi131332= dAdchi(7,24);
        double dAdchi131331= dAdchi(7,25);
        double dAdchi131321= dAdchi(7,26);
        double dAdchi121111= dAdchi(8,0);
        double dAdchi121122= dAdchi(8,1);
        double dAdchi121133= dAdchi(8,2);
        double dAdchi121123= dAdchi(8,3);
        double dAdchi121113= dAdchi(8,4);
        double dAdchi121112= dAdchi(8,5);
        double dAdchi121132= dAdchi(8,6);
        double dAdchi121131= dAdchi(8,7);
        double dAdchi121121= dAdchi(8,8);
        double dAdchi121211= dAdchi(8,9);
        double dAdchi121222= dAdchi(8,10);
        double dAdchi121233= dAdchi(8,11);
        double dAdchi121223= dAdchi(8,12);
        double dAdchi121213= dAdchi(8,13);
        double dAdchi121212= dAdchi(8,14);
        double dAdchi121232= dAdchi(8,15);
        double dAdchi121231= dAdchi(8,16);
        double dAdchi121221= dAdchi(8,17);
        double dAdchi121311= dAdchi(8,18);
        double dAdchi121322= dAdchi(8,19);
        double dAdchi121333= dAdchi(8,20);
        double dAdchi121323= dAdchi(8,21);
        double dAdchi121313= dAdchi(8,22);
        double dAdchi121312= dAdchi(8,23);
        double dAdchi121332= dAdchi(8,24);
        double dAdchi121331= dAdchi(8,25);
        double dAdchi121321= dAdchi(8,26);
        double dAdchi211111= dAdchi(9,0);
        double dAdchi211122= dAdchi(9,1);
        double dAdchi211133= dAdchi(9,2);
        double dAdchi211123= dAdchi(9,3);
        double dAdchi211113= dAdchi(9,4);
        double dAdchi211112= dAdchi(9,5);
        double dAdchi211132= dAdchi(9,6);
        double dAdchi211131= dAdchi(9,7);
        double dAdchi211121= dAdchi(9,8);
        double dAdchi211211= dAdchi(9,9);
        double dAdchi211222= dAdchi(9,10);
        double dAdchi211233= dAdchi(9,11);
        double dAdchi211223= dAdchi(9,12);
        double dAdchi211213= dAdchi(9,13);
        double dAdchi211212= dAdchi(9,14);
        double dAdchi211232= dAdchi(9,15);
        double dAdchi211231= dAdchi(9,16);
        double dAdchi211221= dAdchi(9,17);
        double dAdchi211311= dAdchi(9,18);
        double dAdchi211322= dAdchi(9,19);
        double dAdchi211333= dAdchi(9,20);
        double dAdchi211323= dAdchi(9,21);
        double dAdchi211313= dAdchi(9,22);
        double dAdchi211312= dAdchi(9,23);
        double dAdchi211332= dAdchi(9,24);
        double dAdchi211331= dAdchi(9,25);
        double dAdchi211321= dAdchi(9,26);
        double dAdchi222111= dAdchi(10,0);
        double dAdchi222122= dAdchi(10,1);
        double dAdchi222133= dAdchi(10,2);
        double dAdchi222123= dAdchi(10,3);
        double dAdchi222113= dAdchi(10,4);
        double dAdchi222112= dAdchi(10,5);
        double dAdchi222132= dAdchi(10,6);
        double dAdchi222131= dAdchi(10,7);
        double dAdchi222121= dAdchi(10,8);
        double dAdchi222211= dAdchi(10,9);
        double dAdchi222222= dAdchi(10,10);
        double dAdchi222233= dAdchi(10,11);
        double dAdchi222223= dAdchi(10,12);
        double dAdchi222213= dAdchi(10,13);
        double dAdchi222212= dAdchi(10,14);
        double dAdchi222232= dAdchi(10,15);
        double dAdchi222231= dAdchi(10,16);
        double dAdchi222221= dAdchi(10,17);
        double dAdchi222311= dAdchi(10,18);
        double dAdchi222322= dAdchi(10,19);
        double dAdchi222333= dAdchi(10,20);
        double dAdchi222323= dAdchi(10,21);
        double dAdchi222313= dAdchi(10,22);
        double dAdchi222312= dAdchi(10,23);
        double dAdchi222332= dAdchi(10,24);
        double dAdchi222331= dAdchi(10,25);
        double dAdchi222321= dAdchi(10,26);
        double dAdchi233111= dAdchi(11,0);
        double dAdchi233122= dAdchi(11,1);
        double dAdchi233133= dAdchi(11,2);
        double dAdchi233123= dAdchi(11,3);
        double dAdchi233113= dAdchi(11,4);
        double dAdchi233112= dAdchi(11,5);
        double dAdchi233132= dAdchi(11,6);
        double dAdchi233131= dAdchi(11,7);
        double dAdchi233121= dAdchi(11,8);
        double dAdchi233211= dAdchi(11,9);
        double dAdchi233222= dAdchi(11,10);
        double dAdchi233233= dAdchi(11,11);
        double dAdchi233223= dAdchi(11,12);
        double dAdchi233213= dAdchi(11,13);
        double dAdchi233212= dAdchi(11,14);
        double dAdchi233232= dAdchi(11,15);
        double dAdchi233231= dAdchi(11,16);
        double dAdchi233221= dAdchi(11,17);
        double dAdchi233311= dAdchi(11,18);
        double dAdchi233322= dAdchi(11,19);
        double dAdchi233333= dAdchi(11,20);
        double dAdchi233323= dAdchi(11,21);
        double dAdchi233313= dAdchi(11,22);
        double dAdchi233312= dAdchi(11,23);
        double dAdchi233332= dAdchi(11,24);
        double dAdchi233331= dAdchi(11,25);
        double dAdchi233321= dAdchi(11,26);
        double dAdchi223111= dAdchi(12,0);
        double dAdchi223122= dAdchi(12,1);
        double dAdchi223133= dAdchi(12,2);
        double dAdchi223123= dAdchi(12,3);
        double dAdchi223113= dAdchi(12,4);
        double dAdchi223112= dAdchi(12,5);
        double dAdchi223132= dAdchi(12,6);
        double dAdchi223131= dAdchi(12,7);
        double dAdchi223121= dAdchi(12,8);
        double dAdchi223211= dAdchi(12,9);
        double dAdchi223222= dAdchi(12,10);
        double dAdchi223233= dAdchi(12,11);
        double dAdchi223223= dAdchi(12,12);
        double dAdchi223213= dAdchi(12,13);
        double dAdchi223212= dAdchi(12,14);
        double dAdchi223232= dAdchi(12,15);
        double dAdchi223231= dAdchi(12,16);
        double dAdchi223221= dAdchi(12,17);
        double dAdchi223311= dAdchi(12,18);
        double dAdchi223322= dAdchi(12,19);
        double dAdchi223333= dAdchi(12,20);
        double dAdchi223323= dAdchi(12,21);
        double dAdchi223313= dAdchi(12,22);
        double dAdchi223312= dAdchi(12,23);
        double dAdchi223332= dAdchi(12,24);
        double dAdchi223331= dAdchi(12,25);
        double dAdchi223321= dAdchi(12,26);
        double dAdchi213111= dAdchi(13,0);
        double dAdchi213122= dAdchi(13,1);
        double dAdchi213133= dAdchi(13,2);
        double dAdchi213123= dAdchi(13,3);
        double dAdchi213113= dAdchi(13,4);
        double dAdchi213112= dAdchi(13,5);
        double dAdchi213132= dAdchi(13,6);
        double dAdchi213131= dAdchi(13,7);
        double dAdchi213121= dAdchi(13,8);
        double dAdchi213211= dAdchi(13,9);
        double dAdchi213222= dAdchi(13,10);
        double dAdchi213233= dAdchi(13,11);
        double dAdchi213223= dAdchi(13,12);
        double dAdchi213213= dAdchi(13,13);
        double dAdchi213212= dAdchi(13,14);
        double dAdchi213232= dAdchi(13,15);
        double dAdchi213231= dAdchi(13,16);
        double dAdchi213221= dAdchi(13,17);
        double dAdchi213311= dAdchi(13,18);
        double dAdchi213322= dAdchi(13,19);
        double dAdchi213333= dAdchi(13,20);
        double dAdchi213323= dAdchi(13,21);
        double dAdchi213313= dAdchi(13,22);
        double dAdchi213312= dAdchi(13,23);
        double dAdchi213332= dAdchi(13,24);
        double dAdchi213331= dAdchi(13,25);
        double dAdchi213321= dAdchi(13,26);
        double dAdchi212111= dAdchi(14,0);
        double dAdchi212122= dAdchi(14,1);
        double dAdchi212133= dAdchi(14,2);
        double dAdchi212123= dAdchi(14,3);
        double dAdchi212113= dAdchi(14,4);
        double dAdchi212112= dAdchi(14,5);
        double dAdchi212132= dAdchi(14,6);
        double dAdchi212131= dAdchi(14,7);
        double dAdchi212121= dAdchi(14,8);
        double dAdchi212211= dAdchi(14,9);
        double dAdchi212222= dAdchi(14,10);
        double dAdchi212233= dAdchi(14,11);
        double dAdchi212223= dAdchi(14,12);
        double dAdchi212213= dAdchi(14,13);
        double dAdchi212212= dAdchi(14,14);
        double dAdchi212232= dAdchi(14,15);
        double dAdchi212231= dAdchi(14,16);
        double dAdchi212221= dAdchi(14,17);
        double dAdchi212311= dAdchi(14,18);
        double dAdchi212322= dAdchi(14,19);
        double dAdchi212333= dAdchi(14,20);
        double dAdchi212323= dAdchi(14,21);
        double dAdchi212313= dAdchi(14,22);
        double dAdchi212312= dAdchi(14,23);
        double dAdchi212332= dAdchi(14,24);
        double dAdchi212331= dAdchi(14,25);
        double dAdchi212321= dAdchi(14,26);
        double dAdchi232111= dAdchi(15,0);
        double dAdchi232122= dAdchi(15,1);
        double dAdchi232133= dAdchi(15,2);
        double dAdchi232123= dAdchi(15,3);
        double dAdchi232113= dAdchi(15,4);
        double dAdchi232112= dAdchi(15,5);
        double dAdchi232132= dAdchi(15,6);
        double dAdchi232131= dAdchi(15,7);
        double dAdchi232121= dAdchi(15,8);
        double dAdchi232211= dAdchi(15,9);
        double dAdchi232222= dAdchi(15,10);
        double dAdchi232233= dAdchi(15,11);
        double dAdchi232223= dAdchi(15,12);
        double dAdchi232213= dAdchi(15,13);
        double dAdchi232212= dAdchi(15,14);
        double dAdchi232232= dAdchi(15,15);
        double dAdchi232231= dAdchi(15,16);
        double dAdchi232221= dAdchi(15,17);
        double dAdchi232311= dAdchi(15,18);
        double dAdchi232322= dAdchi(15,19);
        double dAdchi232333= dAdchi(15,20);
        double dAdchi232323= dAdchi(15,21);
        double dAdchi232313= dAdchi(15,22);
        double dAdchi232312= dAdchi(15,23);
        double dAdchi232332= dAdchi(15,24);
        double dAdchi232331= dAdchi(15,25);
        double dAdchi232321= dAdchi(15,26);
        double dAdchi231111= dAdchi(16,0);
        double dAdchi231122= dAdchi(16,1);
        double dAdchi231133= dAdchi(16,2);
        double dAdchi231123= dAdchi(16,3);
        double dAdchi231113= dAdchi(16,4);
        double dAdchi231112= dAdchi(16,5);
        double dAdchi231132= dAdchi(16,6);
        double dAdchi231131= dAdchi(16,7);
        double dAdchi231121= dAdchi(16,8);
        double dAdchi231211= dAdchi(16,9);
        double dAdchi231222= dAdchi(16,10);
        double dAdchi231233= dAdchi(16,11);
        double dAdchi231223= dAdchi(16,12);
        double dAdchi231213= dAdchi(16,13);
        double dAdchi231212= dAdchi(16,14);
        double dAdchi231232= dAdchi(16,15);
        double dAdchi231231= dAdchi(16,16);
        double dAdchi231221= dAdchi(16,17);
        double dAdchi231311= dAdchi(16,18);
        double dAdchi231322= dAdchi(16,19);
        double dAdchi231333= dAdchi(16,20);
        double dAdchi231323= dAdchi(16,21);
        double dAdchi231313= dAdchi(16,22);
        double dAdchi231312= dAdchi(16,23);
        double dAdchi231332= dAdchi(16,24);
        double dAdchi231331= dAdchi(16,25);
        double dAdchi231321= dAdchi(16,26);
        double dAdchi221111= dAdchi(17,0);
        double dAdchi221122= dAdchi(17,1);
        double dAdchi221133= dAdchi(17,2);
        double dAdchi221123= dAdchi(17,3);
        double dAdchi221113= dAdchi(17,4);
        double dAdchi221112= dAdchi(17,5);
        double dAdchi221132= dAdchi(17,6);
        double dAdchi221131= dAdchi(17,7);
        double dAdchi221121= dAdchi(17,8);
        double dAdchi221211= dAdchi(17,9);
        double dAdchi221222= dAdchi(17,10);
        double dAdchi221233= dAdchi(17,11);
        double dAdchi221223= dAdchi(17,12);
        double dAdchi221213= dAdchi(17,13);
        double dAdchi221212= dAdchi(17,14);
        double dAdchi221232= dAdchi(17,15);
        double dAdchi221231= dAdchi(17,16);
        double dAdchi221221= dAdchi(17,17);
        double dAdchi221311= dAdchi(17,18);
        double dAdchi221322= dAdchi(17,19);
        double dAdchi221333= dAdchi(17,20);
        double dAdchi221323= dAdchi(17,21);
        double dAdchi221313= dAdchi(17,22);
        double dAdchi221312= dAdchi(17,23);
        double dAdchi221332= dAdchi(17,24);
        double dAdchi221331= dAdchi(17,25);
        double dAdchi221321= dAdchi(17,26);
        double dAdchi311111= dAdchi(18,0);
        double dAdchi311122= dAdchi(18,1);
        double dAdchi311133= dAdchi(18,2);
        double dAdchi311123= dAdchi(18,3);
        double dAdchi311113= dAdchi(18,4);
        double dAdchi311112= dAdchi(18,5);
        double dAdchi311132= dAdchi(18,6);
        double dAdchi311131= dAdchi(18,7);
        double dAdchi311121= dAdchi(18,8);
        double dAdchi311211= dAdchi(18,9);
        double dAdchi311222= dAdchi(18,10);
        double dAdchi311233= dAdchi(18,11);
        double dAdchi311223= dAdchi(18,12);
        double dAdchi311213= dAdchi(18,13);
        double dAdchi311212= dAdchi(18,14);
        double dAdchi311232= dAdchi(18,15);
        double dAdchi311231= dAdchi(18,16);
        double dAdchi311221= dAdchi(18,17);
        double dAdchi311311= dAdchi(18,18);
        double dAdchi311322= dAdchi(18,19);
        double dAdchi311333= dAdchi(18,20);
        double dAdchi311323= dAdchi(18,21);
        double dAdchi311313= dAdchi(18,22);
        double dAdchi311312= dAdchi(18,23);
        double dAdchi311332= dAdchi(18,24);
        double dAdchi311331= dAdchi(18,25);
        double dAdchi311321= dAdchi(18,26);
        double dAdchi322111= dAdchi(19,0);
        double dAdchi322122= dAdchi(19,1);
        double dAdchi322133= dAdchi(19,2);
        double dAdchi322123= dAdchi(19,3);
        double dAdchi322113= dAdchi(19,4);
        double dAdchi322112= dAdchi(19,5);
        double dAdchi322132= dAdchi(19,6);
        double dAdchi322131= dAdchi(19,7);
        double dAdchi322121= dAdchi(19,8);
        double dAdchi322211= dAdchi(19,9);
        double dAdchi322222= dAdchi(19,10);
        double dAdchi322233= dAdchi(19,11);
        double dAdchi322223= dAdchi(19,12);
        double dAdchi322213= dAdchi(19,13);
        double dAdchi322212= dAdchi(19,14);
        double dAdchi322232= dAdchi(19,15);
        double dAdchi322231= dAdchi(19,16);
        double dAdchi322221= dAdchi(19,17);
        double dAdchi322311= dAdchi(19,18);
        double dAdchi322322= dAdchi(19,19);
        double dAdchi322333= dAdchi(19,20);
        double dAdchi322323= dAdchi(19,21);
        double dAdchi322313= dAdchi(19,22);
        double dAdchi322312= dAdchi(19,23);
        double dAdchi322332= dAdchi(19,24);
        double dAdchi322331= dAdchi(19,25);
        double dAdchi322321= dAdchi(19,26);
        double dAdchi333111= dAdchi(20,0);
        double dAdchi333122= dAdchi(20,1);
        double dAdchi333133= dAdchi(20,2);
        double dAdchi333123= dAdchi(20,3);
        double dAdchi333113= dAdchi(20,4);
        double dAdchi333112= dAdchi(20,5);
        double dAdchi333132= dAdchi(20,6);
        double dAdchi333131= dAdchi(20,7);
        double dAdchi333121= dAdchi(20,8);
        double dAdchi333211= dAdchi(20,9);
        double dAdchi333222= dAdchi(20,10);
        double dAdchi333233= dAdchi(20,11);
        double dAdchi333223= dAdchi(20,12);
        double dAdchi333213= dAdchi(20,13);
        double dAdchi333212= dAdchi(20,14);
        double dAdchi333232= dAdchi(20,15);
        double dAdchi333231= dAdchi(20,16);
        double dAdchi333221= dAdchi(20,17);
        double dAdchi333311= dAdchi(20,18);
        double dAdchi333322= dAdchi(20,19);
        double dAdchi333333= dAdchi(20,20);
        double dAdchi333323= dAdchi(20,21);
        double dAdchi333313= dAdchi(20,22);
        double dAdchi333312= dAdchi(20,23);
        double dAdchi333332= dAdchi(20,24);
        double dAdchi333331= dAdchi(20,25);
        double dAdchi333321= dAdchi(20,26);
        double dAdchi323111= dAdchi(21,0);
        double dAdchi323122= dAdchi(21,1);
        double dAdchi323133= dAdchi(21,2);
        double dAdchi323123= dAdchi(21,3);
        double dAdchi323113= dAdchi(21,4);
        double dAdchi323112= dAdchi(21,5);
        double dAdchi323132= dAdchi(21,6);
        double dAdchi323131= dAdchi(21,7);
        double dAdchi323121= dAdchi(21,8);
        double dAdchi323211= dAdchi(21,9);
        double dAdchi323222= dAdchi(21,10);
        double dAdchi323233= dAdchi(21,11);
        double dAdchi323223= dAdchi(21,12);
        double dAdchi323213= dAdchi(21,13);
        double dAdchi323212= dAdchi(21,14);
        double dAdchi323232= dAdchi(21,15);
        double dAdchi323231= dAdchi(21,16);
        double dAdchi323221= dAdchi(21,17);
        double dAdchi323311= dAdchi(21,18);
        double dAdchi323322= dAdchi(21,19);
        double dAdchi323333= dAdchi(21,20);
        double dAdchi323323= dAdchi(21,21);
        double dAdchi323313= dAdchi(21,22);
        double dAdchi323312= dAdchi(21,23);
        double dAdchi323332= dAdchi(21,24);
        double dAdchi323331= dAdchi(21,25);
        double dAdchi323321= dAdchi(21,26);
        double dAdchi313111= dAdchi(22,0);
        double dAdchi313122= dAdchi(22,1);
        double dAdchi313133= dAdchi(22,2);
        double dAdchi313123= dAdchi(22,3);
        double dAdchi313113= dAdchi(22,4);
        double dAdchi313112= dAdchi(22,5);
        double dAdchi313132= dAdchi(22,6);
        double dAdchi313131= dAdchi(22,7);
        double dAdchi313121= dAdchi(22,8);
        double dAdchi313211= dAdchi(22,9);
        double dAdchi313222= dAdchi(22,10);
        double dAdchi313233= dAdchi(22,11);
        double dAdchi313223= dAdchi(22,12);
        double dAdchi313213= dAdchi(22,13);
        double dAdchi313212= dAdchi(22,14);
        double dAdchi313232= dAdchi(22,15);
        double dAdchi313231= dAdchi(22,16);
        double dAdchi313221= dAdchi(22,17);
        double dAdchi313311= dAdchi(22,18);
        double dAdchi313322= dAdchi(22,19);
        double dAdchi313333= dAdchi(22,20);
        double dAdchi313323= dAdchi(22,21);
        double dAdchi313313= dAdchi(22,22);
        double dAdchi313312= dAdchi(22,23);
        double dAdchi313332= dAdchi(22,24);
        double dAdchi313331= dAdchi(22,25);
        double dAdchi313321= dAdchi(22,26);
        double dAdchi312111= dAdchi(23,0);
        double dAdchi312122= dAdchi(23,1);
        double dAdchi312133= dAdchi(23,2);
        double dAdchi312123= dAdchi(23,3);
        double dAdchi312113= dAdchi(23,4);
        double dAdchi312112= dAdchi(23,5);
        double dAdchi312132= dAdchi(23,6);
        double dAdchi312131= dAdchi(23,7);
        double dAdchi312121= dAdchi(23,8);
        double dAdchi312211= dAdchi(23,9);
        double dAdchi312222= dAdchi(23,10);
        double dAdchi312233= dAdchi(23,11);
        double dAdchi312223= dAdchi(23,12);
        double dAdchi312213= dAdchi(23,13);
        double dAdchi312212= dAdchi(23,14);
        double dAdchi312232= dAdchi(23,15);
        double dAdchi312231= dAdchi(23,16);
        double dAdchi312221= dAdchi(23,17);
        double dAdchi312311= dAdchi(23,18);
        double dAdchi312322= dAdchi(23,19);
        double dAdchi312333= dAdchi(23,20);
        double dAdchi312323= dAdchi(23,21);
        double dAdchi312313= dAdchi(23,22);
        double dAdchi312312= dAdchi(23,23);
        double dAdchi312332= dAdchi(23,24);
        double dAdchi312331= dAdchi(23,25);
        double dAdchi312321= dAdchi(23,26);
        double dAdchi332111= dAdchi(24,0);
        double dAdchi332122= dAdchi(24,1);
        double dAdchi332133= dAdchi(24,2);
        double dAdchi332123= dAdchi(24,3);
        double dAdchi332113= dAdchi(24,4);
        double dAdchi332112= dAdchi(24,5);
        double dAdchi332132= dAdchi(24,6);
        double dAdchi332131= dAdchi(24,7);
        double dAdchi332121= dAdchi(24,8);
        double dAdchi332211= dAdchi(24,9);
        double dAdchi332222= dAdchi(24,10);
        double dAdchi332233= dAdchi(24,11);
        double dAdchi332223= dAdchi(24,12);
        double dAdchi332213= dAdchi(24,13);
        double dAdchi332212= dAdchi(24,14);
        double dAdchi332232= dAdchi(24,15);
        double dAdchi332231= dAdchi(24,16);
        double dAdchi332221= dAdchi(24,17);
        double dAdchi332311= dAdchi(24,18);
        double dAdchi332322= dAdchi(24,19);
        double dAdchi332333= dAdchi(24,20);
        double dAdchi332323= dAdchi(24,21);
        double dAdchi332313= dAdchi(24,22);
        double dAdchi332312= dAdchi(24,23);
        double dAdchi332332= dAdchi(24,24);
        double dAdchi332331= dAdchi(24,25);
        double dAdchi332321= dAdchi(24,26);
        double dAdchi331111= dAdchi(25,0);
        double dAdchi331122= dAdchi(25,1);
        double dAdchi331133= dAdchi(25,2);
        double dAdchi331123= dAdchi(25,3);
        double dAdchi331113= dAdchi(25,4);
        double dAdchi331112= dAdchi(25,5);
        double dAdchi331132= dAdchi(25,6);
        double dAdchi331131= dAdchi(25,7);
        double dAdchi331121= dAdchi(25,8);
        double dAdchi331211= dAdchi(25,9);
        double dAdchi331222= dAdchi(25,10);
        double dAdchi331233= dAdchi(25,11);
        double dAdchi331223= dAdchi(25,12);
        double dAdchi331213= dAdchi(25,13);
        double dAdchi331212= dAdchi(25,14);
        double dAdchi331232= dAdchi(25,15);
        double dAdchi331231= dAdchi(25,16);
        double dAdchi331221= dAdchi(25,17);
        double dAdchi331311= dAdchi(25,18);
        double dAdchi331322= dAdchi(25,19);
        double dAdchi331333= dAdchi(25,20);
        double dAdchi331323= dAdchi(25,21);
        double dAdchi331313= dAdchi(25,22);
        double dAdchi331312= dAdchi(25,23);
        double dAdchi331332= dAdchi(25,24);
        double dAdchi331331= dAdchi(25,25);
        double dAdchi331321= dAdchi(25,26);
        double dAdchi321111= dAdchi(26,0);
        double dAdchi321122= dAdchi(26,1);
        double dAdchi321133= dAdchi(26,2);
        double dAdchi321123= dAdchi(26,3);
        double dAdchi321113= dAdchi(26,4);
        double dAdchi321112= dAdchi(26,5);
        double dAdchi321132= dAdchi(26,6);
        double dAdchi321131= dAdchi(26,7);
        double dAdchi321121= dAdchi(26,8);
        double dAdchi321211= dAdchi(26,9);
        double dAdchi321222= dAdchi(26,10);
        double dAdchi321233= dAdchi(26,11);
        double dAdchi321223= dAdchi(26,12);
        double dAdchi321213= dAdchi(26,13);
        double dAdchi321212= dAdchi(26,14);
        double dAdchi321232= dAdchi(26,15);
        double dAdchi321231= dAdchi(26,16);
        double dAdchi321221= dAdchi(26,17);
        double dAdchi321311= dAdchi(26,18);
        double dAdchi321322= dAdchi(26,19);
        double dAdchi321333= dAdchi(26,20);
        double dAdchi321323= dAdchi(26,21);
        double dAdchi321313= dAdchi(26,22);
        double dAdchi321312= dAdchi(26,23);
        double dAdchi321332= dAdchi(26,24);
        double dAdchi321331= dAdchi(26,25);
        double dAdchi321321= dAdchi(26,26);

        //Extracting F
        double F11= F(0,0);
        double F12= F(0,1);
        double F13= F(0,2);
        double F21= F(1,0);
        double F22= F(1,1);
        double F23= F(1,2);
        double F31= F(2,0);
        double F32= F(2,1);
        double F33= F(2,2);

        dadgrad_chi(0,0) = F11*F11*chi11*dAdgrad_chi111111 + F11*F11*chi12*dAdgrad_chi112111 + F11*F11*chi13*dAdgrad_chi113111 + F11*F12*chi11*dAdgrad_chi121111 + F11*F12*chi11*dAdgrad_chi211111 + F11*F12*chi12*dAdgrad_chi122111 + F11*F12*chi12*dAdgrad_chi212111 + F11*F12*chi13*dAdgrad_chi123111 + F11*F12*chi13*dAdgrad_chi213111 + F11*F13*chi11*dAdgrad_chi131111 + F11*F13*chi11*dAdgrad_chi311111 + F11*F13*chi12*dAdgrad_chi132111 + F11*F13*chi12*dAdgrad_chi312111 + F11*F13*chi13*dAdgrad_chi133111 + F11*F13*chi13*dAdgrad_chi313111 + F12*F12*chi11*dAdgrad_chi221111 + F12*F12*chi12*dAdgrad_chi222111 + F12*F12*chi13*dAdgrad_chi223111 + F12*F13*chi11*dAdgrad_chi231111 + F12*F13*chi11*dAdgrad_chi321111 + F12*F13*chi12*dAdgrad_chi232111 + F12*F13*chi12*dAdgrad_chi322111 + F12*F13*chi13*dAdgrad_chi233111 + F12*F13*chi13*dAdgrad_chi323111 + F13*F13*chi11*dAdgrad_chi331111 + F13*F13*chi12*dAdgrad_chi332111 + F13*F13*chi13*dAdgrad_chi333111 + _111111;
        dadgrad_chi(0,1) = F11*F11*chi11*dAdgrad_chi111122 + F11*F11*chi12*dAdgrad_chi112122 + F11*F11*chi13*dAdgrad_chi113122 + F11*F12*chi11*dAdgrad_chi121122 + F11*F12*chi11*dAdgrad_chi211122 + F11*F12*chi12*dAdgrad_chi122122 + F11*F12*chi12*dAdgrad_chi212122 + F11*F12*chi13*dAdgrad_chi123122 + F11*F12*chi13*dAdgrad_chi213122 + F11*F13*chi11*dAdgrad_chi131122 + F11*F13*chi11*dAdgrad_chi311122 + F11*F13*chi12*dAdgrad_chi132122 + F11*F13*chi12*dAdgrad_chi312122 + F11*F13*chi13*dAdgrad_chi133122 + F11*F13*chi13*dAdgrad_chi313122 + F12*F12*chi11*dAdgrad_chi221122 + F12*F12*chi12*dAdgrad_chi222122 + F12*F12*chi13*dAdgrad_chi223122 + F12*F13*chi11*dAdgrad_chi231122 + F12*F13*chi11*dAdgrad_chi321122 + F12*F13*chi12*dAdgrad_chi232122 + F12*F13*chi12*dAdgrad_chi322122 + F12*F13*chi13*dAdgrad_chi233122 + F12*F13*chi13*dAdgrad_chi323122 + F13*F13*chi11*dAdgrad_chi331122 + F13*F13*chi12*dAdgrad_chi332122 + F13*F13*chi13*dAdgrad_chi333122 + _111122;
        dadgrad_chi(0,2) = F11*F11*chi11*dAdgrad_chi111133 + F11*F11*chi12*dAdgrad_chi112133 + F11*F11*chi13*dAdgrad_chi113133 + F11*F12*chi11*dAdgrad_chi121133 + F11*F12*chi11*dAdgrad_chi211133 + F11*F12*chi12*dAdgrad_chi122133 + F11*F12*chi12*dAdgrad_chi212133 + F11*F12*chi13*dAdgrad_chi123133 + F11*F12*chi13*dAdgrad_chi213133 + F11*F13*chi11*dAdgrad_chi131133 + F11*F13*chi11*dAdgrad_chi311133 + F11*F13*chi12*dAdgrad_chi132133 + F11*F13*chi12*dAdgrad_chi312133 + F11*F13*chi13*dAdgrad_chi133133 + F11*F13*chi13*dAdgrad_chi313133 + F12*F12*chi11*dAdgrad_chi221133 + F12*F12*chi12*dAdgrad_chi222133 + F12*F12*chi13*dAdgrad_chi223133 + F12*F13*chi11*dAdgrad_chi231133 + F12*F13*chi11*dAdgrad_chi321133 + F12*F13*chi12*dAdgrad_chi232133 + F12*F13*chi12*dAdgrad_chi322133 + F12*F13*chi13*dAdgrad_chi233133 + F12*F13*chi13*dAdgrad_chi323133 + F13*F13*chi11*dAdgrad_chi331133 + F13*F13*chi12*dAdgrad_chi332133 + F13*F13*chi13*dAdgrad_chi333133 + _111133;
        dadgrad_chi(0,3) = F11*F11*chi11*dAdgrad_chi111123 + F11*F11*chi12*dAdgrad_chi112123 + F11*F11*chi13*dAdgrad_chi113123 + F11*F12*chi11*dAdgrad_chi121123 + F11*F12*chi11*dAdgrad_chi211123 + F11*F12*chi12*dAdgrad_chi122123 + F11*F12*chi12*dAdgrad_chi212123 + F11*F12*chi13*dAdgrad_chi123123 + F11*F12*chi13*dAdgrad_chi213123 + F11*F13*chi11*dAdgrad_chi131123 + F11*F13*chi11*dAdgrad_chi311123 + F11*F13*chi12*dAdgrad_chi132123 + F11*F13*chi12*dAdgrad_chi312123 + F11*F13*chi13*dAdgrad_chi133123 + F11*F13*chi13*dAdgrad_chi313123 + F12*F12*chi11*dAdgrad_chi221123 + F12*F12*chi12*dAdgrad_chi222123 + F12*F12*chi13*dAdgrad_chi223123 + F12*F13*chi11*dAdgrad_chi231123 + F12*F13*chi11*dAdgrad_chi321123 + F12*F13*chi12*dAdgrad_chi232123 + F12*F13*chi12*dAdgrad_chi322123 + F12*F13*chi13*dAdgrad_chi233123 + F12*F13*chi13*dAdgrad_chi323123 + F13*F13*chi11*dAdgrad_chi331123 + F13*F13*chi12*dAdgrad_chi332123 + F13*F13*chi13*dAdgrad_chi333123 + _111123;
        dadgrad_chi(0,4) = F11*F11*chi11*dAdgrad_chi111113 + F11*F11*chi12*dAdgrad_chi112113 + F11*F11*chi13*dAdgrad_chi113113 + F11*F12*chi11*dAdgrad_chi121113 + F11*F12*chi11*dAdgrad_chi211113 + F11*F12*chi12*dAdgrad_chi122113 + F11*F12*chi12*dAdgrad_chi212113 + F11*F12*chi13*dAdgrad_chi123113 + F11*F12*chi13*dAdgrad_chi213113 + F11*F13*chi11*dAdgrad_chi131113 + F11*F13*chi11*dAdgrad_chi311113 + F11*F13*chi12*dAdgrad_chi132113 + F11*F13*chi12*dAdgrad_chi312113 + F11*F13*chi13*dAdgrad_chi133113 + F11*F13*chi13*dAdgrad_chi313113 + F12*F12*chi11*dAdgrad_chi221113 + F12*F12*chi12*dAdgrad_chi222113 + F12*F12*chi13*dAdgrad_chi223113 + F12*F13*chi11*dAdgrad_chi231113 + F12*F13*chi11*dAdgrad_chi321113 + F12*F13*chi12*dAdgrad_chi232113 + F12*F13*chi12*dAdgrad_chi322113 + F12*F13*chi13*dAdgrad_chi233113 + F12*F13*chi13*dAdgrad_chi323113 + F13*F13*chi11*dAdgrad_chi331113 + F13*F13*chi12*dAdgrad_chi332113 + F13*F13*chi13*dAdgrad_chi333113 + _111113;
        dadgrad_chi(0,5) = F11*F11*chi11*dAdgrad_chi111112 + F11*F11*chi12*dAdgrad_chi112112 + F11*F11*chi13*dAdgrad_chi113112 + F11*F12*chi11*dAdgrad_chi121112 + F11*F12*chi11*dAdgrad_chi211112 + F11*F12*chi12*dAdgrad_chi122112 + F11*F12*chi12*dAdgrad_chi212112 + F11*F12*chi13*dAdgrad_chi123112 + F11*F12*chi13*dAdgrad_chi213112 + F11*F13*chi11*dAdgrad_chi131112 + F11*F13*chi11*dAdgrad_chi311112 + F11*F13*chi12*dAdgrad_chi132112 + F11*F13*chi12*dAdgrad_chi312112 + F11*F13*chi13*dAdgrad_chi133112 + F11*F13*chi13*dAdgrad_chi313112 + F12*F12*chi11*dAdgrad_chi221112 + F12*F12*chi12*dAdgrad_chi222112 + F12*F12*chi13*dAdgrad_chi223112 + F12*F13*chi11*dAdgrad_chi231112 + F12*F13*chi11*dAdgrad_chi321112 + F12*F13*chi12*dAdgrad_chi232112 + F12*F13*chi12*dAdgrad_chi322112 + F12*F13*chi13*dAdgrad_chi233112 + F12*F13*chi13*dAdgrad_chi323112 + F13*F13*chi11*dAdgrad_chi331112 + F13*F13*chi12*dAdgrad_chi332112 + F13*F13*chi13*dAdgrad_chi333112 + _111112;
        dadgrad_chi(0,6) = F11*F11*chi11*dAdgrad_chi111132 + F11*F11*chi12*dAdgrad_chi112132 + F11*F11*chi13*dAdgrad_chi113132 + F11*F12*chi11*dAdgrad_chi121132 + F11*F12*chi11*dAdgrad_chi211132 + F11*F12*chi12*dAdgrad_chi122132 + F11*F12*chi12*dAdgrad_chi212132 + F11*F12*chi13*dAdgrad_chi123132 + F11*F12*chi13*dAdgrad_chi213132 + F11*F13*chi11*dAdgrad_chi131132 + F11*F13*chi11*dAdgrad_chi311132 + F11*F13*chi12*dAdgrad_chi132132 + F11*F13*chi12*dAdgrad_chi312132 + F11*F13*chi13*dAdgrad_chi133132 + F11*F13*chi13*dAdgrad_chi313132 + F12*F12*chi11*dAdgrad_chi221132 + F12*F12*chi12*dAdgrad_chi222132 + F12*F12*chi13*dAdgrad_chi223132 + F12*F13*chi11*dAdgrad_chi231132 + F12*F13*chi11*dAdgrad_chi321132 + F12*F13*chi12*dAdgrad_chi232132 + F12*F13*chi12*dAdgrad_chi322132 + F12*F13*chi13*dAdgrad_chi233132 + F12*F13*chi13*dAdgrad_chi323132 + F13*F13*chi11*dAdgrad_chi331132 + F13*F13*chi12*dAdgrad_chi332132 + F13*F13*chi13*dAdgrad_chi333132 + _111132;
        dadgrad_chi(0,7) = F11*F11*chi11*dAdgrad_chi111131 + F11*F11*chi12*dAdgrad_chi112131 + F11*F11*chi13*dAdgrad_chi113131 + F11*F12*chi11*dAdgrad_chi121131 + F11*F12*chi11*dAdgrad_chi211131 + F11*F12*chi12*dAdgrad_chi122131 + F11*F12*chi12*dAdgrad_chi212131 + F11*F12*chi13*dAdgrad_chi123131 + F11*F12*chi13*dAdgrad_chi213131 + F11*F13*chi11*dAdgrad_chi131131 + F11*F13*chi11*dAdgrad_chi311131 + F11*F13*chi12*dAdgrad_chi132131 + F11*F13*chi12*dAdgrad_chi312131 + F11*F13*chi13*dAdgrad_chi133131 + F11*F13*chi13*dAdgrad_chi313131 + F12*F12*chi11*dAdgrad_chi221131 + F12*F12*chi12*dAdgrad_chi222131 + F12*F12*chi13*dAdgrad_chi223131 + F12*F13*chi11*dAdgrad_chi231131 + F12*F13*chi11*dAdgrad_chi321131 + F12*F13*chi12*dAdgrad_chi232131 + F12*F13*chi12*dAdgrad_chi322131 + F12*F13*chi13*dAdgrad_chi233131 + F12*F13*chi13*dAdgrad_chi323131 + F13*F13*chi11*dAdgrad_chi331131 + F13*F13*chi12*dAdgrad_chi332131 + F13*F13*chi13*dAdgrad_chi333131 + _111131;
        dadgrad_chi(0,8) = F11*F11*chi11*dAdgrad_chi111121 + F11*F11*chi12*dAdgrad_chi112121 + F11*F11*chi13*dAdgrad_chi113121 + F11*F12*chi11*dAdgrad_chi121121 + F11*F12*chi11*dAdgrad_chi211121 + F11*F12*chi12*dAdgrad_chi122121 + F11*F12*chi12*dAdgrad_chi212121 + F11*F12*chi13*dAdgrad_chi123121 + F11*F12*chi13*dAdgrad_chi213121 + F11*F13*chi11*dAdgrad_chi131121 + F11*F13*chi11*dAdgrad_chi311121 + F11*F13*chi12*dAdgrad_chi132121 + F11*F13*chi12*dAdgrad_chi312121 + F11*F13*chi13*dAdgrad_chi133121 + F11*F13*chi13*dAdgrad_chi313121 + F12*F12*chi11*dAdgrad_chi221121 + F12*F12*chi12*dAdgrad_chi222121 + F12*F12*chi13*dAdgrad_chi223121 + F12*F13*chi11*dAdgrad_chi231121 + F12*F13*chi11*dAdgrad_chi321121 + F12*F13*chi12*dAdgrad_chi232121 + F12*F13*chi12*dAdgrad_chi322121 + F12*F13*chi13*dAdgrad_chi233121 + F12*F13*chi13*dAdgrad_chi323121 + F13*F13*chi11*dAdgrad_chi331121 + F13*F13*chi12*dAdgrad_chi332121 + F13*F13*chi13*dAdgrad_chi333121 + _111121;
        dadgrad_chi(0,9) = F11*F11*chi11*dAdgrad_chi111211 + F11*F11*chi12*dAdgrad_chi112211 + F11*F11*chi13*dAdgrad_chi113211 + F11*F12*chi11*dAdgrad_chi121211 + F11*F12*chi11*dAdgrad_chi211211 + F11*F12*chi12*dAdgrad_chi122211 + F11*F12*chi12*dAdgrad_chi212211 + F11*F12*chi13*dAdgrad_chi123211 + F11*F12*chi13*dAdgrad_chi213211 + F11*F13*chi11*dAdgrad_chi131211 + F11*F13*chi11*dAdgrad_chi311211 + F11*F13*chi12*dAdgrad_chi132211 + F11*F13*chi12*dAdgrad_chi312211 + F11*F13*chi13*dAdgrad_chi133211 + F11*F13*chi13*dAdgrad_chi313211 + F12*F12*chi11*dAdgrad_chi221211 + F12*F12*chi12*dAdgrad_chi222211 + F12*F12*chi13*dAdgrad_chi223211 + F12*F13*chi11*dAdgrad_chi231211 + F12*F13*chi11*dAdgrad_chi321211 + F12*F13*chi12*dAdgrad_chi232211 + F12*F13*chi12*dAdgrad_chi322211 + F12*F13*chi13*dAdgrad_chi233211 + F12*F13*chi13*dAdgrad_chi323211 + F13*F13*chi11*dAdgrad_chi331211 + F13*F13*chi12*dAdgrad_chi332211 + F13*F13*chi13*dAdgrad_chi333211 + _111211;
        dadgrad_chi(0,10) = F11*F11*chi11*dAdgrad_chi111222 + F11*F11*chi12*dAdgrad_chi112222 + F11*F11*chi13*dAdgrad_chi113222 + F11*F12*chi11*dAdgrad_chi121222 + F11*F12*chi11*dAdgrad_chi211222 + F11*F12*chi12*dAdgrad_chi122222 + F11*F12*chi12*dAdgrad_chi212222 + F11*F12*chi13*dAdgrad_chi123222 + F11*F12*chi13*dAdgrad_chi213222 + F11*F13*chi11*dAdgrad_chi131222 + F11*F13*chi11*dAdgrad_chi311222 + F11*F13*chi12*dAdgrad_chi132222 + F11*F13*chi12*dAdgrad_chi312222 + F11*F13*chi13*dAdgrad_chi133222 + F11*F13*chi13*dAdgrad_chi313222 + F12*F12*chi11*dAdgrad_chi221222 + F12*F12*chi12*dAdgrad_chi222222 + F12*F12*chi13*dAdgrad_chi223222 + F12*F13*chi11*dAdgrad_chi231222 + F12*F13*chi11*dAdgrad_chi321222 + F12*F13*chi12*dAdgrad_chi232222 + F12*F13*chi12*dAdgrad_chi322222 + F12*F13*chi13*dAdgrad_chi233222 + F12*F13*chi13*dAdgrad_chi323222 + F13*F13*chi11*dAdgrad_chi331222 + F13*F13*chi12*dAdgrad_chi332222 + F13*F13*chi13*dAdgrad_chi333222 + _111222;
        dadgrad_chi(0,11) = F11*F11*chi11*dAdgrad_chi111233 + F11*F11*chi12*dAdgrad_chi112233 + F11*F11*chi13*dAdgrad_chi113233 + F11*F12*chi11*dAdgrad_chi121233 + F11*F12*chi11*dAdgrad_chi211233 + F11*F12*chi12*dAdgrad_chi122233 + F11*F12*chi12*dAdgrad_chi212233 + F11*F12*chi13*dAdgrad_chi123233 + F11*F12*chi13*dAdgrad_chi213233 + F11*F13*chi11*dAdgrad_chi131233 + F11*F13*chi11*dAdgrad_chi311233 + F11*F13*chi12*dAdgrad_chi132233 + F11*F13*chi12*dAdgrad_chi312233 + F11*F13*chi13*dAdgrad_chi133233 + F11*F13*chi13*dAdgrad_chi313233 + F12*F12*chi11*dAdgrad_chi221233 + F12*F12*chi12*dAdgrad_chi222233 + F12*F12*chi13*dAdgrad_chi223233 + F12*F13*chi11*dAdgrad_chi231233 + F12*F13*chi11*dAdgrad_chi321233 + F12*F13*chi12*dAdgrad_chi232233 + F12*F13*chi12*dAdgrad_chi322233 + F12*F13*chi13*dAdgrad_chi233233 + F12*F13*chi13*dAdgrad_chi323233 + F13*F13*chi11*dAdgrad_chi331233 + F13*F13*chi12*dAdgrad_chi332233 + F13*F13*chi13*dAdgrad_chi333233 + _111233;
        dadgrad_chi(0,12) = F11*F11*chi11*dAdgrad_chi111223 + F11*F11*chi12*dAdgrad_chi112223 + F11*F11*chi13*dAdgrad_chi113223 + F11*F12*chi11*dAdgrad_chi121223 + F11*F12*chi11*dAdgrad_chi211223 + F11*F12*chi12*dAdgrad_chi122223 + F11*F12*chi12*dAdgrad_chi212223 + F11*F12*chi13*dAdgrad_chi123223 + F11*F12*chi13*dAdgrad_chi213223 + F11*F13*chi11*dAdgrad_chi131223 + F11*F13*chi11*dAdgrad_chi311223 + F11*F13*chi12*dAdgrad_chi132223 + F11*F13*chi12*dAdgrad_chi312223 + F11*F13*chi13*dAdgrad_chi133223 + F11*F13*chi13*dAdgrad_chi313223 + F12*F12*chi11*dAdgrad_chi221223 + F12*F12*chi12*dAdgrad_chi222223 + F12*F12*chi13*dAdgrad_chi223223 + F12*F13*chi11*dAdgrad_chi231223 + F12*F13*chi11*dAdgrad_chi321223 + F12*F13*chi12*dAdgrad_chi232223 + F12*F13*chi12*dAdgrad_chi322223 + F12*F13*chi13*dAdgrad_chi233223 + F12*F13*chi13*dAdgrad_chi323223 + F13*F13*chi11*dAdgrad_chi331223 + F13*F13*chi12*dAdgrad_chi332223 + F13*F13*chi13*dAdgrad_chi333223 + _111223;
        dadgrad_chi(0,13) = F11*F11*chi11*dAdgrad_chi111213 + F11*F11*chi12*dAdgrad_chi112213 + F11*F11*chi13*dAdgrad_chi113213 + F11*F12*chi11*dAdgrad_chi121213 + F11*F12*chi11*dAdgrad_chi211213 + F11*F12*chi12*dAdgrad_chi122213 + F11*F12*chi12*dAdgrad_chi212213 + F11*F12*chi13*dAdgrad_chi123213 + F11*F12*chi13*dAdgrad_chi213213 + F11*F13*chi11*dAdgrad_chi131213 + F11*F13*chi11*dAdgrad_chi311213 + F11*F13*chi12*dAdgrad_chi132213 + F11*F13*chi12*dAdgrad_chi312213 + F11*F13*chi13*dAdgrad_chi133213 + F11*F13*chi13*dAdgrad_chi313213 + F12*F12*chi11*dAdgrad_chi221213 + F12*F12*chi12*dAdgrad_chi222213 + F12*F12*chi13*dAdgrad_chi223213 + F12*F13*chi11*dAdgrad_chi231213 + F12*F13*chi11*dAdgrad_chi321213 + F12*F13*chi12*dAdgrad_chi232213 + F12*F13*chi12*dAdgrad_chi322213 + F12*F13*chi13*dAdgrad_chi233213 + F12*F13*chi13*dAdgrad_chi323213 + F13*F13*chi11*dAdgrad_chi331213 + F13*F13*chi12*dAdgrad_chi332213 + F13*F13*chi13*dAdgrad_chi333213 + _111213;
        dadgrad_chi(0,14) = F11*F11*chi11*dAdgrad_chi111212 + F11*F11*chi12*dAdgrad_chi112212 + F11*F11*chi13*dAdgrad_chi113212 + F11*F12*chi11*dAdgrad_chi121212 + F11*F12*chi11*dAdgrad_chi211212 + F11*F12*chi12*dAdgrad_chi122212 + F11*F12*chi12*dAdgrad_chi212212 + F11*F12*chi13*dAdgrad_chi123212 + F11*F12*chi13*dAdgrad_chi213212 + F11*F13*chi11*dAdgrad_chi131212 + F11*F13*chi11*dAdgrad_chi311212 + F11*F13*chi12*dAdgrad_chi132212 + F11*F13*chi12*dAdgrad_chi312212 + F11*F13*chi13*dAdgrad_chi133212 + F11*F13*chi13*dAdgrad_chi313212 + F12*F12*chi11*dAdgrad_chi221212 + F12*F12*chi12*dAdgrad_chi222212 + F12*F12*chi13*dAdgrad_chi223212 + F12*F13*chi11*dAdgrad_chi231212 + F12*F13*chi11*dAdgrad_chi321212 + F12*F13*chi12*dAdgrad_chi232212 + F12*F13*chi12*dAdgrad_chi322212 + F12*F13*chi13*dAdgrad_chi233212 + F12*F13*chi13*dAdgrad_chi323212 + F13*F13*chi11*dAdgrad_chi331212 + F13*F13*chi12*dAdgrad_chi332212 + F13*F13*chi13*dAdgrad_chi333212 + _111212;
        dadgrad_chi(0,15) = F11*F11*chi11*dAdgrad_chi111232 + F11*F11*chi12*dAdgrad_chi112232 + F11*F11*chi13*dAdgrad_chi113232 + F11*F12*chi11*dAdgrad_chi121232 + F11*F12*chi11*dAdgrad_chi211232 + F11*F12*chi12*dAdgrad_chi122232 + F11*F12*chi12*dAdgrad_chi212232 + F11*F12*chi13*dAdgrad_chi123232 + F11*F12*chi13*dAdgrad_chi213232 + F11*F13*chi11*dAdgrad_chi131232 + F11*F13*chi11*dAdgrad_chi311232 + F11*F13*chi12*dAdgrad_chi132232 + F11*F13*chi12*dAdgrad_chi312232 + F11*F13*chi13*dAdgrad_chi133232 + F11*F13*chi13*dAdgrad_chi313232 + F12*F12*chi11*dAdgrad_chi221232 + F12*F12*chi12*dAdgrad_chi222232 + F12*F12*chi13*dAdgrad_chi223232 + F12*F13*chi11*dAdgrad_chi231232 + F12*F13*chi11*dAdgrad_chi321232 + F12*F13*chi12*dAdgrad_chi232232 + F12*F13*chi12*dAdgrad_chi322232 + F12*F13*chi13*dAdgrad_chi233232 + F12*F13*chi13*dAdgrad_chi323232 + F13*F13*chi11*dAdgrad_chi331232 + F13*F13*chi12*dAdgrad_chi332232 + F13*F13*chi13*dAdgrad_chi333232 + _111232;
        dadgrad_chi(0,16) = F11*F11*chi11*dAdgrad_chi111231 + F11*F11*chi12*dAdgrad_chi112231 + F11*F11*chi13*dAdgrad_chi113231 + F11*F12*chi11*dAdgrad_chi121231 + F11*F12*chi11*dAdgrad_chi211231 + F11*F12*chi12*dAdgrad_chi122231 + F11*F12*chi12*dAdgrad_chi212231 + F11*F12*chi13*dAdgrad_chi123231 + F11*F12*chi13*dAdgrad_chi213231 + F11*F13*chi11*dAdgrad_chi131231 + F11*F13*chi11*dAdgrad_chi311231 + F11*F13*chi12*dAdgrad_chi132231 + F11*F13*chi12*dAdgrad_chi312231 + F11*F13*chi13*dAdgrad_chi133231 + F11*F13*chi13*dAdgrad_chi313231 + F12*F12*chi11*dAdgrad_chi221231 + F12*F12*chi12*dAdgrad_chi222231 + F12*F12*chi13*dAdgrad_chi223231 + F12*F13*chi11*dAdgrad_chi231231 + F12*F13*chi11*dAdgrad_chi321231 + F12*F13*chi12*dAdgrad_chi232231 + F12*F13*chi12*dAdgrad_chi322231 + F12*F13*chi13*dAdgrad_chi233231 + F12*F13*chi13*dAdgrad_chi323231 + F13*F13*chi11*dAdgrad_chi331231 + F13*F13*chi12*dAdgrad_chi332231 + F13*F13*chi13*dAdgrad_chi333231 + _111231;
        dadgrad_chi(0,17) = F11*F11*chi11*dAdgrad_chi111221 + F11*F11*chi12*dAdgrad_chi112221 + F11*F11*chi13*dAdgrad_chi113221 + F11*F12*chi11*dAdgrad_chi121221 + F11*F12*chi11*dAdgrad_chi211221 + F11*F12*chi12*dAdgrad_chi122221 + F11*F12*chi12*dAdgrad_chi212221 + F11*F12*chi13*dAdgrad_chi123221 + F11*F12*chi13*dAdgrad_chi213221 + F11*F13*chi11*dAdgrad_chi131221 + F11*F13*chi11*dAdgrad_chi311221 + F11*F13*chi12*dAdgrad_chi132221 + F11*F13*chi12*dAdgrad_chi312221 + F11*F13*chi13*dAdgrad_chi133221 + F11*F13*chi13*dAdgrad_chi313221 + F12*F12*chi11*dAdgrad_chi221221 + F12*F12*chi12*dAdgrad_chi222221 + F12*F12*chi13*dAdgrad_chi223221 + F12*F13*chi11*dAdgrad_chi231221 + F12*F13*chi11*dAdgrad_chi321221 + F12*F13*chi12*dAdgrad_chi232221 + F12*F13*chi12*dAdgrad_chi322221 + F12*F13*chi13*dAdgrad_chi233221 + F12*F13*chi13*dAdgrad_chi323221 + F13*F13*chi11*dAdgrad_chi331221 + F13*F13*chi12*dAdgrad_chi332221 + F13*F13*chi13*dAdgrad_chi333221 + _111221;
        dadgrad_chi(0,18) = F11*F11*chi11*dAdgrad_chi111311 + F11*F11*chi12*dAdgrad_chi112311 + F11*F11*chi13*dAdgrad_chi113311 + F11*F12*chi11*dAdgrad_chi121311 + F11*F12*chi11*dAdgrad_chi211311 + F11*F12*chi12*dAdgrad_chi122311 + F11*F12*chi12*dAdgrad_chi212311 + F11*F12*chi13*dAdgrad_chi123311 + F11*F12*chi13*dAdgrad_chi213311 + F11*F13*chi11*dAdgrad_chi131311 + F11*F13*chi11*dAdgrad_chi311311 + F11*F13*chi12*dAdgrad_chi132311 + F11*F13*chi12*dAdgrad_chi312311 + F11*F13*chi13*dAdgrad_chi133311 + F11*F13*chi13*dAdgrad_chi313311 + F12*F12*chi11*dAdgrad_chi221311 + F12*F12*chi12*dAdgrad_chi222311 + F12*F12*chi13*dAdgrad_chi223311 + F12*F13*chi11*dAdgrad_chi231311 + F12*F13*chi11*dAdgrad_chi321311 + F12*F13*chi12*dAdgrad_chi232311 + F12*F13*chi12*dAdgrad_chi322311 + F12*F13*chi13*dAdgrad_chi233311 + F12*F13*chi13*dAdgrad_chi323311 + F13*F13*chi11*dAdgrad_chi331311 + F13*F13*chi12*dAdgrad_chi332311 + F13*F13*chi13*dAdgrad_chi333311 + _111311;
        dadgrad_chi(0,19) = F11*F11*chi11*dAdgrad_chi111322 + F11*F11*chi12*dAdgrad_chi112322 + F11*F11*chi13*dAdgrad_chi113322 + F11*F12*chi11*dAdgrad_chi121322 + F11*F12*chi11*dAdgrad_chi211322 + F11*F12*chi12*dAdgrad_chi122322 + F11*F12*chi12*dAdgrad_chi212322 + F11*F12*chi13*dAdgrad_chi123322 + F11*F12*chi13*dAdgrad_chi213322 + F11*F13*chi11*dAdgrad_chi131322 + F11*F13*chi11*dAdgrad_chi311322 + F11*F13*chi12*dAdgrad_chi132322 + F11*F13*chi12*dAdgrad_chi312322 + F11*F13*chi13*dAdgrad_chi133322 + F11*F13*chi13*dAdgrad_chi313322 + F12*F12*chi11*dAdgrad_chi221322 + F12*F12*chi12*dAdgrad_chi222322 + F12*F12*chi13*dAdgrad_chi223322 + F12*F13*chi11*dAdgrad_chi231322 + F12*F13*chi11*dAdgrad_chi321322 + F12*F13*chi12*dAdgrad_chi232322 + F12*F13*chi12*dAdgrad_chi322322 + F12*F13*chi13*dAdgrad_chi233322 + F12*F13*chi13*dAdgrad_chi323322 + F13*F13*chi11*dAdgrad_chi331322 + F13*F13*chi12*dAdgrad_chi332322 + F13*F13*chi13*dAdgrad_chi333322 + _111322;
        dadgrad_chi(0,20) = F11*F11*chi11*dAdgrad_chi111333 + F11*F11*chi12*dAdgrad_chi112333 + F11*F11*chi13*dAdgrad_chi113333 + F11*F12*chi11*dAdgrad_chi121333 + F11*F12*chi11*dAdgrad_chi211333 + F11*F12*chi12*dAdgrad_chi122333 + F11*F12*chi12*dAdgrad_chi212333 + F11*F12*chi13*dAdgrad_chi123333 + F11*F12*chi13*dAdgrad_chi213333 + F11*F13*chi11*dAdgrad_chi131333 + F11*F13*chi11*dAdgrad_chi311333 + F11*F13*chi12*dAdgrad_chi132333 + F11*F13*chi12*dAdgrad_chi312333 + F11*F13*chi13*dAdgrad_chi133333 + F11*F13*chi13*dAdgrad_chi313333 + F12*F12*chi11*dAdgrad_chi221333 + F12*F12*chi12*dAdgrad_chi222333 + F12*F12*chi13*dAdgrad_chi223333 + F12*F13*chi11*dAdgrad_chi231333 + F12*F13*chi11*dAdgrad_chi321333 + F12*F13*chi12*dAdgrad_chi232333 + F12*F13*chi12*dAdgrad_chi322333 + F12*F13*chi13*dAdgrad_chi233333 + F12*F13*chi13*dAdgrad_chi323333 + F13*F13*chi11*dAdgrad_chi331333 + F13*F13*chi12*dAdgrad_chi332333 + F13*F13*chi13*dAdgrad_chi333333 + _111333;
        dadgrad_chi(0,21) = F11*F11*chi11*dAdgrad_chi111323 + F11*F11*chi12*dAdgrad_chi112323 + F11*F11*chi13*dAdgrad_chi113323 + F11*F12*chi11*dAdgrad_chi121323 + F11*F12*chi11*dAdgrad_chi211323 + F11*F12*chi12*dAdgrad_chi122323 + F11*F12*chi12*dAdgrad_chi212323 + F11*F12*chi13*dAdgrad_chi123323 + F11*F12*chi13*dAdgrad_chi213323 + F11*F13*chi11*dAdgrad_chi131323 + F11*F13*chi11*dAdgrad_chi311323 + F11*F13*chi12*dAdgrad_chi132323 + F11*F13*chi12*dAdgrad_chi312323 + F11*F13*chi13*dAdgrad_chi133323 + F11*F13*chi13*dAdgrad_chi313323 + F12*F12*chi11*dAdgrad_chi221323 + F12*F12*chi12*dAdgrad_chi222323 + F12*F12*chi13*dAdgrad_chi223323 + F12*F13*chi11*dAdgrad_chi231323 + F12*F13*chi11*dAdgrad_chi321323 + F12*F13*chi12*dAdgrad_chi232323 + F12*F13*chi12*dAdgrad_chi322323 + F12*F13*chi13*dAdgrad_chi233323 + F12*F13*chi13*dAdgrad_chi323323 + F13*F13*chi11*dAdgrad_chi331323 + F13*F13*chi12*dAdgrad_chi332323 + F13*F13*chi13*dAdgrad_chi333323 + _111323;
        dadgrad_chi(0,22) = F11*F11*chi11*dAdgrad_chi111313 + F11*F11*chi12*dAdgrad_chi112313 + F11*F11*chi13*dAdgrad_chi113313 + F11*F12*chi11*dAdgrad_chi121313 + F11*F12*chi11*dAdgrad_chi211313 + F11*F12*chi12*dAdgrad_chi122313 + F11*F12*chi12*dAdgrad_chi212313 + F11*F12*chi13*dAdgrad_chi123313 + F11*F12*chi13*dAdgrad_chi213313 + F11*F13*chi11*dAdgrad_chi131313 + F11*F13*chi11*dAdgrad_chi311313 + F11*F13*chi12*dAdgrad_chi132313 + F11*F13*chi12*dAdgrad_chi312313 + F11*F13*chi13*dAdgrad_chi133313 + F11*F13*chi13*dAdgrad_chi313313 + F12*F12*chi11*dAdgrad_chi221313 + F12*F12*chi12*dAdgrad_chi222313 + F12*F12*chi13*dAdgrad_chi223313 + F12*F13*chi11*dAdgrad_chi231313 + F12*F13*chi11*dAdgrad_chi321313 + F12*F13*chi12*dAdgrad_chi232313 + F12*F13*chi12*dAdgrad_chi322313 + F12*F13*chi13*dAdgrad_chi233313 + F12*F13*chi13*dAdgrad_chi323313 + F13*F13*chi11*dAdgrad_chi331313 + F13*F13*chi12*dAdgrad_chi332313 + F13*F13*chi13*dAdgrad_chi333313 + _111313;
        dadgrad_chi(0,23) = F11*F11*chi11*dAdgrad_chi111312 + F11*F11*chi12*dAdgrad_chi112312 + F11*F11*chi13*dAdgrad_chi113312 + F11*F12*chi11*dAdgrad_chi121312 + F11*F12*chi11*dAdgrad_chi211312 + F11*F12*chi12*dAdgrad_chi122312 + F11*F12*chi12*dAdgrad_chi212312 + F11*F12*chi13*dAdgrad_chi123312 + F11*F12*chi13*dAdgrad_chi213312 + F11*F13*chi11*dAdgrad_chi131312 + F11*F13*chi11*dAdgrad_chi311312 + F11*F13*chi12*dAdgrad_chi132312 + F11*F13*chi12*dAdgrad_chi312312 + F11*F13*chi13*dAdgrad_chi133312 + F11*F13*chi13*dAdgrad_chi313312 + F12*F12*chi11*dAdgrad_chi221312 + F12*F12*chi12*dAdgrad_chi222312 + F12*F12*chi13*dAdgrad_chi223312 + F12*F13*chi11*dAdgrad_chi231312 + F12*F13*chi11*dAdgrad_chi321312 + F12*F13*chi12*dAdgrad_chi232312 + F12*F13*chi12*dAdgrad_chi322312 + F12*F13*chi13*dAdgrad_chi233312 + F12*F13*chi13*dAdgrad_chi323312 + F13*F13*chi11*dAdgrad_chi331312 + F13*F13*chi12*dAdgrad_chi332312 + F13*F13*chi13*dAdgrad_chi333312 + _111312;
        dadgrad_chi(0,24) = F11*F11*chi11*dAdgrad_chi111332 + F11*F11*chi12*dAdgrad_chi112332 + F11*F11*chi13*dAdgrad_chi113332 + F11*F12*chi11*dAdgrad_chi121332 + F11*F12*chi11*dAdgrad_chi211332 + F11*F12*chi12*dAdgrad_chi122332 + F11*F12*chi12*dAdgrad_chi212332 + F11*F12*chi13*dAdgrad_chi123332 + F11*F12*chi13*dAdgrad_chi213332 + F11*F13*chi11*dAdgrad_chi131332 + F11*F13*chi11*dAdgrad_chi311332 + F11*F13*chi12*dAdgrad_chi132332 + F11*F13*chi12*dAdgrad_chi312332 + F11*F13*chi13*dAdgrad_chi133332 + F11*F13*chi13*dAdgrad_chi313332 + F12*F12*chi11*dAdgrad_chi221332 + F12*F12*chi12*dAdgrad_chi222332 + F12*F12*chi13*dAdgrad_chi223332 + F12*F13*chi11*dAdgrad_chi231332 + F12*F13*chi11*dAdgrad_chi321332 + F12*F13*chi12*dAdgrad_chi232332 + F12*F13*chi12*dAdgrad_chi322332 + F12*F13*chi13*dAdgrad_chi233332 + F12*F13*chi13*dAdgrad_chi323332 + F13*F13*chi11*dAdgrad_chi331332 + F13*F13*chi12*dAdgrad_chi332332 + F13*F13*chi13*dAdgrad_chi333332 + _111332;
        dadgrad_chi(0,25) = F11*F11*chi11*dAdgrad_chi111331 + F11*F11*chi12*dAdgrad_chi112331 + F11*F11*chi13*dAdgrad_chi113331 + F11*F12*chi11*dAdgrad_chi121331 + F11*F12*chi11*dAdgrad_chi211331 + F11*F12*chi12*dAdgrad_chi122331 + F11*F12*chi12*dAdgrad_chi212331 + F11*F12*chi13*dAdgrad_chi123331 + F11*F12*chi13*dAdgrad_chi213331 + F11*F13*chi11*dAdgrad_chi131331 + F11*F13*chi11*dAdgrad_chi311331 + F11*F13*chi12*dAdgrad_chi132331 + F11*F13*chi12*dAdgrad_chi312331 + F11*F13*chi13*dAdgrad_chi133331 + F11*F13*chi13*dAdgrad_chi313331 + F12*F12*chi11*dAdgrad_chi221331 + F12*F12*chi12*dAdgrad_chi222331 + F12*F12*chi13*dAdgrad_chi223331 + F12*F13*chi11*dAdgrad_chi231331 + F12*F13*chi11*dAdgrad_chi321331 + F12*F13*chi12*dAdgrad_chi232331 + F12*F13*chi12*dAdgrad_chi322331 + F12*F13*chi13*dAdgrad_chi233331 + F12*F13*chi13*dAdgrad_chi323331 + F13*F13*chi11*dAdgrad_chi331331 + F13*F13*chi12*dAdgrad_chi332331 + F13*F13*chi13*dAdgrad_chi333331 + _111331;
        dadgrad_chi(0,26) = F11*F11*chi11*dAdgrad_chi111321 + F11*F11*chi12*dAdgrad_chi112321 + F11*F11*chi13*dAdgrad_chi113321 + F11*F12*chi11*dAdgrad_chi121321 + F11*F12*chi11*dAdgrad_chi211321 + F11*F12*chi12*dAdgrad_chi122321 + F11*F12*chi12*dAdgrad_chi212321 + F11*F12*chi13*dAdgrad_chi123321 + F11*F12*chi13*dAdgrad_chi213321 + F11*F13*chi11*dAdgrad_chi131321 + F11*F13*chi11*dAdgrad_chi311321 + F11*F13*chi12*dAdgrad_chi132321 + F11*F13*chi12*dAdgrad_chi312321 + F11*F13*chi13*dAdgrad_chi133321 + F11*F13*chi13*dAdgrad_chi313321 + F12*F12*chi11*dAdgrad_chi221321 + F12*F12*chi12*dAdgrad_chi222321 + F12*F12*chi13*dAdgrad_chi223321 + F12*F13*chi11*dAdgrad_chi231321 + F12*F13*chi11*dAdgrad_chi321321 + F12*F13*chi12*dAdgrad_chi232321 + F12*F13*chi12*dAdgrad_chi322321 + F12*F13*chi13*dAdgrad_chi233321 + F12*F13*chi13*dAdgrad_chi323321 + F13*F13*chi11*dAdgrad_chi331321 + F13*F13*chi12*dAdgrad_chi332321 + F13*F13*chi13*dAdgrad_chi333321 + _111321;
        dadgrad_chi(1,0) = F11*F21*chi21*dAdgrad_chi111111 + F11*F21*chi22*dAdgrad_chi112111 + F11*F21*chi23*dAdgrad_chi113111 + F11*F22*chi21*dAdgrad_chi121111 + F11*F22*chi22*dAdgrad_chi122111 + F11*F22*chi23*dAdgrad_chi123111 + F11*F23*chi21*dAdgrad_chi131111 + F11*F23*chi22*dAdgrad_chi132111 + F11*F23*chi23*dAdgrad_chi133111 + F12*F21*chi21*dAdgrad_chi211111 + F12*F21*chi22*dAdgrad_chi212111 + F12*F21*chi23*dAdgrad_chi213111 + F12*F22*chi21*dAdgrad_chi221111 + F12*F22*chi22*dAdgrad_chi222111 + F12*F22*chi23*dAdgrad_chi223111 + F12*F23*chi21*dAdgrad_chi231111 + F12*F23*chi22*dAdgrad_chi232111 + F12*F23*chi23*dAdgrad_chi233111 + F13*F21*chi21*dAdgrad_chi311111 + F13*F21*chi22*dAdgrad_chi312111 + F13*F21*chi23*dAdgrad_chi313111 + F13*F22*chi21*dAdgrad_chi321111 + F13*F22*chi22*dAdgrad_chi322111 + F13*F22*chi23*dAdgrad_chi323111 + F13*F23*chi21*dAdgrad_chi331111 + F13*F23*chi22*dAdgrad_chi332111 + F13*F23*chi23*dAdgrad_chi333111 + _122111;
        dadgrad_chi(1,1) = F11*F21*chi21*dAdgrad_chi111122 + F11*F21*chi22*dAdgrad_chi112122 + F11*F21*chi23*dAdgrad_chi113122 + F11*F22*chi21*dAdgrad_chi121122 + F11*F22*chi22*dAdgrad_chi122122 + F11*F22*chi23*dAdgrad_chi123122 + F11*F23*chi21*dAdgrad_chi131122 + F11*F23*chi22*dAdgrad_chi132122 + F11*F23*chi23*dAdgrad_chi133122 + F12*F21*chi21*dAdgrad_chi211122 + F12*F21*chi22*dAdgrad_chi212122 + F12*F21*chi23*dAdgrad_chi213122 + F12*F22*chi21*dAdgrad_chi221122 + F12*F22*chi22*dAdgrad_chi222122 + F12*F22*chi23*dAdgrad_chi223122 + F12*F23*chi21*dAdgrad_chi231122 + F12*F23*chi22*dAdgrad_chi232122 + F12*F23*chi23*dAdgrad_chi233122 + F13*F21*chi21*dAdgrad_chi311122 + F13*F21*chi22*dAdgrad_chi312122 + F13*F21*chi23*dAdgrad_chi313122 + F13*F22*chi21*dAdgrad_chi321122 + F13*F22*chi22*dAdgrad_chi322122 + F13*F22*chi23*dAdgrad_chi323122 + F13*F23*chi21*dAdgrad_chi331122 + F13*F23*chi22*dAdgrad_chi332122 + F13*F23*chi23*dAdgrad_chi333122 + _122122;
        dadgrad_chi(1,2) = F11*F21*chi21*dAdgrad_chi111133 + F11*F21*chi22*dAdgrad_chi112133 + F11*F21*chi23*dAdgrad_chi113133 + F11*F22*chi21*dAdgrad_chi121133 + F11*F22*chi22*dAdgrad_chi122133 + F11*F22*chi23*dAdgrad_chi123133 + F11*F23*chi21*dAdgrad_chi131133 + F11*F23*chi22*dAdgrad_chi132133 + F11*F23*chi23*dAdgrad_chi133133 + F12*F21*chi21*dAdgrad_chi211133 + F12*F21*chi22*dAdgrad_chi212133 + F12*F21*chi23*dAdgrad_chi213133 + F12*F22*chi21*dAdgrad_chi221133 + F12*F22*chi22*dAdgrad_chi222133 + F12*F22*chi23*dAdgrad_chi223133 + F12*F23*chi21*dAdgrad_chi231133 + F12*F23*chi22*dAdgrad_chi232133 + F12*F23*chi23*dAdgrad_chi233133 + F13*F21*chi21*dAdgrad_chi311133 + F13*F21*chi22*dAdgrad_chi312133 + F13*F21*chi23*dAdgrad_chi313133 + F13*F22*chi21*dAdgrad_chi321133 + F13*F22*chi22*dAdgrad_chi322133 + F13*F22*chi23*dAdgrad_chi323133 + F13*F23*chi21*dAdgrad_chi331133 + F13*F23*chi22*dAdgrad_chi332133 + F13*F23*chi23*dAdgrad_chi333133 + _122133;
        dadgrad_chi(1,3) = F11*F21*chi21*dAdgrad_chi111123 + F11*F21*chi22*dAdgrad_chi112123 + F11*F21*chi23*dAdgrad_chi113123 + F11*F22*chi21*dAdgrad_chi121123 + F11*F22*chi22*dAdgrad_chi122123 + F11*F22*chi23*dAdgrad_chi123123 + F11*F23*chi21*dAdgrad_chi131123 + F11*F23*chi22*dAdgrad_chi132123 + F11*F23*chi23*dAdgrad_chi133123 + F12*F21*chi21*dAdgrad_chi211123 + F12*F21*chi22*dAdgrad_chi212123 + F12*F21*chi23*dAdgrad_chi213123 + F12*F22*chi21*dAdgrad_chi221123 + F12*F22*chi22*dAdgrad_chi222123 + F12*F22*chi23*dAdgrad_chi223123 + F12*F23*chi21*dAdgrad_chi231123 + F12*F23*chi22*dAdgrad_chi232123 + F12*F23*chi23*dAdgrad_chi233123 + F13*F21*chi21*dAdgrad_chi311123 + F13*F21*chi22*dAdgrad_chi312123 + F13*F21*chi23*dAdgrad_chi313123 + F13*F22*chi21*dAdgrad_chi321123 + F13*F22*chi22*dAdgrad_chi322123 + F13*F22*chi23*dAdgrad_chi323123 + F13*F23*chi21*dAdgrad_chi331123 + F13*F23*chi22*dAdgrad_chi332123 + F13*F23*chi23*dAdgrad_chi333123 + _122123;
        dadgrad_chi(1,4) = F11*F21*chi21*dAdgrad_chi111113 + F11*F21*chi22*dAdgrad_chi112113 + F11*F21*chi23*dAdgrad_chi113113 + F11*F22*chi21*dAdgrad_chi121113 + F11*F22*chi22*dAdgrad_chi122113 + F11*F22*chi23*dAdgrad_chi123113 + F11*F23*chi21*dAdgrad_chi131113 + F11*F23*chi22*dAdgrad_chi132113 + F11*F23*chi23*dAdgrad_chi133113 + F12*F21*chi21*dAdgrad_chi211113 + F12*F21*chi22*dAdgrad_chi212113 + F12*F21*chi23*dAdgrad_chi213113 + F12*F22*chi21*dAdgrad_chi221113 + F12*F22*chi22*dAdgrad_chi222113 + F12*F22*chi23*dAdgrad_chi223113 + F12*F23*chi21*dAdgrad_chi231113 + F12*F23*chi22*dAdgrad_chi232113 + F12*F23*chi23*dAdgrad_chi233113 + F13*F21*chi21*dAdgrad_chi311113 + F13*F21*chi22*dAdgrad_chi312113 + F13*F21*chi23*dAdgrad_chi313113 + F13*F22*chi21*dAdgrad_chi321113 + F13*F22*chi22*dAdgrad_chi322113 + F13*F22*chi23*dAdgrad_chi323113 + F13*F23*chi21*dAdgrad_chi331113 + F13*F23*chi22*dAdgrad_chi332113 + F13*F23*chi23*dAdgrad_chi333113 + _122113;
        dadgrad_chi(1,5) = F11*F21*chi21*dAdgrad_chi111112 + F11*F21*chi22*dAdgrad_chi112112 + F11*F21*chi23*dAdgrad_chi113112 + F11*F22*chi21*dAdgrad_chi121112 + F11*F22*chi22*dAdgrad_chi122112 + F11*F22*chi23*dAdgrad_chi123112 + F11*F23*chi21*dAdgrad_chi131112 + F11*F23*chi22*dAdgrad_chi132112 + F11*F23*chi23*dAdgrad_chi133112 + F12*F21*chi21*dAdgrad_chi211112 + F12*F21*chi22*dAdgrad_chi212112 + F12*F21*chi23*dAdgrad_chi213112 + F12*F22*chi21*dAdgrad_chi221112 + F12*F22*chi22*dAdgrad_chi222112 + F12*F22*chi23*dAdgrad_chi223112 + F12*F23*chi21*dAdgrad_chi231112 + F12*F23*chi22*dAdgrad_chi232112 + F12*F23*chi23*dAdgrad_chi233112 + F13*F21*chi21*dAdgrad_chi311112 + F13*F21*chi22*dAdgrad_chi312112 + F13*F21*chi23*dAdgrad_chi313112 + F13*F22*chi21*dAdgrad_chi321112 + F13*F22*chi22*dAdgrad_chi322112 + F13*F22*chi23*dAdgrad_chi323112 + F13*F23*chi21*dAdgrad_chi331112 + F13*F23*chi22*dAdgrad_chi332112 + F13*F23*chi23*dAdgrad_chi333112 + _122112;
        dadgrad_chi(1,6) = F11*F21*chi21*dAdgrad_chi111132 + F11*F21*chi22*dAdgrad_chi112132 + F11*F21*chi23*dAdgrad_chi113132 + F11*F22*chi21*dAdgrad_chi121132 + F11*F22*chi22*dAdgrad_chi122132 + F11*F22*chi23*dAdgrad_chi123132 + F11*F23*chi21*dAdgrad_chi131132 + F11*F23*chi22*dAdgrad_chi132132 + F11*F23*chi23*dAdgrad_chi133132 + F12*F21*chi21*dAdgrad_chi211132 + F12*F21*chi22*dAdgrad_chi212132 + F12*F21*chi23*dAdgrad_chi213132 + F12*F22*chi21*dAdgrad_chi221132 + F12*F22*chi22*dAdgrad_chi222132 + F12*F22*chi23*dAdgrad_chi223132 + F12*F23*chi21*dAdgrad_chi231132 + F12*F23*chi22*dAdgrad_chi232132 + F12*F23*chi23*dAdgrad_chi233132 + F13*F21*chi21*dAdgrad_chi311132 + F13*F21*chi22*dAdgrad_chi312132 + F13*F21*chi23*dAdgrad_chi313132 + F13*F22*chi21*dAdgrad_chi321132 + F13*F22*chi22*dAdgrad_chi322132 + F13*F22*chi23*dAdgrad_chi323132 + F13*F23*chi21*dAdgrad_chi331132 + F13*F23*chi22*dAdgrad_chi332132 + F13*F23*chi23*dAdgrad_chi333132 + _122132;
        dadgrad_chi(1,7) = F11*F21*chi21*dAdgrad_chi111131 + F11*F21*chi22*dAdgrad_chi112131 + F11*F21*chi23*dAdgrad_chi113131 + F11*F22*chi21*dAdgrad_chi121131 + F11*F22*chi22*dAdgrad_chi122131 + F11*F22*chi23*dAdgrad_chi123131 + F11*F23*chi21*dAdgrad_chi131131 + F11*F23*chi22*dAdgrad_chi132131 + F11*F23*chi23*dAdgrad_chi133131 + F12*F21*chi21*dAdgrad_chi211131 + F12*F21*chi22*dAdgrad_chi212131 + F12*F21*chi23*dAdgrad_chi213131 + F12*F22*chi21*dAdgrad_chi221131 + F12*F22*chi22*dAdgrad_chi222131 + F12*F22*chi23*dAdgrad_chi223131 + F12*F23*chi21*dAdgrad_chi231131 + F12*F23*chi22*dAdgrad_chi232131 + F12*F23*chi23*dAdgrad_chi233131 + F13*F21*chi21*dAdgrad_chi311131 + F13*F21*chi22*dAdgrad_chi312131 + F13*F21*chi23*dAdgrad_chi313131 + F13*F22*chi21*dAdgrad_chi321131 + F13*F22*chi22*dAdgrad_chi322131 + F13*F22*chi23*dAdgrad_chi323131 + F13*F23*chi21*dAdgrad_chi331131 + F13*F23*chi22*dAdgrad_chi332131 + F13*F23*chi23*dAdgrad_chi333131 + _122131;
        dadgrad_chi(1,8) = F11*F21*chi21*dAdgrad_chi111121 + F11*F21*chi22*dAdgrad_chi112121 + F11*F21*chi23*dAdgrad_chi113121 + F11*F22*chi21*dAdgrad_chi121121 + F11*F22*chi22*dAdgrad_chi122121 + F11*F22*chi23*dAdgrad_chi123121 + F11*F23*chi21*dAdgrad_chi131121 + F11*F23*chi22*dAdgrad_chi132121 + F11*F23*chi23*dAdgrad_chi133121 + F12*F21*chi21*dAdgrad_chi211121 + F12*F21*chi22*dAdgrad_chi212121 + F12*F21*chi23*dAdgrad_chi213121 + F12*F22*chi21*dAdgrad_chi221121 + F12*F22*chi22*dAdgrad_chi222121 + F12*F22*chi23*dAdgrad_chi223121 + F12*F23*chi21*dAdgrad_chi231121 + F12*F23*chi22*dAdgrad_chi232121 + F12*F23*chi23*dAdgrad_chi233121 + F13*F21*chi21*dAdgrad_chi311121 + F13*F21*chi22*dAdgrad_chi312121 + F13*F21*chi23*dAdgrad_chi313121 + F13*F22*chi21*dAdgrad_chi321121 + F13*F22*chi22*dAdgrad_chi322121 + F13*F22*chi23*dAdgrad_chi323121 + F13*F23*chi21*dAdgrad_chi331121 + F13*F23*chi22*dAdgrad_chi332121 + F13*F23*chi23*dAdgrad_chi333121 + _122121;
        dadgrad_chi(1,9) = F11*F21*chi21*dAdgrad_chi111211 + F11*F21*chi22*dAdgrad_chi112211 + F11*F21*chi23*dAdgrad_chi113211 + F11*F22*chi21*dAdgrad_chi121211 + F11*F22*chi22*dAdgrad_chi122211 + F11*F22*chi23*dAdgrad_chi123211 + F11*F23*chi21*dAdgrad_chi131211 + F11*F23*chi22*dAdgrad_chi132211 + F11*F23*chi23*dAdgrad_chi133211 + F12*F21*chi21*dAdgrad_chi211211 + F12*F21*chi22*dAdgrad_chi212211 + F12*F21*chi23*dAdgrad_chi213211 + F12*F22*chi21*dAdgrad_chi221211 + F12*F22*chi22*dAdgrad_chi222211 + F12*F22*chi23*dAdgrad_chi223211 + F12*F23*chi21*dAdgrad_chi231211 + F12*F23*chi22*dAdgrad_chi232211 + F12*F23*chi23*dAdgrad_chi233211 + F13*F21*chi21*dAdgrad_chi311211 + F13*F21*chi22*dAdgrad_chi312211 + F13*F21*chi23*dAdgrad_chi313211 + F13*F22*chi21*dAdgrad_chi321211 + F13*F22*chi22*dAdgrad_chi322211 + F13*F22*chi23*dAdgrad_chi323211 + F13*F23*chi21*dAdgrad_chi331211 + F13*F23*chi22*dAdgrad_chi332211 + F13*F23*chi23*dAdgrad_chi333211 + _122211;
        dadgrad_chi(1,10) = F11*F21*chi21*dAdgrad_chi111222 + F11*F21*chi22*dAdgrad_chi112222 + F11*F21*chi23*dAdgrad_chi113222 + F11*F22*chi21*dAdgrad_chi121222 + F11*F22*chi22*dAdgrad_chi122222 + F11*F22*chi23*dAdgrad_chi123222 + F11*F23*chi21*dAdgrad_chi131222 + F11*F23*chi22*dAdgrad_chi132222 + F11*F23*chi23*dAdgrad_chi133222 + F12*F21*chi21*dAdgrad_chi211222 + F12*F21*chi22*dAdgrad_chi212222 + F12*F21*chi23*dAdgrad_chi213222 + F12*F22*chi21*dAdgrad_chi221222 + F12*F22*chi22*dAdgrad_chi222222 + F12*F22*chi23*dAdgrad_chi223222 + F12*F23*chi21*dAdgrad_chi231222 + F12*F23*chi22*dAdgrad_chi232222 + F12*F23*chi23*dAdgrad_chi233222 + F13*F21*chi21*dAdgrad_chi311222 + F13*F21*chi22*dAdgrad_chi312222 + F13*F21*chi23*dAdgrad_chi313222 + F13*F22*chi21*dAdgrad_chi321222 + F13*F22*chi22*dAdgrad_chi322222 + F13*F22*chi23*dAdgrad_chi323222 + F13*F23*chi21*dAdgrad_chi331222 + F13*F23*chi22*dAdgrad_chi332222 + F13*F23*chi23*dAdgrad_chi333222 + _122222;
        dadgrad_chi(1,11) = F11*F21*chi21*dAdgrad_chi111233 + F11*F21*chi22*dAdgrad_chi112233 + F11*F21*chi23*dAdgrad_chi113233 + F11*F22*chi21*dAdgrad_chi121233 + F11*F22*chi22*dAdgrad_chi122233 + F11*F22*chi23*dAdgrad_chi123233 + F11*F23*chi21*dAdgrad_chi131233 + F11*F23*chi22*dAdgrad_chi132233 + F11*F23*chi23*dAdgrad_chi133233 + F12*F21*chi21*dAdgrad_chi211233 + F12*F21*chi22*dAdgrad_chi212233 + F12*F21*chi23*dAdgrad_chi213233 + F12*F22*chi21*dAdgrad_chi221233 + F12*F22*chi22*dAdgrad_chi222233 + F12*F22*chi23*dAdgrad_chi223233 + F12*F23*chi21*dAdgrad_chi231233 + F12*F23*chi22*dAdgrad_chi232233 + F12*F23*chi23*dAdgrad_chi233233 + F13*F21*chi21*dAdgrad_chi311233 + F13*F21*chi22*dAdgrad_chi312233 + F13*F21*chi23*dAdgrad_chi313233 + F13*F22*chi21*dAdgrad_chi321233 + F13*F22*chi22*dAdgrad_chi322233 + F13*F22*chi23*dAdgrad_chi323233 + F13*F23*chi21*dAdgrad_chi331233 + F13*F23*chi22*dAdgrad_chi332233 + F13*F23*chi23*dAdgrad_chi333233 + _122233;
        dadgrad_chi(1,12) = F11*F21*chi21*dAdgrad_chi111223 + F11*F21*chi22*dAdgrad_chi112223 + F11*F21*chi23*dAdgrad_chi113223 + F11*F22*chi21*dAdgrad_chi121223 + F11*F22*chi22*dAdgrad_chi122223 + F11*F22*chi23*dAdgrad_chi123223 + F11*F23*chi21*dAdgrad_chi131223 + F11*F23*chi22*dAdgrad_chi132223 + F11*F23*chi23*dAdgrad_chi133223 + F12*F21*chi21*dAdgrad_chi211223 + F12*F21*chi22*dAdgrad_chi212223 + F12*F21*chi23*dAdgrad_chi213223 + F12*F22*chi21*dAdgrad_chi221223 + F12*F22*chi22*dAdgrad_chi222223 + F12*F22*chi23*dAdgrad_chi223223 + F12*F23*chi21*dAdgrad_chi231223 + F12*F23*chi22*dAdgrad_chi232223 + F12*F23*chi23*dAdgrad_chi233223 + F13*F21*chi21*dAdgrad_chi311223 + F13*F21*chi22*dAdgrad_chi312223 + F13*F21*chi23*dAdgrad_chi313223 + F13*F22*chi21*dAdgrad_chi321223 + F13*F22*chi22*dAdgrad_chi322223 + F13*F22*chi23*dAdgrad_chi323223 + F13*F23*chi21*dAdgrad_chi331223 + F13*F23*chi22*dAdgrad_chi332223 + F13*F23*chi23*dAdgrad_chi333223 + _122223;
        dadgrad_chi(1,13) = F11*F21*chi21*dAdgrad_chi111213 + F11*F21*chi22*dAdgrad_chi112213 + F11*F21*chi23*dAdgrad_chi113213 + F11*F22*chi21*dAdgrad_chi121213 + F11*F22*chi22*dAdgrad_chi122213 + F11*F22*chi23*dAdgrad_chi123213 + F11*F23*chi21*dAdgrad_chi131213 + F11*F23*chi22*dAdgrad_chi132213 + F11*F23*chi23*dAdgrad_chi133213 + F12*F21*chi21*dAdgrad_chi211213 + F12*F21*chi22*dAdgrad_chi212213 + F12*F21*chi23*dAdgrad_chi213213 + F12*F22*chi21*dAdgrad_chi221213 + F12*F22*chi22*dAdgrad_chi222213 + F12*F22*chi23*dAdgrad_chi223213 + F12*F23*chi21*dAdgrad_chi231213 + F12*F23*chi22*dAdgrad_chi232213 + F12*F23*chi23*dAdgrad_chi233213 + F13*F21*chi21*dAdgrad_chi311213 + F13*F21*chi22*dAdgrad_chi312213 + F13*F21*chi23*dAdgrad_chi313213 + F13*F22*chi21*dAdgrad_chi321213 + F13*F22*chi22*dAdgrad_chi322213 + F13*F22*chi23*dAdgrad_chi323213 + F13*F23*chi21*dAdgrad_chi331213 + F13*F23*chi22*dAdgrad_chi332213 + F13*F23*chi23*dAdgrad_chi333213 + _122213;
        dadgrad_chi(1,14) = F11*F21*chi21*dAdgrad_chi111212 + F11*F21*chi22*dAdgrad_chi112212 + F11*F21*chi23*dAdgrad_chi113212 + F11*F22*chi21*dAdgrad_chi121212 + F11*F22*chi22*dAdgrad_chi122212 + F11*F22*chi23*dAdgrad_chi123212 + F11*F23*chi21*dAdgrad_chi131212 + F11*F23*chi22*dAdgrad_chi132212 + F11*F23*chi23*dAdgrad_chi133212 + F12*F21*chi21*dAdgrad_chi211212 + F12*F21*chi22*dAdgrad_chi212212 + F12*F21*chi23*dAdgrad_chi213212 + F12*F22*chi21*dAdgrad_chi221212 + F12*F22*chi22*dAdgrad_chi222212 + F12*F22*chi23*dAdgrad_chi223212 + F12*F23*chi21*dAdgrad_chi231212 + F12*F23*chi22*dAdgrad_chi232212 + F12*F23*chi23*dAdgrad_chi233212 + F13*F21*chi21*dAdgrad_chi311212 + F13*F21*chi22*dAdgrad_chi312212 + F13*F21*chi23*dAdgrad_chi313212 + F13*F22*chi21*dAdgrad_chi321212 + F13*F22*chi22*dAdgrad_chi322212 + F13*F22*chi23*dAdgrad_chi323212 + F13*F23*chi21*dAdgrad_chi331212 + F13*F23*chi22*dAdgrad_chi332212 + F13*F23*chi23*dAdgrad_chi333212 + _122212;
        dadgrad_chi(1,15) = F11*F21*chi21*dAdgrad_chi111232 + F11*F21*chi22*dAdgrad_chi112232 + F11*F21*chi23*dAdgrad_chi113232 + F11*F22*chi21*dAdgrad_chi121232 + F11*F22*chi22*dAdgrad_chi122232 + F11*F22*chi23*dAdgrad_chi123232 + F11*F23*chi21*dAdgrad_chi131232 + F11*F23*chi22*dAdgrad_chi132232 + F11*F23*chi23*dAdgrad_chi133232 + F12*F21*chi21*dAdgrad_chi211232 + F12*F21*chi22*dAdgrad_chi212232 + F12*F21*chi23*dAdgrad_chi213232 + F12*F22*chi21*dAdgrad_chi221232 + F12*F22*chi22*dAdgrad_chi222232 + F12*F22*chi23*dAdgrad_chi223232 + F12*F23*chi21*dAdgrad_chi231232 + F12*F23*chi22*dAdgrad_chi232232 + F12*F23*chi23*dAdgrad_chi233232 + F13*F21*chi21*dAdgrad_chi311232 + F13*F21*chi22*dAdgrad_chi312232 + F13*F21*chi23*dAdgrad_chi313232 + F13*F22*chi21*dAdgrad_chi321232 + F13*F22*chi22*dAdgrad_chi322232 + F13*F22*chi23*dAdgrad_chi323232 + F13*F23*chi21*dAdgrad_chi331232 + F13*F23*chi22*dAdgrad_chi332232 + F13*F23*chi23*dAdgrad_chi333232 + _122232;
        dadgrad_chi(1,16) = F11*F21*chi21*dAdgrad_chi111231 + F11*F21*chi22*dAdgrad_chi112231 + F11*F21*chi23*dAdgrad_chi113231 + F11*F22*chi21*dAdgrad_chi121231 + F11*F22*chi22*dAdgrad_chi122231 + F11*F22*chi23*dAdgrad_chi123231 + F11*F23*chi21*dAdgrad_chi131231 + F11*F23*chi22*dAdgrad_chi132231 + F11*F23*chi23*dAdgrad_chi133231 + F12*F21*chi21*dAdgrad_chi211231 + F12*F21*chi22*dAdgrad_chi212231 + F12*F21*chi23*dAdgrad_chi213231 + F12*F22*chi21*dAdgrad_chi221231 + F12*F22*chi22*dAdgrad_chi222231 + F12*F22*chi23*dAdgrad_chi223231 + F12*F23*chi21*dAdgrad_chi231231 + F12*F23*chi22*dAdgrad_chi232231 + F12*F23*chi23*dAdgrad_chi233231 + F13*F21*chi21*dAdgrad_chi311231 + F13*F21*chi22*dAdgrad_chi312231 + F13*F21*chi23*dAdgrad_chi313231 + F13*F22*chi21*dAdgrad_chi321231 + F13*F22*chi22*dAdgrad_chi322231 + F13*F22*chi23*dAdgrad_chi323231 + F13*F23*chi21*dAdgrad_chi331231 + F13*F23*chi22*dAdgrad_chi332231 + F13*F23*chi23*dAdgrad_chi333231 + _122231;
        dadgrad_chi(1,17) = F11*F21*chi21*dAdgrad_chi111221 + F11*F21*chi22*dAdgrad_chi112221 + F11*F21*chi23*dAdgrad_chi113221 + F11*F22*chi21*dAdgrad_chi121221 + F11*F22*chi22*dAdgrad_chi122221 + F11*F22*chi23*dAdgrad_chi123221 + F11*F23*chi21*dAdgrad_chi131221 + F11*F23*chi22*dAdgrad_chi132221 + F11*F23*chi23*dAdgrad_chi133221 + F12*F21*chi21*dAdgrad_chi211221 + F12*F21*chi22*dAdgrad_chi212221 + F12*F21*chi23*dAdgrad_chi213221 + F12*F22*chi21*dAdgrad_chi221221 + F12*F22*chi22*dAdgrad_chi222221 + F12*F22*chi23*dAdgrad_chi223221 + F12*F23*chi21*dAdgrad_chi231221 + F12*F23*chi22*dAdgrad_chi232221 + F12*F23*chi23*dAdgrad_chi233221 + F13*F21*chi21*dAdgrad_chi311221 + F13*F21*chi22*dAdgrad_chi312221 + F13*F21*chi23*dAdgrad_chi313221 + F13*F22*chi21*dAdgrad_chi321221 + F13*F22*chi22*dAdgrad_chi322221 + F13*F22*chi23*dAdgrad_chi323221 + F13*F23*chi21*dAdgrad_chi331221 + F13*F23*chi22*dAdgrad_chi332221 + F13*F23*chi23*dAdgrad_chi333221 + _122221;
        dadgrad_chi(1,18) = F11*F21*chi21*dAdgrad_chi111311 + F11*F21*chi22*dAdgrad_chi112311 + F11*F21*chi23*dAdgrad_chi113311 + F11*F22*chi21*dAdgrad_chi121311 + F11*F22*chi22*dAdgrad_chi122311 + F11*F22*chi23*dAdgrad_chi123311 + F11*F23*chi21*dAdgrad_chi131311 + F11*F23*chi22*dAdgrad_chi132311 + F11*F23*chi23*dAdgrad_chi133311 + F12*F21*chi21*dAdgrad_chi211311 + F12*F21*chi22*dAdgrad_chi212311 + F12*F21*chi23*dAdgrad_chi213311 + F12*F22*chi21*dAdgrad_chi221311 + F12*F22*chi22*dAdgrad_chi222311 + F12*F22*chi23*dAdgrad_chi223311 + F12*F23*chi21*dAdgrad_chi231311 + F12*F23*chi22*dAdgrad_chi232311 + F12*F23*chi23*dAdgrad_chi233311 + F13*F21*chi21*dAdgrad_chi311311 + F13*F21*chi22*dAdgrad_chi312311 + F13*F21*chi23*dAdgrad_chi313311 + F13*F22*chi21*dAdgrad_chi321311 + F13*F22*chi22*dAdgrad_chi322311 + F13*F22*chi23*dAdgrad_chi323311 + F13*F23*chi21*dAdgrad_chi331311 + F13*F23*chi22*dAdgrad_chi332311 + F13*F23*chi23*dAdgrad_chi333311 + _122311;
        dadgrad_chi(1,19) = F11*F21*chi21*dAdgrad_chi111322 + F11*F21*chi22*dAdgrad_chi112322 + F11*F21*chi23*dAdgrad_chi113322 + F11*F22*chi21*dAdgrad_chi121322 + F11*F22*chi22*dAdgrad_chi122322 + F11*F22*chi23*dAdgrad_chi123322 + F11*F23*chi21*dAdgrad_chi131322 + F11*F23*chi22*dAdgrad_chi132322 + F11*F23*chi23*dAdgrad_chi133322 + F12*F21*chi21*dAdgrad_chi211322 + F12*F21*chi22*dAdgrad_chi212322 + F12*F21*chi23*dAdgrad_chi213322 + F12*F22*chi21*dAdgrad_chi221322 + F12*F22*chi22*dAdgrad_chi222322 + F12*F22*chi23*dAdgrad_chi223322 + F12*F23*chi21*dAdgrad_chi231322 + F12*F23*chi22*dAdgrad_chi232322 + F12*F23*chi23*dAdgrad_chi233322 + F13*F21*chi21*dAdgrad_chi311322 + F13*F21*chi22*dAdgrad_chi312322 + F13*F21*chi23*dAdgrad_chi313322 + F13*F22*chi21*dAdgrad_chi321322 + F13*F22*chi22*dAdgrad_chi322322 + F13*F22*chi23*dAdgrad_chi323322 + F13*F23*chi21*dAdgrad_chi331322 + F13*F23*chi22*dAdgrad_chi332322 + F13*F23*chi23*dAdgrad_chi333322 + _122322;
        dadgrad_chi(1,20) = F11*F21*chi21*dAdgrad_chi111333 + F11*F21*chi22*dAdgrad_chi112333 + F11*F21*chi23*dAdgrad_chi113333 + F11*F22*chi21*dAdgrad_chi121333 + F11*F22*chi22*dAdgrad_chi122333 + F11*F22*chi23*dAdgrad_chi123333 + F11*F23*chi21*dAdgrad_chi131333 + F11*F23*chi22*dAdgrad_chi132333 + F11*F23*chi23*dAdgrad_chi133333 + F12*F21*chi21*dAdgrad_chi211333 + F12*F21*chi22*dAdgrad_chi212333 + F12*F21*chi23*dAdgrad_chi213333 + F12*F22*chi21*dAdgrad_chi221333 + F12*F22*chi22*dAdgrad_chi222333 + F12*F22*chi23*dAdgrad_chi223333 + F12*F23*chi21*dAdgrad_chi231333 + F12*F23*chi22*dAdgrad_chi232333 + F12*F23*chi23*dAdgrad_chi233333 + F13*F21*chi21*dAdgrad_chi311333 + F13*F21*chi22*dAdgrad_chi312333 + F13*F21*chi23*dAdgrad_chi313333 + F13*F22*chi21*dAdgrad_chi321333 + F13*F22*chi22*dAdgrad_chi322333 + F13*F22*chi23*dAdgrad_chi323333 + F13*F23*chi21*dAdgrad_chi331333 + F13*F23*chi22*dAdgrad_chi332333 + F13*F23*chi23*dAdgrad_chi333333 + _122333;
        dadgrad_chi(1,21) = F11*F21*chi21*dAdgrad_chi111323 + F11*F21*chi22*dAdgrad_chi112323 + F11*F21*chi23*dAdgrad_chi113323 + F11*F22*chi21*dAdgrad_chi121323 + F11*F22*chi22*dAdgrad_chi122323 + F11*F22*chi23*dAdgrad_chi123323 + F11*F23*chi21*dAdgrad_chi131323 + F11*F23*chi22*dAdgrad_chi132323 + F11*F23*chi23*dAdgrad_chi133323 + F12*F21*chi21*dAdgrad_chi211323 + F12*F21*chi22*dAdgrad_chi212323 + F12*F21*chi23*dAdgrad_chi213323 + F12*F22*chi21*dAdgrad_chi221323 + F12*F22*chi22*dAdgrad_chi222323 + F12*F22*chi23*dAdgrad_chi223323 + F12*F23*chi21*dAdgrad_chi231323 + F12*F23*chi22*dAdgrad_chi232323 + F12*F23*chi23*dAdgrad_chi233323 + F13*F21*chi21*dAdgrad_chi311323 + F13*F21*chi22*dAdgrad_chi312323 + F13*F21*chi23*dAdgrad_chi313323 + F13*F22*chi21*dAdgrad_chi321323 + F13*F22*chi22*dAdgrad_chi322323 + F13*F22*chi23*dAdgrad_chi323323 + F13*F23*chi21*dAdgrad_chi331323 + F13*F23*chi22*dAdgrad_chi332323 + F13*F23*chi23*dAdgrad_chi333323 + _122323;
        dadgrad_chi(1,22) = F11*F21*chi21*dAdgrad_chi111313 + F11*F21*chi22*dAdgrad_chi112313 + F11*F21*chi23*dAdgrad_chi113313 + F11*F22*chi21*dAdgrad_chi121313 + F11*F22*chi22*dAdgrad_chi122313 + F11*F22*chi23*dAdgrad_chi123313 + F11*F23*chi21*dAdgrad_chi131313 + F11*F23*chi22*dAdgrad_chi132313 + F11*F23*chi23*dAdgrad_chi133313 + F12*F21*chi21*dAdgrad_chi211313 + F12*F21*chi22*dAdgrad_chi212313 + F12*F21*chi23*dAdgrad_chi213313 + F12*F22*chi21*dAdgrad_chi221313 + F12*F22*chi22*dAdgrad_chi222313 + F12*F22*chi23*dAdgrad_chi223313 + F12*F23*chi21*dAdgrad_chi231313 + F12*F23*chi22*dAdgrad_chi232313 + F12*F23*chi23*dAdgrad_chi233313 + F13*F21*chi21*dAdgrad_chi311313 + F13*F21*chi22*dAdgrad_chi312313 + F13*F21*chi23*dAdgrad_chi313313 + F13*F22*chi21*dAdgrad_chi321313 + F13*F22*chi22*dAdgrad_chi322313 + F13*F22*chi23*dAdgrad_chi323313 + F13*F23*chi21*dAdgrad_chi331313 + F13*F23*chi22*dAdgrad_chi332313 + F13*F23*chi23*dAdgrad_chi333313 + _122313;
        dadgrad_chi(1,23) = F11*F21*chi21*dAdgrad_chi111312 + F11*F21*chi22*dAdgrad_chi112312 + F11*F21*chi23*dAdgrad_chi113312 + F11*F22*chi21*dAdgrad_chi121312 + F11*F22*chi22*dAdgrad_chi122312 + F11*F22*chi23*dAdgrad_chi123312 + F11*F23*chi21*dAdgrad_chi131312 + F11*F23*chi22*dAdgrad_chi132312 + F11*F23*chi23*dAdgrad_chi133312 + F12*F21*chi21*dAdgrad_chi211312 + F12*F21*chi22*dAdgrad_chi212312 + F12*F21*chi23*dAdgrad_chi213312 + F12*F22*chi21*dAdgrad_chi221312 + F12*F22*chi22*dAdgrad_chi222312 + F12*F22*chi23*dAdgrad_chi223312 + F12*F23*chi21*dAdgrad_chi231312 + F12*F23*chi22*dAdgrad_chi232312 + F12*F23*chi23*dAdgrad_chi233312 + F13*F21*chi21*dAdgrad_chi311312 + F13*F21*chi22*dAdgrad_chi312312 + F13*F21*chi23*dAdgrad_chi313312 + F13*F22*chi21*dAdgrad_chi321312 + F13*F22*chi22*dAdgrad_chi322312 + F13*F22*chi23*dAdgrad_chi323312 + F13*F23*chi21*dAdgrad_chi331312 + F13*F23*chi22*dAdgrad_chi332312 + F13*F23*chi23*dAdgrad_chi333312 + _122312;
        dadgrad_chi(1,24) = F11*F21*chi21*dAdgrad_chi111332 + F11*F21*chi22*dAdgrad_chi112332 + F11*F21*chi23*dAdgrad_chi113332 + F11*F22*chi21*dAdgrad_chi121332 + F11*F22*chi22*dAdgrad_chi122332 + F11*F22*chi23*dAdgrad_chi123332 + F11*F23*chi21*dAdgrad_chi131332 + F11*F23*chi22*dAdgrad_chi132332 + F11*F23*chi23*dAdgrad_chi133332 + F12*F21*chi21*dAdgrad_chi211332 + F12*F21*chi22*dAdgrad_chi212332 + F12*F21*chi23*dAdgrad_chi213332 + F12*F22*chi21*dAdgrad_chi221332 + F12*F22*chi22*dAdgrad_chi222332 + F12*F22*chi23*dAdgrad_chi223332 + F12*F23*chi21*dAdgrad_chi231332 + F12*F23*chi22*dAdgrad_chi232332 + F12*F23*chi23*dAdgrad_chi233332 + F13*F21*chi21*dAdgrad_chi311332 + F13*F21*chi22*dAdgrad_chi312332 + F13*F21*chi23*dAdgrad_chi313332 + F13*F22*chi21*dAdgrad_chi321332 + F13*F22*chi22*dAdgrad_chi322332 + F13*F22*chi23*dAdgrad_chi323332 + F13*F23*chi21*dAdgrad_chi331332 + F13*F23*chi22*dAdgrad_chi332332 + F13*F23*chi23*dAdgrad_chi333332 + _122332;
        dadgrad_chi(1,25) = F11*F21*chi21*dAdgrad_chi111331 + F11*F21*chi22*dAdgrad_chi112331 + F11*F21*chi23*dAdgrad_chi113331 + F11*F22*chi21*dAdgrad_chi121331 + F11*F22*chi22*dAdgrad_chi122331 + F11*F22*chi23*dAdgrad_chi123331 + F11*F23*chi21*dAdgrad_chi131331 + F11*F23*chi22*dAdgrad_chi132331 + F11*F23*chi23*dAdgrad_chi133331 + F12*F21*chi21*dAdgrad_chi211331 + F12*F21*chi22*dAdgrad_chi212331 + F12*F21*chi23*dAdgrad_chi213331 + F12*F22*chi21*dAdgrad_chi221331 + F12*F22*chi22*dAdgrad_chi222331 + F12*F22*chi23*dAdgrad_chi223331 + F12*F23*chi21*dAdgrad_chi231331 + F12*F23*chi22*dAdgrad_chi232331 + F12*F23*chi23*dAdgrad_chi233331 + F13*F21*chi21*dAdgrad_chi311331 + F13*F21*chi22*dAdgrad_chi312331 + F13*F21*chi23*dAdgrad_chi313331 + F13*F22*chi21*dAdgrad_chi321331 + F13*F22*chi22*dAdgrad_chi322331 + F13*F22*chi23*dAdgrad_chi323331 + F13*F23*chi21*dAdgrad_chi331331 + F13*F23*chi22*dAdgrad_chi332331 + F13*F23*chi23*dAdgrad_chi333331 + _122331;
        dadgrad_chi(1,26) = F11*F21*chi21*dAdgrad_chi111321 + F11*F21*chi22*dAdgrad_chi112321 + F11*F21*chi23*dAdgrad_chi113321 + F11*F22*chi21*dAdgrad_chi121321 + F11*F22*chi22*dAdgrad_chi122321 + F11*F22*chi23*dAdgrad_chi123321 + F11*F23*chi21*dAdgrad_chi131321 + F11*F23*chi22*dAdgrad_chi132321 + F11*F23*chi23*dAdgrad_chi133321 + F12*F21*chi21*dAdgrad_chi211321 + F12*F21*chi22*dAdgrad_chi212321 + F12*F21*chi23*dAdgrad_chi213321 + F12*F22*chi21*dAdgrad_chi221321 + F12*F22*chi22*dAdgrad_chi222321 + F12*F22*chi23*dAdgrad_chi223321 + F12*F23*chi21*dAdgrad_chi231321 + F12*F23*chi22*dAdgrad_chi232321 + F12*F23*chi23*dAdgrad_chi233321 + F13*F21*chi21*dAdgrad_chi311321 + F13*F21*chi22*dAdgrad_chi312321 + F13*F21*chi23*dAdgrad_chi313321 + F13*F22*chi21*dAdgrad_chi321321 + F13*F22*chi22*dAdgrad_chi322321 + F13*F22*chi23*dAdgrad_chi323321 + F13*F23*chi21*dAdgrad_chi331321 + F13*F23*chi22*dAdgrad_chi332321 + F13*F23*chi23*dAdgrad_chi333321 + _122321;
        dadgrad_chi(2,0) = F11*F31*chi31*dAdgrad_chi111111 + F11*F31*chi32*dAdgrad_chi112111 + F11*F31*chi33*dAdgrad_chi113111 + F11*F32*chi31*dAdgrad_chi121111 + F11*F32*chi32*dAdgrad_chi122111 + F11*F32*chi33*dAdgrad_chi123111 + F11*F33*chi31*dAdgrad_chi131111 + F11*F33*chi32*dAdgrad_chi132111 + F11*F33*chi33*dAdgrad_chi133111 + F12*F31*chi31*dAdgrad_chi211111 + F12*F31*chi32*dAdgrad_chi212111 + F12*F31*chi33*dAdgrad_chi213111 + F12*F32*chi31*dAdgrad_chi221111 + F12*F32*chi32*dAdgrad_chi222111 + F12*F32*chi33*dAdgrad_chi223111 + F12*F33*chi31*dAdgrad_chi231111 + F12*F33*chi32*dAdgrad_chi232111 + F12*F33*chi33*dAdgrad_chi233111 + F13*F31*chi31*dAdgrad_chi311111 + F13*F31*chi32*dAdgrad_chi312111 + F13*F31*chi33*dAdgrad_chi313111 + F13*F32*chi31*dAdgrad_chi321111 + F13*F32*chi32*dAdgrad_chi322111 + F13*F32*chi33*dAdgrad_chi323111 + F13*F33*chi31*dAdgrad_chi331111 + F13*F33*chi32*dAdgrad_chi332111 + F13*F33*chi33*dAdgrad_chi333111 + _133111;
        dadgrad_chi(2,1) = F11*F31*chi31*dAdgrad_chi111122 + F11*F31*chi32*dAdgrad_chi112122 + F11*F31*chi33*dAdgrad_chi113122 + F11*F32*chi31*dAdgrad_chi121122 + F11*F32*chi32*dAdgrad_chi122122 + F11*F32*chi33*dAdgrad_chi123122 + F11*F33*chi31*dAdgrad_chi131122 + F11*F33*chi32*dAdgrad_chi132122 + F11*F33*chi33*dAdgrad_chi133122 + F12*F31*chi31*dAdgrad_chi211122 + F12*F31*chi32*dAdgrad_chi212122 + F12*F31*chi33*dAdgrad_chi213122 + F12*F32*chi31*dAdgrad_chi221122 + F12*F32*chi32*dAdgrad_chi222122 + F12*F32*chi33*dAdgrad_chi223122 + F12*F33*chi31*dAdgrad_chi231122 + F12*F33*chi32*dAdgrad_chi232122 + F12*F33*chi33*dAdgrad_chi233122 + F13*F31*chi31*dAdgrad_chi311122 + F13*F31*chi32*dAdgrad_chi312122 + F13*F31*chi33*dAdgrad_chi313122 + F13*F32*chi31*dAdgrad_chi321122 + F13*F32*chi32*dAdgrad_chi322122 + F13*F32*chi33*dAdgrad_chi323122 + F13*F33*chi31*dAdgrad_chi331122 + F13*F33*chi32*dAdgrad_chi332122 + F13*F33*chi33*dAdgrad_chi333122 + _133122;
        dadgrad_chi(2,2) = F11*F31*chi31*dAdgrad_chi111133 + F11*F31*chi32*dAdgrad_chi112133 + F11*F31*chi33*dAdgrad_chi113133 + F11*F32*chi31*dAdgrad_chi121133 + F11*F32*chi32*dAdgrad_chi122133 + F11*F32*chi33*dAdgrad_chi123133 + F11*F33*chi31*dAdgrad_chi131133 + F11*F33*chi32*dAdgrad_chi132133 + F11*F33*chi33*dAdgrad_chi133133 + F12*F31*chi31*dAdgrad_chi211133 + F12*F31*chi32*dAdgrad_chi212133 + F12*F31*chi33*dAdgrad_chi213133 + F12*F32*chi31*dAdgrad_chi221133 + F12*F32*chi32*dAdgrad_chi222133 + F12*F32*chi33*dAdgrad_chi223133 + F12*F33*chi31*dAdgrad_chi231133 + F12*F33*chi32*dAdgrad_chi232133 + F12*F33*chi33*dAdgrad_chi233133 + F13*F31*chi31*dAdgrad_chi311133 + F13*F31*chi32*dAdgrad_chi312133 + F13*F31*chi33*dAdgrad_chi313133 + F13*F32*chi31*dAdgrad_chi321133 + F13*F32*chi32*dAdgrad_chi322133 + F13*F32*chi33*dAdgrad_chi323133 + F13*F33*chi31*dAdgrad_chi331133 + F13*F33*chi32*dAdgrad_chi332133 + F13*F33*chi33*dAdgrad_chi333133 + _133133;
        dadgrad_chi(2,3) = F11*F31*chi31*dAdgrad_chi111123 + F11*F31*chi32*dAdgrad_chi112123 + F11*F31*chi33*dAdgrad_chi113123 + F11*F32*chi31*dAdgrad_chi121123 + F11*F32*chi32*dAdgrad_chi122123 + F11*F32*chi33*dAdgrad_chi123123 + F11*F33*chi31*dAdgrad_chi131123 + F11*F33*chi32*dAdgrad_chi132123 + F11*F33*chi33*dAdgrad_chi133123 + F12*F31*chi31*dAdgrad_chi211123 + F12*F31*chi32*dAdgrad_chi212123 + F12*F31*chi33*dAdgrad_chi213123 + F12*F32*chi31*dAdgrad_chi221123 + F12*F32*chi32*dAdgrad_chi222123 + F12*F32*chi33*dAdgrad_chi223123 + F12*F33*chi31*dAdgrad_chi231123 + F12*F33*chi32*dAdgrad_chi232123 + F12*F33*chi33*dAdgrad_chi233123 + F13*F31*chi31*dAdgrad_chi311123 + F13*F31*chi32*dAdgrad_chi312123 + F13*F31*chi33*dAdgrad_chi313123 + F13*F32*chi31*dAdgrad_chi321123 + F13*F32*chi32*dAdgrad_chi322123 + F13*F32*chi33*dAdgrad_chi323123 + F13*F33*chi31*dAdgrad_chi331123 + F13*F33*chi32*dAdgrad_chi332123 + F13*F33*chi33*dAdgrad_chi333123 + _133123;
        dadgrad_chi(2,4) = F11*F31*chi31*dAdgrad_chi111113 + F11*F31*chi32*dAdgrad_chi112113 + F11*F31*chi33*dAdgrad_chi113113 + F11*F32*chi31*dAdgrad_chi121113 + F11*F32*chi32*dAdgrad_chi122113 + F11*F32*chi33*dAdgrad_chi123113 + F11*F33*chi31*dAdgrad_chi131113 + F11*F33*chi32*dAdgrad_chi132113 + F11*F33*chi33*dAdgrad_chi133113 + F12*F31*chi31*dAdgrad_chi211113 + F12*F31*chi32*dAdgrad_chi212113 + F12*F31*chi33*dAdgrad_chi213113 + F12*F32*chi31*dAdgrad_chi221113 + F12*F32*chi32*dAdgrad_chi222113 + F12*F32*chi33*dAdgrad_chi223113 + F12*F33*chi31*dAdgrad_chi231113 + F12*F33*chi32*dAdgrad_chi232113 + F12*F33*chi33*dAdgrad_chi233113 + F13*F31*chi31*dAdgrad_chi311113 + F13*F31*chi32*dAdgrad_chi312113 + F13*F31*chi33*dAdgrad_chi313113 + F13*F32*chi31*dAdgrad_chi321113 + F13*F32*chi32*dAdgrad_chi322113 + F13*F32*chi33*dAdgrad_chi323113 + F13*F33*chi31*dAdgrad_chi331113 + F13*F33*chi32*dAdgrad_chi332113 + F13*F33*chi33*dAdgrad_chi333113 + _133113;
        dadgrad_chi(2,5) = F11*F31*chi31*dAdgrad_chi111112 + F11*F31*chi32*dAdgrad_chi112112 + F11*F31*chi33*dAdgrad_chi113112 + F11*F32*chi31*dAdgrad_chi121112 + F11*F32*chi32*dAdgrad_chi122112 + F11*F32*chi33*dAdgrad_chi123112 + F11*F33*chi31*dAdgrad_chi131112 + F11*F33*chi32*dAdgrad_chi132112 + F11*F33*chi33*dAdgrad_chi133112 + F12*F31*chi31*dAdgrad_chi211112 + F12*F31*chi32*dAdgrad_chi212112 + F12*F31*chi33*dAdgrad_chi213112 + F12*F32*chi31*dAdgrad_chi221112 + F12*F32*chi32*dAdgrad_chi222112 + F12*F32*chi33*dAdgrad_chi223112 + F12*F33*chi31*dAdgrad_chi231112 + F12*F33*chi32*dAdgrad_chi232112 + F12*F33*chi33*dAdgrad_chi233112 + F13*F31*chi31*dAdgrad_chi311112 + F13*F31*chi32*dAdgrad_chi312112 + F13*F31*chi33*dAdgrad_chi313112 + F13*F32*chi31*dAdgrad_chi321112 + F13*F32*chi32*dAdgrad_chi322112 + F13*F32*chi33*dAdgrad_chi323112 + F13*F33*chi31*dAdgrad_chi331112 + F13*F33*chi32*dAdgrad_chi332112 + F13*F33*chi33*dAdgrad_chi333112 + _133112;
        dadgrad_chi(2,6) = F11*F31*chi31*dAdgrad_chi111132 + F11*F31*chi32*dAdgrad_chi112132 + F11*F31*chi33*dAdgrad_chi113132 + F11*F32*chi31*dAdgrad_chi121132 + F11*F32*chi32*dAdgrad_chi122132 + F11*F32*chi33*dAdgrad_chi123132 + F11*F33*chi31*dAdgrad_chi131132 + F11*F33*chi32*dAdgrad_chi132132 + F11*F33*chi33*dAdgrad_chi133132 + F12*F31*chi31*dAdgrad_chi211132 + F12*F31*chi32*dAdgrad_chi212132 + F12*F31*chi33*dAdgrad_chi213132 + F12*F32*chi31*dAdgrad_chi221132 + F12*F32*chi32*dAdgrad_chi222132 + F12*F32*chi33*dAdgrad_chi223132 + F12*F33*chi31*dAdgrad_chi231132 + F12*F33*chi32*dAdgrad_chi232132 + F12*F33*chi33*dAdgrad_chi233132 + F13*F31*chi31*dAdgrad_chi311132 + F13*F31*chi32*dAdgrad_chi312132 + F13*F31*chi33*dAdgrad_chi313132 + F13*F32*chi31*dAdgrad_chi321132 + F13*F32*chi32*dAdgrad_chi322132 + F13*F32*chi33*dAdgrad_chi323132 + F13*F33*chi31*dAdgrad_chi331132 + F13*F33*chi32*dAdgrad_chi332132 + F13*F33*chi33*dAdgrad_chi333132 + _133132;
        dadgrad_chi(2,7) = F11*F31*chi31*dAdgrad_chi111131 + F11*F31*chi32*dAdgrad_chi112131 + F11*F31*chi33*dAdgrad_chi113131 + F11*F32*chi31*dAdgrad_chi121131 + F11*F32*chi32*dAdgrad_chi122131 + F11*F32*chi33*dAdgrad_chi123131 + F11*F33*chi31*dAdgrad_chi131131 + F11*F33*chi32*dAdgrad_chi132131 + F11*F33*chi33*dAdgrad_chi133131 + F12*F31*chi31*dAdgrad_chi211131 + F12*F31*chi32*dAdgrad_chi212131 + F12*F31*chi33*dAdgrad_chi213131 + F12*F32*chi31*dAdgrad_chi221131 + F12*F32*chi32*dAdgrad_chi222131 + F12*F32*chi33*dAdgrad_chi223131 + F12*F33*chi31*dAdgrad_chi231131 + F12*F33*chi32*dAdgrad_chi232131 + F12*F33*chi33*dAdgrad_chi233131 + F13*F31*chi31*dAdgrad_chi311131 + F13*F31*chi32*dAdgrad_chi312131 + F13*F31*chi33*dAdgrad_chi313131 + F13*F32*chi31*dAdgrad_chi321131 + F13*F32*chi32*dAdgrad_chi322131 + F13*F32*chi33*dAdgrad_chi323131 + F13*F33*chi31*dAdgrad_chi331131 + F13*F33*chi32*dAdgrad_chi332131 + F13*F33*chi33*dAdgrad_chi333131 + _133131;
        dadgrad_chi(2,8) = F11*F31*chi31*dAdgrad_chi111121 + F11*F31*chi32*dAdgrad_chi112121 + F11*F31*chi33*dAdgrad_chi113121 + F11*F32*chi31*dAdgrad_chi121121 + F11*F32*chi32*dAdgrad_chi122121 + F11*F32*chi33*dAdgrad_chi123121 + F11*F33*chi31*dAdgrad_chi131121 + F11*F33*chi32*dAdgrad_chi132121 + F11*F33*chi33*dAdgrad_chi133121 + F12*F31*chi31*dAdgrad_chi211121 + F12*F31*chi32*dAdgrad_chi212121 + F12*F31*chi33*dAdgrad_chi213121 + F12*F32*chi31*dAdgrad_chi221121 + F12*F32*chi32*dAdgrad_chi222121 + F12*F32*chi33*dAdgrad_chi223121 + F12*F33*chi31*dAdgrad_chi231121 + F12*F33*chi32*dAdgrad_chi232121 + F12*F33*chi33*dAdgrad_chi233121 + F13*F31*chi31*dAdgrad_chi311121 + F13*F31*chi32*dAdgrad_chi312121 + F13*F31*chi33*dAdgrad_chi313121 + F13*F32*chi31*dAdgrad_chi321121 + F13*F32*chi32*dAdgrad_chi322121 + F13*F32*chi33*dAdgrad_chi323121 + F13*F33*chi31*dAdgrad_chi331121 + F13*F33*chi32*dAdgrad_chi332121 + F13*F33*chi33*dAdgrad_chi333121 + _133121;
        dadgrad_chi(2,9) = F11*F31*chi31*dAdgrad_chi111211 + F11*F31*chi32*dAdgrad_chi112211 + F11*F31*chi33*dAdgrad_chi113211 + F11*F32*chi31*dAdgrad_chi121211 + F11*F32*chi32*dAdgrad_chi122211 + F11*F32*chi33*dAdgrad_chi123211 + F11*F33*chi31*dAdgrad_chi131211 + F11*F33*chi32*dAdgrad_chi132211 + F11*F33*chi33*dAdgrad_chi133211 + F12*F31*chi31*dAdgrad_chi211211 + F12*F31*chi32*dAdgrad_chi212211 + F12*F31*chi33*dAdgrad_chi213211 + F12*F32*chi31*dAdgrad_chi221211 + F12*F32*chi32*dAdgrad_chi222211 + F12*F32*chi33*dAdgrad_chi223211 + F12*F33*chi31*dAdgrad_chi231211 + F12*F33*chi32*dAdgrad_chi232211 + F12*F33*chi33*dAdgrad_chi233211 + F13*F31*chi31*dAdgrad_chi311211 + F13*F31*chi32*dAdgrad_chi312211 + F13*F31*chi33*dAdgrad_chi313211 + F13*F32*chi31*dAdgrad_chi321211 + F13*F32*chi32*dAdgrad_chi322211 + F13*F32*chi33*dAdgrad_chi323211 + F13*F33*chi31*dAdgrad_chi331211 + F13*F33*chi32*dAdgrad_chi332211 + F13*F33*chi33*dAdgrad_chi333211 + _133211;
        dadgrad_chi(2,10) = F11*F31*chi31*dAdgrad_chi111222 + F11*F31*chi32*dAdgrad_chi112222 + F11*F31*chi33*dAdgrad_chi113222 + F11*F32*chi31*dAdgrad_chi121222 + F11*F32*chi32*dAdgrad_chi122222 + F11*F32*chi33*dAdgrad_chi123222 + F11*F33*chi31*dAdgrad_chi131222 + F11*F33*chi32*dAdgrad_chi132222 + F11*F33*chi33*dAdgrad_chi133222 + F12*F31*chi31*dAdgrad_chi211222 + F12*F31*chi32*dAdgrad_chi212222 + F12*F31*chi33*dAdgrad_chi213222 + F12*F32*chi31*dAdgrad_chi221222 + F12*F32*chi32*dAdgrad_chi222222 + F12*F32*chi33*dAdgrad_chi223222 + F12*F33*chi31*dAdgrad_chi231222 + F12*F33*chi32*dAdgrad_chi232222 + F12*F33*chi33*dAdgrad_chi233222 + F13*F31*chi31*dAdgrad_chi311222 + F13*F31*chi32*dAdgrad_chi312222 + F13*F31*chi33*dAdgrad_chi313222 + F13*F32*chi31*dAdgrad_chi321222 + F13*F32*chi32*dAdgrad_chi322222 + F13*F32*chi33*dAdgrad_chi323222 + F13*F33*chi31*dAdgrad_chi331222 + F13*F33*chi32*dAdgrad_chi332222 + F13*F33*chi33*dAdgrad_chi333222 + _133222;
        dadgrad_chi(2,11) = F11*F31*chi31*dAdgrad_chi111233 + F11*F31*chi32*dAdgrad_chi112233 + F11*F31*chi33*dAdgrad_chi113233 + F11*F32*chi31*dAdgrad_chi121233 + F11*F32*chi32*dAdgrad_chi122233 + F11*F32*chi33*dAdgrad_chi123233 + F11*F33*chi31*dAdgrad_chi131233 + F11*F33*chi32*dAdgrad_chi132233 + F11*F33*chi33*dAdgrad_chi133233 + F12*F31*chi31*dAdgrad_chi211233 + F12*F31*chi32*dAdgrad_chi212233 + F12*F31*chi33*dAdgrad_chi213233 + F12*F32*chi31*dAdgrad_chi221233 + F12*F32*chi32*dAdgrad_chi222233 + F12*F32*chi33*dAdgrad_chi223233 + F12*F33*chi31*dAdgrad_chi231233 + F12*F33*chi32*dAdgrad_chi232233 + F12*F33*chi33*dAdgrad_chi233233 + F13*F31*chi31*dAdgrad_chi311233 + F13*F31*chi32*dAdgrad_chi312233 + F13*F31*chi33*dAdgrad_chi313233 + F13*F32*chi31*dAdgrad_chi321233 + F13*F32*chi32*dAdgrad_chi322233 + F13*F32*chi33*dAdgrad_chi323233 + F13*F33*chi31*dAdgrad_chi331233 + F13*F33*chi32*dAdgrad_chi332233 + F13*F33*chi33*dAdgrad_chi333233 + _133233;
        dadgrad_chi(2,12) = F11*F31*chi31*dAdgrad_chi111223 + F11*F31*chi32*dAdgrad_chi112223 + F11*F31*chi33*dAdgrad_chi113223 + F11*F32*chi31*dAdgrad_chi121223 + F11*F32*chi32*dAdgrad_chi122223 + F11*F32*chi33*dAdgrad_chi123223 + F11*F33*chi31*dAdgrad_chi131223 + F11*F33*chi32*dAdgrad_chi132223 + F11*F33*chi33*dAdgrad_chi133223 + F12*F31*chi31*dAdgrad_chi211223 + F12*F31*chi32*dAdgrad_chi212223 + F12*F31*chi33*dAdgrad_chi213223 + F12*F32*chi31*dAdgrad_chi221223 + F12*F32*chi32*dAdgrad_chi222223 + F12*F32*chi33*dAdgrad_chi223223 + F12*F33*chi31*dAdgrad_chi231223 + F12*F33*chi32*dAdgrad_chi232223 + F12*F33*chi33*dAdgrad_chi233223 + F13*F31*chi31*dAdgrad_chi311223 + F13*F31*chi32*dAdgrad_chi312223 + F13*F31*chi33*dAdgrad_chi313223 + F13*F32*chi31*dAdgrad_chi321223 + F13*F32*chi32*dAdgrad_chi322223 + F13*F32*chi33*dAdgrad_chi323223 + F13*F33*chi31*dAdgrad_chi331223 + F13*F33*chi32*dAdgrad_chi332223 + F13*F33*chi33*dAdgrad_chi333223 + _133223;
        dadgrad_chi(2,13) = F11*F31*chi31*dAdgrad_chi111213 + F11*F31*chi32*dAdgrad_chi112213 + F11*F31*chi33*dAdgrad_chi113213 + F11*F32*chi31*dAdgrad_chi121213 + F11*F32*chi32*dAdgrad_chi122213 + F11*F32*chi33*dAdgrad_chi123213 + F11*F33*chi31*dAdgrad_chi131213 + F11*F33*chi32*dAdgrad_chi132213 + F11*F33*chi33*dAdgrad_chi133213 + F12*F31*chi31*dAdgrad_chi211213 + F12*F31*chi32*dAdgrad_chi212213 + F12*F31*chi33*dAdgrad_chi213213 + F12*F32*chi31*dAdgrad_chi221213 + F12*F32*chi32*dAdgrad_chi222213 + F12*F32*chi33*dAdgrad_chi223213 + F12*F33*chi31*dAdgrad_chi231213 + F12*F33*chi32*dAdgrad_chi232213 + F12*F33*chi33*dAdgrad_chi233213 + F13*F31*chi31*dAdgrad_chi311213 + F13*F31*chi32*dAdgrad_chi312213 + F13*F31*chi33*dAdgrad_chi313213 + F13*F32*chi31*dAdgrad_chi321213 + F13*F32*chi32*dAdgrad_chi322213 + F13*F32*chi33*dAdgrad_chi323213 + F13*F33*chi31*dAdgrad_chi331213 + F13*F33*chi32*dAdgrad_chi332213 + F13*F33*chi33*dAdgrad_chi333213 + _133213;
        dadgrad_chi(2,14) = F11*F31*chi31*dAdgrad_chi111212 + F11*F31*chi32*dAdgrad_chi112212 + F11*F31*chi33*dAdgrad_chi113212 + F11*F32*chi31*dAdgrad_chi121212 + F11*F32*chi32*dAdgrad_chi122212 + F11*F32*chi33*dAdgrad_chi123212 + F11*F33*chi31*dAdgrad_chi131212 + F11*F33*chi32*dAdgrad_chi132212 + F11*F33*chi33*dAdgrad_chi133212 + F12*F31*chi31*dAdgrad_chi211212 + F12*F31*chi32*dAdgrad_chi212212 + F12*F31*chi33*dAdgrad_chi213212 + F12*F32*chi31*dAdgrad_chi221212 + F12*F32*chi32*dAdgrad_chi222212 + F12*F32*chi33*dAdgrad_chi223212 + F12*F33*chi31*dAdgrad_chi231212 + F12*F33*chi32*dAdgrad_chi232212 + F12*F33*chi33*dAdgrad_chi233212 + F13*F31*chi31*dAdgrad_chi311212 + F13*F31*chi32*dAdgrad_chi312212 + F13*F31*chi33*dAdgrad_chi313212 + F13*F32*chi31*dAdgrad_chi321212 + F13*F32*chi32*dAdgrad_chi322212 + F13*F32*chi33*dAdgrad_chi323212 + F13*F33*chi31*dAdgrad_chi331212 + F13*F33*chi32*dAdgrad_chi332212 + F13*F33*chi33*dAdgrad_chi333212 + _133212;
        dadgrad_chi(2,15) = F11*F31*chi31*dAdgrad_chi111232 + F11*F31*chi32*dAdgrad_chi112232 + F11*F31*chi33*dAdgrad_chi113232 + F11*F32*chi31*dAdgrad_chi121232 + F11*F32*chi32*dAdgrad_chi122232 + F11*F32*chi33*dAdgrad_chi123232 + F11*F33*chi31*dAdgrad_chi131232 + F11*F33*chi32*dAdgrad_chi132232 + F11*F33*chi33*dAdgrad_chi133232 + F12*F31*chi31*dAdgrad_chi211232 + F12*F31*chi32*dAdgrad_chi212232 + F12*F31*chi33*dAdgrad_chi213232 + F12*F32*chi31*dAdgrad_chi221232 + F12*F32*chi32*dAdgrad_chi222232 + F12*F32*chi33*dAdgrad_chi223232 + F12*F33*chi31*dAdgrad_chi231232 + F12*F33*chi32*dAdgrad_chi232232 + F12*F33*chi33*dAdgrad_chi233232 + F13*F31*chi31*dAdgrad_chi311232 + F13*F31*chi32*dAdgrad_chi312232 + F13*F31*chi33*dAdgrad_chi313232 + F13*F32*chi31*dAdgrad_chi321232 + F13*F32*chi32*dAdgrad_chi322232 + F13*F32*chi33*dAdgrad_chi323232 + F13*F33*chi31*dAdgrad_chi331232 + F13*F33*chi32*dAdgrad_chi332232 + F13*F33*chi33*dAdgrad_chi333232 + _133232;
        dadgrad_chi(2,16) = F11*F31*chi31*dAdgrad_chi111231 + F11*F31*chi32*dAdgrad_chi112231 + F11*F31*chi33*dAdgrad_chi113231 + F11*F32*chi31*dAdgrad_chi121231 + F11*F32*chi32*dAdgrad_chi122231 + F11*F32*chi33*dAdgrad_chi123231 + F11*F33*chi31*dAdgrad_chi131231 + F11*F33*chi32*dAdgrad_chi132231 + F11*F33*chi33*dAdgrad_chi133231 + F12*F31*chi31*dAdgrad_chi211231 + F12*F31*chi32*dAdgrad_chi212231 + F12*F31*chi33*dAdgrad_chi213231 + F12*F32*chi31*dAdgrad_chi221231 + F12*F32*chi32*dAdgrad_chi222231 + F12*F32*chi33*dAdgrad_chi223231 + F12*F33*chi31*dAdgrad_chi231231 + F12*F33*chi32*dAdgrad_chi232231 + F12*F33*chi33*dAdgrad_chi233231 + F13*F31*chi31*dAdgrad_chi311231 + F13*F31*chi32*dAdgrad_chi312231 + F13*F31*chi33*dAdgrad_chi313231 + F13*F32*chi31*dAdgrad_chi321231 + F13*F32*chi32*dAdgrad_chi322231 + F13*F32*chi33*dAdgrad_chi323231 + F13*F33*chi31*dAdgrad_chi331231 + F13*F33*chi32*dAdgrad_chi332231 + F13*F33*chi33*dAdgrad_chi333231 + _133231;
        dadgrad_chi(2,17) = F11*F31*chi31*dAdgrad_chi111221 + F11*F31*chi32*dAdgrad_chi112221 + F11*F31*chi33*dAdgrad_chi113221 + F11*F32*chi31*dAdgrad_chi121221 + F11*F32*chi32*dAdgrad_chi122221 + F11*F32*chi33*dAdgrad_chi123221 + F11*F33*chi31*dAdgrad_chi131221 + F11*F33*chi32*dAdgrad_chi132221 + F11*F33*chi33*dAdgrad_chi133221 + F12*F31*chi31*dAdgrad_chi211221 + F12*F31*chi32*dAdgrad_chi212221 + F12*F31*chi33*dAdgrad_chi213221 + F12*F32*chi31*dAdgrad_chi221221 + F12*F32*chi32*dAdgrad_chi222221 + F12*F32*chi33*dAdgrad_chi223221 + F12*F33*chi31*dAdgrad_chi231221 + F12*F33*chi32*dAdgrad_chi232221 + F12*F33*chi33*dAdgrad_chi233221 + F13*F31*chi31*dAdgrad_chi311221 + F13*F31*chi32*dAdgrad_chi312221 + F13*F31*chi33*dAdgrad_chi313221 + F13*F32*chi31*dAdgrad_chi321221 + F13*F32*chi32*dAdgrad_chi322221 + F13*F32*chi33*dAdgrad_chi323221 + F13*F33*chi31*dAdgrad_chi331221 + F13*F33*chi32*dAdgrad_chi332221 + F13*F33*chi33*dAdgrad_chi333221 + _133221;
        dadgrad_chi(2,18) = F11*F31*chi31*dAdgrad_chi111311 + F11*F31*chi32*dAdgrad_chi112311 + F11*F31*chi33*dAdgrad_chi113311 + F11*F32*chi31*dAdgrad_chi121311 + F11*F32*chi32*dAdgrad_chi122311 + F11*F32*chi33*dAdgrad_chi123311 + F11*F33*chi31*dAdgrad_chi131311 + F11*F33*chi32*dAdgrad_chi132311 + F11*F33*chi33*dAdgrad_chi133311 + F12*F31*chi31*dAdgrad_chi211311 + F12*F31*chi32*dAdgrad_chi212311 + F12*F31*chi33*dAdgrad_chi213311 + F12*F32*chi31*dAdgrad_chi221311 + F12*F32*chi32*dAdgrad_chi222311 + F12*F32*chi33*dAdgrad_chi223311 + F12*F33*chi31*dAdgrad_chi231311 + F12*F33*chi32*dAdgrad_chi232311 + F12*F33*chi33*dAdgrad_chi233311 + F13*F31*chi31*dAdgrad_chi311311 + F13*F31*chi32*dAdgrad_chi312311 + F13*F31*chi33*dAdgrad_chi313311 + F13*F32*chi31*dAdgrad_chi321311 + F13*F32*chi32*dAdgrad_chi322311 + F13*F32*chi33*dAdgrad_chi323311 + F13*F33*chi31*dAdgrad_chi331311 + F13*F33*chi32*dAdgrad_chi332311 + F13*F33*chi33*dAdgrad_chi333311 + _133311;
        dadgrad_chi(2,19) = F11*F31*chi31*dAdgrad_chi111322 + F11*F31*chi32*dAdgrad_chi112322 + F11*F31*chi33*dAdgrad_chi113322 + F11*F32*chi31*dAdgrad_chi121322 + F11*F32*chi32*dAdgrad_chi122322 + F11*F32*chi33*dAdgrad_chi123322 + F11*F33*chi31*dAdgrad_chi131322 + F11*F33*chi32*dAdgrad_chi132322 + F11*F33*chi33*dAdgrad_chi133322 + F12*F31*chi31*dAdgrad_chi211322 + F12*F31*chi32*dAdgrad_chi212322 + F12*F31*chi33*dAdgrad_chi213322 + F12*F32*chi31*dAdgrad_chi221322 + F12*F32*chi32*dAdgrad_chi222322 + F12*F32*chi33*dAdgrad_chi223322 + F12*F33*chi31*dAdgrad_chi231322 + F12*F33*chi32*dAdgrad_chi232322 + F12*F33*chi33*dAdgrad_chi233322 + F13*F31*chi31*dAdgrad_chi311322 + F13*F31*chi32*dAdgrad_chi312322 + F13*F31*chi33*dAdgrad_chi313322 + F13*F32*chi31*dAdgrad_chi321322 + F13*F32*chi32*dAdgrad_chi322322 + F13*F32*chi33*dAdgrad_chi323322 + F13*F33*chi31*dAdgrad_chi331322 + F13*F33*chi32*dAdgrad_chi332322 + F13*F33*chi33*dAdgrad_chi333322 + _133322;
        dadgrad_chi(2,20) = F11*F31*chi31*dAdgrad_chi111333 + F11*F31*chi32*dAdgrad_chi112333 + F11*F31*chi33*dAdgrad_chi113333 + F11*F32*chi31*dAdgrad_chi121333 + F11*F32*chi32*dAdgrad_chi122333 + F11*F32*chi33*dAdgrad_chi123333 + F11*F33*chi31*dAdgrad_chi131333 + F11*F33*chi32*dAdgrad_chi132333 + F11*F33*chi33*dAdgrad_chi133333 + F12*F31*chi31*dAdgrad_chi211333 + F12*F31*chi32*dAdgrad_chi212333 + F12*F31*chi33*dAdgrad_chi213333 + F12*F32*chi31*dAdgrad_chi221333 + F12*F32*chi32*dAdgrad_chi222333 + F12*F32*chi33*dAdgrad_chi223333 + F12*F33*chi31*dAdgrad_chi231333 + F12*F33*chi32*dAdgrad_chi232333 + F12*F33*chi33*dAdgrad_chi233333 + F13*F31*chi31*dAdgrad_chi311333 + F13*F31*chi32*dAdgrad_chi312333 + F13*F31*chi33*dAdgrad_chi313333 + F13*F32*chi31*dAdgrad_chi321333 + F13*F32*chi32*dAdgrad_chi322333 + F13*F32*chi33*dAdgrad_chi323333 + F13*F33*chi31*dAdgrad_chi331333 + F13*F33*chi32*dAdgrad_chi332333 + F13*F33*chi33*dAdgrad_chi333333 + _133333;
        dadgrad_chi(2,21) = F11*F31*chi31*dAdgrad_chi111323 + F11*F31*chi32*dAdgrad_chi112323 + F11*F31*chi33*dAdgrad_chi113323 + F11*F32*chi31*dAdgrad_chi121323 + F11*F32*chi32*dAdgrad_chi122323 + F11*F32*chi33*dAdgrad_chi123323 + F11*F33*chi31*dAdgrad_chi131323 + F11*F33*chi32*dAdgrad_chi132323 + F11*F33*chi33*dAdgrad_chi133323 + F12*F31*chi31*dAdgrad_chi211323 + F12*F31*chi32*dAdgrad_chi212323 + F12*F31*chi33*dAdgrad_chi213323 + F12*F32*chi31*dAdgrad_chi221323 + F12*F32*chi32*dAdgrad_chi222323 + F12*F32*chi33*dAdgrad_chi223323 + F12*F33*chi31*dAdgrad_chi231323 + F12*F33*chi32*dAdgrad_chi232323 + F12*F33*chi33*dAdgrad_chi233323 + F13*F31*chi31*dAdgrad_chi311323 + F13*F31*chi32*dAdgrad_chi312323 + F13*F31*chi33*dAdgrad_chi313323 + F13*F32*chi31*dAdgrad_chi321323 + F13*F32*chi32*dAdgrad_chi322323 + F13*F32*chi33*dAdgrad_chi323323 + F13*F33*chi31*dAdgrad_chi331323 + F13*F33*chi32*dAdgrad_chi332323 + F13*F33*chi33*dAdgrad_chi333323 + _133323;
        dadgrad_chi(2,22) = F11*F31*chi31*dAdgrad_chi111313 + F11*F31*chi32*dAdgrad_chi112313 + F11*F31*chi33*dAdgrad_chi113313 + F11*F32*chi31*dAdgrad_chi121313 + F11*F32*chi32*dAdgrad_chi122313 + F11*F32*chi33*dAdgrad_chi123313 + F11*F33*chi31*dAdgrad_chi131313 + F11*F33*chi32*dAdgrad_chi132313 + F11*F33*chi33*dAdgrad_chi133313 + F12*F31*chi31*dAdgrad_chi211313 + F12*F31*chi32*dAdgrad_chi212313 + F12*F31*chi33*dAdgrad_chi213313 + F12*F32*chi31*dAdgrad_chi221313 + F12*F32*chi32*dAdgrad_chi222313 + F12*F32*chi33*dAdgrad_chi223313 + F12*F33*chi31*dAdgrad_chi231313 + F12*F33*chi32*dAdgrad_chi232313 + F12*F33*chi33*dAdgrad_chi233313 + F13*F31*chi31*dAdgrad_chi311313 + F13*F31*chi32*dAdgrad_chi312313 + F13*F31*chi33*dAdgrad_chi313313 + F13*F32*chi31*dAdgrad_chi321313 + F13*F32*chi32*dAdgrad_chi322313 + F13*F32*chi33*dAdgrad_chi323313 + F13*F33*chi31*dAdgrad_chi331313 + F13*F33*chi32*dAdgrad_chi332313 + F13*F33*chi33*dAdgrad_chi333313 + _133313;
        dadgrad_chi(2,23) = F11*F31*chi31*dAdgrad_chi111312 + F11*F31*chi32*dAdgrad_chi112312 + F11*F31*chi33*dAdgrad_chi113312 + F11*F32*chi31*dAdgrad_chi121312 + F11*F32*chi32*dAdgrad_chi122312 + F11*F32*chi33*dAdgrad_chi123312 + F11*F33*chi31*dAdgrad_chi131312 + F11*F33*chi32*dAdgrad_chi132312 + F11*F33*chi33*dAdgrad_chi133312 + F12*F31*chi31*dAdgrad_chi211312 + F12*F31*chi32*dAdgrad_chi212312 + F12*F31*chi33*dAdgrad_chi213312 + F12*F32*chi31*dAdgrad_chi221312 + F12*F32*chi32*dAdgrad_chi222312 + F12*F32*chi33*dAdgrad_chi223312 + F12*F33*chi31*dAdgrad_chi231312 + F12*F33*chi32*dAdgrad_chi232312 + F12*F33*chi33*dAdgrad_chi233312 + F13*F31*chi31*dAdgrad_chi311312 + F13*F31*chi32*dAdgrad_chi312312 + F13*F31*chi33*dAdgrad_chi313312 + F13*F32*chi31*dAdgrad_chi321312 + F13*F32*chi32*dAdgrad_chi322312 + F13*F32*chi33*dAdgrad_chi323312 + F13*F33*chi31*dAdgrad_chi331312 + F13*F33*chi32*dAdgrad_chi332312 + F13*F33*chi33*dAdgrad_chi333312 + _133312;
        dadgrad_chi(2,24) = F11*F31*chi31*dAdgrad_chi111332 + F11*F31*chi32*dAdgrad_chi112332 + F11*F31*chi33*dAdgrad_chi113332 + F11*F32*chi31*dAdgrad_chi121332 + F11*F32*chi32*dAdgrad_chi122332 + F11*F32*chi33*dAdgrad_chi123332 + F11*F33*chi31*dAdgrad_chi131332 + F11*F33*chi32*dAdgrad_chi132332 + F11*F33*chi33*dAdgrad_chi133332 + F12*F31*chi31*dAdgrad_chi211332 + F12*F31*chi32*dAdgrad_chi212332 + F12*F31*chi33*dAdgrad_chi213332 + F12*F32*chi31*dAdgrad_chi221332 + F12*F32*chi32*dAdgrad_chi222332 + F12*F32*chi33*dAdgrad_chi223332 + F12*F33*chi31*dAdgrad_chi231332 + F12*F33*chi32*dAdgrad_chi232332 + F12*F33*chi33*dAdgrad_chi233332 + F13*F31*chi31*dAdgrad_chi311332 + F13*F31*chi32*dAdgrad_chi312332 + F13*F31*chi33*dAdgrad_chi313332 + F13*F32*chi31*dAdgrad_chi321332 + F13*F32*chi32*dAdgrad_chi322332 + F13*F32*chi33*dAdgrad_chi323332 + F13*F33*chi31*dAdgrad_chi331332 + F13*F33*chi32*dAdgrad_chi332332 + F13*F33*chi33*dAdgrad_chi333332 + _133332;
        dadgrad_chi(2,25) = F11*F31*chi31*dAdgrad_chi111331 + F11*F31*chi32*dAdgrad_chi112331 + F11*F31*chi33*dAdgrad_chi113331 + F11*F32*chi31*dAdgrad_chi121331 + F11*F32*chi32*dAdgrad_chi122331 + F11*F32*chi33*dAdgrad_chi123331 + F11*F33*chi31*dAdgrad_chi131331 + F11*F33*chi32*dAdgrad_chi132331 + F11*F33*chi33*dAdgrad_chi133331 + F12*F31*chi31*dAdgrad_chi211331 + F12*F31*chi32*dAdgrad_chi212331 + F12*F31*chi33*dAdgrad_chi213331 + F12*F32*chi31*dAdgrad_chi221331 + F12*F32*chi32*dAdgrad_chi222331 + F12*F32*chi33*dAdgrad_chi223331 + F12*F33*chi31*dAdgrad_chi231331 + F12*F33*chi32*dAdgrad_chi232331 + F12*F33*chi33*dAdgrad_chi233331 + F13*F31*chi31*dAdgrad_chi311331 + F13*F31*chi32*dAdgrad_chi312331 + F13*F31*chi33*dAdgrad_chi313331 + F13*F32*chi31*dAdgrad_chi321331 + F13*F32*chi32*dAdgrad_chi322331 + F13*F32*chi33*dAdgrad_chi323331 + F13*F33*chi31*dAdgrad_chi331331 + F13*F33*chi32*dAdgrad_chi332331 + F13*F33*chi33*dAdgrad_chi333331 + _133331;
        dadgrad_chi(2,26) = F11*F31*chi31*dAdgrad_chi111321 + F11*F31*chi32*dAdgrad_chi112321 + F11*F31*chi33*dAdgrad_chi113321 + F11*F32*chi31*dAdgrad_chi121321 + F11*F32*chi32*dAdgrad_chi122321 + F11*F32*chi33*dAdgrad_chi123321 + F11*F33*chi31*dAdgrad_chi131321 + F11*F33*chi32*dAdgrad_chi132321 + F11*F33*chi33*dAdgrad_chi133321 + F12*F31*chi31*dAdgrad_chi211321 + F12*F31*chi32*dAdgrad_chi212321 + F12*F31*chi33*dAdgrad_chi213321 + F12*F32*chi31*dAdgrad_chi221321 + F12*F32*chi32*dAdgrad_chi222321 + F12*F32*chi33*dAdgrad_chi223321 + F12*F33*chi31*dAdgrad_chi231321 + F12*F33*chi32*dAdgrad_chi232321 + F12*F33*chi33*dAdgrad_chi233321 + F13*F31*chi31*dAdgrad_chi311321 + F13*F31*chi32*dAdgrad_chi312321 + F13*F31*chi33*dAdgrad_chi313321 + F13*F32*chi31*dAdgrad_chi321321 + F13*F32*chi32*dAdgrad_chi322321 + F13*F32*chi33*dAdgrad_chi323321 + F13*F33*chi31*dAdgrad_chi331321 + F13*F33*chi32*dAdgrad_chi332321 + F13*F33*chi33*dAdgrad_chi333321 + _133321;
        dadgrad_chi(3,0) = F11*F21*chi31*dAdgrad_chi111111 + F11*F21*chi32*dAdgrad_chi112111 + F11*F21*chi33*dAdgrad_chi113111 + F11*F22*chi31*dAdgrad_chi121111 + F11*F22*chi32*dAdgrad_chi122111 + F11*F22*chi33*dAdgrad_chi123111 + F11*F23*chi31*dAdgrad_chi131111 + F11*F23*chi32*dAdgrad_chi132111 + F11*F23*chi33*dAdgrad_chi133111 + F12*F21*chi31*dAdgrad_chi211111 + F12*F21*chi32*dAdgrad_chi212111 + F12*F21*chi33*dAdgrad_chi213111 + F12*F22*chi31*dAdgrad_chi221111 + F12*F22*chi32*dAdgrad_chi222111 + F12*F22*chi33*dAdgrad_chi223111 + F12*F23*chi31*dAdgrad_chi231111 + F12*F23*chi32*dAdgrad_chi232111 + F12*F23*chi33*dAdgrad_chi233111 + F13*F21*chi31*dAdgrad_chi311111 + F13*F21*chi32*dAdgrad_chi312111 + F13*F21*chi33*dAdgrad_chi313111 + F13*F22*chi31*dAdgrad_chi321111 + F13*F22*chi32*dAdgrad_chi322111 + F13*F22*chi33*dAdgrad_chi323111 + F13*F23*chi31*dAdgrad_chi331111 + F13*F23*chi32*dAdgrad_chi332111 + F13*F23*chi33*dAdgrad_chi333111 + _123111;
        dadgrad_chi(3,1) = F11*F21*chi31*dAdgrad_chi111122 + F11*F21*chi32*dAdgrad_chi112122 + F11*F21*chi33*dAdgrad_chi113122 + F11*F22*chi31*dAdgrad_chi121122 + F11*F22*chi32*dAdgrad_chi122122 + F11*F22*chi33*dAdgrad_chi123122 + F11*F23*chi31*dAdgrad_chi131122 + F11*F23*chi32*dAdgrad_chi132122 + F11*F23*chi33*dAdgrad_chi133122 + F12*F21*chi31*dAdgrad_chi211122 + F12*F21*chi32*dAdgrad_chi212122 + F12*F21*chi33*dAdgrad_chi213122 + F12*F22*chi31*dAdgrad_chi221122 + F12*F22*chi32*dAdgrad_chi222122 + F12*F22*chi33*dAdgrad_chi223122 + F12*F23*chi31*dAdgrad_chi231122 + F12*F23*chi32*dAdgrad_chi232122 + F12*F23*chi33*dAdgrad_chi233122 + F13*F21*chi31*dAdgrad_chi311122 + F13*F21*chi32*dAdgrad_chi312122 + F13*F21*chi33*dAdgrad_chi313122 + F13*F22*chi31*dAdgrad_chi321122 + F13*F22*chi32*dAdgrad_chi322122 + F13*F22*chi33*dAdgrad_chi323122 + F13*F23*chi31*dAdgrad_chi331122 + F13*F23*chi32*dAdgrad_chi332122 + F13*F23*chi33*dAdgrad_chi333122 + _123122;
        dadgrad_chi(3,2) = F11*F21*chi31*dAdgrad_chi111133 + F11*F21*chi32*dAdgrad_chi112133 + F11*F21*chi33*dAdgrad_chi113133 + F11*F22*chi31*dAdgrad_chi121133 + F11*F22*chi32*dAdgrad_chi122133 + F11*F22*chi33*dAdgrad_chi123133 + F11*F23*chi31*dAdgrad_chi131133 + F11*F23*chi32*dAdgrad_chi132133 + F11*F23*chi33*dAdgrad_chi133133 + F12*F21*chi31*dAdgrad_chi211133 + F12*F21*chi32*dAdgrad_chi212133 + F12*F21*chi33*dAdgrad_chi213133 + F12*F22*chi31*dAdgrad_chi221133 + F12*F22*chi32*dAdgrad_chi222133 + F12*F22*chi33*dAdgrad_chi223133 + F12*F23*chi31*dAdgrad_chi231133 + F12*F23*chi32*dAdgrad_chi232133 + F12*F23*chi33*dAdgrad_chi233133 + F13*F21*chi31*dAdgrad_chi311133 + F13*F21*chi32*dAdgrad_chi312133 + F13*F21*chi33*dAdgrad_chi313133 + F13*F22*chi31*dAdgrad_chi321133 + F13*F22*chi32*dAdgrad_chi322133 + F13*F22*chi33*dAdgrad_chi323133 + F13*F23*chi31*dAdgrad_chi331133 + F13*F23*chi32*dAdgrad_chi332133 + F13*F23*chi33*dAdgrad_chi333133 + _123133;
        dadgrad_chi(3,3) = F11*F21*chi31*dAdgrad_chi111123 + F11*F21*chi32*dAdgrad_chi112123 + F11*F21*chi33*dAdgrad_chi113123 + F11*F22*chi31*dAdgrad_chi121123 + F11*F22*chi32*dAdgrad_chi122123 + F11*F22*chi33*dAdgrad_chi123123 + F11*F23*chi31*dAdgrad_chi131123 + F11*F23*chi32*dAdgrad_chi132123 + F11*F23*chi33*dAdgrad_chi133123 + F12*F21*chi31*dAdgrad_chi211123 + F12*F21*chi32*dAdgrad_chi212123 + F12*F21*chi33*dAdgrad_chi213123 + F12*F22*chi31*dAdgrad_chi221123 + F12*F22*chi32*dAdgrad_chi222123 + F12*F22*chi33*dAdgrad_chi223123 + F12*F23*chi31*dAdgrad_chi231123 + F12*F23*chi32*dAdgrad_chi232123 + F12*F23*chi33*dAdgrad_chi233123 + F13*F21*chi31*dAdgrad_chi311123 + F13*F21*chi32*dAdgrad_chi312123 + F13*F21*chi33*dAdgrad_chi313123 + F13*F22*chi31*dAdgrad_chi321123 + F13*F22*chi32*dAdgrad_chi322123 + F13*F22*chi33*dAdgrad_chi323123 + F13*F23*chi31*dAdgrad_chi331123 + F13*F23*chi32*dAdgrad_chi332123 + F13*F23*chi33*dAdgrad_chi333123 + _123123;
        dadgrad_chi(3,4) = F11*F21*chi31*dAdgrad_chi111113 + F11*F21*chi32*dAdgrad_chi112113 + F11*F21*chi33*dAdgrad_chi113113 + F11*F22*chi31*dAdgrad_chi121113 + F11*F22*chi32*dAdgrad_chi122113 + F11*F22*chi33*dAdgrad_chi123113 + F11*F23*chi31*dAdgrad_chi131113 + F11*F23*chi32*dAdgrad_chi132113 + F11*F23*chi33*dAdgrad_chi133113 + F12*F21*chi31*dAdgrad_chi211113 + F12*F21*chi32*dAdgrad_chi212113 + F12*F21*chi33*dAdgrad_chi213113 + F12*F22*chi31*dAdgrad_chi221113 + F12*F22*chi32*dAdgrad_chi222113 + F12*F22*chi33*dAdgrad_chi223113 + F12*F23*chi31*dAdgrad_chi231113 + F12*F23*chi32*dAdgrad_chi232113 + F12*F23*chi33*dAdgrad_chi233113 + F13*F21*chi31*dAdgrad_chi311113 + F13*F21*chi32*dAdgrad_chi312113 + F13*F21*chi33*dAdgrad_chi313113 + F13*F22*chi31*dAdgrad_chi321113 + F13*F22*chi32*dAdgrad_chi322113 + F13*F22*chi33*dAdgrad_chi323113 + F13*F23*chi31*dAdgrad_chi331113 + F13*F23*chi32*dAdgrad_chi332113 + F13*F23*chi33*dAdgrad_chi333113 + _123113;
        dadgrad_chi(3,5) = F11*F21*chi31*dAdgrad_chi111112 + F11*F21*chi32*dAdgrad_chi112112 + F11*F21*chi33*dAdgrad_chi113112 + F11*F22*chi31*dAdgrad_chi121112 + F11*F22*chi32*dAdgrad_chi122112 + F11*F22*chi33*dAdgrad_chi123112 + F11*F23*chi31*dAdgrad_chi131112 + F11*F23*chi32*dAdgrad_chi132112 + F11*F23*chi33*dAdgrad_chi133112 + F12*F21*chi31*dAdgrad_chi211112 + F12*F21*chi32*dAdgrad_chi212112 + F12*F21*chi33*dAdgrad_chi213112 + F12*F22*chi31*dAdgrad_chi221112 + F12*F22*chi32*dAdgrad_chi222112 + F12*F22*chi33*dAdgrad_chi223112 + F12*F23*chi31*dAdgrad_chi231112 + F12*F23*chi32*dAdgrad_chi232112 + F12*F23*chi33*dAdgrad_chi233112 + F13*F21*chi31*dAdgrad_chi311112 + F13*F21*chi32*dAdgrad_chi312112 + F13*F21*chi33*dAdgrad_chi313112 + F13*F22*chi31*dAdgrad_chi321112 + F13*F22*chi32*dAdgrad_chi322112 + F13*F22*chi33*dAdgrad_chi323112 + F13*F23*chi31*dAdgrad_chi331112 + F13*F23*chi32*dAdgrad_chi332112 + F13*F23*chi33*dAdgrad_chi333112 + _123112;
        dadgrad_chi(3,6) = F11*F21*chi31*dAdgrad_chi111132 + F11*F21*chi32*dAdgrad_chi112132 + F11*F21*chi33*dAdgrad_chi113132 + F11*F22*chi31*dAdgrad_chi121132 + F11*F22*chi32*dAdgrad_chi122132 + F11*F22*chi33*dAdgrad_chi123132 + F11*F23*chi31*dAdgrad_chi131132 + F11*F23*chi32*dAdgrad_chi132132 + F11*F23*chi33*dAdgrad_chi133132 + F12*F21*chi31*dAdgrad_chi211132 + F12*F21*chi32*dAdgrad_chi212132 + F12*F21*chi33*dAdgrad_chi213132 + F12*F22*chi31*dAdgrad_chi221132 + F12*F22*chi32*dAdgrad_chi222132 + F12*F22*chi33*dAdgrad_chi223132 + F12*F23*chi31*dAdgrad_chi231132 + F12*F23*chi32*dAdgrad_chi232132 + F12*F23*chi33*dAdgrad_chi233132 + F13*F21*chi31*dAdgrad_chi311132 + F13*F21*chi32*dAdgrad_chi312132 + F13*F21*chi33*dAdgrad_chi313132 + F13*F22*chi31*dAdgrad_chi321132 + F13*F22*chi32*dAdgrad_chi322132 + F13*F22*chi33*dAdgrad_chi323132 + F13*F23*chi31*dAdgrad_chi331132 + F13*F23*chi32*dAdgrad_chi332132 + F13*F23*chi33*dAdgrad_chi333132 + _123132;
        dadgrad_chi(3,7) = F11*F21*chi31*dAdgrad_chi111131 + F11*F21*chi32*dAdgrad_chi112131 + F11*F21*chi33*dAdgrad_chi113131 + F11*F22*chi31*dAdgrad_chi121131 + F11*F22*chi32*dAdgrad_chi122131 + F11*F22*chi33*dAdgrad_chi123131 + F11*F23*chi31*dAdgrad_chi131131 + F11*F23*chi32*dAdgrad_chi132131 + F11*F23*chi33*dAdgrad_chi133131 + F12*F21*chi31*dAdgrad_chi211131 + F12*F21*chi32*dAdgrad_chi212131 + F12*F21*chi33*dAdgrad_chi213131 + F12*F22*chi31*dAdgrad_chi221131 + F12*F22*chi32*dAdgrad_chi222131 + F12*F22*chi33*dAdgrad_chi223131 + F12*F23*chi31*dAdgrad_chi231131 + F12*F23*chi32*dAdgrad_chi232131 + F12*F23*chi33*dAdgrad_chi233131 + F13*F21*chi31*dAdgrad_chi311131 + F13*F21*chi32*dAdgrad_chi312131 + F13*F21*chi33*dAdgrad_chi313131 + F13*F22*chi31*dAdgrad_chi321131 + F13*F22*chi32*dAdgrad_chi322131 + F13*F22*chi33*dAdgrad_chi323131 + F13*F23*chi31*dAdgrad_chi331131 + F13*F23*chi32*dAdgrad_chi332131 + F13*F23*chi33*dAdgrad_chi333131 + _123131;
        dadgrad_chi(3,8) = F11*F21*chi31*dAdgrad_chi111121 + F11*F21*chi32*dAdgrad_chi112121 + F11*F21*chi33*dAdgrad_chi113121 + F11*F22*chi31*dAdgrad_chi121121 + F11*F22*chi32*dAdgrad_chi122121 + F11*F22*chi33*dAdgrad_chi123121 + F11*F23*chi31*dAdgrad_chi131121 + F11*F23*chi32*dAdgrad_chi132121 + F11*F23*chi33*dAdgrad_chi133121 + F12*F21*chi31*dAdgrad_chi211121 + F12*F21*chi32*dAdgrad_chi212121 + F12*F21*chi33*dAdgrad_chi213121 + F12*F22*chi31*dAdgrad_chi221121 + F12*F22*chi32*dAdgrad_chi222121 + F12*F22*chi33*dAdgrad_chi223121 + F12*F23*chi31*dAdgrad_chi231121 + F12*F23*chi32*dAdgrad_chi232121 + F12*F23*chi33*dAdgrad_chi233121 + F13*F21*chi31*dAdgrad_chi311121 + F13*F21*chi32*dAdgrad_chi312121 + F13*F21*chi33*dAdgrad_chi313121 + F13*F22*chi31*dAdgrad_chi321121 + F13*F22*chi32*dAdgrad_chi322121 + F13*F22*chi33*dAdgrad_chi323121 + F13*F23*chi31*dAdgrad_chi331121 + F13*F23*chi32*dAdgrad_chi332121 + F13*F23*chi33*dAdgrad_chi333121 + _123121;
        dadgrad_chi(3,9) = F11*F21*chi31*dAdgrad_chi111211 + F11*F21*chi32*dAdgrad_chi112211 + F11*F21*chi33*dAdgrad_chi113211 + F11*F22*chi31*dAdgrad_chi121211 + F11*F22*chi32*dAdgrad_chi122211 + F11*F22*chi33*dAdgrad_chi123211 + F11*F23*chi31*dAdgrad_chi131211 + F11*F23*chi32*dAdgrad_chi132211 + F11*F23*chi33*dAdgrad_chi133211 + F12*F21*chi31*dAdgrad_chi211211 + F12*F21*chi32*dAdgrad_chi212211 + F12*F21*chi33*dAdgrad_chi213211 + F12*F22*chi31*dAdgrad_chi221211 + F12*F22*chi32*dAdgrad_chi222211 + F12*F22*chi33*dAdgrad_chi223211 + F12*F23*chi31*dAdgrad_chi231211 + F12*F23*chi32*dAdgrad_chi232211 + F12*F23*chi33*dAdgrad_chi233211 + F13*F21*chi31*dAdgrad_chi311211 + F13*F21*chi32*dAdgrad_chi312211 + F13*F21*chi33*dAdgrad_chi313211 + F13*F22*chi31*dAdgrad_chi321211 + F13*F22*chi32*dAdgrad_chi322211 + F13*F22*chi33*dAdgrad_chi323211 + F13*F23*chi31*dAdgrad_chi331211 + F13*F23*chi32*dAdgrad_chi332211 + F13*F23*chi33*dAdgrad_chi333211 + _123211;
        dadgrad_chi(3,10) = F11*F21*chi31*dAdgrad_chi111222 + F11*F21*chi32*dAdgrad_chi112222 + F11*F21*chi33*dAdgrad_chi113222 + F11*F22*chi31*dAdgrad_chi121222 + F11*F22*chi32*dAdgrad_chi122222 + F11*F22*chi33*dAdgrad_chi123222 + F11*F23*chi31*dAdgrad_chi131222 + F11*F23*chi32*dAdgrad_chi132222 + F11*F23*chi33*dAdgrad_chi133222 + F12*F21*chi31*dAdgrad_chi211222 + F12*F21*chi32*dAdgrad_chi212222 + F12*F21*chi33*dAdgrad_chi213222 + F12*F22*chi31*dAdgrad_chi221222 + F12*F22*chi32*dAdgrad_chi222222 + F12*F22*chi33*dAdgrad_chi223222 + F12*F23*chi31*dAdgrad_chi231222 + F12*F23*chi32*dAdgrad_chi232222 + F12*F23*chi33*dAdgrad_chi233222 + F13*F21*chi31*dAdgrad_chi311222 + F13*F21*chi32*dAdgrad_chi312222 + F13*F21*chi33*dAdgrad_chi313222 + F13*F22*chi31*dAdgrad_chi321222 + F13*F22*chi32*dAdgrad_chi322222 + F13*F22*chi33*dAdgrad_chi323222 + F13*F23*chi31*dAdgrad_chi331222 + F13*F23*chi32*dAdgrad_chi332222 + F13*F23*chi33*dAdgrad_chi333222 + _123222;
        dadgrad_chi(3,11) = F11*F21*chi31*dAdgrad_chi111233 + F11*F21*chi32*dAdgrad_chi112233 + F11*F21*chi33*dAdgrad_chi113233 + F11*F22*chi31*dAdgrad_chi121233 + F11*F22*chi32*dAdgrad_chi122233 + F11*F22*chi33*dAdgrad_chi123233 + F11*F23*chi31*dAdgrad_chi131233 + F11*F23*chi32*dAdgrad_chi132233 + F11*F23*chi33*dAdgrad_chi133233 + F12*F21*chi31*dAdgrad_chi211233 + F12*F21*chi32*dAdgrad_chi212233 + F12*F21*chi33*dAdgrad_chi213233 + F12*F22*chi31*dAdgrad_chi221233 + F12*F22*chi32*dAdgrad_chi222233 + F12*F22*chi33*dAdgrad_chi223233 + F12*F23*chi31*dAdgrad_chi231233 + F12*F23*chi32*dAdgrad_chi232233 + F12*F23*chi33*dAdgrad_chi233233 + F13*F21*chi31*dAdgrad_chi311233 + F13*F21*chi32*dAdgrad_chi312233 + F13*F21*chi33*dAdgrad_chi313233 + F13*F22*chi31*dAdgrad_chi321233 + F13*F22*chi32*dAdgrad_chi322233 + F13*F22*chi33*dAdgrad_chi323233 + F13*F23*chi31*dAdgrad_chi331233 + F13*F23*chi32*dAdgrad_chi332233 + F13*F23*chi33*dAdgrad_chi333233 + _123233;
        dadgrad_chi(3,12) = F11*F21*chi31*dAdgrad_chi111223 + F11*F21*chi32*dAdgrad_chi112223 + F11*F21*chi33*dAdgrad_chi113223 + F11*F22*chi31*dAdgrad_chi121223 + F11*F22*chi32*dAdgrad_chi122223 + F11*F22*chi33*dAdgrad_chi123223 + F11*F23*chi31*dAdgrad_chi131223 + F11*F23*chi32*dAdgrad_chi132223 + F11*F23*chi33*dAdgrad_chi133223 + F12*F21*chi31*dAdgrad_chi211223 + F12*F21*chi32*dAdgrad_chi212223 + F12*F21*chi33*dAdgrad_chi213223 + F12*F22*chi31*dAdgrad_chi221223 + F12*F22*chi32*dAdgrad_chi222223 + F12*F22*chi33*dAdgrad_chi223223 + F12*F23*chi31*dAdgrad_chi231223 + F12*F23*chi32*dAdgrad_chi232223 + F12*F23*chi33*dAdgrad_chi233223 + F13*F21*chi31*dAdgrad_chi311223 + F13*F21*chi32*dAdgrad_chi312223 + F13*F21*chi33*dAdgrad_chi313223 + F13*F22*chi31*dAdgrad_chi321223 + F13*F22*chi32*dAdgrad_chi322223 + F13*F22*chi33*dAdgrad_chi323223 + F13*F23*chi31*dAdgrad_chi331223 + F13*F23*chi32*dAdgrad_chi332223 + F13*F23*chi33*dAdgrad_chi333223 + _123223;
        dadgrad_chi(3,13) = F11*F21*chi31*dAdgrad_chi111213 + F11*F21*chi32*dAdgrad_chi112213 + F11*F21*chi33*dAdgrad_chi113213 + F11*F22*chi31*dAdgrad_chi121213 + F11*F22*chi32*dAdgrad_chi122213 + F11*F22*chi33*dAdgrad_chi123213 + F11*F23*chi31*dAdgrad_chi131213 + F11*F23*chi32*dAdgrad_chi132213 + F11*F23*chi33*dAdgrad_chi133213 + F12*F21*chi31*dAdgrad_chi211213 + F12*F21*chi32*dAdgrad_chi212213 + F12*F21*chi33*dAdgrad_chi213213 + F12*F22*chi31*dAdgrad_chi221213 + F12*F22*chi32*dAdgrad_chi222213 + F12*F22*chi33*dAdgrad_chi223213 + F12*F23*chi31*dAdgrad_chi231213 + F12*F23*chi32*dAdgrad_chi232213 + F12*F23*chi33*dAdgrad_chi233213 + F13*F21*chi31*dAdgrad_chi311213 + F13*F21*chi32*dAdgrad_chi312213 + F13*F21*chi33*dAdgrad_chi313213 + F13*F22*chi31*dAdgrad_chi321213 + F13*F22*chi32*dAdgrad_chi322213 + F13*F22*chi33*dAdgrad_chi323213 + F13*F23*chi31*dAdgrad_chi331213 + F13*F23*chi32*dAdgrad_chi332213 + F13*F23*chi33*dAdgrad_chi333213 + _123213;
        dadgrad_chi(3,14) = F11*F21*chi31*dAdgrad_chi111212 + F11*F21*chi32*dAdgrad_chi112212 + F11*F21*chi33*dAdgrad_chi113212 + F11*F22*chi31*dAdgrad_chi121212 + F11*F22*chi32*dAdgrad_chi122212 + F11*F22*chi33*dAdgrad_chi123212 + F11*F23*chi31*dAdgrad_chi131212 + F11*F23*chi32*dAdgrad_chi132212 + F11*F23*chi33*dAdgrad_chi133212 + F12*F21*chi31*dAdgrad_chi211212 + F12*F21*chi32*dAdgrad_chi212212 + F12*F21*chi33*dAdgrad_chi213212 + F12*F22*chi31*dAdgrad_chi221212 + F12*F22*chi32*dAdgrad_chi222212 + F12*F22*chi33*dAdgrad_chi223212 + F12*F23*chi31*dAdgrad_chi231212 + F12*F23*chi32*dAdgrad_chi232212 + F12*F23*chi33*dAdgrad_chi233212 + F13*F21*chi31*dAdgrad_chi311212 + F13*F21*chi32*dAdgrad_chi312212 + F13*F21*chi33*dAdgrad_chi313212 + F13*F22*chi31*dAdgrad_chi321212 + F13*F22*chi32*dAdgrad_chi322212 + F13*F22*chi33*dAdgrad_chi323212 + F13*F23*chi31*dAdgrad_chi331212 + F13*F23*chi32*dAdgrad_chi332212 + F13*F23*chi33*dAdgrad_chi333212 + _123212;
        dadgrad_chi(3,15) = F11*F21*chi31*dAdgrad_chi111232 + F11*F21*chi32*dAdgrad_chi112232 + F11*F21*chi33*dAdgrad_chi113232 + F11*F22*chi31*dAdgrad_chi121232 + F11*F22*chi32*dAdgrad_chi122232 + F11*F22*chi33*dAdgrad_chi123232 + F11*F23*chi31*dAdgrad_chi131232 + F11*F23*chi32*dAdgrad_chi132232 + F11*F23*chi33*dAdgrad_chi133232 + F12*F21*chi31*dAdgrad_chi211232 + F12*F21*chi32*dAdgrad_chi212232 + F12*F21*chi33*dAdgrad_chi213232 + F12*F22*chi31*dAdgrad_chi221232 + F12*F22*chi32*dAdgrad_chi222232 + F12*F22*chi33*dAdgrad_chi223232 + F12*F23*chi31*dAdgrad_chi231232 + F12*F23*chi32*dAdgrad_chi232232 + F12*F23*chi33*dAdgrad_chi233232 + F13*F21*chi31*dAdgrad_chi311232 + F13*F21*chi32*dAdgrad_chi312232 + F13*F21*chi33*dAdgrad_chi313232 + F13*F22*chi31*dAdgrad_chi321232 + F13*F22*chi32*dAdgrad_chi322232 + F13*F22*chi33*dAdgrad_chi323232 + F13*F23*chi31*dAdgrad_chi331232 + F13*F23*chi32*dAdgrad_chi332232 + F13*F23*chi33*dAdgrad_chi333232 + _123232;
        dadgrad_chi(3,16) = F11*F21*chi31*dAdgrad_chi111231 + F11*F21*chi32*dAdgrad_chi112231 + F11*F21*chi33*dAdgrad_chi113231 + F11*F22*chi31*dAdgrad_chi121231 + F11*F22*chi32*dAdgrad_chi122231 + F11*F22*chi33*dAdgrad_chi123231 + F11*F23*chi31*dAdgrad_chi131231 + F11*F23*chi32*dAdgrad_chi132231 + F11*F23*chi33*dAdgrad_chi133231 + F12*F21*chi31*dAdgrad_chi211231 + F12*F21*chi32*dAdgrad_chi212231 + F12*F21*chi33*dAdgrad_chi213231 + F12*F22*chi31*dAdgrad_chi221231 + F12*F22*chi32*dAdgrad_chi222231 + F12*F22*chi33*dAdgrad_chi223231 + F12*F23*chi31*dAdgrad_chi231231 + F12*F23*chi32*dAdgrad_chi232231 + F12*F23*chi33*dAdgrad_chi233231 + F13*F21*chi31*dAdgrad_chi311231 + F13*F21*chi32*dAdgrad_chi312231 + F13*F21*chi33*dAdgrad_chi313231 + F13*F22*chi31*dAdgrad_chi321231 + F13*F22*chi32*dAdgrad_chi322231 + F13*F22*chi33*dAdgrad_chi323231 + F13*F23*chi31*dAdgrad_chi331231 + F13*F23*chi32*dAdgrad_chi332231 + F13*F23*chi33*dAdgrad_chi333231 + _123231;
        dadgrad_chi(3,17) = F11*F21*chi31*dAdgrad_chi111221 + F11*F21*chi32*dAdgrad_chi112221 + F11*F21*chi33*dAdgrad_chi113221 + F11*F22*chi31*dAdgrad_chi121221 + F11*F22*chi32*dAdgrad_chi122221 + F11*F22*chi33*dAdgrad_chi123221 + F11*F23*chi31*dAdgrad_chi131221 + F11*F23*chi32*dAdgrad_chi132221 + F11*F23*chi33*dAdgrad_chi133221 + F12*F21*chi31*dAdgrad_chi211221 + F12*F21*chi32*dAdgrad_chi212221 + F12*F21*chi33*dAdgrad_chi213221 + F12*F22*chi31*dAdgrad_chi221221 + F12*F22*chi32*dAdgrad_chi222221 + F12*F22*chi33*dAdgrad_chi223221 + F12*F23*chi31*dAdgrad_chi231221 + F12*F23*chi32*dAdgrad_chi232221 + F12*F23*chi33*dAdgrad_chi233221 + F13*F21*chi31*dAdgrad_chi311221 + F13*F21*chi32*dAdgrad_chi312221 + F13*F21*chi33*dAdgrad_chi313221 + F13*F22*chi31*dAdgrad_chi321221 + F13*F22*chi32*dAdgrad_chi322221 + F13*F22*chi33*dAdgrad_chi323221 + F13*F23*chi31*dAdgrad_chi331221 + F13*F23*chi32*dAdgrad_chi332221 + F13*F23*chi33*dAdgrad_chi333221 + _123221;
        dadgrad_chi(3,18) = F11*F21*chi31*dAdgrad_chi111311 + F11*F21*chi32*dAdgrad_chi112311 + F11*F21*chi33*dAdgrad_chi113311 + F11*F22*chi31*dAdgrad_chi121311 + F11*F22*chi32*dAdgrad_chi122311 + F11*F22*chi33*dAdgrad_chi123311 + F11*F23*chi31*dAdgrad_chi131311 + F11*F23*chi32*dAdgrad_chi132311 + F11*F23*chi33*dAdgrad_chi133311 + F12*F21*chi31*dAdgrad_chi211311 + F12*F21*chi32*dAdgrad_chi212311 + F12*F21*chi33*dAdgrad_chi213311 + F12*F22*chi31*dAdgrad_chi221311 + F12*F22*chi32*dAdgrad_chi222311 + F12*F22*chi33*dAdgrad_chi223311 + F12*F23*chi31*dAdgrad_chi231311 + F12*F23*chi32*dAdgrad_chi232311 + F12*F23*chi33*dAdgrad_chi233311 + F13*F21*chi31*dAdgrad_chi311311 + F13*F21*chi32*dAdgrad_chi312311 + F13*F21*chi33*dAdgrad_chi313311 + F13*F22*chi31*dAdgrad_chi321311 + F13*F22*chi32*dAdgrad_chi322311 + F13*F22*chi33*dAdgrad_chi323311 + F13*F23*chi31*dAdgrad_chi331311 + F13*F23*chi32*dAdgrad_chi332311 + F13*F23*chi33*dAdgrad_chi333311 + _123311;
        dadgrad_chi(3,19) = F11*F21*chi31*dAdgrad_chi111322 + F11*F21*chi32*dAdgrad_chi112322 + F11*F21*chi33*dAdgrad_chi113322 + F11*F22*chi31*dAdgrad_chi121322 + F11*F22*chi32*dAdgrad_chi122322 + F11*F22*chi33*dAdgrad_chi123322 + F11*F23*chi31*dAdgrad_chi131322 + F11*F23*chi32*dAdgrad_chi132322 + F11*F23*chi33*dAdgrad_chi133322 + F12*F21*chi31*dAdgrad_chi211322 + F12*F21*chi32*dAdgrad_chi212322 + F12*F21*chi33*dAdgrad_chi213322 + F12*F22*chi31*dAdgrad_chi221322 + F12*F22*chi32*dAdgrad_chi222322 + F12*F22*chi33*dAdgrad_chi223322 + F12*F23*chi31*dAdgrad_chi231322 + F12*F23*chi32*dAdgrad_chi232322 + F12*F23*chi33*dAdgrad_chi233322 + F13*F21*chi31*dAdgrad_chi311322 + F13*F21*chi32*dAdgrad_chi312322 + F13*F21*chi33*dAdgrad_chi313322 + F13*F22*chi31*dAdgrad_chi321322 + F13*F22*chi32*dAdgrad_chi322322 + F13*F22*chi33*dAdgrad_chi323322 + F13*F23*chi31*dAdgrad_chi331322 + F13*F23*chi32*dAdgrad_chi332322 + F13*F23*chi33*dAdgrad_chi333322 + _123322;
        dadgrad_chi(3,20) = F11*F21*chi31*dAdgrad_chi111333 + F11*F21*chi32*dAdgrad_chi112333 + F11*F21*chi33*dAdgrad_chi113333 + F11*F22*chi31*dAdgrad_chi121333 + F11*F22*chi32*dAdgrad_chi122333 + F11*F22*chi33*dAdgrad_chi123333 + F11*F23*chi31*dAdgrad_chi131333 + F11*F23*chi32*dAdgrad_chi132333 + F11*F23*chi33*dAdgrad_chi133333 + F12*F21*chi31*dAdgrad_chi211333 + F12*F21*chi32*dAdgrad_chi212333 + F12*F21*chi33*dAdgrad_chi213333 + F12*F22*chi31*dAdgrad_chi221333 + F12*F22*chi32*dAdgrad_chi222333 + F12*F22*chi33*dAdgrad_chi223333 + F12*F23*chi31*dAdgrad_chi231333 + F12*F23*chi32*dAdgrad_chi232333 + F12*F23*chi33*dAdgrad_chi233333 + F13*F21*chi31*dAdgrad_chi311333 + F13*F21*chi32*dAdgrad_chi312333 + F13*F21*chi33*dAdgrad_chi313333 + F13*F22*chi31*dAdgrad_chi321333 + F13*F22*chi32*dAdgrad_chi322333 + F13*F22*chi33*dAdgrad_chi323333 + F13*F23*chi31*dAdgrad_chi331333 + F13*F23*chi32*dAdgrad_chi332333 + F13*F23*chi33*dAdgrad_chi333333 + _123333;
        dadgrad_chi(3,21) = F11*F21*chi31*dAdgrad_chi111323 + F11*F21*chi32*dAdgrad_chi112323 + F11*F21*chi33*dAdgrad_chi113323 + F11*F22*chi31*dAdgrad_chi121323 + F11*F22*chi32*dAdgrad_chi122323 + F11*F22*chi33*dAdgrad_chi123323 + F11*F23*chi31*dAdgrad_chi131323 + F11*F23*chi32*dAdgrad_chi132323 + F11*F23*chi33*dAdgrad_chi133323 + F12*F21*chi31*dAdgrad_chi211323 + F12*F21*chi32*dAdgrad_chi212323 + F12*F21*chi33*dAdgrad_chi213323 + F12*F22*chi31*dAdgrad_chi221323 + F12*F22*chi32*dAdgrad_chi222323 + F12*F22*chi33*dAdgrad_chi223323 + F12*F23*chi31*dAdgrad_chi231323 + F12*F23*chi32*dAdgrad_chi232323 + F12*F23*chi33*dAdgrad_chi233323 + F13*F21*chi31*dAdgrad_chi311323 + F13*F21*chi32*dAdgrad_chi312323 + F13*F21*chi33*dAdgrad_chi313323 + F13*F22*chi31*dAdgrad_chi321323 + F13*F22*chi32*dAdgrad_chi322323 + F13*F22*chi33*dAdgrad_chi323323 + F13*F23*chi31*dAdgrad_chi331323 + F13*F23*chi32*dAdgrad_chi332323 + F13*F23*chi33*dAdgrad_chi333323 + _123323;
        dadgrad_chi(3,22) = F11*F21*chi31*dAdgrad_chi111313 + F11*F21*chi32*dAdgrad_chi112313 + F11*F21*chi33*dAdgrad_chi113313 + F11*F22*chi31*dAdgrad_chi121313 + F11*F22*chi32*dAdgrad_chi122313 + F11*F22*chi33*dAdgrad_chi123313 + F11*F23*chi31*dAdgrad_chi131313 + F11*F23*chi32*dAdgrad_chi132313 + F11*F23*chi33*dAdgrad_chi133313 + F12*F21*chi31*dAdgrad_chi211313 + F12*F21*chi32*dAdgrad_chi212313 + F12*F21*chi33*dAdgrad_chi213313 + F12*F22*chi31*dAdgrad_chi221313 + F12*F22*chi32*dAdgrad_chi222313 + F12*F22*chi33*dAdgrad_chi223313 + F12*F23*chi31*dAdgrad_chi231313 + F12*F23*chi32*dAdgrad_chi232313 + F12*F23*chi33*dAdgrad_chi233313 + F13*F21*chi31*dAdgrad_chi311313 + F13*F21*chi32*dAdgrad_chi312313 + F13*F21*chi33*dAdgrad_chi313313 + F13*F22*chi31*dAdgrad_chi321313 + F13*F22*chi32*dAdgrad_chi322313 + F13*F22*chi33*dAdgrad_chi323313 + F13*F23*chi31*dAdgrad_chi331313 + F13*F23*chi32*dAdgrad_chi332313 + F13*F23*chi33*dAdgrad_chi333313 + _123313;
        dadgrad_chi(3,23) = F11*F21*chi31*dAdgrad_chi111312 + F11*F21*chi32*dAdgrad_chi112312 + F11*F21*chi33*dAdgrad_chi113312 + F11*F22*chi31*dAdgrad_chi121312 + F11*F22*chi32*dAdgrad_chi122312 + F11*F22*chi33*dAdgrad_chi123312 + F11*F23*chi31*dAdgrad_chi131312 + F11*F23*chi32*dAdgrad_chi132312 + F11*F23*chi33*dAdgrad_chi133312 + F12*F21*chi31*dAdgrad_chi211312 + F12*F21*chi32*dAdgrad_chi212312 + F12*F21*chi33*dAdgrad_chi213312 + F12*F22*chi31*dAdgrad_chi221312 + F12*F22*chi32*dAdgrad_chi222312 + F12*F22*chi33*dAdgrad_chi223312 + F12*F23*chi31*dAdgrad_chi231312 + F12*F23*chi32*dAdgrad_chi232312 + F12*F23*chi33*dAdgrad_chi233312 + F13*F21*chi31*dAdgrad_chi311312 + F13*F21*chi32*dAdgrad_chi312312 + F13*F21*chi33*dAdgrad_chi313312 + F13*F22*chi31*dAdgrad_chi321312 + F13*F22*chi32*dAdgrad_chi322312 + F13*F22*chi33*dAdgrad_chi323312 + F13*F23*chi31*dAdgrad_chi331312 + F13*F23*chi32*dAdgrad_chi332312 + F13*F23*chi33*dAdgrad_chi333312 + _123312;
        dadgrad_chi(3,24) = F11*F21*chi31*dAdgrad_chi111332 + F11*F21*chi32*dAdgrad_chi112332 + F11*F21*chi33*dAdgrad_chi113332 + F11*F22*chi31*dAdgrad_chi121332 + F11*F22*chi32*dAdgrad_chi122332 + F11*F22*chi33*dAdgrad_chi123332 + F11*F23*chi31*dAdgrad_chi131332 + F11*F23*chi32*dAdgrad_chi132332 + F11*F23*chi33*dAdgrad_chi133332 + F12*F21*chi31*dAdgrad_chi211332 + F12*F21*chi32*dAdgrad_chi212332 + F12*F21*chi33*dAdgrad_chi213332 + F12*F22*chi31*dAdgrad_chi221332 + F12*F22*chi32*dAdgrad_chi222332 + F12*F22*chi33*dAdgrad_chi223332 + F12*F23*chi31*dAdgrad_chi231332 + F12*F23*chi32*dAdgrad_chi232332 + F12*F23*chi33*dAdgrad_chi233332 + F13*F21*chi31*dAdgrad_chi311332 + F13*F21*chi32*dAdgrad_chi312332 + F13*F21*chi33*dAdgrad_chi313332 + F13*F22*chi31*dAdgrad_chi321332 + F13*F22*chi32*dAdgrad_chi322332 + F13*F22*chi33*dAdgrad_chi323332 + F13*F23*chi31*dAdgrad_chi331332 + F13*F23*chi32*dAdgrad_chi332332 + F13*F23*chi33*dAdgrad_chi333332 + _123332;
        dadgrad_chi(3,25) = F11*F21*chi31*dAdgrad_chi111331 + F11*F21*chi32*dAdgrad_chi112331 + F11*F21*chi33*dAdgrad_chi113331 + F11*F22*chi31*dAdgrad_chi121331 + F11*F22*chi32*dAdgrad_chi122331 + F11*F22*chi33*dAdgrad_chi123331 + F11*F23*chi31*dAdgrad_chi131331 + F11*F23*chi32*dAdgrad_chi132331 + F11*F23*chi33*dAdgrad_chi133331 + F12*F21*chi31*dAdgrad_chi211331 + F12*F21*chi32*dAdgrad_chi212331 + F12*F21*chi33*dAdgrad_chi213331 + F12*F22*chi31*dAdgrad_chi221331 + F12*F22*chi32*dAdgrad_chi222331 + F12*F22*chi33*dAdgrad_chi223331 + F12*F23*chi31*dAdgrad_chi231331 + F12*F23*chi32*dAdgrad_chi232331 + F12*F23*chi33*dAdgrad_chi233331 + F13*F21*chi31*dAdgrad_chi311331 + F13*F21*chi32*dAdgrad_chi312331 + F13*F21*chi33*dAdgrad_chi313331 + F13*F22*chi31*dAdgrad_chi321331 + F13*F22*chi32*dAdgrad_chi322331 + F13*F22*chi33*dAdgrad_chi323331 + F13*F23*chi31*dAdgrad_chi331331 + F13*F23*chi32*dAdgrad_chi332331 + F13*F23*chi33*dAdgrad_chi333331 + _123331;
        dadgrad_chi(3,26) = F11*F21*chi31*dAdgrad_chi111321 + F11*F21*chi32*dAdgrad_chi112321 + F11*F21*chi33*dAdgrad_chi113321 + F11*F22*chi31*dAdgrad_chi121321 + F11*F22*chi32*dAdgrad_chi122321 + F11*F22*chi33*dAdgrad_chi123321 + F11*F23*chi31*dAdgrad_chi131321 + F11*F23*chi32*dAdgrad_chi132321 + F11*F23*chi33*dAdgrad_chi133321 + F12*F21*chi31*dAdgrad_chi211321 + F12*F21*chi32*dAdgrad_chi212321 + F12*F21*chi33*dAdgrad_chi213321 + F12*F22*chi31*dAdgrad_chi221321 + F12*F22*chi32*dAdgrad_chi222321 + F12*F22*chi33*dAdgrad_chi223321 + F12*F23*chi31*dAdgrad_chi231321 + F12*F23*chi32*dAdgrad_chi232321 + F12*F23*chi33*dAdgrad_chi233321 + F13*F21*chi31*dAdgrad_chi311321 + F13*F21*chi32*dAdgrad_chi312321 + F13*F21*chi33*dAdgrad_chi313321 + F13*F22*chi31*dAdgrad_chi321321 + F13*F22*chi32*dAdgrad_chi322321 + F13*F22*chi33*dAdgrad_chi323321 + F13*F23*chi31*dAdgrad_chi331321 + F13*F23*chi32*dAdgrad_chi332321 + F13*F23*chi33*dAdgrad_chi333321 + _123321;
        dadgrad_chi(4,0) = F11*F11*chi31*dAdgrad_chi111111 + F11*F11*chi32*dAdgrad_chi112111 + F11*F11*chi33*dAdgrad_chi113111 + F11*F12*chi31*dAdgrad_chi121111 + F11*F12*chi31*dAdgrad_chi211111 + F11*F12*chi32*dAdgrad_chi122111 + F11*F12*chi32*dAdgrad_chi212111 + F11*F12*chi33*dAdgrad_chi123111 + F11*F12*chi33*dAdgrad_chi213111 + F11*F13*chi31*dAdgrad_chi131111 + F11*F13*chi31*dAdgrad_chi311111 + F11*F13*chi32*dAdgrad_chi132111 + F11*F13*chi32*dAdgrad_chi312111 + F11*F13*chi33*dAdgrad_chi133111 + F11*F13*chi33*dAdgrad_chi313111 + F12*F12*chi31*dAdgrad_chi221111 + F12*F12*chi32*dAdgrad_chi222111 + F12*F12*chi33*dAdgrad_chi223111 + F12*F13*chi31*dAdgrad_chi231111 + F12*F13*chi31*dAdgrad_chi321111 + F12*F13*chi32*dAdgrad_chi232111 + F12*F13*chi32*dAdgrad_chi322111 + F12*F13*chi33*dAdgrad_chi233111 + F12*F13*chi33*dAdgrad_chi323111 + F13*F13*chi31*dAdgrad_chi331111 + F13*F13*chi32*dAdgrad_chi332111 + F13*F13*chi33*dAdgrad_chi333111 + _113111;
        dadgrad_chi(4,1) = F11*F11*chi31*dAdgrad_chi111122 + F11*F11*chi32*dAdgrad_chi112122 + F11*F11*chi33*dAdgrad_chi113122 + F11*F12*chi31*dAdgrad_chi121122 + F11*F12*chi31*dAdgrad_chi211122 + F11*F12*chi32*dAdgrad_chi122122 + F11*F12*chi32*dAdgrad_chi212122 + F11*F12*chi33*dAdgrad_chi123122 + F11*F12*chi33*dAdgrad_chi213122 + F11*F13*chi31*dAdgrad_chi131122 + F11*F13*chi31*dAdgrad_chi311122 + F11*F13*chi32*dAdgrad_chi132122 + F11*F13*chi32*dAdgrad_chi312122 + F11*F13*chi33*dAdgrad_chi133122 + F11*F13*chi33*dAdgrad_chi313122 + F12*F12*chi31*dAdgrad_chi221122 + F12*F12*chi32*dAdgrad_chi222122 + F12*F12*chi33*dAdgrad_chi223122 + F12*F13*chi31*dAdgrad_chi231122 + F12*F13*chi31*dAdgrad_chi321122 + F12*F13*chi32*dAdgrad_chi232122 + F12*F13*chi32*dAdgrad_chi322122 + F12*F13*chi33*dAdgrad_chi233122 + F12*F13*chi33*dAdgrad_chi323122 + F13*F13*chi31*dAdgrad_chi331122 + F13*F13*chi32*dAdgrad_chi332122 + F13*F13*chi33*dAdgrad_chi333122 + _113122;
        dadgrad_chi(4,2) = F11*F11*chi31*dAdgrad_chi111133 + F11*F11*chi32*dAdgrad_chi112133 + F11*F11*chi33*dAdgrad_chi113133 + F11*F12*chi31*dAdgrad_chi121133 + F11*F12*chi31*dAdgrad_chi211133 + F11*F12*chi32*dAdgrad_chi122133 + F11*F12*chi32*dAdgrad_chi212133 + F11*F12*chi33*dAdgrad_chi123133 + F11*F12*chi33*dAdgrad_chi213133 + F11*F13*chi31*dAdgrad_chi131133 + F11*F13*chi31*dAdgrad_chi311133 + F11*F13*chi32*dAdgrad_chi132133 + F11*F13*chi32*dAdgrad_chi312133 + F11*F13*chi33*dAdgrad_chi133133 + F11*F13*chi33*dAdgrad_chi313133 + F12*F12*chi31*dAdgrad_chi221133 + F12*F12*chi32*dAdgrad_chi222133 + F12*F12*chi33*dAdgrad_chi223133 + F12*F13*chi31*dAdgrad_chi231133 + F12*F13*chi31*dAdgrad_chi321133 + F12*F13*chi32*dAdgrad_chi232133 + F12*F13*chi32*dAdgrad_chi322133 + F12*F13*chi33*dAdgrad_chi233133 + F12*F13*chi33*dAdgrad_chi323133 + F13*F13*chi31*dAdgrad_chi331133 + F13*F13*chi32*dAdgrad_chi332133 + F13*F13*chi33*dAdgrad_chi333133 + _113133;
        dadgrad_chi(4,3) = F11*F11*chi31*dAdgrad_chi111123 + F11*F11*chi32*dAdgrad_chi112123 + F11*F11*chi33*dAdgrad_chi113123 + F11*F12*chi31*dAdgrad_chi121123 + F11*F12*chi31*dAdgrad_chi211123 + F11*F12*chi32*dAdgrad_chi122123 + F11*F12*chi32*dAdgrad_chi212123 + F11*F12*chi33*dAdgrad_chi123123 + F11*F12*chi33*dAdgrad_chi213123 + F11*F13*chi31*dAdgrad_chi131123 + F11*F13*chi31*dAdgrad_chi311123 + F11*F13*chi32*dAdgrad_chi132123 + F11*F13*chi32*dAdgrad_chi312123 + F11*F13*chi33*dAdgrad_chi133123 + F11*F13*chi33*dAdgrad_chi313123 + F12*F12*chi31*dAdgrad_chi221123 + F12*F12*chi32*dAdgrad_chi222123 + F12*F12*chi33*dAdgrad_chi223123 + F12*F13*chi31*dAdgrad_chi231123 + F12*F13*chi31*dAdgrad_chi321123 + F12*F13*chi32*dAdgrad_chi232123 + F12*F13*chi32*dAdgrad_chi322123 + F12*F13*chi33*dAdgrad_chi233123 + F12*F13*chi33*dAdgrad_chi323123 + F13*F13*chi31*dAdgrad_chi331123 + F13*F13*chi32*dAdgrad_chi332123 + F13*F13*chi33*dAdgrad_chi333123 + _113123;
        dadgrad_chi(4,4) = F11*F11*chi31*dAdgrad_chi111113 + F11*F11*chi32*dAdgrad_chi112113 + F11*F11*chi33*dAdgrad_chi113113 + F11*F12*chi31*dAdgrad_chi121113 + F11*F12*chi31*dAdgrad_chi211113 + F11*F12*chi32*dAdgrad_chi122113 + F11*F12*chi32*dAdgrad_chi212113 + F11*F12*chi33*dAdgrad_chi123113 + F11*F12*chi33*dAdgrad_chi213113 + F11*F13*chi31*dAdgrad_chi131113 + F11*F13*chi31*dAdgrad_chi311113 + F11*F13*chi32*dAdgrad_chi132113 + F11*F13*chi32*dAdgrad_chi312113 + F11*F13*chi33*dAdgrad_chi133113 + F11*F13*chi33*dAdgrad_chi313113 + F12*F12*chi31*dAdgrad_chi221113 + F12*F12*chi32*dAdgrad_chi222113 + F12*F12*chi33*dAdgrad_chi223113 + F12*F13*chi31*dAdgrad_chi231113 + F12*F13*chi31*dAdgrad_chi321113 + F12*F13*chi32*dAdgrad_chi232113 + F12*F13*chi32*dAdgrad_chi322113 + F12*F13*chi33*dAdgrad_chi233113 + F12*F13*chi33*dAdgrad_chi323113 + F13*F13*chi31*dAdgrad_chi331113 + F13*F13*chi32*dAdgrad_chi332113 + F13*F13*chi33*dAdgrad_chi333113 + _113113;
        dadgrad_chi(4,5) = F11*F11*chi31*dAdgrad_chi111112 + F11*F11*chi32*dAdgrad_chi112112 + F11*F11*chi33*dAdgrad_chi113112 + F11*F12*chi31*dAdgrad_chi121112 + F11*F12*chi31*dAdgrad_chi211112 + F11*F12*chi32*dAdgrad_chi122112 + F11*F12*chi32*dAdgrad_chi212112 + F11*F12*chi33*dAdgrad_chi123112 + F11*F12*chi33*dAdgrad_chi213112 + F11*F13*chi31*dAdgrad_chi131112 + F11*F13*chi31*dAdgrad_chi311112 + F11*F13*chi32*dAdgrad_chi132112 + F11*F13*chi32*dAdgrad_chi312112 + F11*F13*chi33*dAdgrad_chi133112 + F11*F13*chi33*dAdgrad_chi313112 + F12*F12*chi31*dAdgrad_chi221112 + F12*F12*chi32*dAdgrad_chi222112 + F12*F12*chi33*dAdgrad_chi223112 + F12*F13*chi31*dAdgrad_chi231112 + F12*F13*chi31*dAdgrad_chi321112 + F12*F13*chi32*dAdgrad_chi232112 + F12*F13*chi32*dAdgrad_chi322112 + F12*F13*chi33*dAdgrad_chi233112 + F12*F13*chi33*dAdgrad_chi323112 + F13*F13*chi31*dAdgrad_chi331112 + F13*F13*chi32*dAdgrad_chi332112 + F13*F13*chi33*dAdgrad_chi333112 + _113112;
        dadgrad_chi(4,6) = F11*F11*chi31*dAdgrad_chi111132 + F11*F11*chi32*dAdgrad_chi112132 + F11*F11*chi33*dAdgrad_chi113132 + F11*F12*chi31*dAdgrad_chi121132 + F11*F12*chi31*dAdgrad_chi211132 + F11*F12*chi32*dAdgrad_chi122132 + F11*F12*chi32*dAdgrad_chi212132 + F11*F12*chi33*dAdgrad_chi123132 + F11*F12*chi33*dAdgrad_chi213132 + F11*F13*chi31*dAdgrad_chi131132 + F11*F13*chi31*dAdgrad_chi311132 + F11*F13*chi32*dAdgrad_chi132132 + F11*F13*chi32*dAdgrad_chi312132 + F11*F13*chi33*dAdgrad_chi133132 + F11*F13*chi33*dAdgrad_chi313132 + F12*F12*chi31*dAdgrad_chi221132 + F12*F12*chi32*dAdgrad_chi222132 + F12*F12*chi33*dAdgrad_chi223132 + F12*F13*chi31*dAdgrad_chi231132 + F12*F13*chi31*dAdgrad_chi321132 + F12*F13*chi32*dAdgrad_chi232132 + F12*F13*chi32*dAdgrad_chi322132 + F12*F13*chi33*dAdgrad_chi233132 + F12*F13*chi33*dAdgrad_chi323132 + F13*F13*chi31*dAdgrad_chi331132 + F13*F13*chi32*dAdgrad_chi332132 + F13*F13*chi33*dAdgrad_chi333132 + _113132;
        dadgrad_chi(4,7) = F11*F11*chi31*dAdgrad_chi111131 + F11*F11*chi32*dAdgrad_chi112131 + F11*F11*chi33*dAdgrad_chi113131 + F11*F12*chi31*dAdgrad_chi121131 + F11*F12*chi31*dAdgrad_chi211131 + F11*F12*chi32*dAdgrad_chi122131 + F11*F12*chi32*dAdgrad_chi212131 + F11*F12*chi33*dAdgrad_chi123131 + F11*F12*chi33*dAdgrad_chi213131 + F11*F13*chi31*dAdgrad_chi131131 + F11*F13*chi31*dAdgrad_chi311131 + F11*F13*chi32*dAdgrad_chi132131 + F11*F13*chi32*dAdgrad_chi312131 + F11*F13*chi33*dAdgrad_chi133131 + F11*F13*chi33*dAdgrad_chi313131 + F12*F12*chi31*dAdgrad_chi221131 + F12*F12*chi32*dAdgrad_chi222131 + F12*F12*chi33*dAdgrad_chi223131 + F12*F13*chi31*dAdgrad_chi231131 + F12*F13*chi31*dAdgrad_chi321131 + F12*F13*chi32*dAdgrad_chi232131 + F12*F13*chi32*dAdgrad_chi322131 + F12*F13*chi33*dAdgrad_chi233131 + F12*F13*chi33*dAdgrad_chi323131 + F13*F13*chi31*dAdgrad_chi331131 + F13*F13*chi32*dAdgrad_chi332131 + F13*F13*chi33*dAdgrad_chi333131 + _113131;
        dadgrad_chi(4,8) = F11*F11*chi31*dAdgrad_chi111121 + F11*F11*chi32*dAdgrad_chi112121 + F11*F11*chi33*dAdgrad_chi113121 + F11*F12*chi31*dAdgrad_chi121121 + F11*F12*chi31*dAdgrad_chi211121 + F11*F12*chi32*dAdgrad_chi122121 + F11*F12*chi32*dAdgrad_chi212121 + F11*F12*chi33*dAdgrad_chi123121 + F11*F12*chi33*dAdgrad_chi213121 + F11*F13*chi31*dAdgrad_chi131121 + F11*F13*chi31*dAdgrad_chi311121 + F11*F13*chi32*dAdgrad_chi132121 + F11*F13*chi32*dAdgrad_chi312121 + F11*F13*chi33*dAdgrad_chi133121 + F11*F13*chi33*dAdgrad_chi313121 + F12*F12*chi31*dAdgrad_chi221121 + F12*F12*chi32*dAdgrad_chi222121 + F12*F12*chi33*dAdgrad_chi223121 + F12*F13*chi31*dAdgrad_chi231121 + F12*F13*chi31*dAdgrad_chi321121 + F12*F13*chi32*dAdgrad_chi232121 + F12*F13*chi32*dAdgrad_chi322121 + F12*F13*chi33*dAdgrad_chi233121 + F12*F13*chi33*dAdgrad_chi323121 + F13*F13*chi31*dAdgrad_chi331121 + F13*F13*chi32*dAdgrad_chi332121 + F13*F13*chi33*dAdgrad_chi333121 + _113121;
        dadgrad_chi(4,9) = F11*F11*chi31*dAdgrad_chi111211 + F11*F11*chi32*dAdgrad_chi112211 + F11*F11*chi33*dAdgrad_chi113211 + F11*F12*chi31*dAdgrad_chi121211 + F11*F12*chi31*dAdgrad_chi211211 + F11*F12*chi32*dAdgrad_chi122211 + F11*F12*chi32*dAdgrad_chi212211 + F11*F12*chi33*dAdgrad_chi123211 + F11*F12*chi33*dAdgrad_chi213211 + F11*F13*chi31*dAdgrad_chi131211 + F11*F13*chi31*dAdgrad_chi311211 + F11*F13*chi32*dAdgrad_chi132211 + F11*F13*chi32*dAdgrad_chi312211 + F11*F13*chi33*dAdgrad_chi133211 + F11*F13*chi33*dAdgrad_chi313211 + F12*F12*chi31*dAdgrad_chi221211 + F12*F12*chi32*dAdgrad_chi222211 + F12*F12*chi33*dAdgrad_chi223211 + F12*F13*chi31*dAdgrad_chi231211 + F12*F13*chi31*dAdgrad_chi321211 + F12*F13*chi32*dAdgrad_chi232211 + F12*F13*chi32*dAdgrad_chi322211 + F12*F13*chi33*dAdgrad_chi233211 + F12*F13*chi33*dAdgrad_chi323211 + F13*F13*chi31*dAdgrad_chi331211 + F13*F13*chi32*dAdgrad_chi332211 + F13*F13*chi33*dAdgrad_chi333211 + _113211;
        dadgrad_chi(4,10) = F11*F11*chi31*dAdgrad_chi111222 + F11*F11*chi32*dAdgrad_chi112222 + F11*F11*chi33*dAdgrad_chi113222 + F11*F12*chi31*dAdgrad_chi121222 + F11*F12*chi31*dAdgrad_chi211222 + F11*F12*chi32*dAdgrad_chi122222 + F11*F12*chi32*dAdgrad_chi212222 + F11*F12*chi33*dAdgrad_chi123222 + F11*F12*chi33*dAdgrad_chi213222 + F11*F13*chi31*dAdgrad_chi131222 + F11*F13*chi31*dAdgrad_chi311222 + F11*F13*chi32*dAdgrad_chi132222 + F11*F13*chi32*dAdgrad_chi312222 + F11*F13*chi33*dAdgrad_chi133222 + F11*F13*chi33*dAdgrad_chi313222 + F12*F12*chi31*dAdgrad_chi221222 + F12*F12*chi32*dAdgrad_chi222222 + F12*F12*chi33*dAdgrad_chi223222 + F12*F13*chi31*dAdgrad_chi231222 + F12*F13*chi31*dAdgrad_chi321222 + F12*F13*chi32*dAdgrad_chi232222 + F12*F13*chi32*dAdgrad_chi322222 + F12*F13*chi33*dAdgrad_chi233222 + F12*F13*chi33*dAdgrad_chi323222 + F13*F13*chi31*dAdgrad_chi331222 + F13*F13*chi32*dAdgrad_chi332222 + F13*F13*chi33*dAdgrad_chi333222 + _113222;
        dadgrad_chi(4,11) = F11*F11*chi31*dAdgrad_chi111233 + F11*F11*chi32*dAdgrad_chi112233 + F11*F11*chi33*dAdgrad_chi113233 + F11*F12*chi31*dAdgrad_chi121233 + F11*F12*chi31*dAdgrad_chi211233 + F11*F12*chi32*dAdgrad_chi122233 + F11*F12*chi32*dAdgrad_chi212233 + F11*F12*chi33*dAdgrad_chi123233 + F11*F12*chi33*dAdgrad_chi213233 + F11*F13*chi31*dAdgrad_chi131233 + F11*F13*chi31*dAdgrad_chi311233 + F11*F13*chi32*dAdgrad_chi132233 + F11*F13*chi32*dAdgrad_chi312233 + F11*F13*chi33*dAdgrad_chi133233 + F11*F13*chi33*dAdgrad_chi313233 + F12*F12*chi31*dAdgrad_chi221233 + F12*F12*chi32*dAdgrad_chi222233 + F12*F12*chi33*dAdgrad_chi223233 + F12*F13*chi31*dAdgrad_chi231233 + F12*F13*chi31*dAdgrad_chi321233 + F12*F13*chi32*dAdgrad_chi232233 + F12*F13*chi32*dAdgrad_chi322233 + F12*F13*chi33*dAdgrad_chi233233 + F12*F13*chi33*dAdgrad_chi323233 + F13*F13*chi31*dAdgrad_chi331233 + F13*F13*chi32*dAdgrad_chi332233 + F13*F13*chi33*dAdgrad_chi333233 + _113233;
        dadgrad_chi(4,12) = F11*F11*chi31*dAdgrad_chi111223 + F11*F11*chi32*dAdgrad_chi112223 + F11*F11*chi33*dAdgrad_chi113223 + F11*F12*chi31*dAdgrad_chi121223 + F11*F12*chi31*dAdgrad_chi211223 + F11*F12*chi32*dAdgrad_chi122223 + F11*F12*chi32*dAdgrad_chi212223 + F11*F12*chi33*dAdgrad_chi123223 + F11*F12*chi33*dAdgrad_chi213223 + F11*F13*chi31*dAdgrad_chi131223 + F11*F13*chi31*dAdgrad_chi311223 + F11*F13*chi32*dAdgrad_chi132223 + F11*F13*chi32*dAdgrad_chi312223 + F11*F13*chi33*dAdgrad_chi133223 + F11*F13*chi33*dAdgrad_chi313223 + F12*F12*chi31*dAdgrad_chi221223 + F12*F12*chi32*dAdgrad_chi222223 + F12*F12*chi33*dAdgrad_chi223223 + F12*F13*chi31*dAdgrad_chi231223 + F12*F13*chi31*dAdgrad_chi321223 + F12*F13*chi32*dAdgrad_chi232223 + F12*F13*chi32*dAdgrad_chi322223 + F12*F13*chi33*dAdgrad_chi233223 + F12*F13*chi33*dAdgrad_chi323223 + F13*F13*chi31*dAdgrad_chi331223 + F13*F13*chi32*dAdgrad_chi332223 + F13*F13*chi33*dAdgrad_chi333223 + _113223;
        dadgrad_chi(4,13) = F11*F11*chi31*dAdgrad_chi111213 + F11*F11*chi32*dAdgrad_chi112213 + F11*F11*chi33*dAdgrad_chi113213 + F11*F12*chi31*dAdgrad_chi121213 + F11*F12*chi31*dAdgrad_chi211213 + F11*F12*chi32*dAdgrad_chi122213 + F11*F12*chi32*dAdgrad_chi212213 + F11*F12*chi33*dAdgrad_chi123213 + F11*F12*chi33*dAdgrad_chi213213 + F11*F13*chi31*dAdgrad_chi131213 + F11*F13*chi31*dAdgrad_chi311213 + F11*F13*chi32*dAdgrad_chi132213 + F11*F13*chi32*dAdgrad_chi312213 + F11*F13*chi33*dAdgrad_chi133213 + F11*F13*chi33*dAdgrad_chi313213 + F12*F12*chi31*dAdgrad_chi221213 + F12*F12*chi32*dAdgrad_chi222213 + F12*F12*chi33*dAdgrad_chi223213 + F12*F13*chi31*dAdgrad_chi231213 + F12*F13*chi31*dAdgrad_chi321213 + F12*F13*chi32*dAdgrad_chi232213 + F12*F13*chi32*dAdgrad_chi322213 + F12*F13*chi33*dAdgrad_chi233213 + F12*F13*chi33*dAdgrad_chi323213 + F13*F13*chi31*dAdgrad_chi331213 + F13*F13*chi32*dAdgrad_chi332213 + F13*F13*chi33*dAdgrad_chi333213 + _113213;
        dadgrad_chi(4,14) = F11*F11*chi31*dAdgrad_chi111212 + F11*F11*chi32*dAdgrad_chi112212 + F11*F11*chi33*dAdgrad_chi113212 + F11*F12*chi31*dAdgrad_chi121212 + F11*F12*chi31*dAdgrad_chi211212 + F11*F12*chi32*dAdgrad_chi122212 + F11*F12*chi32*dAdgrad_chi212212 + F11*F12*chi33*dAdgrad_chi123212 + F11*F12*chi33*dAdgrad_chi213212 + F11*F13*chi31*dAdgrad_chi131212 + F11*F13*chi31*dAdgrad_chi311212 + F11*F13*chi32*dAdgrad_chi132212 + F11*F13*chi32*dAdgrad_chi312212 + F11*F13*chi33*dAdgrad_chi133212 + F11*F13*chi33*dAdgrad_chi313212 + F12*F12*chi31*dAdgrad_chi221212 + F12*F12*chi32*dAdgrad_chi222212 + F12*F12*chi33*dAdgrad_chi223212 + F12*F13*chi31*dAdgrad_chi231212 + F12*F13*chi31*dAdgrad_chi321212 + F12*F13*chi32*dAdgrad_chi232212 + F12*F13*chi32*dAdgrad_chi322212 + F12*F13*chi33*dAdgrad_chi233212 + F12*F13*chi33*dAdgrad_chi323212 + F13*F13*chi31*dAdgrad_chi331212 + F13*F13*chi32*dAdgrad_chi332212 + F13*F13*chi33*dAdgrad_chi333212 + _113212;
        dadgrad_chi(4,15) = F11*F11*chi31*dAdgrad_chi111232 + F11*F11*chi32*dAdgrad_chi112232 + F11*F11*chi33*dAdgrad_chi113232 + F11*F12*chi31*dAdgrad_chi121232 + F11*F12*chi31*dAdgrad_chi211232 + F11*F12*chi32*dAdgrad_chi122232 + F11*F12*chi32*dAdgrad_chi212232 + F11*F12*chi33*dAdgrad_chi123232 + F11*F12*chi33*dAdgrad_chi213232 + F11*F13*chi31*dAdgrad_chi131232 + F11*F13*chi31*dAdgrad_chi311232 + F11*F13*chi32*dAdgrad_chi132232 + F11*F13*chi32*dAdgrad_chi312232 + F11*F13*chi33*dAdgrad_chi133232 + F11*F13*chi33*dAdgrad_chi313232 + F12*F12*chi31*dAdgrad_chi221232 + F12*F12*chi32*dAdgrad_chi222232 + F12*F12*chi33*dAdgrad_chi223232 + F12*F13*chi31*dAdgrad_chi231232 + F12*F13*chi31*dAdgrad_chi321232 + F12*F13*chi32*dAdgrad_chi232232 + F12*F13*chi32*dAdgrad_chi322232 + F12*F13*chi33*dAdgrad_chi233232 + F12*F13*chi33*dAdgrad_chi323232 + F13*F13*chi31*dAdgrad_chi331232 + F13*F13*chi32*dAdgrad_chi332232 + F13*F13*chi33*dAdgrad_chi333232 + _113232;
        dadgrad_chi(4,16) = F11*F11*chi31*dAdgrad_chi111231 + F11*F11*chi32*dAdgrad_chi112231 + F11*F11*chi33*dAdgrad_chi113231 + F11*F12*chi31*dAdgrad_chi121231 + F11*F12*chi31*dAdgrad_chi211231 + F11*F12*chi32*dAdgrad_chi122231 + F11*F12*chi32*dAdgrad_chi212231 + F11*F12*chi33*dAdgrad_chi123231 + F11*F12*chi33*dAdgrad_chi213231 + F11*F13*chi31*dAdgrad_chi131231 + F11*F13*chi31*dAdgrad_chi311231 + F11*F13*chi32*dAdgrad_chi132231 + F11*F13*chi32*dAdgrad_chi312231 + F11*F13*chi33*dAdgrad_chi133231 + F11*F13*chi33*dAdgrad_chi313231 + F12*F12*chi31*dAdgrad_chi221231 + F12*F12*chi32*dAdgrad_chi222231 + F12*F12*chi33*dAdgrad_chi223231 + F12*F13*chi31*dAdgrad_chi231231 + F12*F13*chi31*dAdgrad_chi321231 + F12*F13*chi32*dAdgrad_chi232231 + F12*F13*chi32*dAdgrad_chi322231 + F12*F13*chi33*dAdgrad_chi233231 + F12*F13*chi33*dAdgrad_chi323231 + F13*F13*chi31*dAdgrad_chi331231 + F13*F13*chi32*dAdgrad_chi332231 + F13*F13*chi33*dAdgrad_chi333231 + _113231;
        dadgrad_chi(4,17) = F11*F11*chi31*dAdgrad_chi111221 + F11*F11*chi32*dAdgrad_chi112221 + F11*F11*chi33*dAdgrad_chi113221 + F11*F12*chi31*dAdgrad_chi121221 + F11*F12*chi31*dAdgrad_chi211221 + F11*F12*chi32*dAdgrad_chi122221 + F11*F12*chi32*dAdgrad_chi212221 + F11*F12*chi33*dAdgrad_chi123221 + F11*F12*chi33*dAdgrad_chi213221 + F11*F13*chi31*dAdgrad_chi131221 + F11*F13*chi31*dAdgrad_chi311221 + F11*F13*chi32*dAdgrad_chi132221 + F11*F13*chi32*dAdgrad_chi312221 + F11*F13*chi33*dAdgrad_chi133221 + F11*F13*chi33*dAdgrad_chi313221 + F12*F12*chi31*dAdgrad_chi221221 + F12*F12*chi32*dAdgrad_chi222221 + F12*F12*chi33*dAdgrad_chi223221 + F12*F13*chi31*dAdgrad_chi231221 + F12*F13*chi31*dAdgrad_chi321221 + F12*F13*chi32*dAdgrad_chi232221 + F12*F13*chi32*dAdgrad_chi322221 + F12*F13*chi33*dAdgrad_chi233221 + F12*F13*chi33*dAdgrad_chi323221 + F13*F13*chi31*dAdgrad_chi331221 + F13*F13*chi32*dAdgrad_chi332221 + F13*F13*chi33*dAdgrad_chi333221 + _113221;
        dadgrad_chi(4,18) = F11*F11*chi31*dAdgrad_chi111311 + F11*F11*chi32*dAdgrad_chi112311 + F11*F11*chi33*dAdgrad_chi113311 + F11*F12*chi31*dAdgrad_chi121311 + F11*F12*chi31*dAdgrad_chi211311 + F11*F12*chi32*dAdgrad_chi122311 + F11*F12*chi32*dAdgrad_chi212311 + F11*F12*chi33*dAdgrad_chi123311 + F11*F12*chi33*dAdgrad_chi213311 + F11*F13*chi31*dAdgrad_chi131311 + F11*F13*chi31*dAdgrad_chi311311 + F11*F13*chi32*dAdgrad_chi132311 + F11*F13*chi32*dAdgrad_chi312311 + F11*F13*chi33*dAdgrad_chi133311 + F11*F13*chi33*dAdgrad_chi313311 + F12*F12*chi31*dAdgrad_chi221311 + F12*F12*chi32*dAdgrad_chi222311 + F12*F12*chi33*dAdgrad_chi223311 + F12*F13*chi31*dAdgrad_chi231311 + F12*F13*chi31*dAdgrad_chi321311 + F12*F13*chi32*dAdgrad_chi232311 + F12*F13*chi32*dAdgrad_chi322311 + F12*F13*chi33*dAdgrad_chi233311 + F12*F13*chi33*dAdgrad_chi323311 + F13*F13*chi31*dAdgrad_chi331311 + F13*F13*chi32*dAdgrad_chi332311 + F13*F13*chi33*dAdgrad_chi333311 + _113311;
        dadgrad_chi(4,19) = F11*F11*chi31*dAdgrad_chi111322 + F11*F11*chi32*dAdgrad_chi112322 + F11*F11*chi33*dAdgrad_chi113322 + F11*F12*chi31*dAdgrad_chi121322 + F11*F12*chi31*dAdgrad_chi211322 + F11*F12*chi32*dAdgrad_chi122322 + F11*F12*chi32*dAdgrad_chi212322 + F11*F12*chi33*dAdgrad_chi123322 + F11*F12*chi33*dAdgrad_chi213322 + F11*F13*chi31*dAdgrad_chi131322 + F11*F13*chi31*dAdgrad_chi311322 + F11*F13*chi32*dAdgrad_chi132322 + F11*F13*chi32*dAdgrad_chi312322 + F11*F13*chi33*dAdgrad_chi133322 + F11*F13*chi33*dAdgrad_chi313322 + F12*F12*chi31*dAdgrad_chi221322 + F12*F12*chi32*dAdgrad_chi222322 + F12*F12*chi33*dAdgrad_chi223322 + F12*F13*chi31*dAdgrad_chi231322 + F12*F13*chi31*dAdgrad_chi321322 + F12*F13*chi32*dAdgrad_chi232322 + F12*F13*chi32*dAdgrad_chi322322 + F12*F13*chi33*dAdgrad_chi233322 + F12*F13*chi33*dAdgrad_chi323322 + F13*F13*chi31*dAdgrad_chi331322 + F13*F13*chi32*dAdgrad_chi332322 + F13*F13*chi33*dAdgrad_chi333322 + _113322;
        dadgrad_chi(4,20) = F11*F11*chi31*dAdgrad_chi111333 + F11*F11*chi32*dAdgrad_chi112333 + F11*F11*chi33*dAdgrad_chi113333 + F11*F12*chi31*dAdgrad_chi121333 + F11*F12*chi31*dAdgrad_chi211333 + F11*F12*chi32*dAdgrad_chi122333 + F11*F12*chi32*dAdgrad_chi212333 + F11*F12*chi33*dAdgrad_chi123333 + F11*F12*chi33*dAdgrad_chi213333 + F11*F13*chi31*dAdgrad_chi131333 + F11*F13*chi31*dAdgrad_chi311333 + F11*F13*chi32*dAdgrad_chi132333 + F11*F13*chi32*dAdgrad_chi312333 + F11*F13*chi33*dAdgrad_chi133333 + F11*F13*chi33*dAdgrad_chi313333 + F12*F12*chi31*dAdgrad_chi221333 + F12*F12*chi32*dAdgrad_chi222333 + F12*F12*chi33*dAdgrad_chi223333 + F12*F13*chi31*dAdgrad_chi231333 + F12*F13*chi31*dAdgrad_chi321333 + F12*F13*chi32*dAdgrad_chi232333 + F12*F13*chi32*dAdgrad_chi322333 + F12*F13*chi33*dAdgrad_chi233333 + F12*F13*chi33*dAdgrad_chi323333 + F13*F13*chi31*dAdgrad_chi331333 + F13*F13*chi32*dAdgrad_chi332333 + F13*F13*chi33*dAdgrad_chi333333 + _113333;
        dadgrad_chi(4,21) = F11*F11*chi31*dAdgrad_chi111323 + F11*F11*chi32*dAdgrad_chi112323 + F11*F11*chi33*dAdgrad_chi113323 + F11*F12*chi31*dAdgrad_chi121323 + F11*F12*chi31*dAdgrad_chi211323 + F11*F12*chi32*dAdgrad_chi122323 + F11*F12*chi32*dAdgrad_chi212323 + F11*F12*chi33*dAdgrad_chi123323 + F11*F12*chi33*dAdgrad_chi213323 + F11*F13*chi31*dAdgrad_chi131323 + F11*F13*chi31*dAdgrad_chi311323 + F11*F13*chi32*dAdgrad_chi132323 + F11*F13*chi32*dAdgrad_chi312323 + F11*F13*chi33*dAdgrad_chi133323 + F11*F13*chi33*dAdgrad_chi313323 + F12*F12*chi31*dAdgrad_chi221323 + F12*F12*chi32*dAdgrad_chi222323 + F12*F12*chi33*dAdgrad_chi223323 + F12*F13*chi31*dAdgrad_chi231323 + F12*F13*chi31*dAdgrad_chi321323 + F12*F13*chi32*dAdgrad_chi232323 + F12*F13*chi32*dAdgrad_chi322323 + F12*F13*chi33*dAdgrad_chi233323 + F12*F13*chi33*dAdgrad_chi323323 + F13*F13*chi31*dAdgrad_chi331323 + F13*F13*chi32*dAdgrad_chi332323 + F13*F13*chi33*dAdgrad_chi333323 + _113323;
        dadgrad_chi(4,22) = F11*F11*chi31*dAdgrad_chi111313 + F11*F11*chi32*dAdgrad_chi112313 + F11*F11*chi33*dAdgrad_chi113313 + F11*F12*chi31*dAdgrad_chi121313 + F11*F12*chi31*dAdgrad_chi211313 + F11*F12*chi32*dAdgrad_chi122313 + F11*F12*chi32*dAdgrad_chi212313 + F11*F12*chi33*dAdgrad_chi123313 + F11*F12*chi33*dAdgrad_chi213313 + F11*F13*chi31*dAdgrad_chi131313 + F11*F13*chi31*dAdgrad_chi311313 + F11*F13*chi32*dAdgrad_chi132313 + F11*F13*chi32*dAdgrad_chi312313 + F11*F13*chi33*dAdgrad_chi133313 + F11*F13*chi33*dAdgrad_chi313313 + F12*F12*chi31*dAdgrad_chi221313 + F12*F12*chi32*dAdgrad_chi222313 + F12*F12*chi33*dAdgrad_chi223313 + F12*F13*chi31*dAdgrad_chi231313 + F12*F13*chi31*dAdgrad_chi321313 + F12*F13*chi32*dAdgrad_chi232313 + F12*F13*chi32*dAdgrad_chi322313 + F12*F13*chi33*dAdgrad_chi233313 + F12*F13*chi33*dAdgrad_chi323313 + F13*F13*chi31*dAdgrad_chi331313 + F13*F13*chi32*dAdgrad_chi332313 + F13*F13*chi33*dAdgrad_chi333313 + _113313;
        dadgrad_chi(4,23) = F11*F11*chi31*dAdgrad_chi111312 + F11*F11*chi32*dAdgrad_chi112312 + F11*F11*chi33*dAdgrad_chi113312 + F11*F12*chi31*dAdgrad_chi121312 + F11*F12*chi31*dAdgrad_chi211312 + F11*F12*chi32*dAdgrad_chi122312 + F11*F12*chi32*dAdgrad_chi212312 + F11*F12*chi33*dAdgrad_chi123312 + F11*F12*chi33*dAdgrad_chi213312 + F11*F13*chi31*dAdgrad_chi131312 + F11*F13*chi31*dAdgrad_chi311312 + F11*F13*chi32*dAdgrad_chi132312 + F11*F13*chi32*dAdgrad_chi312312 + F11*F13*chi33*dAdgrad_chi133312 + F11*F13*chi33*dAdgrad_chi313312 + F12*F12*chi31*dAdgrad_chi221312 + F12*F12*chi32*dAdgrad_chi222312 + F12*F12*chi33*dAdgrad_chi223312 + F12*F13*chi31*dAdgrad_chi231312 + F12*F13*chi31*dAdgrad_chi321312 + F12*F13*chi32*dAdgrad_chi232312 + F12*F13*chi32*dAdgrad_chi322312 + F12*F13*chi33*dAdgrad_chi233312 + F12*F13*chi33*dAdgrad_chi323312 + F13*F13*chi31*dAdgrad_chi331312 + F13*F13*chi32*dAdgrad_chi332312 + F13*F13*chi33*dAdgrad_chi333312 + _113312;
        dadgrad_chi(4,24) = F11*F11*chi31*dAdgrad_chi111332 + F11*F11*chi32*dAdgrad_chi112332 + F11*F11*chi33*dAdgrad_chi113332 + F11*F12*chi31*dAdgrad_chi121332 + F11*F12*chi31*dAdgrad_chi211332 + F11*F12*chi32*dAdgrad_chi122332 + F11*F12*chi32*dAdgrad_chi212332 + F11*F12*chi33*dAdgrad_chi123332 + F11*F12*chi33*dAdgrad_chi213332 + F11*F13*chi31*dAdgrad_chi131332 + F11*F13*chi31*dAdgrad_chi311332 + F11*F13*chi32*dAdgrad_chi132332 + F11*F13*chi32*dAdgrad_chi312332 + F11*F13*chi33*dAdgrad_chi133332 + F11*F13*chi33*dAdgrad_chi313332 + F12*F12*chi31*dAdgrad_chi221332 + F12*F12*chi32*dAdgrad_chi222332 + F12*F12*chi33*dAdgrad_chi223332 + F12*F13*chi31*dAdgrad_chi231332 + F12*F13*chi31*dAdgrad_chi321332 + F12*F13*chi32*dAdgrad_chi232332 + F12*F13*chi32*dAdgrad_chi322332 + F12*F13*chi33*dAdgrad_chi233332 + F12*F13*chi33*dAdgrad_chi323332 + F13*F13*chi31*dAdgrad_chi331332 + F13*F13*chi32*dAdgrad_chi332332 + F13*F13*chi33*dAdgrad_chi333332 + _113332;
        dadgrad_chi(4,25) = F11*F11*chi31*dAdgrad_chi111331 + F11*F11*chi32*dAdgrad_chi112331 + F11*F11*chi33*dAdgrad_chi113331 + F11*F12*chi31*dAdgrad_chi121331 + F11*F12*chi31*dAdgrad_chi211331 + F11*F12*chi32*dAdgrad_chi122331 + F11*F12*chi32*dAdgrad_chi212331 + F11*F12*chi33*dAdgrad_chi123331 + F11*F12*chi33*dAdgrad_chi213331 + F11*F13*chi31*dAdgrad_chi131331 + F11*F13*chi31*dAdgrad_chi311331 + F11*F13*chi32*dAdgrad_chi132331 + F11*F13*chi32*dAdgrad_chi312331 + F11*F13*chi33*dAdgrad_chi133331 + F11*F13*chi33*dAdgrad_chi313331 + F12*F12*chi31*dAdgrad_chi221331 + F12*F12*chi32*dAdgrad_chi222331 + F12*F12*chi33*dAdgrad_chi223331 + F12*F13*chi31*dAdgrad_chi231331 + F12*F13*chi31*dAdgrad_chi321331 + F12*F13*chi32*dAdgrad_chi232331 + F12*F13*chi32*dAdgrad_chi322331 + F12*F13*chi33*dAdgrad_chi233331 + F12*F13*chi33*dAdgrad_chi323331 + F13*F13*chi31*dAdgrad_chi331331 + F13*F13*chi32*dAdgrad_chi332331 + F13*F13*chi33*dAdgrad_chi333331 + _113331;
        dadgrad_chi(4,26) = F11*F11*chi31*dAdgrad_chi111321 + F11*F11*chi32*dAdgrad_chi112321 + F11*F11*chi33*dAdgrad_chi113321 + F11*F12*chi31*dAdgrad_chi121321 + F11*F12*chi31*dAdgrad_chi211321 + F11*F12*chi32*dAdgrad_chi122321 + F11*F12*chi32*dAdgrad_chi212321 + F11*F12*chi33*dAdgrad_chi123321 + F11*F12*chi33*dAdgrad_chi213321 + F11*F13*chi31*dAdgrad_chi131321 + F11*F13*chi31*dAdgrad_chi311321 + F11*F13*chi32*dAdgrad_chi132321 + F11*F13*chi32*dAdgrad_chi312321 + F11*F13*chi33*dAdgrad_chi133321 + F11*F13*chi33*dAdgrad_chi313321 + F12*F12*chi31*dAdgrad_chi221321 + F12*F12*chi32*dAdgrad_chi222321 + F12*F12*chi33*dAdgrad_chi223321 + F12*F13*chi31*dAdgrad_chi231321 + F12*F13*chi31*dAdgrad_chi321321 + F12*F13*chi32*dAdgrad_chi232321 + F12*F13*chi32*dAdgrad_chi322321 + F12*F13*chi33*dAdgrad_chi233321 + F12*F13*chi33*dAdgrad_chi323321 + F13*F13*chi31*dAdgrad_chi331321 + F13*F13*chi32*dAdgrad_chi332321 + F13*F13*chi33*dAdgrad_chi333321 + _113321;
        dadgrad_chi(5,0) = F11*F11*chi21*dAdgrad_chi111111 + F11*F11*chi22*dAdgrad_chi112111 + F11*F11*chi23*dAdgrad_chi113111 + F11*F12*chi21*dAdgrad_chi121111 + F11*F12*chi21*dAdgrad_chi211111 + F11*F12*chi22*dAdgrad_chi122111 + F11*F12*chi22*dAdgrad_chi212111 + F11*F12*chi23*dAdgrad_chi123111 + F11*F12*chi23*dAdgrad_chi213111 + F11*F13*chi21*dAdgrad_chi131111 + F11*F13*chi21*dAdgrad_chi311111 + F11*F13*chi22*dAdgrad_chi132111 + F11*F13*chi22*dAdgrad_chi312111 + F11*F13*chi23*dAdgrad_chi133111 + F11*F13*chi23*dAdgrad_chi313111 + F12*F12*chi21*dAdgrad_chi221111 + F12*F12*chi22*dAdgrad_chi222111 + F12*F12*chi23*dAdgrad_chi223111 + F12*F13*chi21*dAdgrad_chi231111 + F12*F13*chi21*dAdgrad_chi321111 + F12*F13*chi22*dAdgrad_chi232111 + F12*F13*chi22*dAdgrad_chi322111 + F12*F13*chi23*dAdgrad_chi233111 + F12*F13*chi23*dAdgrad_chi323111 + F13*F13*chi21*dAdgrad_chi331111 + F13*F13*chi22*dAdgrad_chi332111 + F13*F13*chi23*dAdgrad_chi333111 + _112111;
        dadgrad_chi(5,1) = F11*F11*chi21*dAdgrad_chi111122 + F11*F11*chi22*dAdgrad_chi112122 + F11*F11*chi23*dAdgrad_chi113122 + F11*F12*chi21*dAdgrad_chi121122 + F11*F12*chi21*dAdgrad_chi211122 + F11*F12*chi22*dAdgrad_chi122122 + F11*F12*chi22*dAdgrad_chi212122 + F11*F12*chi23*dAdgrad_chi123122 + F11*F12*chi23*dAdgrad_chi213122 + F11*F13*chi21*dAdgrad_chi131122 + F11*F13*chi21*dAdgrad_chi311122 + F11*F13*chi22*dAdgrad_chi132122 + F11*F13*chi22*dAdgrad_chi312122 + F11*F13*chi23*dAdgrad_chi133122 + F11*F13*chi23*dAdgrad_chi313122 + F12*F12*chi21*dAdgrad_chi221122 + F12*F12*chi22*dAdgrad_chi222122 + F12*F12*chi23*dAdgrad_chi223122 + F12*F13*chi21*dAdgrad_chi231122 + F12*F13*chi21*dAdgrad_chi321122 + F12*F13*chi22*dAdgrad_chi232122 + F12*F13*chi22*dAdgrad_chi322122 + F12*F13*chi23*dAdgrad_chi233122 + F12*F13*chi23*dAdgrad_chi323122 + F13*F13*chi21*dAdgrad_chi331122 + F13*F13*chi22*dAdgrad_chi332122 + F13*F13*chi23*dAdgrad_chi333122 + _112122;
        dadgrad_chi(5,2) = F11*F11*chi21*dAdgrad_chi111133 + F11*F11*chi22*dAdgrad_chi112133 + F11*F11*chi23*dAdgrad_chi113133 + F11*F12*chi21*dAdgrad_chi121133 + F11*F12*chi21*dAdgrad_chi211133 + F11*F12*chi22*dAdgrad_chi122133 + F11*F12*chi22*dAdgrad_chi212133 + F11*F12*chi23*dAdgrad_chi123133 + F11*F12*chi23*dAdgrad_chi213133 + F11*F13*chi21*dAdgrad_chi131133 + F11*F13*chi21*dAdgrad_chi311133 + F11*F13*chi22*dAdgrad_chi132133 + F11*F13*chi22*dAdgrad_chi312133 + F11*F13*chi23*dAdgrad_chi133133 + F11*F13*chi23*dAdgrad_chi313133 + F12*F12*chi21*dAdgrad_chi221133 + F12*F12*chi22*dAdgrad_chi222133 + F12*F12*chi23*dAdgrad_chi223133 + F12*F13*chi21*dAdgrad_chi231133 + F12*F13*chi21*dAdgrad_chi321133 + F12*F13*chi22*dAdgrad_chi232133 + F12*F13*chi22*dAdgrad_chi322133 + F12*F13*chi23*dAdgrad_chi233133 + F12*F13*chi23*dAdgrad_chi323133 + F13*F13*chi21*dAdgrad_chi331133 + F13*F13*chi22*dAdgrad_chi332133 + F13*F13*chi23*dAdgrad_chi333133 + _112133;
        dadgrad_chi(5,3) = F11*F11*chi21*dAdgrad_chi111123 + F11*F11*chi22*dAdgrad_chi112123 + F11*F11*chi23*dAdgrad_chi113123 + F11*F12*chi21*dAdgrad_chi121123 + F11*F12*chi21*dAdgrad_chi211123 + F11*F12*chi22*dAdgrad_chi122123 + F11*F12*chi22*dAdgrad_chi212123 + F11*F12*chi23*dAdgrad_chi123123 + F11*F12*chi23*dAdgrad_chi213123 + F11*F13*chi21*dAdgrad_chi131123 + F11*F13*chi21*dAdgrad_chi311123 + F11*F13*chi22*dAdgrad_chi132123 + F11*F13*chi22*dAdgrad_chi312123 + F11*F13*chi23*dAdgrad_chi133123 + F11*F13*chi23*dAdgrad_chi313123 + F12*F12*chi21*dAdgrad_chi221123 + F12*F12*chi22*dAdgrad_chi222123 + F12*F12*chi23*dAdgrad_chi223123 + F12*F13*chi21*dAdgrad_chi231123 + F12*F13*chi21*dAdgrad_chi321123 + F12*F13*chi22*dAdgrad_chi232123 + F12*F13*chi22*dAdgrad_chi322123 + F12*F13*chi23*dAdgrad_chi233123 + F12*F13*chi23*dAdgrad_chi323123 + F13*F13*chi21*dAdgrad_chi331123 + F13*F13*chi22*dAdgrad_chi332123 + F13*F13*chi23*dAdgrad_chi333123 + _112123;
        dadgrad_chi(5,4) = F11*F11*chi21*dAdgrad_chi111113 + F11*F11*chi22*dAdgrad_chi112113 + F11*F11*chi23*dAdgrad_chi113113 + F11*F12*chi21*dAdgrad_chi121113 + F11*F12*chi21*dAdgrad_chi211113 + F11*F12*chi22*dAdgrad_chi122113 + F11*F12*chi22*dAdgrad_chi212113 + F11*F12*chi23*dAdgrad_chi123113 + F11*F12*chi23*dAdgrad_chi213113 + F11*F13*chi21*dAdgrad_chi131113 + F11*F13*chi21*dAdgrad_chi311113 + F11*F13*chi22*dAdgrad_chi132113 + F11*F13*chi22*dAdgrad_chi312113 + F11*F13*chi23*dAdgrad_chi133113 + F11*F13*chi23*dAdgrad_chi313113 + F12*F12*chi21*dAdgrad_chi221113 + F12*F12*chi22*dAdgrad_chi222113 + F12*F12*chi23*dAdgrad_chi223113 + F12*F13*chi21*dAdgrad_chi231113 + F12*F13*chi21*dAdgrad_chi321113 + F12*F13*chi22*dAdgrad_chi232113 + F12*F13*chi22*dAdgrad_chi322113 + F12*F13*chi23*dAdgrad_chi233113 + F12*F13*chi23*dAdgrad_chi323113 + F13*F13*chi21*dAdgrad_chi331113 + F13*F13*chi22*dAdgrad_chi332113 + F13*F13*chi23*dAdgrad_chi333113 + _112113;
        dadgrad_chi(5,5) = F11*F11*chi21*dAdgrad_chi111112 + F11*F11*chi22*dAdgrad_chi112112 + F11*F11*chi23*dAdgrad_chi113112 + F11*F12*chi21*dAdgrad_chi121112 + F11*F12*chi21*dAdgrad_chi211112 + F11*F12*chi22*dAdgrad_chi122112 + F11*F12*chi22*dAdgrad_chi212112 + F11*F12*chi23*dAdgrad_chi123112 + F11*F12*chi23*dAdgrad_chi213112 + F11*F13*chi21*dAdgrad_chi131112 + F11*F13*chi21*dAdgrad_chi311112 + F11*F13*chi22*dAdgrad_chi132112 + F11*F13*chi22*dAdgrad_chi312112 + F11*F13*chi23*dAdgrad_chi133112 + F11*F13*chi23*dAdgrad_chi313112 + F12*F12*chi21*dAdgrad_chi221112 + F12*F12*chi22*dAdgrad_chi222112 + F12*F12*chi23*dAdgrad_chi223112 + F12*F13*chi21*dAdgrad_chi231112 + F12*F13*chi21*dAdgrad_chi321112 + F12*F13*chi22*dAdgrad_chi232112 + F12*F13*chi22*dAdgrad_chi322112 + F12*F13*chi23*dAdgrad_chi233112 + F12*F13*chi23*dAdgrad_chi323112 + F13*F13*chi21*dAdgrad_chi331112 + F13*F13*chi22*dAdgrad_chi332112 + F13*F13*chi23*dAdgrad_chi333112 + _112112;
        dadgrad_chi(5,6) = F11*F11*chi21*dAdgrad_chi111132 + F11*F11*chi22*dAdgrad_chi112132 + F11*F11*chi23*dAdgrad_chi113132 + F11*F12*chi21*dAdgrad_chi121132 + F11*F12*chi21*dAdgrad_chi211132 + F11*F12*chi22*dAdgrad_chi122132 + F11*F12*chi22*dAdgrad_chi212132 + F11*F12*chi23*dAdgrad_chi123132 + F11*F12*chi23*dAdgrad_chi213132 + F11*F13*chi21*dAdgrad_chi131132 + F11*F13*chi21*dAdgrad_chi311132 + F11*F13*chi22*dAdgrad_chi132132 + F11*F13*chi22*dAdgrad_chi312132 + F11*F13*chi23*dAdgrad_chi133132 + F11*F13*chi23*dAdgrad_chi313132 + F12*F12*chi21*dAdgrad_chi221132 + F12*F12*chi22*dAdgrad_chi222132 + F12*F12*chi23*dAdgrad_chi223132 + F12*F13*chi21*dAdgrad_chi231132 + F12*F13*chi21*dAdgrad_chi321132 + F12*F13*chi22*dAdgrad_chi232132 + F12*F13*chi22*dAdgrad_chi322132 + F12*F13*chi23*dAdgrad_chi233132 + F12*F13*chi23*dAdgrad_chi323132 + F13*F13*chi21*dAdgrad_chi331132 + F13*F13*chi22*dAdgrad_chi332132 + F13*F13*chi23*dAdgrad_chi333132 + _112132;
        dadgrad_chi(5,7) = F11*F11*chi21*dAdgrad_chi111131 + F11*F11*chi22*dAdgrad_chi112131 + F11*F11*chi23*dAdgrad_chi113131 + F11*F12*chi21*dAdgrad_chi121131 + F11*F12*chi21*dAdgrad_chi211131 + F11*F12*chi22*dAdgrad_chi122131 + F11*F12*chi22*dAdgrad_chi212131 + F11*F12*chi23*dAdgrad_chi123131 + F11*F12*chi23*dAdgrad_chi213131 + F11*F13*chi21*dAdgrad_chi131131 + F11*F13*chi21*dAdgrad_chi311131 + F11*F13*chi22*dAdgrad_chi132131 + F11*F13*chi22*dAdgrad_chi312131 + F11*F13*chi23*dAdgrad_chi133131 + F11*F13*chi23*dAdgrad_chi313131 + F12*F12*chi21*dAdgrad_chi221131 + F12*F12*chi22*dAdgrad_chi222131 + F12*F12*chi23*dAdgrad_chi223131 + F12*F13*chi21*dAdgrad_chi231131 + F12*F13*chi21*dAdgrad_chi321131 + F12*F13*chi22*dAdgrad_chi232131 + F12*F13*chi22*dAdgrad_chi322131 + F12*F13*chi23*dAdgrad_chi233131 + F12*F13*chi23*dAdgrad_chi323131 + F13*F13*chi21*dAdgrad_chi331131 + F13*F13*chi22*dAdgrad_chi332131 + F13*F13*chi23*dAdgrad_chi333131 + _112131;
        dadgrad_chi(5,8) = F11*F11*chi21*dAdgrad_chi111121 + F11*F11*chi22*dAdgrad_chi112121 + F11*F11*chi23*dAdgrad_chi113121 + F11*F12*chi21*dAdgrad_chi121121 + F11*F12*chi21*dAdgrad_chi211121 + F11*F12*chi22*dAdgrad_chi122121 + F11*F12*chi22*dAdgrad_chi212121 + F11*F12*chi23*dAdgrad_chi123121 + F11*F12*chi23*dAdgrad_chi213121 + F11*F13*chi21*dAdgrad_chi131121 + F11*F13*chi21*dAdgrad_chi311121 + F11*F13*chi22*dAdgrad_chi132121 + F11*F13*chi22*dAdgrad_chi312121 + F11*F13*chi23*dAdgrad_chi133121 + F11*F13*chi23*dAdgrad_chi313121 + F12*F12*chi21*dAdgrad_chi221121 + F12*F12*chi22*dAdgrad_chi222121 + F12*F12*chi23*dAdgrad_chi223121 + F12*F13*chi21*dAdgrad_chi231121 + F12*F13*chi21*dAdgrad_chi321121 + F12*F13*chi22*dAdgrad_chi232121 + F12*F13*chi22*dAdgrad_chi322121 + F12*F13*chi23*dAdgrad_chi233121 + F12*F13*chi23*dAdgrad_chi323121 + F13*F13*chi21*dAdgrad_chi331121 + F13*F13*chi22*dAdgrad_chi332121 + F13*F13*chi23*dAdgrad_chi333121 + _112121;
        dadgrad_chi(5,9) = F11*F11*chi21*dAdgrad_chi111211 + F11*F11*chi22*dAdgrad_chi112211 + F11*F11*chi23*dAdgrad_chi113211 + F11*F12*chi21*dAdgrad_chi121211 + F11*F12*chi21*dAdgrad_chi211211 + F11*F12*chi22*dAdgrad_chi122211 + F11*F12*chi22*dAdgrad_chi212211 + F11*F12*chi23*dAdgrad_chi123211 + F11*F12*chi23*dAdgrad_chi213211 + F11*F13*chi21*dAdgrad_chi131211 + F11*F13*chi21*dAdgrad_chi311211 + F11*F13*chi22*dAdgrad_chi132211 + F11*F13*chi22*dAdgrad_chi312211 + F11*F13*chi23*dAdgrad_chi133211 + F11*F13*chi23*dAdgrad_chi313211 + F12*F12*chi21*dAdgrad_chi221211 + F12*F12*chi22*dAdgrad_chi222211 + F12*F12*chi23*dAdgrad_chi223211 + F12*F13*chi21*dAdgrad_chi231211 + F12*F13*chi21*dAdgrad_chi321211 + F12*F13*chi22*dAdgrad_chi232211 + F12*F13*chi22*dAdgrad_chi322211 + F12*F13*chi23*dAdgrad_chi233211 + F12*F13*chi23*dAdgrad_chi323211 + F13*F13*chi21*dAdgrad_chi331211 + F13*F13*chi22*dAdgrad_chi332211 + F13*F13*chi23*dAdgrad_chi333211 + _112211;
        dadgrad_chi(5,10) = F11*F11*chi21*dAdgrad_chi111222 + F11*F11*chi22*dAdgrad_chi112222 + F11*F11*chi23*dAdgrad_chi113222 + F11*F12*chi21*dAdgrad_chi121222 + F11*F12*chi21*dAdgrad_chi211222 + F11*F12*chi22*dAdgrad_chi122222 + F11*F12*chi22*dAdgrad_chi212222 + F11*F12*chi23*dAdgrad_chi123222 + F11*F12*chi23*dAdgrad_chi213222 + F11*F13*chi21*dAdgrad_chi131222 + F11*F13*chi21*dAdgrad_chi311222 + F11*F13*chi22*dAdgrad_chi132222 + F11*F13*chi22*dAdgrad_chi312222 + F11*F13*chi23*dAdgrad_chi133222 + F11*F13*chi23*dAdgrad_chi313222 + F12*F12*chi21*dAdgrad_chi221222 + F12*F12*chi22*dAdgrad_chi222222 + F12*F12*chi23*dAdgrad_chi223222 + F12*F13*chi21*dAdgrad_chi231222 + F12*F13*chi21*dAdgrad_chi321222 + F12*F13*chi22*dAdgrad_chi232222 + F12*F13*chi22*dAdgrad_chi322222 + F12*F13*chi23*dAdgrad_chi233222 + F12*F13*chi23*dAdgrad_chi323222 + F13*F13*chi21*dAdgrad_chi331222 + F13*F13*chi22*dAdgrad_chi332222 + F13*F13*chi23*dAdgrad_chi333222 + _112222;
        dadgrad_chi(5,11) = F11*F11*chi21*dAdgrad_chi111233 + F11*F11*chi22*dAdgrad_chi112233 + F11*F11*chi23*dAdgrad_chi113233 + F11*F12*chi21*dAdgrad_chi121233 + F11*F12*chi21*dAdgrad_chi211233 + F11*F12*chi22*dAdgrad_chi122233 + F11*F12*chi22*dAdgrad_chi212233 + F11*F12*chi23*dAdgrad_chi123233 + F11*F12*chi23*dAdgrad_chi213233 + F11*F13*chi21*dAdgrad_chi131233 + F11*F13*chi21*dAdgrad_chi311233 + F11*F13*chi22*dAdgrad_chi132233 + F11*F13*chi22*dAdgrad_chi312233 + F11*F13*chi23*dAdgrad_chi133233 + F11*F13*chi23*dAdgrad_chi313233 + F12*F12*chi21*dAdgrad_chi221233 + F12*F12*chi22*dAdgrad_chi222233 + F12*F12*chi23*dAdgrad_chi223233 + F12*F13*chi21*dAdgrad_chi231233 + F12*F13*chi21*dAdgrad_chi321233 + F12*F13*chi22*dAdgrad_chi232233 + F12*F13*chi22*dAdgrad_chi322233 + F12*F13*chi23*dAdgrad_chi233233 + F12*F13*chi23*dAdgrad_chi323233 + F13*F13*chi21*dAdgrad_chi331233 + F13*F13*chi22*dAdgrad_chi332233 + F13*F13*chi23*dAdgrad_chi333233 + _112233;
        dadgrad_chi(5,12) = F11*F11*chi21*dAdgrad_chi111223 + F11*F11*chi22*dAdgrad_chi112223 + F11*F11*chi23*dAdgrad_chi113223 + F11*F12*chi21*dAdgrad_chi121223 + F11*F12*chi21*dAdgrad_chi211223 + F11*F12*chi22*dAdgrad_chi122223 + F11*F12*chi22*dAdgrad_chi212223 + F11*F12*chi23*dAdgrad_chi123223 + F11*F12*chi23*dAdgrad_chi213223 + F11*F13*chi21*dAdgrad_chi131223 + F11*F13*chi21*dAdgrad_chi311223 + F11*F13*chi22*dAdgrad_chi132223 + F11*F13*chi22*dAdgrad_chi312223 + F11*F13*chi23*dAdgrad_chi133223 + F11*F13*chi23*dAdgrad_chi313223 + F12*F12*chi21*dAdgrad_chi221223 + F12*F12*chi22*dAdgrad_chi222223 + F12*F12*chi23*dAdgrad_chi223223 + F12*F13*chi21*dAdgrad_chi231223 + F12*F13*chi21*dAdgrad_chi321223 + F12*F13*chi22*dAdgrad_chi232223 + F12*F13*chi22*dAdgrad_chi322223 + F12*F13*chi23*dAdgrad_chi233223 + F12*F13*chi23*dAdgrad_chi323223 + F13*F13*chi21*dAdgrad_chi331223 + F13*F13*chi22*dAdgrad_chi332223 + F13*F13*chi23*dAdgrad_chi333223 + _112223;
        dadgrad_chi(5,13) = F11*F11*chi21*dAdgrad_chi111213 + F11*F11*chi22*dAdgrad_chi112213 + F11*F11*chi23*dAdgrad_chi113213 + F11*F12*chi21*dAdgrad_chi121213 + F11*F12*chi21*dAdgrad_chi211213 + F11*F12*chi22*dAdgrad_chi122213 + F11*F12*chi22*dAdgrad_chi212213 + F11*F12*chi23*dAdgrad_chi123213 + F11*F12*chi23*dAdgrad_chi213213 + F11*F13*chi21*dAdgrad_chi131213 + F11*F13*chi21*dAdgrad_chi311213 + F11*F13*chi22*dAdgrad_chi132213 + F11*F13*chi22*dAdgrad_chi312213 + F11*F13*chi23*dAdgrad_chi133213 + F11*F13*chi23*dAdgrad_chi313213 + F12*F12*chi21*dAdgrad_chi221213 + F12*F12*chi22*dAdgrad_chi222213 + F12*F12*chi23*dAdgrad_chi223213 + F12*F13*chi21*dAdgrad_chi231213 + F12*F13*chi21*dAdgrad_chi321213 + F12*F13*chi22*dAdgrad_chi232213 + F12*F13*chi22*dAdgrad_chi322213 + F12*F13*chi23*dAdgrad_chi233213 + F12*F13*chi23*dAdgrad_chi323213 + F13*F13*chi21*dAdgrad_chi331213 + F13*F13*chi22*dAdgrad_chi332213 + F13*F13*chi23*dAdgrad_chi333213 + _112213;
        dadgrad_chi(5,14) = F11*F11*chi21*dAdgrad_chi111212 + F11*F11*chi22*dAdgrad_chi112212 + F11*F11*chi23*dAdgrad_chi113212 + F11*F12*chi21*dAdgrad_chi121212 + F11*F12*chi21*dAdgrad_chi211212 + F11*F12*chi22*dAdgrad_chi122212 + F11*F12*chi22*dAdgrad_chi212212 + F11*F12*chi23*dAdgrad_chi123212 + F11*F12*chi23*dAdgrad_chi213212 + F11*F13*chi21*dAdgrad_chi131212 + F11*F13*chi21*dAdgrad_chi311212 + F11*F13*chi22*dAdgrad_chi132212 + F11*F13*chi22*dAdgrad_chi312212 + F11*F13*chi23*dAdgrad_chi133212 + F11*F13*chi23*dAdgrad_chi313212 + F12*F12*chi21*dAdgrad_chi221212 + F12*F12*chi22*dAdgrad_chi222212 + F12*F12*chi23*dAdgrad_chi223212 + F12*F13*chi21*dAdgrad_chi231212 + F12*F13*chi21*dAdgrad_chi321212 + F12*F13*chi22*dAdgrad_chi232212 + F12*F13*chi22*dAdgrad_chi322212 + F12*F13*chi23*dAdgrad_chi233212 + F12*F13*chi23*dAdgrad_chi323212 + F13*F13*chi21*dAdgrad_chi331212 + F13*F13*chi22*dAdgrad_chi332212 + F13*F13*chi23*dAdgrad_chi333212 + _112212;
        dadgrad_chi(5,15) = F11*F11*chi21*dAdgrad_chi111232 + F11*F11*chi22*dAdgrad_chi112232 + F11*F11*chi23*dAdgrad_chi113232 + F11*F12*chi21*dAdgrad_chi121232 + F11*F12*chi21*dAdgrad_chi211232 + F11*F12*chi22*dAdgrad_chi122232 + F11*F12*chi22*dAdgrad_chi212232 + F11*F12*chi23*dAdgrad_chi123232 + F11*F12*chi23*dAdgrad_chi213232 + F11*F13*chi21*dAdgrad_chi131232 + F11*F13*chi21*dAdgrad_chi311232 + F11*F13*chi22*dAdgrad_chi132232 + F11*F13*chi22*dAdgrad_chi312232 + F11*F13*chi23*dAdgrad_chi133232 + F11*F13*chi23*dAdgrad_chi313232 + F12*F12*chi21*dAdgrad_chi221232 + F12*F12*chi22*dAdgrad_chi222232 + F12*F12*chi23*dAdgrad_chi223232 + F12*F13*chi21*dAdgrad_chi231232 + F12*F13*chi21*dAdgrad_chi321232 + F12*F13*chi22*dAdgrad_chi232232 + F12*F13*chi22*dAdgrad_chi322232 + F12*F13*chi23*dAdgrad_chi233232 + F12*F13*chi23*dAdgrad_chi323232 + F13*F13*chi21*dAdgrad_chi331232 + F13*F13*chi22*dAdgrad_chi332232 + F13*F13*chi23*dAdgrad_chi333232 + _112232;
        dadgrad_chi(5,16) = F11*F11*chi21*dAdgrad_chi111231 + F11*F11*chi22*dAdgrad_chi112231 + F11*F11*chi23*dAdgrad_chi113231 + F11*F12*chi21*dAdgrad_chi121231 + F11*F12*chi21*dAdgrad_chi211231 + F11*F12*chi22*dAdgrad_chi122231 + F11*F12*chi22*dAdgrad_chi212231 + F11*F12*chi23*dAdgrad_chi123231 + F11*F12*chi23*dAdgrad_chi213231 + F11*F13*chi21*dAdgrad_chi131231 + F11*F13*chi21*dAdgrad_chi311231 + F11*F13*chi22*dAdgrad_chi132231 + F11*F13*chi22*dAdgrad_chi312231 + F11*F13*chi23*dAdgrad_chi133231 + F11*F13*chi23*dAdgrad_chi313231 + F12*F12*chi21*dAdgrad_chi221231 + F12*F12*chi22*dAdgrad_chi222231 + F12*F12*chi23*dAdgrad_chi223231 + F12*F13*chi21*dAdgrad_chi231231 + F12*F13*chi21*dAdgrad_chi321231 + F12*F13*chi22*dAdgrad_chi232231 + F12*F13*chi22*dAdgrad_chi322231 + F12*F13*chi23*dAdgrad_chi233231 + F12*F13*chi23*dAdgrad_chi323231 + F13*F13*chi21*dAdgrad_chi331231 + F13*F13*chi22*dAdgrad_chi332231 + F13*F13*chi23*dAdgrad_chi333231 + _112231;
        dadgrad_chi(5,17) = F11*F11*chi21*dAdgrad_chi111221 + F11*F11*chi22*dAdgrad_chi112221 + F11*F11*chi23*dAdgrad_chi113221 + F11*F12*chi21*dAdgrad_chi121221 + F11*F12*chi21*dAdgrad_chi211221 + F11*F12*chi22*dAdgrad_chi122221 + F11*F12*chi22*dAdgrad_chi212221 + F11*F12*chi23*dAdgrad_chi123221 + F11*F12*chi23*dAdgrad_chi213221 + F11*F13*chi21*dAdgrad_chi131221 + F11*F13*chi21*dAdgrad_chi311221 + F11*F13*chi22*dAdgrad_chi132221 + F11*F13*chi22*dAdgrad_chi312221 + F11*F13*chi23*dAdgrad_chi133221 + F11*F13*chi23*dAdgrad_chi313221 + F12*F12*chi21*dAdgrad_chi221221 + F12*F12*chi22*dAdgrad_chi222221 + F12*F12*chi23*dAdgrad_chi223221 + F12*F13*chi21*dAdgrad_chi231221 + F12*F13*chi21*dAdgrad_chi321221 + F12*F13*chi22*dAdgrad_chi232221 + F12*F13*chi22*dAdgrad_chi322221 + F12*F13*chi23*dAdgrad_chi233221 + F12*F13*chi23*dAdgrad_chi323221 + F13*F13*chi21*dAdgrad_chi331221 + F13*F13*chi22*dAdgrad_chi332221 + F13*F13*chi23*dAdgrad_chi333221 + _112221;
        dadgrad_chi(5,18) = F11*F11*chi21*dAdgrad_chi111311 + F11*F11*chi22*dAdgrad_chi112311 + F11*F11*chi23*dAdgrad_chi113311 + F11*F12*chi21*dAdgrad_chi121311 + F11*F12*chi21*dAdgrad_chi211311 + F11*F12*chi22*dAdgrad_chi122311 + F11*F12*chi22*dAdgrad_chi212311 + F11*F12*chi23*dAdgrad_chi123311 + F11*F12*chi23*dAdgrad_chi213311 + F11*F13*chi21*dAdgrad_chi131311 + F11*F13*chi21*dAdgrad_chi311311 + F11*F13*chi22*dAdgrad_chi132311 + F11*F13*chi22*dAdgrad_chi312311 + F11*F13*chi23*dAdgrad_chi133311 + F11*F13*chi23*dAdgrad_chi313311 + F12*F12*chi21*dAdgrad_chi221311 + F12*F12*chi22*dAdgrad_chi222311 + F12*F12*chi23*dAdgrad_chi223311 + F12*F13*chi21*dAdgrad_chi231311 + F12*F13*chi21*dAdgrad_chi321311 + F12*F13*chi22*dAdgrad_chi232311 + F12*F13*chi22*dAdgrad_chi322311 + F12*F13*chi23*dAdgrad_chi233311 + F12*F13*chi23*dAdgrad_chi323311 + F13*F13*chi21*dAdgrad_chi331311 + F13*F13*chi22*dAdgrad_chi332311 + F13*F13*chi23*dAdgrad_chi333311 + _112311;
        dadgrad_chi(5,19) = F11*F11*chi21*dAdgrad_chi111322 + F11*F11*chi22*dAdgrad_chi112322 + F11*F11*chi23*dAdgrad_chi113322 + F11*F12*chi21*dAdgrad_chi121322 + F11*F12*chi21*dAdgrad_chi211322 + F11*F12*chi22*dAdgrad_chi122322 + F11*F12*chi22*dAdgrad_chi212322 + F11*F12*chi23*dAdgrad_chi123322 + F11*F12*chi23*dAdgrad_chi213322 + F11*F13*chi21*dAdgrad_chi131322 + F11*F13*chi21*dAdgrad_chi311322 + F11*F13*chi22*dAdgrad_chi132322 + F11*F13*chi22*dAdgrad_chi312322 + F11*F13*chi23*dAdgrad_chi133322 + F11*F13*chi23*dAdgrad_chi313322 + F12*F12*chi21*dAdgrad_chi221322 + F12*F12*chi22*dAdgrad_chi222322 + F12*F12*chi23*dAdgrad_chi223322 + F12*F13*chi21*dAdgrad_chi231322 + F12*F13*chi21*dAdgrad_chi321322 + F12*F13*chi22*dAdgrad_chi232322 + F12*F13*chi22*dAdgrad_chi322322 + F12*F13*chi23*dAdgrad_chi233322 + F12*F13*chi23*dAdgrad_chi323322 + F13*F13*chi21*dAdgrad_chi331322 + F13*F13*chi22*dAdgrad_chi332322 + F13*F13*chi23*dAdgrad_chi333322 + _112322;
        dadgrad_chi(5,20) = F11*F11*chi21*dAdgrad_chi111333 + F11*F11*chi22*dAdgrad_chi112333 + F11*F11*chi23*dAdgrad_chi113333 + F11*F12*chi21*dAdgrad_chi121333 + F11*F12*chi21*dAdgrad_chi211333 + F11*F12*chi22*dAdgrad_chi122333 + F11*F12*chi22*dAdgrad_chi212333 + F11*F12*chi23*dAdgrad_chi123333 + F11*F12*chi23*dAdgrad_chi213333 + F11*F13*chi21*dAdgrad_chi131333 + F11*F13*chi21*dAdgrad_chi311333 + F11*F13*chi22*dAdgrad_chi132333 + F11*F13*chi22*dAdgrad_chi312333 + F11*F13*chi23*dAdgrad_chi133333 + F11*F13*chi23*dAdgrad_chi313333 + F12*F12*chi21*dAdgrad_chi221333 + F12*F12*chi22*dAdgrad_chi222333 + F12*F12*chi23*dAdgrad_chi223333 + F12*F13*chi21*dAdgrad_chi231333 + F12*F13*chi21*dAdgrad_chi321333 + F12*F13*chi22*dAdgrad_chi232333 + F12*F13*chi22*dAdgrad_chi322333 + F12*F13*chi23*dAdgrad_chi233333 + F12*F13*chi23*dAdgrad_chi323333 + F13*F13*chi21*dAdgrad_chi331333 + F13*F13*chi22*dAdgrad_chi332333 + F13*F13*chi23*dAdgrad_chi333333 + _112333;
        dadgrad_chi(5,21) = F11*F11*chi21*dAdgrad_chi111323 + F11*F11*chi22*dAdgrad_chi112323 + F11*F11*chi23*dAdgrad_chi113323 + F11*F12*chi21*dAdgrad_chi121323 + F11*F12*chi21*dAdgrad_chi211323 + F11*F12*chi22*dAdgrad_chi122323 + F11*F12*chi22*dAdgrad_chi212323 + F11*F12*chi23*dAdgrad_chi123323 + F11*F12*chi23*dAdgrad_chi213323 + F11*F13*chi21*dAdgrad_chi131323 + F11*F13*chi21*dAdgrad_chi311323 + F11*F13*chi22*dAdgrad_chi132323 + F11*F13*chi22*dAdgrad_chi312323 + F11*F13*chi23*dAdgrad_chi133323 + F11*F13*chi23*dAdgrad_chi313323 + F12*F12*chi21*dAdgrad_chi221323 + F12*F12*chi22*dAdgrad_chi222323 + F12*F12*chi23*dAdgrad_chi223323 + F12*F13*chi21*dAdgrad_chi231323 + F12*F13*chi21*dAdgrad_chi321323 + F12*F13*chi22*dAdgrad_chi232323 + F12*F13*chi22*dAdgrad_chi322323 + F12*F13*chi23*dAdgrad_chi233323 + F12*F13*chi23*dAdgrad_chi323323 + F13*F13*chi21*dAdgrad_chi331323 + F13*F13*chi22*dAdgrad_chi332323 + F13*F13*chi23*dAdgrad_chi333323 + _112323;
        dadgrad_chi(5,22) = F11*F11*chi21*dAdgrad_chi111313 + F11*F11*chi22*dAdgrad_chi112313 + F11*F11*chi23*dAdgrad_chi113313 + F11*F12*chi21*dAdgrad_chi121313 + F11*F12*chi21*dAdgrad_chi211313 + F11*F12*chi22*dAdgrad_chi122313 + F11*F12*chi22*dAdgrad_chi212313 + F11*F12*chi23*dAdgrad_chi123313 + F11*F12*chi23*dAdgrad_chi213313 + F11*F13*chi21*dAdgrad_chi131313 + F11*F13*chi21*dAdgrad_chi311313 + F11*F13*chi22*dAdgrad_chi132313 + F11*F13*chi22*dAdgrad_chi312313 + F11*F13*chi23*dAdgrad_chi133313 + F11*F13*chi23*dAdgrad_chi313313 + F12*F12*chi21*dAdgrad_chi221313 + F12*F12*chi22*dAdgrad_chi222313 + F12*F12*chi23*dAdgrad_chi223313 + F12*F13*chi21*dAdgrad_chi231313 + F12*F13*chi21*dAdgrad_chi321313 + F12*F13*chi22*dAdgrad_chi232313 + F12*F13*chi22*dAdgrad_chi322313 + F12*F13*chi23*dAdgrad_chi233313 + F12*F13*chi23*dAdgrad_chi323313 + F13*F13*chi21*dAdgrad_chi331313 + F13*F13*chi22*dAdgrad_chi332313 + F13*F13*chi23*dAdgrad_chi333313 + _112313;
        dadgrad_chi(5,23) = F11*F11*chi21*dAdgrad_chi111312 + F11*F11*chi22*dAdgrad_chi112312 + F11*F11*chi23*dAdgrad_chi113312 + F11*F12*chi21*dAdgrad_chi121312 + F11*F12*chi21*dAdgrad_chi211312 + F11*F12*chi22*dAdgrad_chi122312 + F11*F12*chi22*dAdgrad_chi212312 + F11*F12*chi23*dAdgrad_chi123312 + F11*F12*chi23*dAdgrad_chi213312 + F11*F13*chi21*dAdgrad_chi131312 + F11*F13*chi21*dAdgrad_chi311312 + F11*F13*chi22*dAdgrad_chi132312 + F11*F13*chi22*dAdgrad_chi312312 + F11*F13*chi23*dAdgrad_chi133312 + F11*F13*chi23*dAdgrad_chi313312 + F12*F12*chi21*dAdgrad_chi221312 + F12*F12*chi22*dAdgrad_chi222312 + F12*F12*chi23*dAdgrad_chi223312 + F12*F13*chi21*dAdgrad_chi231312 + F12*F13*chi21*dAdgrad_chi321312 + F12*F13*chi22*dAdgrad_chi232312 + F12*F13*chi22*dAdgrad_chi322312 + F12*F13*chi23*dAdgrad_chi233312 + F12*F13*chi23*dAdgrad_chi323312 + F13*F13*chi21*dAdgrad_chi331312 + F13*F13*chi22*dAdgrad_chi332312 + F13*F13*chi23*dAdgrad_chi333312 + _112312;
        dadgrad_chi(5,24) = F11*F11*chi21*dAdgrad_chi111332 + F11*F11*chi22*dAdgrad_chi112332 + F11*F11*chi23*dAdgrad_chi113332 + F11*F12*chi21*dAdgrad_chi121332 + F11*F12*chi21*dAdgrad_chi211332 + F11*F12*chi22*dAdgrad_chi122332 + F11*F12*chi22*dAdgrad_chi212332 + F11*F12*chi23*dAdgrad_chi123332 + F11*F12*chi23*dAdgrad_chi213332 + F11*F13*chi21*dAdgrad_chi131332 + F11*F13*chi21*dAdgrad_chi311332 + F11*F13*chi22*dAdgrad_chi132332 + F11*F13*chi22*dAdgrad_chi312332 + F11*F13*chi23*dAdgrad_chi133332 + F11*F13*chi23*dAdgrad_chi313332 + F12*F12*chi21*dAdgrad_chi221332 + F12*F12*chi22*dAdgrad_chi222332 + F12*F12*chi23*dAdgrad_chi223332 + F12*F13*chi21*dAdgrad_chi231332 + F12*F13*chi21*dAdgrad_chi321332 + F12*F13*chi22*dAdgrad_chi232332 + F12*F13*chi22*dAdgrad_chi322332 + F12*F13*chi23*dAdgrad_chi233332 + F12*F13*chi23*dAdgrad_chi323332 + F13*F13*chi21*dAdgrad_chi331332 + F13*F13*chi22*dAdgrad_chi332332 + F13*F13*chi23*dAdgrad_chi333332 + _112332;
        dadgrad_chi(5,25) = F11*F11*chi21*dAdgrad_chi111331 + F11*F11*chi22*dAdgrad_chi112331 + F11*F11*chi23*dAdgrad_chi113331 + F11*F12*chi21*dAdgrad_chi121331 + F11*F12*chi21*dAdgrad_chi211331 + F11*F12*chi22*dAdgrad_chi122331 + F11*F12*chi22*dAdgrad_chi212331 + F11*F12*chi23*dAdgrad_chi123331 + F11*F12*chi23*dAdgrad_chi213331 + F11*F13*chi21*dAdgrad_chi131331 + F11*F13*chi21*dAdgrad_chi311331 + F11*F13*chi22*dAdgrad_chi132331 + F11*F13*chi22*dAdgrad_chi312331 + F11*F13*chi23*dAdgrad_chi133331 + F11*F13*chi23*dAdgrad_chi313331 + F12*F12*chi21*dAdgrad_chi221331 + F12*F12*chi22*dAdgrad_chi222331 + F12*F12*chi23*dAdgrad_chi223331 + F12*F13*chi21*dAdgrad_chi231331 + F12*F13*chi21*dAdgrad_chi321331 + F12*F13*chi22*dAdgrad_chi232331 + F12*F13*chi22*dAdgrad_chi322331 + F12*F13*chi23*dAdgrad_chi233331 + F12*F13*chi23*dAdgrad_chi323331 + F13*F13*chi21*dAdgrad_chi331331 + F13*F13*chi22*dAdgrad_chi332331 + F13*F13*chi23*dAdgrad_chi333331 + _112331;
        dadgrad_chi(5,26) = F11*F11*chi21*dAdgrad_chi111321 + F11*F11*chi22*dAdgrad_chi112321 + F11*F11*chi23*dAdgrad_chi113321 + F11*F12*chi21*dAdgrad_chi121321 + F11*F12*chi21*dAdgrad_chi211321 + F11*F12*chi22*dAdgrad_chi122321 + F11*F12*chi22*dAdgrad_chi212321 + F11*F12*chi23*dAdgrad_chi123321 + F11*F12*chi23*dAdgrad_chi213321 + F11*F13*chi21*dAdgrad_chi131321 + F11*F13*chi21*dAdgrad_chi311321 + F11*F13*chi22*dAdgrad_chi132321 + F11*F13*chi22*dAdgrad_chi312321 + F11*F13*chi23*dAdgrad_chi133321 + F11*F13*chi23*dAdgrad_chi313321 + F12*F12*chi21*dAdgrad_chi221321 + F12*F12*chi22*dAdgrad_chi222321 + F12*F12*chi23*dAdgrad_chi223321 + F12*F13*chi21*dAdgrad_chi231321 + F12*F13*chi21*dAdgrad_chi321321 + F12*F13*chi22*dAdgrad_chi232321 + F12*F13*chi22*dAdgrad_chi322321 + F12*F13*chi23*dAdgrad_chi233321 + F12*F13*chi23*dAdgrad_chi323321 + F13*F13*chi21*dAdgrad_chi331321 + F13*F13*chi22*dAdgrad_chi332321 + F13*F13*chi23*dAdgrad_chi333321 + _112321;
        dadgrad_chi(6,0) = F11*F31*chi21*dAdgrad_chi111111 + F11*F31*chi22*dAdgrad_chi112111 + F11*F31*chi23*dAdgrad_chi113111 + F11*F32*chi21*dAdgrad_chi121111 + F11*F32*chi22*dAdgrad_chi122111 + F11*F32*chi23*dAdgrad_chi123111 + F11*F33*chi21*dAdgrad_chi131111 + F11*F33*chi22*dAdgrad_chi132111 + F11*F33*chi23*dAdgrad_chi133111 + F12*F31*chi21*dAdgrad_chi211111 + F12*F31*chi22*dAdgrad_chi212111 + F12*F31*chi23*dAdgrad_chi213111 + F12*F32*chi21*dAdgrad_chi221111 + F12*F32*chi22*dAdgrad_chi222111 + F12*F32*chi23*dAdgrad_chi223111 + F12*F33*chi21*dAdgrad_chi231111 + F12*F33*chi22*dAdgrad_chi232111 + F12*F33*chi23*dAdgrad_chi233111 + F13*F31*chi21*dAdgrad_chi311111 + F13*F31*chi22*dAdgrad_chi312111 + F13*F31*chi23*dAdgrad_chi313111 + F13*F32*chi21*dAdgrad_chi321111 + F13*F32*chi22*dAdgrad_chi322111 + F13*F32*chi23*dAdgrad_chi323111 + F13*F33*chi21*dAdgrad_chi331111 + F13*F33*chi22*dAdgrad_chi332111 + F13*F33*chi23*dAdgrad_chi333111 + _132111;
        dadgrad_chi(6,1) = F11*F31*chi21*dAdgrad_chi111122 + F11*F31*chi22*dAdgrad_chi112122 + F11*F31*chi23*dAdgrad_chi113122 + F11*F32*chi21*dAdgrad_chi121122 + F11*F32*chi22*dAdgrad_chi122122 + F11*F32*chi23*dAdgrad_chi123122 + F11*F33*chi21*dAdgrad_chi131122 + F11*F33*chi22*dAdgrad_chi132122 + F11*F33*chi23*dAdgrad_chi133122 + F12*F31*chi21*dAdgrad_chi211122 + F12*F31*chi22*dAdgrad_chi212122 + F12*F31*chi23*dAdgrad_chi213122 + F12*F32*chi21*dAdgrad_chi221122 + F12*F32*chi22*dAdgrad_chi222122 + F12*F32*chi23*dAdgrad_chi223122 + F12*F33*chi21*dAdgrad_chi231122 + F12*F33*chi22*dAdgrad_chi232122 + F12*F33*chi23*dAdgrad_chi233122 + F13*F31*chi21*dAdgrad_chi311122 + F13*F31*chi22*dAdgrad_chi312122 + F13*F31*chi23*dAdgrad_chi313122 + F13*F32*chi21*dAdgrad_chi321122 + F13*F32*chi22*dAdgrad_chi322122 + F13*F32*chi23*dAdgrad_chi323122 + F13*F33*chi21*dAdgrad_chi331122 + F13*F33*chi22*dAdgrad_chi332122 + F13*F33*chi23*dAdgrad_chi333122 + _132122;
        dadgrad_chi(6,2) = F11*F31*chi21*dAdgrad_chi111133 + F11*F31*chi22*dAdgrad_chi112133 + F11*F31*chi23*dAdgrad_chi113133 + F11*F32*chi21*dAdgrad_chi121133 + F11*F32*chi22*dAdgrad_chi122133 + F11*F32*chi23*dAdgrad_chi123133 + F11*F33*chi21*dAdgrad_chi131133 + F11*F33*chi22*dAdgrad_chi132133 + F11*F33*chi23*dAdgrad_chi133133 + F12*F31*chi21*dAdgrad_chi211133 + F12*F31*chi22*dAdgrad_chi212133 + F12*F31*chi23*dAdgrad_chi213133 + F12*F32*chi21*dAdgrad_chi221133 + F12*F32*chi22*dAdgrad_chi222133 + F12*F32*chi23*dAdgrad_chi223133 + F12*F33*chi21*dAdgrad_chi231133 + F12*F33*chi22*dAdgrad_chi232133 + F12*F33*chi23*dAdgrad_chi233133 + F13*F31*chi21*dAdgrad_chi311133 + F13*F31*chi22*dAdgrad_chi312133 + F13*F31*chi23*dAdgrad_chi313133 + F13*F32*chi21*dAdgrad_chi321133 + F13*F32*chi22*dAdgrad_chi322133 + F13*F32*chi23*dAdgrad_chi323133 + F13*F33*chi21*dAdgrad_chi331133 + F13*F33*chi22*dAdgrad_chi332133 + F13*F33*chi23*dAdgrad_chi333133 + _132133;
        dadgrad_chi(6,3) = F11*F31*chi21*dAdgrad_chi111123 + F11*F31*chi22*dAdgrad_chi112123 + F11*F31*chi23*dAdgrad_chi113123 + F11*F32*chi21*dAdgrad_chi121123 + F11*F32*chi22*dAdgrad_chi122123 + F11*F32*chi23*dAdgrad_chi123123 + F11*F33*chi21*dAdgrad_chi131123 + F11*F33*chi22*dAdgrad_chi132123 + F11*F33*chi23*dAdgrad_chi133123 + F12*F31*chi21*dAdgrad_chi211123 + F12*F31*chi22*dAdgrad_chi212123 + F12*F31*chi23*dAdgrad_chi213123 + F12*F32*chi21*dAdgrad_chi221123 + F12*F32*chi22*dAdgrad_chi222123 + F12*F32*chi23*dAdgrad_chi223123 + F12*F33*chi21*dAdgrad_chi231123 + F12*F33*chi22*dAdgrad_chi232123 + F12*F33*chi23*dAdgrad_chi233123 + F13*F31*chi21*dAdgrad_chi311123 + F13*F31*chi22*dAdgrad_chi312123 + F13*F31*chi23*dAdgrad_chi313123 + F13*F32*chi21*dAdgrad_chi321123 + F13*F32*chi22*dAdgrad_chi322123 + F13*F32*chi23*dAdgrad_chi323123 + F13*F33*chi21*dAdgrad_chi331123 + F13*F33*chi22*dAdgrad_chi332123 + F13*F33*chi23*dAdgrad_chi333123 + _132123;
        dadgrad_chi(6,4) = F11*F31*chi21*dAdgrad_chi111113 + F11*F31*chi22*dAdgrad_chi112113 + F11*F31*chi23*dAdgrad_chi113113 + F11*F32*chi21*dAdgrad_chi121113 + F11*F32*chi22*dAdgrad_chi122113 + F11*F32*chi23*dAdgrad_chi123113 + F11*F33*chi21*dAdgrad_chi131113 + F11*F33*chi22*dAdgrad_chi132113 + F11*F33*chi23*dAdgrad_chi133113 + F12*F31*chi21*dAdgrad_chi211113 + F12*F31*chi22*dAdgrad_chi212113 + F12*F31*chi23*dAdgrad_chi213113 + F12*F32*chi21*dAdgrad_chi221113 + F12*F32*chi22*dAdgrad_chi222113 + F12*F32*chi23*dAdgrad_chi223113 + F12*F33*chi21*dAdgrad_chi231113 + F12*F33*chi22*dAdgrad_chi232113 + F12*F33*chi23*dAdgrad_chi233113 + F13*F31*chi21*dAdgrad_chi311113 + F13*F31*chi22*dAdgrad_chi312113 + F13*F31*chi23*dAdgrad_chi313113 + F13*F32*chi21*dAdgrad_chi321113 + F13*F32*chi22*dAdgrad_chi322113 + F13*F32*chi23*dAdgrad_chi323113 + F13*F33*chi21*dAdgrad_chi331113 + F13*F33*chi22*dAdgrad_chi332113 + F13*F33*chi23*dAdgrad_chi333113 + _132113;
        dadgrad_chi(6,5) = F11*F31*chi21*dAdgrad_chi111112 + F11*F31*chi22*dAdgrad_chi112112 + F11*F31*chi23*dAdgrad_chi113112 + F11*F32*chi21*dAdgrad_chi121112 + F11*F32*chi22*dAdgrad_chi122112 + F11*F32*chi23*dAdgrad_chi123112 + F11*F33*chi21*dAdgrad_chi131112 + F11*F33*chi22*dAdgrad_chi132112 + F11*F33*chi23*dAdgrad_chi133112 + F12*F31*chi21*dAdgrad_chi211112 + F12*F31*chi22*dAdgrad_chi212112 + F12*F31*chi23*dAdgrad_chi213112 + F12*F32*chi21*dAdgrad_chi221112 + F12*F32*chi22*dAdgrad_chi222112 + F12*F32*chi23*dAdgrad_chi223112 + F12*F33*chi21*dAdgrad_chi231112 + F12*F33*chi22*dAdgrad_chi232112 + F12*F33*chi23*dAdgrad_chi233112 + F13*F31*chi21*dAdgrad_chi311112 + F13*F31*chi22*dAdgrad_chi312112 + F13*F31*chi23*dAdgrad_chi313112 + F13*F32*chi21*dAdgrad_chi321112 + F13*F32*chi22*dAdgrad_chi322112 + F13*F32*chi23*dAdgrad_chi323112 + F13*F33*chi21*dAdgrad_chi331112 + F13*F33*chi22*dAdgrad_chi332112 + F13*F33*chi23*dAdgrad_chi333112 + _132112;
        dadgrad_chi(6,6) = F11*F31*chi21*dAdgrad_chi111132 + F11*F31*chi22*dAdgrad_chi112132 + F11*F31*chi23*dAdgrad_chi113132 + F11*F32*chi21*dAdgrad_chi121132 + F11*F32*chi22*dAdgrad_chi122132 + F11*F32*chi23*dAdgrad_chi123132 + F11*F33*chi21*dAdgrad_chi131132 + F11*F33*chi22*dAdgrad_chi132132 + F11*F33*chi23*dAdgrad_chi133132 + F12*F31*chi21*dAdgrad_chi211132 + F12*F31*chi22*dAdgrad_chi212132 + F12*F31*chi23*dAdgrad_chi213132 + F12*F32*chi21*dAdgrad_chi221132 + F12*F32*chi22*dAdgrad_chi222132 + F12*F32*chi23*dAdgrad_chi223132 + F12*F33*chi21*dAdgrad_chi231132 + F12*F33*chi22*dAdgrad_chi232132 + F12*F33*chi23*dAdgrad_chi233132 + F13*F31*chi21*dAdgrad_chi311132 + F13*F31*chi22*dAdgrad_chi312132 + F13*F31*chi23*dAdgrad_chi313132 + F13*F32*chi21*dAdgrad_chi321132 + F13*F32*chi22*dAdgrad_chi322132 + F13*F32*chi23*dAdgrad_chi323132 + F13*F33*chi21*dAdgrad_chi331132 + F13*F33*chi22*dAdgrad_chi332132 + F13*F33*chi23*dAdgrad_chi333132 + _132132;
        dadgrad_chi(6,7) = F11*F31*chi21*dAdgrad_chi111131 + F11*F31*chi22*dAdgrad_chi112131 + F11*F31*chi23*dAdgrad_chi113131 + F11*F32*chi21*dAdgrad_chi121131 + F11*F32*chi22*dAdgrad_chi122131 + F11*F32*chi23*dAdgrad_chi123131 + F11*F33*chi21*dAdgrad_chi131131 + F11*F33*chi22*dAdgrad_chi132131 + F11*F33*chi23*dAdgrad_chi133131 + F12*F31*chi21*dAdgrad_chi211131 + F12*F31*chi22*dAdgrad_chi212131 + F12*F31*chi23*dAdgrad_chi213131 + F12*F32*chi21*dAdgrad_chi221131 + F12*F32*chi22*dAdgrad_chi222131 + F12*F32*chi23*dAdgrad_chi223131 + F12*F33*chi21*dAdgrad_chi231131 + F12*F33*chi22*dAdgrad_chi232131 + F12*F33*chi23*dAdgrad_chi233131 + F13*F31*chi21*dAdgrad_chi311131 + F13*F31*chi22*dAdgrad_chi312131 + F13*F31*chi23*dAdgrad_chi313131 + F13*F32*chi21*dAdgrad_chi321131 + F13*F32*chi22*dAdgrad_chi322131 + F13*F32*chi23*dAdgrad_chi323131 + F13*F33*chi21*dAdgrad_chi331131 + F13*F33*chi22*dAdgrad_chi332131 + F13*F33*chi23*dAdgrad_chi333131 + _132131;
        dadgrad_chi(6,8) = F11*F31*chi21*dAdgrad_chi111121 + F11*F31*chi22*dAdgrad_chi112121 + F11*F31*chi23*dAdgrad_chi113121 + F11*F32*chi21*dAdgrad_chi121121 + F11*F32*chi22*dAdgrad_chi122121 + F11*F32*chi23*dAdgrad_chi123121 + F11*F33*chi21*dAdgrad_chi131121 + F11*F33*chi22*dAdgrad_chi132121 + F11*F33*chi23*dAdgrad_chi133121 + F12*F31*chi21*dAdgrad_chi211121 + F12*F31*chi22*dAdgrad_chi212121 + F12*F31*chi23*dAdgrad_chi213121 + F12*F32*chi21*dAdgrad_chi221121 + F12*F32*chi22*dAdgrad_chi222121 + F12*F32*chi23*dAdgrad_chi223121 + F12*F33*chi21*dAdgrad_chi231121 + F12*F33*chi22*dAdgrad_chi232121 + F12*F33*chi23*dAdgrad_chi233121 + F13*F31*chi21*dAdgrad_chi311121 + F13*F31*chi22*dAdgrad_chi312121 + F13*F31*chi23*dAdgrad_chi313121 + F13*F32*chi21*dAdgrad_chi321121 + F13*F32*chi22*dAdgrad_chi322121 + F13*F32*chi23*dAdgrad_chi323121 + F13*F33*chi21*dAdgrad_chi331121 + F13*F33*chi22*dAdgrad_chi332121 + F13*F33*chi23*dAdgrad_chi333121 + _132121;
        dadgrad_chi(6,9) = F11*F31*chi21*dAdgrad_chi111211 + F11*F31*chi22*dAdgrad_chi112211 + F11*F31*chi23*dAdgrad_chi113211 + F11*F32*chi21*dAdgrad_chi121211 + F11*F32*chi22*dAdgrad_chi122211 + F11*F32*chi23*dAdgrad_chi123211 + F11*F33*chi21*dAdgrad_chi131211 + F11*F33*chi22*dAdgrad_chi132211 + F11*F33*chi23*dAdgrad_chi133211 + F12*F31*chi21*dAdgrad_chi211211 + F12*F31*chi22*dAdgrad_chi212211 + F12*F31*chi23*dAdgrad_chi213211 + F12*F32*chi21*dAdgrad_chi221211 + F12*F32*chi22*dAdgrad_chi222211 + F12*F32*chi23*dAdgrad_chi223211 + F12*F33*chi21*dAdgrad_chi231211 + F12*F33*chi22*dAdgrad_chi232211 + F12*F33*chi23*dAdgrad_chi233211 + F13*F31*chi21*dAdgrad_chi311211 + F13*F31*chi22*dAdgrad_chi312211 + F13*F31*chi23*dAdgrad_chi313211 + F13*F32*chi21*dAdgrad_chi321211 + F13*F32*chi22*dAdgrad_chi322211 + F13*F32*chi23*dAdgrad_chi323211 + F13*F33*chi21*dAdgrad_chi331211 + F13*F33*chi22*dAdgrad_chi332211 + F13*F33*chi23*dAdgrad_chi333211 + _132211;
        dadgrad_chi(6,10) = F11*F31*chi21*dAdgrad_chi111222 + F11*F31*chi22*dAdgrad_chi112222 + F11*F31*chi23*dAdgrad_chi113222 + F11*F32*chi21*dAdgrad_chi121222 + F11*F32*chi22*dAdgrad_chi122222 + F11*F32*chi23*dAdgrad_chi123222 + F11*F33*chi21*dAdgrad_chi131222 + F11*F33*chi22*dAdgrad_chi132222 + F11*F33*chi23*dAdgrad_chi133222 + F12*F31*chi21*dAdgrad_chi211222 + F12*F31*chi22*dAdgrad_chi212222 + F12*F31*chi23*dAdgrad_chi213222 + F12*F32*chi21*dAdgrad_chi221222 + F12*F32*chi22*dAdgrad_chi222222 + F12*F32*chi23*dAdgrad_chi223222 + F12*F33*chi21*dAdgrad_chi231222 + F12*F33*chi22*dAdgrad_chi232222 + F12*F33*chi23*dAdgrad_chi233222 + F13*F31*chi21*dAdgrad_chi311222 + F13*F31*chi22*dAdgrad_chi312222 + F13*F31*chi23*dAdgrad_chi313222 + F13*F32*chi21*dAdgrad_chi321222 + F13*F32*chi22*dAdgrad_chi322222 + F13*F32*chi23*dAdgrad_chi323222 + F13*F33*chi21*dAdgrad_chi331222 + F13*F33*chi22*dAdgrad_chi332222 + F13*F33*chi23*dAdgrad_chi333222 + _132222;
        dadgrad_chi(6,11) = F11*F31*chi21*dAdgrad_chi111233 + F11*F31*chi22*dAdgrad_chi112233 + F11*F31*chi23*dAdgrad_chi113233 + F11*F32*chi21*dAdgrad_chi121233 + F11*F32*chi22*dAdgrad_chi122233 + F11*F32*chi23*dAdgrad_chi123233 + F11*F33*chi21*dAdgrad_chi131233 + F11*F33*chi22*dAdgrad_chi132233 + F11*F33*chi23*dAdgrad_chi133233 + F12*F31*chi21*dAdgrad_chi211233 + F12*F31*chi22*dAdgrad_chi212233 + F12*F31*chi23*dAdgrad_chi213233 + F12*F32*chi21*dAdgrad_chi221233 + F12*F32*chi22*dAdgrad_chi222233 + F12*F32*chi23*dAdgrad_chi223233 + F12*F33*chi21*dAdgrad_chi231233 + F12*F33*chi22*dAdgrad_chi232233 + F12*F33*chi23*dAdgrad_chi233233 + F13*F31*chi21*dAdgrad_chi311233 + F13*F31*chi22*dAdgrad_chi312233 + F13*F31*chi23*dAdgrad_chi313233 + F13*F32*chi21*dAdgrad_chi321233 + F13*F32*chi22*dAdgrad_chi322233 + F13*F32*chi23*dAdgrad_chi323233 + F13*F33*chi21*dAdgrad_chi331233 + F13*F33*chi22*dAdgrad_chi332233 + F13*F33*chi23*dAdgrad_chi333233 + _132233;
        dadgrad_chi(6,12) = F11*F31*chi21*dAdgrad_chi111223 + F11*F31*chi22*dAdgrad_chi112223 + F11*F31*chi23*dAdgrad_chi113223 + F11*F32*chi21*dAdgrad_chi121223 + F11*F32*chi22*dAdgrad_chi122223 + F11*F32*chi23*dAdgrad_chi123223 + F11*F33*chi21*dAdgrad_chi131223 + F11*F33*chi22*dAdgrad_chi132223 + F11*F33*chi23*dAdgrad_chi133223 + F12*F31*chi21*dAdgrad_chi211223 + F12*F31*chi22*dAdgrad_chi212223 + F12*F31*chi23*dAdgrad_chi213223 + F12*F32*chi21*dAdgrad_chi221223 + F12*F32*chi22*dAdgrad_chi222223 + F12*F32*chi23*dAdgrad_chi223223 + F12*F33*chi21*dAdgrad_chi231223 + F12*F33*chi22*dAdgrad_chi232223 + F12*F33*chi23*dAdgrad_chi233223 + F13*F31*chi21*dAdgrad_chi311223 + F13*F31*chi22*dAdgrad_chi312223 + F13*F31*chi23*dAdgrad_chi313223 + F13*F32*chi21*dAdgrad_chi321223 + F13*F32*chi22*dAdgrad_chi322223 + F13*F32*chi23*dAdgrad_chi323223 + F13*F33*chi21*dAdgrad_chi331223 + F13*F33*chi22*dAdgrad_chi332223 + F13*F33*chi23*dAdgrad_chi333223 + _132223;
        dadgrad_chi(6,13) = F11*F31*chi21*dAdgrad_chi111213 + F11*F31*chi22*dAdgrad_chi112213 + F11*F31*chi23*dAdgrad_chi113213 + F11*F32*chi21*dAdgrad_chi121213 + F11*F32*chi22*dAdgrad_chi122213 + F11*F32*chi23*dAdgrad_chi123213 + F11*F33*chi21*dAdgrad_chi131213 + F11*F33*chi22*dAdgrad_chi132213 + F11*F33*chi23*dAdgrad_chi133213 + F12*F31*chi21*dAdgrad_chi211213 + F12*F31*chi22*dAdgrad_chi212213 + F12*F31*chi23*dAdgrad_chi213213 + F12*F32*chi21*dAdgrad_chi221213 + F12*F32*chi22*dAdgrad_chi222213 + F12*F32*chi23*dAdgrad_chi223213 + F12*F33*chi21*dAdgrad_chi231213 + F12*F33*chi22*dAdgrad_chi232213 + F12*F33*chi23*dAdgrad_chi233213 + F13*F31*chi21*dAdgrad_chi311213 + F13*F31*chi22*dAdgrad_chi312213 + F13*F31*chi23*dAdgrad_chi313213 + F13*F32*chi21*dAdgrad_chi321213 + F13*F32*chi22*dAdgrad_chi322213 + F13*F32*chi23*dAdgrad_chi323213 + F13*F33*chi21*dAdgrad_chi331213 + F13*F33*chi22*dAdgrad_chi332213 + F13*F33*chi23*dAdgrad_chi333213 + _132213;
        dadgrad_chi(6,14) = F11*F31*chi21*dAdgrad_chi111212 + F11*F31*chi22*dAdgrad_chi112212 + F11*F31*chi23*dAdgrad_chi113212 + F11*F32*chi21*dAdgrad_chi121212 + F11*F32*chi22*dAdgrad_chi122212 + F11*F32*chi23*dAdgrad_chi123212 + F11*F33*chi21*dAdgrad_chi131212 + F11*F33*chi22*dAdgrad_chi132212 + F11*F33*chi23*dAdgrad_chi133212 + F12*F31*chi21*dAdgrad_chi211212 + F12*F31*chi22*dAdgrad_chi212212 + F12*F31*chi23*dAdgrad_chi213212 + F12*F32*chi21*dAdgrad_chi221212 + F12*F32*chi22*dAdgrad_chi222212 + F12*F32*chi23*dAdgrad_chi223212 + F12*F33*chi21*dAdgrad_chi231212 + F12*F33*chi22*dAdgrad_chi232212 + F12*F33*chi23*dAdgrad_chi233212 + F13*F31*chi21*dAdgrad_chi311212 + F13*F31*chi22*dAdgrad_chi312212 + F13*F31*chi23*dAdgrad_chi313212 + F13*F32*chi21*dAdgrad_chi321212 + F13*F32*chi22*dAdgrad_chi322212 + F13*F32*chi23*dAdgrad_chi323212 + F13*F33*chi21*dAdgrad_chi331212 + F13*F33*chi22*dAdgrad_chi332212 + F13*F33*chi23*dAdgrad_chi333212 + _132212;
        dadgrad_chi(6,15) = F11*F31*chi21*dAdgrad_chi111232 + F11*F31*chi22*dAdgrad_chi112232 + F11*F31*chi23*dAdgrad_chi113232 + F11*F32*chi21*dAdgrad_chi121232 + F11*F32*chi22*dAdgrad_chi122232 + F11*F32*chi23*dAdgrad_chi123232 + F11*F33*chi21*dAdgrad_chi131232 + F11*F33*chi22*dAdgrad_chi132232 + F11*F33*chi23*dAdgrad_chi133232 + F12*F31*chi21*dAdgrad_chi211232 + F12*F31*chi22*dAdgrad_chi212232 + F12*F31*chi23*dAdgrad_chi213232 + F12*F32*chi21*dAdgrad_chi221232 + F12*F32*chi22*dAdgrad_chi222232 + F12*F32*chi23*dAdgrad_chi223232 + F12*F33*chi21*dAdgrad_chi231232 + F12*F33*chi22*dAdgrad_chi232232 + F12*F33*chi23*dAdgrad_chi233232 + F13*F31*chi21*dAdgrad_chi311232 + F13*F31*chi22*dAdgrad_chi312232 + F13*F31*chi23*dAdgrad_chi313232 + F13*F32*chi21*dAdgrad_chi321232 + F13*F32*chi22*dAdgrad_chi322232 + F13*F32*chi23*dAdgrad_chi323232 + F13*F33*chi21*dAdgrad_chi331232 + F13*F33*chi22*dAdgrad_chi332232 + F13*F33*chi23*dAdgrad_chi333232 + _132232;
        dadgrad_chi(6,16) = F11*F31*chi21*dAdgrad_chi111231 + F11*F31*chi22*dAdgrad_chi112231 + F11*F31*chi23*dAdgrad_chi113231 + F11*F32*chi21*dAdgrad_chi121231 + F11*F32*chi22*dAdgrad_chi122231 + F11*F32*chi23*dAdgrad_chi123231 + F11*F33*chi21*dAdgrad_chi131231 + F11*F33*chi22*dAdgrad_chi132231 + F11*F33*chi23*dAdgrad_chi133231 + F12*F31*chi21*dAdgrad_chi211231 + F12*F31*chi22*dAdgrad_chi212231 + F12*F31*chi23*dAdgrad_chi213231 + F12*F32*chi21*dAdgrad_chi221231 + F12*F32*chi22*dAdgrad_chi222231 + F12*F32*chi23*dAdgrad_chi223231 + F12*F33*chi21*dAdgrad_chi231231 + F12*F33*chi22*dAdgrad_chi232231 + F12*F33*chi23*dAdgrad_chi233231 + F13*F31*chi21*dAdgrad_chi311231 + F13*F31*chi22*dAdgrad_chi312231 + F13*F31*chi23*dAdgrad_chi313231 + F13*F32*chi21*dAdgrad_chi321231 + F13*F32*chi22*dAdgrad_chi322231 + F13*F32*chi23*dAdgrad_chi323231 + F13*F33*chi21*dAdgrad_chi331231 + F13*F33*chi22*dAdgrad_chi332231 + F13*F33*chi23*dAdgrad_chi333231 + _132231;
        dadgrad_chi(6,17) = F11*F31*chi21*dAdgrad_chi111221 + F11*F31*chi22*dAdgrad_chi112221 + F11*F31*chi23*dAdgrad_chi113221 + F11*F32*chi21*dAdgrad_chi121221 + F11*F32*chi22*dAdgrad_chi122221 + F11*F32*chi23*dAdgrad_chi123221 + F11*F33*chi21*dAdgrad_chi131221 + F11*F33*chi22*dAdgrad_chi132221 + F11*F33*chi23*dAdgrad_chi133221 + F12*F31*chi21*dAdgrad_chi211221 + F12*F31*chi22*dAdgrad_chi212221 + F12*F31*chi23*dAdgrad_chi213221 + F12*F32*chi21*dAdgrad_chi221221 + F12*F32*chi22*dAdgrad_chi222221 + F12*F32*chi23*dAdgrad_chi223221 + F12*F33*chi21*dAdgrad_chi231221 + F12*F33*chi22*dAdgrad_chi232221 + F12*F33*chi23*dAdgrad_chi233221 + F13*F31*chi21*dAdgrad_chi311221 + F13*F31*chi22*dAdgrad_chi312221 + F13*F31*chi23*dAdgrad_chi313221 + F13*F32*chi21*dAdgrad_chi321221 + F13*F32*chi22*dAdgrad_chi322221 + F13*F32*chi23*dAdgrad_chi323221 + F13*F33*chi21*dAdgrad_chi331221 + F13*F33*chi22*dAdgrad_chi332221 + F13*F33*chi23*dAdgrad_chi333221 + _132221;
        dadgrad_chi(6,18) = F11*F31*chi21*dAdgrad_chi111311 + F11*F31*chi22*dAdgrad_chi112311 + F11*F31*chi23*dAdgrad_chi113311 + F11*F32*chi21*dAdgrad_chi121311 + F11*F32*chi22*dAdgrad_chi122311 + F11*F32*chi23*dAdgrad_chi123311 + F11*F33*chi21*dAdgrad_chi131311 + F11*F33*chi22*dAdgrad_chi132311 + F11*F33*chi23*dAdgrad_chi133311 + F12*F31*chi21*dAdgrad_chi211311 + F12*F31*chi22*dAdgrad_chi212311 + F12*F31*chi23*dAdgrad_chi213311 + F12*F32*chi21*dAdgrad_chi221311 + F12*F32*chi22*dAdgrad_chi222311 + F12*F32*chi23*dAdgrad_chi223311 + F12*F33*chi21*dAdgrad_chi231311 + F12*F33*chi22*dAdgrad_chi232311 + F12*F33*chi23*dAdgrad_chi233311 + F13*F31*chi21*dAdgrad_chi311311 + F13*F31*chi22*dAdgrad_chi312311 + F13*F31*chi23*dAdgrad_chi313311 + F13*F32*chi21*dAdgrad_chi321311 + F13*F32*chi22*dAdgrad_chi322311 + F13*F32*chi23*dAdgrad_chi323311 + F13*F33*chi21*dAdgrad_chi331311 + F13*F33*chi22*dAdgrad_chi332311 + F13*F33*chi23*dAdgrad_chi333311 + _132311;
        dadgrad_chi(6,19) = F11*F31*chi21*dAdgrad_chi111322 + F11*F31*chi22*dAdgrad_chi112322 + F11*F31*chi23*dAdgrad_chi113322 + F11*F32*chi21*dAdgrad_chi121322 + F11*F32*chi22*dAdgrad_chi122322 + F11*F32*chi23*dAdgrad_chi123322 + F11*F33*chi21*dAdgrad_chi131322 + F11*F33*chi22*dAdgrad_chi132322 + F11*F33*chi23*dAdgrad_chi133322 + F12*F31*chi21*dAdgrad_chi211322 + F12*F31*chi22*dAdgrad_chi212322 + F12*F31*chi23*dAdgrad_chi213322 + F12*F32*chi21*dAdgrad_chi221322 + F12*F32*chi22*dAdgrad_chi222322 + F12*F32*chi23*dAdgrad_chi223322 + F12*F33*chi21*dAdgrad_chi231322 + F12*F33*chi22*dAdgrad_chi232322 + F12*F33*chi23*dAdgrad_chi233322 + F13*F31*chi21*dAdgrad_chi311322 + F13*F31*chi22*dAdgrad_chi312322 + F13*F31*chi23*dAdgrad_chi313322 + F13*F32*chi21*dAdgrad_chi321322 + F13*F32*chi22*dAdgrad_chi322322 + F13*F32*chi23*dAdgrad_chi323322 + F13*F33*chi21*dAdgrad_chi331322 + F13*F33*chi22*dAdgrad_chi332322 + F13*F33*chi23*dAdgrad_chi333322 + _132322;
        dadgrad_chi(6,20) = F11*F31*chi21*dAdgrad_chi111333 + F11*F31*chi22*dAdgrad_chi112333 + F11*F31*chi23*dAdgrad_chi113333 + F11*F32*chi21*dAdgrad_chi121333 + F11*F32*chi22*dAdgrad_chi122333 + F11*F32*chi23*dAdgrad_chi123333 + F11*F33*chi21*dAdgrad_chi131333 + F11*F33*chi22*dAdgrad_chi132333 + F11*F33*chi23*dAdgrad_chi133333 + F12*F31*chi21*dAdgrad_chi211333 + F12*F31*chi22*dAdgrad_chi212333 + F12*F31*chi23*dAdgrad_chi213333 + F12*F32*chi21*dAdgrad_chi221333 + F12*F32*chi22*dAdgrad_chi222333 + F12*F32*chi23*dAdgrad_chi223333 + F12*F33*chi21*dAdgrad_chi231333 + F12*F33*chi22*dAdgrad_chi232333 + F12*F33*chi23*dAdgrad_chi233333 + F13*F31*chi21*dAdgrad_chi311333 + F13*F31*chi22*dAdgrad_chi312333 + F13*F31*chi23*dAdgrad_chi313333 + F13*F32*chi21*dAdgrad_chi321333 + F13*F32*chi22*dAdgrad_chi322333 + F13*F32*chi23*dAdgrad_chi323333 + F13*F33*chi21*dAdgrad_chi331333 + F13*F33*chi22*dAdgrad_chi332333 + F13*F33*chi23*dAdgrad_chi333333 + _132333;
        dadgrad_chi(6,21) = F11*F31*chi21*dAdgrad_chi111323 + F11*F31*chi22*dAdgrad_chi112323 + F11*F31*chi23*dAdgrad_chi113323 + F11*F32*chi21*dAdgrad_chi121323 + F11*F32*chi22*dAdgrad_chi122323 + F11*F32*chi23*dAdgrad_chi123323 + F11*F33*chi21*dAdgrad_chi131323 + F11*F33*chi22*dAdgrad_chi132323 + F11*F33*chi23*dAdgrad_chi133323 + F12*F31*chi21*dAdgrad_chi211323 + F12*F31*chi22*dAdgrad_chi212323 + F12*F31*chi23*dAdgrad_chi213323 + F12*F32*chi21*dAdgrad_chi221323 + F12*F32*chi22*dAdgrad_chi222323 + F12*F32*chi23*dAdgrad_chi223323 + F12*F33*chi21*dAdgrad_chi231323 + F12*F33*chi22*dAdgrad_chi232323 + F12*F33*chi23*dAdgrad_chi233323 + F13*F31*chi21*dAdgrad_chi311323 + F13*F31*chi22*dAdgrad_chi312323 + F13*F31*chi23*dAdgrad_chi313323 + F13*F32*chi21*dAdgrad_chi321323 + F13*F32*chi22*dAdgrad_chi322323 + F13*F32*chi23*dAdgrad_chi323323 + F13*F33*chi21*dAdgrad_chi331323 + F13*F33*chi22*dAdgrad_chi332323 + F13*F33*chi23*dAdgrad_chi333323 + _132323;
        dadgrad_chi(6,22) = F11*F31*chi21*dAdgrad_chi111313 + F11*F31*chi22*dAdgrad_chi112313 + F11*F31*chi23*dAdgrad_chi113313 + F11*F32*chi21*dAdgrad_chi121313 + F11*F32*chi22*dAdgrad_chi122313 + F11*F32*chi23*dAdgrad_chi123313 + F11*F33*chi21*dAdgrad_chi131313 + F11*F33*chi22*dAdgrad_chi132313 + F11*F33*chi23*dAdgrad_chi133313 + F12*F31*chi21*dAdgrad_chi211313 + F12*F31*chi22*dAdgrad_chi212313 + F12*F31*chi23*dAdgrad_chi213313 + F12*F32*chi21*dAdgrad_chi221313 + F12*F32*chi22*dAdgrad_chi222313 + F12*F32*chi23*dAdgrad_chi223313 + F12*F33*chi21*dAdgrad_chi231313 + F12*F33*chi22*dAdgrad_chi232313 + F12*F33*chi23*dAdgrad_chi233313 + F13*F31*chi21*dAdgrad_chi311313 + F13*F31*chi22*dAdgrad_chi312313 + F13*F31*chi23*dAdgrad_chi313313 + F13*F32*chi21*dAdgrad_chi321313 + F13*F32*chi22*dAdgrad_chi322313 + F13*F32*chi23*dAdgrad_chi323313 + F13*F33*chi21*dAdgrad_chi331313 + F13*F33*chi22*dAdgrad_chi332313 + F13*F33*chi23*dAdgrad_chi333313 + _132313;
        dadgrad_chi(6,23) = F11*F31*chi21*dAdgrad_chi111312 + F11*F31*chi22*dAdgrad_chi112312 + F11*F31*chi23*dAdgrad_chi113312 + F11*F32*chi21*dAdgrad_chi121312 + F11*F32*chi22*dAdgrad_chi122312 + F11*F32*chi23*dAdgrad_chi123312 + F11*F33*chi21*dAdgrad_chi131312 + F11*F33*chi22*dAdgrad_chi132312 + F11*F33*chi23*dAdgrad_chi133312 + F12*F31*chi21*dAdgrad_chi211312 + F12*F31*chi22*dAdgrad_chi212312 + F12*F31*chi23*dAdgrad_chi213312 + F12*F32*chi21*dAdgrad_chi221312 + F12*F32*chi22*dAdgrad_chi222312 + F12*F32*chi23*dAdgrad_chi223312 + F12*F33*chi21*dAdgrad_chi231312 + F12*F33*chi22*dAdgrad_chi232312 + F12*F33*chi23*dAdgrad_chi233312 + F13*F31*chi21*dAdgrad_chi311312 + F13*F31*chi22*dAdgrad_chi312312 + F13*F31*chi23*dAdgrad_chi313312 + F13*F32*chi21*dAdgrad_chi321312 + F13*F32*chi22*dAdgrad_chi322312 + F13*F32*chi23*dAdgrad_chi323312 + F13*F33*chi21*dAdgrad_chi331312 + F13*F33*chi22*dAdgrad_chi332312 + F13*F33*chi23*dAdgrad_chi333312 + _132312;
        dadgrad_chi(6,24) = F11*F31*chi21*dAdgrad_chi111332 + F11*F31*chi22*dAdgrad_chi112332 + F11*F31*chi23*dAdgrad_chi113332 + F11*F32*chi21*dAdgrad_chi121332 + F11*F32*chi22*dAdgrad_chi122332 + F11*F32*chi23*dAdgrad_chi123332 + F11*F33*chi21*dAdgrad_chi131332 + F11*F33*chi22*dAdgrad_chi132332 + F11*F33*chi23*dAdgrad_chi133332 + F12*F31*chi21*dAdgrad_chi211332 + F12*F31*chi22*dAdgrad_chi212332 + F12*F31*chi23*dAdgrad_chi213332 + F12*F32*chi21*dAdgrad_chi221332 + F12*F32*chi22*dAdgrad_chi222332 + F12*F32*chi23*dAdgrad_chi223332 + F12*F33*chi21*dAdgrad_chi231332 + F12*F33*chi22*dAdgrad_chi232332 + F12*F33*chi23*dAdgrad_chi233332 + F13*F31*chi21*dAdgrad_chi311332 + F13*F31*chi22*dAdgrad_chi312332 + F13*F31*chi23*dAdgrad_chi313332 + F13*F32*chi21*dAdgrad_chi321332 + F13*F32*chi22*dAdgrad_chi322332 + F13*F32*chi23*dAdgrad_chi323332 + F13*F33*chi21*dAdgrad_chi331332 + F13*F33*chi22*dAdgrad_chi332332 + F13*F33*chi23*dAdgrad_chi333332 + _132332;
        dadgrad_chi(6,25) = F11*F31*chi21*dAdgrad_chi111331 + F11*F31*chi22*dAdgrad_chi112331 + F11*F31*chi23*dAdgrad_chi113331 + F11*F32*chi21*dAdgrad_chi121331 + F11*F32*chi22*dAdgrad_chi122331 + F11*F32*chi23*dAdgrad_chi123331 + F11*F33*chi21*dAdgrad_chi131331 + F11*F33*chi22*dAdgrad_chi132331 + F11*F33*chi23*dAdgrad_chi133331 + F12*F31*chi21*dAdgrad_chi211331 + F12*F31*chi22*dAdgrad_chi212331 + F12*F31*chi23*dAdgrad_chi213331 + F12*F32*chi21*dAdgrad_chi221331 + F12*F32*chi22*dAdgrad_chi222331 + F12*F32*chi23*dAdgrad_chi223331 + F12*F33*chi21*dAdgrad_chi231331 + F12*F33*chi22*dAdgrad_chi232331 + F12*F33*chi23*dAdgrad_chi233331 + F13*F31*chi21*dAdgrad_chi311331 + F13*F31*chi22*dAdgrad_chi312331 + F13*F31*chi23*dAdgrad_chi313331 + F13*F32*chi21*dAdgrad_chi321331 + F13*F32*chi22*dAdgrad_chi322331 + F13*F32*chi23*dAdgrad_chi323331 + F13*F33*chi21*dAdgrad_chi331331 + F13*F33*chi22*dAdgrad_chi332331 + F13*F33*chi23*dAdgrad_chi333331 + _132331;
        dadgrad_chi(6,26) = F11*F31*chi21*dAdgrad_chi111321 + F11*F31*chi22*dAdgrad_chi112321 + F11*F31*chi23*dAdgrad_chi113321 + F11*F32*chi21*dAdgrad_chi121321 + F11*F32*chi22*dAdgrad_chi122321 + F11*F32*chi23*dAdgrad_chi123321 + F11*F33*chi21*dAdgrad_chi131321 + F11*F33*chi22*dAdgrad_chi132321 + F11*F33*chi23*dAdgrad_chi133321 + F12*F31*chi21*dAdgrad_chi211321 + F12*F31*chi22*dAdgrad_chi212321 + F12*F31*chi23*dAdgrad_chi213321 + F12*F32*chi21*dAdgrad_chi221321 + F12*F32*chi22*dAdgrad_chi222321 + F12*F32*chi23*dAdgrad_chi223321 + F12*F33*chi21*dAdgrad_chi231321 + F12*F33*chi22*dAdgrad_chi232321 + F12*F33*chi23*dAdgrad_chi233321 + F13*F31*chi21*dAdgrad_chi311321 + F13*F31*chi22*dAdgrad_chi312321 + F13*F31*chi23*dAdgrad_chi313321 + F13*F32*chi21*dAdgrad_chi321321 + F13*F32*chi22*dAdgrad_chi322321 + F13*F32*chi23*dAdgrad_chi323321 + F13*F33*chi21*dAdgrad_chi331321 + F13*F33*chi22*dAdgrad_chi332321 + F13*F33*chi23*dAdgrad_chi333321 + _132321;
        dadgrad_chi(7,0) = F11*F31*chi11*dAdgrad_chi111111 + F11*F31*chi12*dAdgrad_chi112111 + F11*F31*chi13*dAdgrad_chi113111 + F11*F32*chi11*dAdgrad_chi121111 + F11*F32*chi12*dAdgrad_chi122111 + F11*F32*chi13*dAdgrad_chi123111 + F11*F33*chi11*dAdgrad_chi131111 + F11*F33*chi12*dAdgrad_chi132111 + F11*F33*chi13*dAdgrad_chi133111 + F12*F31*chi11*dAdgrad_chi211111 + F12*F31*chi12*dAdgrad_chi212111 + F12*F31*chi13*dAdgrad_chi213111 + F12*F32*chi11*dAdgrad_chi221111 + F12*F32*chi12*dAdgrad_chi222111 + F12*F32*chi13*dAdgrad_chi223111 + F12*F33*chi11*dAdgrad_chi231111 + F12*F33*chi12*dAdgrad_chi232111 + F12*F33*chi13*dAdgrad_chi233111 + F13*F31*chi11*dAdgrad_chi311111 + F13*F31*chi12*dAdgrad_chi312111 + F13*F31*chi13*dAdgrad_chi313111 + F13*F32*chi11*dAdgrad_chi321111 + F13*F32*chi12*dAdgrad_chi322111 + F13*F32*chi13*dAdgrad_chi323111 + F13*F33*chi11*dAdgrad_chi331111 + F13*F33*chi12*dAdgrad_chi332111 + F13*F33*chi13*dAdgrad_chi333111 + _131111;
        dadgrad_chi(7,1) = F11*F31*chi11*dAdgrad_chi111122 + F11*F31*chi12*dAdgrad_chi112122 + F11*F31*chi13*dAdgrad_chi113122 + F11*F32*chi11*dAdgrad_chi121122 + F11*F32*chi12*dAdgrad_chi122122 + F11*F32*chi13*dAdgrad_chi123122 + F11*F33*chi11*dAdgrad_chi131122 + F11*F33*chi12*dAdgrad_chi132122 + F11*F33*chi13*dAdgrad_chi133122 + F12*F31*chi11*dAdgrad_chi211122 + F12*F31*chi12*dAdgrad_chi212122 + F12*F31*chi13*dAdgrad_chi213122 + F12*F32*chi11*dAdgrad_chi221122 + F12*F32*chi12*dAdgrad_chi222122 + F12*F32*chi13*dAdgrad_chi223122 + F12*F33*chi11*dAdgrad_chi231122 + F12*F33*chi12*dAdgrad_chi232122 + F12*F33*chi13*dAdgrad_chi233122 + F13*F31*chi11*dAdgrad_chi311122 + F13*F31*chi12*dAdgrad_chi312122 + F13*F31*chi13*dAdgrad_chi313122 + F13*F32*chi11*dAdgrad_chi321122 + F13*F32*chi12*dAdgrad_chi322122 + F13*F32*chi13*dAdgrad_chi323122 + F13*F33*chi11*dAdgrad_chi331122 + F13*F33*chi12*dAdgrad_chi332122 + F13*F33*chi13*dAdgrad_chi333122 + _131122;
        dadgrad_chi(7,2) = F11*F31*chi11*dAdgrad_chi111133 + F11*F31*chi12*dAdgrad_chi112133 + F11*F31*chi13*dAdgrad_chi113133 + F11*F32*chi11*dAdgrad_chi121133 + F11*F32*chi12*dAdgrad_chi122133 + F11*F32*chi13*dAdgrad_chi123133 + F11*F33*chi11*dAdgrad_chi131133 + F11*F33*chi12*dAdgrad_chi132133 + F11*F33*chi13*dAdgrad_chi133133 + F12*F31*chi11*dAdgrad_chi211133 + F12*F31*chi12*dAdgrad_chi212133 + F12*F31*chi13*dAdgrad_chi213133 + F12*F32*chi11*dAdgrad_chi221133 + F12*F32*chi12*dAdgrad_chi222133 + F12*F32*chi13*dAdgrad_chi223133 + F12*F33*chi11*dAdgrad_chi231133 + F12*F33*chi12*dAdgrad_chi232133 + F12*F33*chi13*dAdgrad_chi233133 + F13*F31*chi11*dAdgrad_chi311133 + F13*F31*chi12*dAdgrad_chi312133 + F13*F31*chi13*dAdgrad_chi313133 + F13*F32*chi11*dAdgrad_chi321133 + F13*F32*chi12*dAdgrad_chi322133 + F13*F32*chi13*dAdgrad_chi323133 + F13*F33*chi11*dAdgrad_chi331133 + F13*F33*chi12*dAdgrad_chi332133 + F13*F33*chi13*dAdgrad_chi333133 + _131133;
        dadgrad_chi(7,3) = F11*F31*chi11*dAdgrad_chi111123 + F11*F31*chi12*dAdgrad_chi112123 + F11*F31*chi13*dAdgrad_chi113123 + F11*F32*chi11*dAdgrad_chi121123 + F11*F32*chi12*dAdgrad_chi122123 + F11*F32*chi13*dAdgrad_chi123123 + F11*F33*chi11*dAdgrad_chi131123 + F11*F33*chi12*dAdgrad_chi132123 + F11*F33*chi13*dAdgrad_chi133123 + F12*F31*chi11*dAdgrad_chi211123 + F12*F31*chi12*dAdgrad_chi212123 + F12*F31*chi13*dAdgrad_chi213123 + F12*F32*chi11*dAdgrad_chi221123 + F12*F32*chi12*dAdgrad_chi222123 + F12*F32*chi13*dAdgrad_chi223123 + F12*F33*chi11*dAdgrad_chi231123 + F12*F33*chi12*dAdgrad_chi232123 + F12*F33*chi13*dAdgrad_chi233123 + F13*F31*chi11*dAdgrad_chi311123 + F13*F31*chi12*dAdgrad_chi312123 + F13*F31*chi13*dAdgrad_chi313123 + F13*F32*chi11*dAdgrad_chi321123 + F13*F32*chi12*dAdgrad_chi322123 + F13*F32*chi13*dAdgrad_chi323123 + F13*F33*chi11*dAdgrad_chi331123 + F13*F33*chi12*dAdgrad_chi332123 + F13*F33*chi13*dAdgrad_chi333123 + _131123;
        dadgrad_chi(7,4) = F11*F31*chi11*dAdgrad_chi111113 + F11*F31*chi12*dAdgrad_chi112113 + F11*F31*chi13*dAdgrad_chi113113 + F11*F32*chi11*dAdgrad_chi121113 + F11*F32*chi12*dAdgrad_chi122113 + F11*F32*chi13*dAdgrad_chi123113 + F11*F33*chi11*dAdgrad_chi131113 + F11*F33*chi12*dAdgrad_chi132113 + F11*F33*chi13*dAdgrad_chi133113 + F12*F31*chi11*dAdgrad_chi211113 + F12*F31*chi12*dAdgrad_chi212113 + F12*F31*chi13*dAdgrad_chi213113 + F12*F32*chi11*dAdgrad_chi221113 + F12*F32*chi12*dAdgrad_chi222113 + F12*F32*chi13*dAdgrad_chi223113 + F12*F33*chi11*dAdgrad_chi231113 + F12*F33*chi12*dAdgrad_chi232113 + F12*F33*chi13*dAdgrad_chi233113 + F13*F31*chi11*dAdgrad_chi311113 + F13*F31*chi12*dAdgrad_chi312113 + F13*F31*chi13*dAdgrad_chi313113 + F13*F32*chi11*dAdgrad_chi321113 + F13*F32*chi12*dAdgrad_chi322113 + F13*F32*chi13*dAdgrad_chi323113 + F13*F33*chi11*dAdgrad_chi331113 + F13*F33*chi12*dAdgrad_chi332113 + F13*F33*chi13*dAdgrad_chi333113 + _131113;
        dadgrad_chi(7,5) = F11*F31*chi11*dAdgrad_chi111112 + F11*F31*chi12*dAdgrad_chi112112 + F11*F31*chi13*dAdgrad_chi113112 + F11*F32*chi11*dAdgrad_chi121112 + F11*F32*chi12*dAdgrad_chi122112 + F11*F32*chi13*dAdgrad_chi123112 + F11*F33*chi11*dAdgrad_chi131112 + F11*F33*chi12*dAdgrad_chi132112 + F11*F33*chi13*dAdgrad_chi133112 + F12*F31*chi11*dAdgrad_chi211112 + F12*F31*chi12*dAdgrad_chi212112 + F12*F31*chi13*dAdgrad_chi213112 + F12*F32*chi11*dAdgrad_chi221112 + F12*F32*chi12*dAdgrad_chi222112 + F12*F32*chi13*dAdgrad_chi223112 + F12*F33*chi11*dAdgrad_chi231112 + F12*F33*chi12*dAdgrad_chi232112 + F12*F33*chi13*dAdgrad_chi233112 + F13*F31*chi11*dAdgrad_chi311112 + F13*F31*chi12*dAdgrad_chi312112 + F13*F31*chi13*dAdgrad_chi313112 + F13*F32*chi11*dAdgrad_chi321112 + F13*F32*chi12*dAdgrad_chi322112 + F13*F32*chi13*dAdgrad_chi323112 + F13*F33*chi11*dAdgrad_chi331112 + F13*F33*chi12*dAdgrad_chi332112 + F13*F33*chi13*dAdgrad_chi333112 + _131112;
        dadgrad_chi(7,6) = F11*F31*chi11*dAdgrad_chi111132 + F11*F31*chi12*dAdgrad_chi112132 + F11*F31*chi13*dAdgrad_chi113132 + F11*F32*chi11*dAdgrad_chi121132 + F11*F32*chi12*dAdgrad_chi122132 + F11*F32*chi13*dAdgrad_chi123132 + F11*F33*chi11*dAdgrad_chi131132 + F11*F33*chi12*dAdgrad_chi132132 + F11*F33*chi13*dAdgrad_chi133132 + F12*F31*chi11*dAdgrad_chi211132 + F12*F31*chi12*dAdgrad_chi212132 + F12*F31*chi13*dAdgrad_chi213132 + F12*F32*chi11*dAdgrad_chi221132 + F12*F32*chi12*dAdgrad_chi222132 + F12*F32*chi13*dAdgrad_chi223132 + F12*F33*chi11*dAdgrad_chi231132 + F12*F33*chi12*dAdgrad_chi232132 + F12*F33*chi13*dAdgrad_chi233132 + F13*F31*chi11*dAdgrad_chi311132 + F13*F31*chi12*dAdgrad_chi312132 + F13*F31*chi13*dAdgrad_chi313132 + F13*F32*chi11*dAdgrad_chi321132 + F13*F32*chi12*dAdgrad_chi322132 + F13*F32*chi13*dAdgrad_chi323132 + F13*F33*chi11*dAdgrad_chi331132 + F13*F33*chi12*dAdgrad_chi332132 + F13*F33*chi13*dAdgrad_chi333132 + _131132;
        dadgrad_chi(7,7) = F11*F31*chi11*dAdgrad_chi111131 + F11*F31*chi12*dAdgrad_chi112131 + F11*F31*chi13*dAdgrad_chi113131 + F11*F32*chi11*dAdgrad_chi121131 + F11*F32*chi12*dAdgrad_chi122131 + F11*F32*chi13*dAdgrad_chi123131 + F11*F33*chi11*dAdgrad_chi131131 + F11*F33*chi12*dAdgrad_chi132131 + F11*F33*chi13*dAdgrad_chi133131 + F12*F31*chi11*dAdgrad_chi211131 + F12*F31*chi12*dAdgrad_chi212131 + F12*F31*chi13*dAdgrad_chi213131 + F12*F32*chi11*dAdgrad_chi221131 + F12*F32*chi12*dAdgrad_chi222131 + F12*F32*chi13*dAdgrad_chi223131 + F12*F33*chi11*dAdgrad_chi231131 + F12*F33*chi12*dAdgrad_chi232131 + F12*F33*chi13*dAdgrad_chi233131 + F13*F31*chi11*dAdgrad_chi311131 + F13*F31*chi12*dAdgrad_chi312131 + F13*F31*chi13*dAdgrad_chi313131 + F13*F32*chi11*dAdgrad_chi321131 + F13*F32*chi12*dAdgrad_chi322131 + F13*F32*chi13*dAdgrad_chi323131 + F13*F33*chi11*dAdgrad_chi331131 + F13*F33*chi12*dAdgrad_chi332131 + F13*F33*chi13*dAdgrad_chi333131 + _131131;
        dadgrad_chi(7,8) = F11*F31*chi11*dAdgrad_chi111121 + F11*F31*chi12*dAdgrad_chi112121 + F11*F31*chi13*dAdgrad_chi113121 + F11*F32*chi11*dAdgrad_chi121121 + F11*F32*chi12*dAdgrad_chi122121 + F11*F32*chi13*dAdgrad_chi123121 + F11*F33*chi11*dAdgrad_chi131121 + F11*F33*chi12*dAdgrad_chi132121 + F11*F33*chi13*dAdgrad_chi133121 + F12*F31*chi11*dAdgrad_chi211121 + F12*F31*chi12*dAdgrad_chi212121 + F12*F31*chi13*dAdgrad_chi213121 + F12*F32*chi11*dAdgrad_chi221121 + F12*F32*chi12*dAdgrad_chi222121 + F12*F32*chi13*dAdgrad_chi223121 + F12*F33*chi11*dAdgrad_chi231121 + F12*F33*chi12*dAdgrad_chi232121 + F12*F33*chi13*dAdgrad_chi233121 + F13*F31*chi11*dAdgrad_chi311121 + F13*F31*chi12*dAdgrad_chi312121 + F13*F31*chi13*dAdgrad_chi313121 + F13*F32*chi11*dAdgrad_chi321121 + F13*F32*chi12*dAdgrad_chi322121 + F13*F32*chi13*dAdgrad_chi323121 + F13*F33*chi11*dAdgrad_chi331121 + F13*F33*chi12*dAdgrad_chi332121 + F13*F33*chi13*dAdgrad_chi333121 + _131121;
        dadgrad_chi(7,9) = F11*F31*chi11*dAdgrad_chi111211 + F11*F31*chi12*dAdgrad_chi112211 + F11*F31*chi13*dAdgrad_chi113211 + F11*F32*chi11*dAdgrad_chi121211 + F11*F32*chi12*dAdgrad_chi122211 + F11*F32*chi13*dAdgrad_chi123211 + F11*F33*chi11*dAdgrad_chi131211 + F11*F33*chi12*dAdgrad_chi132211 + F11*F33*chi13*dAdgrad_chi133211 + F12*F31*chi11*dAdgrad_chi211211 + F12*F31*chi12*dAdgrad_chi212211 + F12*F31*chi13*dAdgrad_chi213211 + F12*F32*chi11*dAdgrad_chi221211 + F12*F32*chi12*dAdgrad_chi222211 + F12*F32*chi13*dAdgrad_chi223211 + F12*F33*chi11*dAdgrad_chi231211 + F12*F33*chi12*dAdgrad_chi232211 + F12*F33*chi13*dAdgrad_chi233211 + F13*F31*chi11*dAdgrad_chi311211 + F13*F31*chi12*dAdgrad_chi312211 + F13*F31*chi13*dAdgrad_chi313211 + F13*F32*chi11*dAdgrad_chi321211 + F13*F32*chi12*dAdgrad_chi322211 + F13*F32*chi13*dAdgrad_chi323211 + F13*F33*chi11*dAdgrad_chi331211 + F13*F33*chi12*dAdgrad_chi332211 + F13*F33*chi13*dAdgrad_chi333211 + _131211;
        dadgrad_chi(7,10) = F11*F31*chi11*dAdgrad_chi111222 + F11*F31*chi12*dAdgrad_chi112222 + F11*F31*chi13*dAdgrad_chi113222 + F11*F32*chi11*dAdgrad_chi121222 + F11*F32*chi12*dAdgrad_chi122222 + F11*F32*chi13*dAdgrad_chi123222 + F11*F33*chi11*dAdgrad_chi131222 + F11*F33*chi12*dAdgrad_chi132222 + F11*F33*chi13*dAdgrad_chi133222 + F12*F31*chi11*dAdgrad_chi211222 + F12*F31*chi12*dAdgrad_chi212222 + F12*F31*chi13*dAdgrad_chi213222 + F12*F32*chi11*dAdgrad_chi221222 + F12*F32*chi12*dAdgrad_chi222222 + F12*F32*chi13*dAdgrad_chi223222 + F12*F33*chi11*dAdgrad_chi231222 + F12*F33*chi12*dAdgrad_chi232222 + F12*F33*chi13*dAdgrad_chi233222 + F13*F31*chi11*dAdgrad_chi311222 + F13*F31*chi12*dAdgrad_chi312222 + F13*F31*chi13*dAdgrad_chi313222 + F13*F32*chi11*dAdgrad_chi321222 + F13*F32*chi12*dAdgrad_chi322222 + F13*F32*chi13*dAdgrad_chi323222 + F13*F33*chi11*dAdgrad_chi331222 + F13*F33*chi12*dAdgrad_chi332222 + F13*F33*chi13*dAdgrad_chi333222 + _131222;
        dadgrad_chi(7,11) = F11*F31*chi11*dAdgrad_chi111233 + F11*F31*chi12*dAdgrad_chi112233 + F11*F31*chi13*dAdgrad_chi113233 + F11*F32*chi11*dAdgrad_chi121233 + F11*F32*chi12*dAdgrad_chi122233 + F11*F32*chi13*dAdgrad_chi123233 + F11*F33*chi11*dAdgrad_chi131233 + F11*F33*chi12*dAdgrad_chi132233 + F11*F33*chi13*dAdgrad_chi133233 + F12*F31*chi11*dAdgrad_chi211233 + F12*F31*chi12*dAdgrad_chi212233 + F12*F31*chi13*dAdgrad_chi213233 + F12*F32*chi11*dAdgrad_chi221233 + F12*F32*chi12*dAdgrad_chi222233 + F12*F32*chi13*dAdgrad_chi223233 + F12*F33*chi11*dAdgrad_chi231233 + F12*F33*chi12*dAdgrad_chi232233 + F12*F33*chi13*dAdgrad_chi233233 + F13*F31*chi11*dAdgrad_chi311233 + F13*F31*chi12*dAdgrad_chi312233 + F13*F31*chi13*dAdgrad_chi313233 + F13*F32*chi11*dAdgrad_chi321233 + F13*F32*chi12*dAdgrad_chi322233 + F13*F32*chi13*dAdgrad_chi323233 + F13*F33*chi11*dAdgrad_chi331233 + F13*F33*chi12*dAdgrad_chi332233 + F13*F33*chi13*dAdgrad_chi333233 + _131233;
        dadgrad_chi(7,12) = F11*F31*chi11*dAdgrad_chi111223 + F11*F31*chi12*dAdgrad_chi112223 + F11*F31*chi13*dAdgrad_chi113223 + F11*F32*chi11*dAdgrad_chi121223 + F11*F32*chi12*dAdgrad_chi122223 + F11*F32*chi13*dAdgrad_chi123223 + F11*F33*chi11*dAdgrad_chi131223 + F11*F33*chi12*dAdgrad_chi132223 + F11*F33*chi13*dAdgrad_chi133223 + F12*F31*chi11*dAdgrad_chi211223 + F12*F31*chi12*dAdgrad_chi212223 + F12*F31*chi13*dAdgrad_chi213223 + F12*F32*chi11*dAdgrad_chi221223 + F12*F32*chi12*dAdgrad_chi222223 + F12*F32*chi13*dAdgrad_chi223223 + F12*F33*chi11*dAdgrad_chi231223 + F12*F33*chi12*dAdgrad_chi232223 + F12*F33*chi13*dAdgrad_chi233223 + F13*F31*chi11*dAdgrad_chi311223 + F13*F31*chi12*dAdgrad_chi312223 + F13*F31*chi13*dAdgrad_chi313223 + F13*F32*chi11*dAdgrad_chi321223 + F13*F32*chi12*dAdgrad_chi322223 + F13*F32*chi13*dAdgrad_chi323223 + F13*F33*chi11*dAdgrad_chi331223 + F13*F33*chi12*dAdgrad_chi332223 + F13*F33*chi13*dAdgrad_chi333223 + _131223;
        dadgrad_chi(7,13) = F11*F31*chi11*dAdgrad_chi111213 + F11*F31*chi12*dAdgrad_chi112213 + F11*F31*chi13*dAdgrad_chi113213 + F11*F32*chi11*dAdgrad_chi121213 + F11*F32*chi12*dAdgrad_chi122213 + F11*F32*chi13*dAdgrad_chi123213 + F11*F33*chi11*dAdgrad_chi131213 + F11*F33*chi12*dAdgrad_chi132213 + F11*F33*chi13*dAdgrad_chi133213 + F12*F31*chi11*dAdgrad_chi211213 + F12*F31*chi12*dAdgrad_chi212213 + F12*F31*chi13*dAdgrad_chi213213 + F12*F32*chi11*dAdgrad_chi221213 + F12*F32*chi12*dAdgrad_chi222213 + F12*F32*chi13*dAdgrad_chi223213 + F12*F33*chi11*dAdgrad_chi231213 + F12*F33*chi12*dAdgrad_chi232213 + F12*F33*chi13*dAdgrad_chi233213 + F13*F31*chi11*dAdgrad_chi311213 + F13*F31*chi12*dAdgrad_chi312213 + F13*F31*chi13*dAdgrad_chi313213 + F13*F32*chi11*dAdgrad_chi321213 + F13*F32*chi12*dAdgrad_chi322213 + F13*F32*chi13*dAdgrad_chi323213 + F13*F33*chi11*dAdgrad_chi331213 + F13*F33*chi12*dAdgrad_chi332213 + F13*F33*chi13*dAdgrad_chi333213 + _131213;
        dadgrad_chi(7,14) = F11*F31*chi11*dAdgrad_chi111212 + F11*F31*chi12*dAdgrad_chi112212 + F11*F31*chi13*dAdgrad_chi113212 + F11*F32*chi11*dAdgrad_chi121212 + F11*F32*chi12*dAdgrad_chi122212 + F11*F32*chi13*dAdgrad_chi123212 + F11*F33*chi11*dAdgrad_chi131212 + F11*F33*chi12*dAdgrad_chi132212 + F11*F33*chi13*dAdgrad_chi133212 + F12*F31*chi11*dAdgrad_chi211212 + F12*F31*chi12*dAdgrad_chi212212 + F12*F31*chi13*dAdgrad_chi213212 + F12*F32*chi11*dAdgrad_chi221212 + F12*F32*chi12*dAdgrad_chi222212 + F12*F32*chi13*dAdgrad_chi223212 + F12*F33*chi11*dAdgrad_chi231212 + F12*F33*chi12*dAdgrad_chi232212 + F12*F33*chi13*dAdgrad_chi233212 + F13*F31*chi11*dAdgrad_chi311212 + F13*F31*chi12*dAdgrad_chi312212 + F13*F31*chi13*dAdgrad_chi313212 + F13*F32*chi11*dAdgrad_chi321212 + F13*F32*chi12*dAdgrad_chi322212 + F13*F32*chi13*dAdgrad_chi323212 + F13*F33*chi11*dAdgrad_chi331212 + F13*F33*chi12*dAdgrad_chi332212 + F13*F33*chi13*dAdgrad_chi333212 + _131212;
        dadgrad_chi(7,15) = F11*F31*chi11*dAdgrad_chi111232 + F11*F31*chi12*dAdgrad_chi112232 + F11*F31*chi13*dAdgrad_chi113232 + F11*F32*chi11*dAdgrad_chi121232 + F11*F32*chi12*dAdgrad_chi122232 + F11*F32*chi13*dAdgrad_chi123232 + F11*F33*chi11*dAdgrad_chi131232 + F11*F33*chi12*dAdgrad_chi132232 + F11*F33*chi13*dAdgrad_chi133232 + F12*F31*chi11*dAdgrad_chi211232 + F12*F31*chi12*dAdgrad_chi212232 + F12*F31*chi13*dAdgrad_chi213232 + F12*F32*chi11*dAdgrad_chi221232 + F12*F32*chi12*dAdgrad_chi222232 + F12*F32*chi13*dAdgrad_chi223232 + F12*F33*chi11*dAdgrad_chi231232 + F12*F33*chi12*dAdgrad_chi232232 + F12*F33*chi13*dAdgrad_chi233232 + F13*F31*chi11*dAdgrad_chi311232 + F13*F31*chi12*dAdgrad_chi312232 + F13*F31*chi13*dAdgrad_chi313232 + F13*F32*chi11*dAdgrad_chi321232 + F13*F32*chi12*dAdgrad_chi322232 + F13*F32*chi13*dAdgrad_chi323232 + F13*F33*chi11*dAdgrad_chi331232 + F13*F33*chi12*dAdgrad_chi332232 + F13*F33*chi13*dAdgrad_chi333232 + _131232;
        dadgrad_chi(7,16) = F11*F31*chi11*dAdgrad_chi111231 + F11*F31*chi12*dAdgrad_chi112231 + F11*F31*chi13*dAdgrad_chi113231 + F11*F32*chi11*dAdgrad_chi121231 + F11*F32*chi12*dAdgrad_chi122231 + F11*F32*chi13*dAdgrad_chi123231 + F11*F33*chi11*dAdgrad_chi131231 + F11*F33*chi12*dAdgrad_chi132231 + F11*F33*chi13*dAdgrad_chi133231 + F12*F31*chi11*dAdgrad_chi211231 + F12*F31*chi12*dAdgrad_chi212231 + F12*F31*chi13*dAdgrad_chi213231 + F12*F32*chi11*dAdgrad_chi221231 + F12*F32*chi12*dAdgrad_chi222231 + F12*F32*chi13*dAdgrad_chi223231 + F12*F33*chi11*dAdgrad_chi231231 + F12*F33*chi12*dAdgrad_chi232231 + F12*F33*chi13*dAdgrad_chi233231 + F13*F31*chi11*dAdgrad_chi311231 + F13*F31*chi12*dAdgrad_chi312231 + F13*F31*chi13*dAdgrad_chi313231 + F13*F32*chi11*dAdgrad_chi321231 + F13*F32*chi12*dAdgrad_chi322231 + F13*F32*chi13*dAdgrad_chi323231 + F13*F33*chi11*dAdgrad_chi331231 + F13*F33*chi12*dAdgrad_chi332231 + F13*F33*chi13*dAdgrad_chi333231 + _131231;
        dadgrad_chi(7,17) = F11*F31*chi11*dAdgrad_chi111221 + F11*F31*chi12*dAdgrad_chi112221 + F11*F31*chi13*dAdgrad_chi113221 + F11*F32*chi11*dAdgrad_chi121221 + F11*F32*chi12*dAdgrad_chi122221 + F11*F32*chi13*dAdgrad_chi123221 + F11*F33*chi11*dAdgrad_chi131221 + F11*F33*chi12*dAdgrad_chi132221 + F11*F33*chi13*dAdgrad_chi133221 + F12*F31*chi11*dAdgrad_chi211221 + F12*F31*chi12*dAdgrad_chi212221 + F12*F31*chi13*dAdgrad_chi213221 + F12*F32*chi11*dAdgrad_chi221221 + F12*F32*chi12*dAdgrad_chi222221 + F12*F32*chi13*dAdgrad_chi223221 + F12*F33*chi11*dAdgrad_chi231221 + F12*F33*chi12*dAdgrad_chi232221 + F12*F33*chi13*dAdgrad_chi233221 + F13*F31*chi11*dAdgrad_chi311221 + F13*F31*chi12*dAdgrad_chi312221 + F13*F31*chi13*dAdgrad_chi313221 + F13*F32*chi11*dAdgrad_chi321221 + F13*F32*chi12*dAdgrad_chi322221 + F13*F32*chi13*dAdgrad_chi323221 + F13*F33*chi11*dAdgrad_chi331221 + F13*F33*chi12*dAdgrad_chi332221 + F13*F33*chi13*dAdgrad_chi333221 + _131221;
        dadgrad_chi(7,18) = F11*F31*chi11*dAdgrad_chi111311 + F11*F31*chi12*dAdgrad_chi112311 + F11*F31*chi13*dAdgrad_chi113311 + F11*F32*chi11*dAdgrad_chi121311 + F11*F32*chi12*dAdgrad_chi122311 + F11*F32*chi13*dAdgrad_chi123311 + F11*F33*chi11*dAdgrad_chi131311 + F11*F33*chi12*dAdgrad_chi132311 + F11*F33*chi13*dAdgrad_chi133311 + F12*F31*chi11*dAdgrad_chi211311 + F12*F31*chi12*dAdgrad_chi212311 + F12*F31*chi13*dAdgrad_chi213311 + F12*F32*chi11*dAdgrad_chi221311 + F12*F32*chi12*dAdgrad_chi222311 + F12*F32*chi13*dAdgrad_chi223311 + F12*F33*chi11*dAdgrad_chi231311 + F12*F33*chi12*dAdgrad_chi232311 + F12*F33*chi13*dAdgrad_chi233311 + F13*F31*chi11*dAdgrad_chi311311 + F13*F31*chi12*dAdgrad_chi312311 + F13*F31*chi13*dAdgrad_chi313311 + F13*F32*chi11*dAdgrad_chi321311 + F13*F32*chi12*dAdgrad_chi322311 + F13*F32*chi13*dAdgrad_chi323311 + F13*F33*chi11*dAdgrad_chi331311 + F13*F33*chi12*dAdgrad_chi332311 + F13*F33*chi13*dAdgrad_chi333311 + _131311;
        dadgrad_chi(7,19) = F11*F31*chi11*dAdgrad_chi111322 + F11*F31*chi12*dAdgrad_chi112322 + F11*F31*chi13*dAdgrad_chi113322 + F11*F32*chi11*dAdgrad_chi121322 + F11*F32*chi12*dAdgrad_chi122322 + F11*F32*chi13*dAdgrad_chi123322 + F11*F33*chi11*dAdgrad_chi131322 + F11*F33*chi12*dAdgrad_chi132322 + F11*F33*chi13*dAdgrad_chi133322 + F12*F31*chi11*dAdgrad_chi211322 + F12*F31*chi12*dAdgrad_chi212322 + F12*F31*chi13*dAdgrad_chi213322 + F12*F32*chi11*dAdgrad_chi221322 + F12*F32*chi12*dAdgrad_chi222322 + F12*F32*chi13*dAdgrad_chi223322 + F12*F33*chi11*dAdgrad_chi231322 + F12*F33*chi12*dAdgrad_chi232322 + F12*F33*chi13*dAdgrad_chi233322 + F13*F31*chi11*dAdgrad_chi311322 + F13*F31*chi12*dAdgrad_chi312322 + F13*F31*chi13*dAdgrad_chi313322 + F13*F32*chi11*dAdgrad_chi321322 + F13*F32*chi12*dAdgrad_chi322322 + F13*F32*chi13*dAdgrad_chi323322 + F13*F33*chi11*dAdgrad_chi331322 + F13*F33*chi12*dAdgrad_chi332322 + F13*F33*chi13*dAdgrad_chi333322 + _131322;
        dadgrad_chi(7,20) = F11*F31*chi11*dAdgrad_chi111333 + F11*F31*chi12*dAdgrad_chi112333 + F11*F31*chi13*dAdgrad_chi113333 + F11*F32*chi11*dAdgrad_chi121333 + F11*F32*chi12*dAdgrad_chi122333 + F11*F32*chi13*dAdgrad_chi123333 + F11*F33*chi11*dAdgrad_chi131333 + F11*F33*chi12*dAdgrad_chi132333 + F11*F33*chi13*dAdgrad_chi133333 + F12*F31*chi11*dAdgrad_chi211333 + F12*F31*chi12*dAdgrad_chi212333 + F12*F31*chi13*dAdgrad_chi213333 + F12*F32*chi11*dAdgrad_chi221333 + F12*F32*chi12*dAdgrad_chi222333 + F12*F32*chi13*dAdgrad_chi223333 + F12*F33*chi11*dAdgrad_chi231333 + F12*F33*chi12*dAdgrad_chi232333 + F12*F33*chi13*dAdgrad_chi233333 + F13*F31*chi11*dAdgrad_chi311333 + F13*F31*chi12*dAdgrad_chi312333 + F13*F31*chi13*dAdgrad_chi313333 + F13*F32*chi11*dAdgrad_chi321333 + F13*F32*chi12*dAdgrad_chi322333 + F13*F32*chi13*dAdgrad_chi323333 + F13*F33*chi11*dAdgrad_chi331333 + F13*F33*chi12*dAdgrad_chi332333 + F13*F33*chi13*dAdgrad_chi333333 + _131333;
        dadgrad_chi(7,21) = F11*F31*chi11*dAdgrad_chi111323 + F11*F31*chi12*dAdgrad_chi112323 + F11*F31*chi13*dAdgrad_chi113323 + F11*F32*chi11*dAdgrad_chi121323 + F11*F32*chi12*dAdgrad_chi122323 + F11*F32*chi13*dAdgrad_chi123323 + F11*F33*chi11*dAdgrad_chi131323 + F11*F33*chi12*dAdgrad_chi132323 + F11*F33*chi13*dAdgrad_chi133323 + F12*F31*chi11*dAdgrad_chi211323 + F12*F31*chi12*dAdgrad_chi212323 + F12*F31*chi13*dAdgrad_chi213323 + F12*F32*chi11*dAdgrad_chi221323 + F12*F32*chi12*dAdgrad_chi222323 + F12*F32*chi13*dAdgrad_chi223323 + F12*F33*chi11*dAdgrad_chi231323 + F12*F33*chi12*dAdgrad_chi232323 + F12*F33*chi13*dAdgrad_chi233323 + F13*F31*chi11*dAdgrad_chi311323 + F13*F31*chi12*dAdgrad_chi312323 + F13*F31*chi13*dAdgrad_chi313323 + F13*F32*chi11*dAdgrad_chi321323 + F13*F32*chi12*dAdgrad_chi322323 + F13*F32*chi13*dAdgrad_chi323323 + F13*F33*chi11*dAdgrad_chi331323 + F13*F33*chi12*dAdgrad_chi332323 + F13*F33*chi13*dAdgrad_chi333323 + _131323;
        dadgrad_chi(7,22) = F11*F31*chi11*dAdgrad_chi111313 + F11*F31*chi12*dAdgrad_chi112313 + F11*F31*chi13*dAdgrad_chi113313 + F11*F32*chi11*dAdgrad_chi121313 + F11*F32*chi12*dAdgrad_chi122313 + F11*F32*chi13*dAdgrad_chi123313 + F11*F33*chi11*dAdgrad_chi131313 + F11*F33*chi12*dAdgrad_chi132313 + F11*F33*chi13*dAdgrad_chi133313 + F12*F31*chi11*dAdgrad_chi211313 + F12*F31*chi12*dAdgrad_chi212313 + F12*F31*chi13*dAdgrad_chi213313 + F12*F32*chi11*dAdgrad_chi221313 + F12*F32*chi12*dAdgrad_chi222313 + F12*F32*chi13*dAdgrad_chi223313 + F12*F33*chi11*dAdgrad_chi231313 + F12*F33*chi12*dAdgrad_chi232313 + F12*F33*chi13*dAdgrad_chi233313 + F13*F31*chi11*dAdgrad_chi311313 + F13*F31*chi12*dAdgrad_chi312313 + F13*F31*chi13*dAdgrad_chi313313 + F13*F32*chi11*dAdgrad_chi321313 + F13*F32*chi12*dAdgrad_chi322313 + F13*F32*chi13*dAdgrad_chi323313 + F13*F33*chi11*dAdgrad_chi331313 + F13*F33*chi12*dAdgrad_chi332313 + F13*F33*chi13*dAdgrad_chi333313 + _131313;
        dadgrad_chi(7,23) = F11*F31*chi11*dAdgrad_chi111312 + F11*F31*chi12*dAdgrad_chi112312 + F11*F31*chi13*dAdgrad_chi113312 + F11*F32*chi11*dAdgrad_chi121312 + F11*F32*chi12*dAdgrad_chi122312 + F11*F32*chi13*dAdgrad_chi123312 + F11*F33*chi11*dAdgrad_chi131312 + F11*F33*chi12*dAdgrad_chi132312 + F11*F33*chi13*dAdgrad_chi133312 + F12*F31*chi11*dAdgrad_chi211312 + F12*F31*chi12*dAdgrad_chi212312 + F12*F31*chi13*dAdgrad_chi213312 + F12*F32*chi11*dAdgrad_chi221312 + F12*F32*chi12*dAdgrad_chi222312 + F12*F32*chi13*dAdgrad_chi223312 + F12*F33*chi11*dAdgrad_chi231312 + F12*F33*chi12*dAdgrad_chi232312 + F12*F33*chi13*dAdgrad_chi233312 + F13*F31*chi11*dAdgrad_chi311312 + F13*F31*chi12*dAdgrad_chi312312 + F13*F31*chi13*dAdgrad_chi313312 + F13*F32*chi11*dAdgrad_chi321312 + F13*F32*chi12*dAdgrad_chi322312 + F13*F32*chi13*dAdgrad_chi323312 + F13*F33*chi11*dAdgrad_chi331312 + F13*F33*chi12*dAdgrad_chi332312 + F13*F33*chi13*dAdgrad_chi333312 + _131312;
        dadgrad_chi(7,24) = F11*F31*chi11*dAdgrad_chi111332 + F11*F31*chi12*dAdgrad_chi112332 + F11*F31*chi13*dAdgrad_chi113332 + F11*F32*chi11*dAdgrad_chi121332 + F11*F32*chi12*dAdgrad_chi122332 + F11*F32*chi13*dAdgrad_chi123332 + F11*F33*chi11*dAdgrad_chi131332 + F11*F33*chi12*dAdgrad_chi132332 + F11*F33*chi13*dAdgrad_chi133332 + F12*F31*chi11*dAdgrad_chi211332 + F12*F31*chi12*dAdgrad_chi212332 + F12*F31*chi13*dAdgrad_chi213332 + F12*F32*chi11*dAdgrad_chi221332 + F12*F32*chi12*dAdgrad_chi222332 + F12*F32*chi13*dAdgrad_chi223332 + F12*F33*chi11*dAdgrad_chi231332 + F12*F33*chi12*dAdgrad_chi232332 + F12*F33*chi13*dAdgrad_chi233332 + F13*F31*chi11*dAdgrad_chi311332 + F13*F31*chi12*dAdgrad_chi312332 + F13*F31*chi13*dAdgrad_chi313332 + F13*F32*chi11*dAdgrad_chi321332 + F13*F32*chi12*dAdgrad_chi322332 + F13*F32*chi13*dAdgrad_chi323332 + F13*F33*chi11*dAdgrad_chi331332 + F13*F33*chi12*dAdgrad_chi332332 + F13*F33*chi13*dAdgrad_chi333332 + _131332;
        dadgrad_chi(7,25) = F11*F31*chi11*dAdgrad_chi111331 + F11*F31*chi12*dAdgrad_chi112331 + F11*F31*chi13*dAdgrad_chi113331 + F11*F32*chi11*dAdgrad_chi121331 + F11*F32*chi12*dAdgrad_chi122331 + F11*F32*chi13*dAdgrad_chi123331 + F11*F33*chi11*dAdgrad_chi131331 + F11*F33*chi12*dAdgrad_chi132331 + F11*F33*chi13*dAdgrad_chi133331 + F12*F31*chi11*dAdgrad_chi211331 + F12*F31*chi12*dAdgrad_chi212331 + F12*F31*chi13*dAdgrad_chi213331 + F12*F32*chi11*dAdgrad_chi221331 + F12*F32*chi12*dAdgrad_chi222331 + F12*F32*chi13*dAdgrad_chi223331 + F12*F33*chi11*dAdgrad_chi231331 + F12*F33*chi12*dAdgrad_chi232331 + F12*F33*chi13*dAdgrad_chi233331 + F13*F31*chi11*dAdgrad_chi311331 + F13*F31*chi12*dAdgrad_chi312331 + F13*F31*chi13*dAdgrad_chi313331 + F13*F32*chi11*dAdgrad_chi321331 + F13*F32*chi12*dAdgrad_chi322331 + F13*F32*chi13*dAdgrad_chi323331 + F13*F33*chi11*dAdgrad_chi331331 + F13*F33*chi12*dAdgrad_chi332331 + F13*F33*chi13*dAdgrad_chi333331 + _131331;
        dadgrad_chi(7,26) = F11*F31*chi11*dAdgrad_chi111321 + F11*F31*chi12*dAdgrad_chi112321 + F11*F31*chi13*dAdgrad_chi113321 + F11*F32*chi11*dAdgrad_chi121321 + F11*F32*chi12*dAdgrad_chi122321 + F11*F32*chi13*dAdgrad_chi123321 + F11*F33*chi11*dAdgrad_chi131321 + F11*F33*chi12*dAdgrad_chi132321 + F11*F33*chi13*dAdgrad_chi133321 + F12*F31*chi11*dAdgrad_chi211321 + F12*F31*chi12*dAdgrad_chi212321 + F12*F31*chi13*dAdgrad_chi213321 + F12*F32*chi11*dAdgrad_chi221321 + F12*F32*chi12*dAdgrad_chi222321 + F12*F32*chi13*dAdgrad_chi223321 + F12*F33*chi11*dAdgrad_chi231321 + F12*F33*chi12*dAdgrad_chi232321 + F12*F33*chi13*dAdgrad_chi233321 + F13*F31*chi11*dAdgrad_chi311321 + F13*F31*chi12*dAdgrad_chi312321 + F13*F31*chi13*dAdgrad_chi313321 + F13*F32*chi11*dAdgrad_chi321321 + F13*F32*chi12*dAdgrad_chi322321 + F13*F32*chi13*dAdgrad_chi323321 + F13*F33*chi11*dAdgrad_chi331321 + F13*F33*chi12*dAdgrad_chi332321 + F13*F33*chi13*dAdgrad_chi333321 + _131321;
        dadgrad_chi(8,0) = F11*F21*chi11*dAdgrad_chi111111 + F11*F21*chi12*dAdgrad_chi112111 + F11*F21*chi13*dAdgrad_chi113111 + F11*F22*chi11*dAdgrad_chi121111 + F11*F22*chi12*dAdgrad_chi122111 + F11*F22*chi13*dAdgrad_chi123111 + F11*F23*chi11*dAdgrad_chi131111 + F11*F23*chi12*dAdgrad_chi132111 + F11*F23*chi13*dAdgrad_chi133111 + F12*F21*chi11*dAdgrad_chi211111 + F12*F21*chi12*dAdgrad_chi212111 + F12*F21*chi13*dAdgrad_chi213111 + F12*F22*chi11*dAdgrad_chi221111 + F12*F22*chi12*dAdgrad_chi222111 + F12*F22*chi13*dAdgrad_chi223111 + F12*F23*chi11*dAdgrad_chi231111 + F12*F23*chi12*dAdgrad_chi232111 + F12*F23*chi13*dAdgrad_chi233111 + F13*F21*chi11*dAdgrad_chi311111 + F13*F21*chi12*dAdgrad_chi312111 + F13*F21*chi13*dAdgrad_chi313111 + F13*F22*chi11*dAdgrad_chi321111 + F13*F22*chi12*dAdgrad_chi322111 + F13*F22*chi13*dAdgrad_chi323111 + F13*F23*chi11*dAdgrad_chi331111 + F13*F23*chi12*dAdgrad_chi332111 + F13*F23*chi13*dAdgrad_chi333111 + _121111;
        dadgrad_chi(8,1) = F11*F21*chi11*dAdgrad_chi111122 + F11*F21*chi12*dAdgrad_chi112122 + F11*F21*chi13*dAdgrad_chi113122 + F11*F22*chi11*dAdgrad_chi121122 + F11*F22*chi12*dAdgrad_chi122122 + F11*F22*chi13*dAdgrad_chi123122 + F11*F23*chi11*dAdgrad_chi131122 + F11*F23*chi12*dAdgrad_chi132122 + F11*F23*chi13*dAdgrad_chi133122 + F12*F21*chi11*dAdgrad_chi211122 + F12*F21*chi12*dAdgrad_chi212122 + F12*F21*chi13*dAdgrad_chi213122 + F12*F22*chi11*dAdgrad_chi221122 + F12*F22*chi12*dAdgrad_chi222122 + F12*F22*chi13*dAdgrad_chi223122 + F12*F23*chi11*dAdgrad_chi231122 + F12*F23*chi12*dAdgrad_chi232122 + F12*F23*chi13*dAdgrad_chi233122 + F13*F21*chi11*dAdgrad_chi311122 + F13*F21*chi12*dAdgrad_chi312122 + F13*F21*chi13*dAdgrad_chi313122 + F13*F22*chi11*dAdgrad_chi321122 + F13*F22*chi12*dAdgrad_chi322122 + F13*F22*chi13*dAdgrad_chi323122 + F13*F23*chi11*dAdgrad_chi331122 + F13*F23*chi12*dAdgrad_chi332122 + F13*F23*chi13*dAdgrad_chi333122 + _121122;
        dadgrad_chi(8,2) = F11*F21*chi11*dAdgrad_chi111133 + F11*F21*chi12*dAdgrad_chi112133 + F11*F21*chi13*dAdgrad_chi113133 + F11*F22*chi11*dAdgrad_chi121133 + F11*F22*chi12*dAdgrad_chi122133 + F11*F22*chi13*dAdgrad_chi123133 + F11*F23*chi11*dAdgrad_chi131133 + F11*F23*chi12*dAdgrad_chi132133 + F11*F23*chi13*dAdgrad_chi133133 + F12*F21*chi11*dAdgrad_chi211133 + F12*F21*chi12*dAdgrad_chi212133 + F12*F21*chi13*dAdgrad_chi213133 + F12*F22*chi11*dAdgrad_chi221133 + F12*F22*chi12*dAdgrad_chi222133 + F12*F22*chi13*dAdgrad_chi223133 + F12*F23*chi11*dAdgrad_chi231133 + F12*F23*chi12*dAdgrad_chi232133 + F12*F23*chi13*dAdgrad_chi233133 + F13*F21*chi11*dAdgrad_chi311133 + F13*F21*chi12*dAdgrad_chi312133 + F13*F21*chi13*dAdgrad_chi313133 + F13*F22*chi11*dAdgrad_chi321133 + F13*F22*chi12*dAdgrad_chi322133 + F13*F22*chi13*dAdgrad_chi323133 + F13*F23*chi11*dAdgrad_chi331133 + F13*F23*chi12*dAdgrad_chi332133 + F13*F23*chi13*dAdgrad_chi333133 + _121133;
        dadgrad_chi(8,3) = F11*F21*chi11*dAdgrad_chi111123 + F11*F21*chi12*dAdgrad_chi112123 + F11*F21*chi13*dAdgrad_chi113123 + F11*F22*chi11*dAdgrad_chi121123 + F11*F22*chi12*dAdgrad_chi122123 + F11*F22*chi13*dAdgrad_chi123123 + F11*F23*chi11*dAdgrad_chi131123 + F11*F23*chi12*dAdgrad_chi132123 + F11*F23*chi13*dAdgrad_chi133123 + F12*F21*chi11*dAdgrad_chi211123 + F12*F21*chi12*dAdgrad_chi212123 + F12*F21*chi13*dAdgrad_chi213123 + F12*F22*chi11*dAdgrad_chi221123 + F12*F22*chi12*dAdgrad_chi222123 + F12*F22*chi13*dAdgrad_chi223123 + F12*F23*chi11*dAdgrad_chi231123 + F12*F23*chi12*dAdgrad_chi232123 + F12*F23*chi13*dAdgrad_chi233123 + F13*F21*chi11*dAdgrad_chi311123 + F13*F21*chi12*dAdgrad_chi312123 + F13*F21*chi13*dAdgrad_chi313123 + F13*F22*chi11*dAdgrad_chi321123 + F13*F22*chi12*dAdgrad_chi322123 + F13*F22*chi13*dAdgrad_chi323123 + F13*F23*chi11*dAdgrad_chi331123 + F13*F23*chi12*dAdgrad_chi332123 + F13*F23*chi13*dAdgrad_chi333123 + _121123;
        dadgrad_chi(8,4) = F11*F21*chi11*dAdgrad_chi111113 + F11*F21*chi12*dAdgrad_chi112113 + F11*F21*chi13*dAdgrad_chi113113 + F11*F22*chi11*dAdgrad_chi121113 + F11*F22*chi12*dAdgrad_chi122113 + F11*F22*chi13*dAdgrad_chi123113 + F11*F23*chi11*dAdgrad_chi131113 + F11*F23*chi12*dAdgrad_chi132113 + F11*F23*chi13*dAdgrad_chi133113 + F12*F21*chi11*dAdgrad_chi211113 + F12*F21*chi12*dAdgrad_chi212113 + F12*F21*chi13*dAdgrad_chi213113 + F12*F22*chi11*dAdgrad_chi221113 + F12*F22*chi12*dAdgrad_chi222113 + F12*F22*chi13*dAdgrad_chi223113 + F12*F23*chi11*dAdgrad_chi231113 + F12*F23*chi12*dAdgrad_chi232113 + F12*F23*chi13*dAdgrad_chi233113 + F13*F21*chi11*dAdgrad_chi311113 + F13*F21*chi12*dAdgrad_chi312113 + F13*F21*chi13*dAdgrad_chi313113 + F13*F22*chi11*dAdgrad_chi321113 + F13*F22*chi12*dAdgrad_chi322113 + F13*F22*chi13*dAdgrad_chi323113 + F13*F23*chi11*dAdgrad_chi331113 + F13*F23*chi12*dAdgrad_chi332113 + F13*F23*chi13*dAdgrad_chi333113 + _121113;
        dadgrad_chi(8,5) = F11*F21*chi11*dAdgrad_chi111112 + F11*F21*chi12*dAdgrad_chi112112 + F11*F21*chi13*dAdgrad_chi113112 + F11*F22*chi11*dAdgrad_chi121112 + F11*F22*chi12*dAdgrad_chi122112 + F11*F22*chi13*dAdgrad_chi123112 + F11*F23*chi11*dAdgrad_chi131112 + F11*F23*chi12*dAdgrad_chi132112 + F11*F23*chi13*dAdgrad_chi133112 + F12*F21*chi11*dAdgrad_chi211112 + F12*F21*chi12*dAdgrad_chi212112 + F12*F21*chi13*dAdgrad_chi213112 + F12*F22*chi11*dAdgrad_chi221112 + F12*F22*chi12*dAdgrad_chi222112 + F12*F22*chi13*dAdgrad_chi223112 + F12*F23*chi11*dAdgrad_chi231112 + F12*F23*chi12*dAdgrad_chi232112 + F12*F23*chi13*dAdgrad_chi233112 + F13*F21*chi11*dAdgrad_chi311112 + F13*F21*chi12*dAdgrad_chi312112 + F13*F21*chi13*dAdgrad_chi313112 + F13*F22*chi11*dAdgrad_chi321112 + F13*F22*chi12*dAdgrad_chi322112 + F13*F22*chi13*dAdgrad_chi323112 + F13*F23*chi11*dAdgrad_chi331112 + F13*F23*chi12*dAdgrad_chi332112 + F13*F23*chi13*dAdgrad_chi333112 + _121112;
        dadgrad_chi(8,6) = F11*F21*chi11*dAdgrad_chi111132 + F11*F21*chi12*dAdgrad_chi112132 + F11*F21*chi13*dAdgrad_chi113132 + F11*F22*chi11*dAdgrad_chi121132 + F11*F22*chi12*dAdgrad_chi122132 + F11*F22*chi13*dAdgrad_chi123132 + F11*F23*chi11*dAdgrad_chi131132 + F11*F23*chi12*dAdgrad_chi132132 + F11*F23*chi13*dAdgrad_chi133132 + F12*F21*chi11*dAdgrad_chi211132 + F12*F21*chi12*dAdgrad_chi212132 + F12*F21*chi13*dAdgrad_chi213132 + F12*F22*chi11*dAdgrad_chi221132 + F12*F22*chi12*dAdgrad_chi222132 + F12*F22*chi13*dAdgrad_chi223132 + F12*F23*chi11*dAdgrad_chi231132 + F12*F23*chi12*dAdgrad_chi232132 + F12*F23*chi13*dAdgrad_chi233132 + F13*F21*chi11*dAdgrad_chi311132 + F13*F21*chi12*dAdgrad_chi312132 + F13*F21*chi13*dAdgrad_chi313132 + F13*F22*chi11*dAdgrad_chi321132 + F13*F22*chi12*dAdgrad_chi322132 + F13*F22*chi13*dAdgrad_chi323132 + F13*F23*chi11*dAdgrad_chi331132 + F13*F23*chi12*dAdgrad_chi332132 + F13*F23*chi13*dAdgrad_chi333132 + _121132;
        dadgrad_chi(8,7) = F11*F21*chi11*dAdgrad_chi111131 + F11*F21*chi12*dAdgrad_chi112131 + F11*F21*chi13*dAdgrad_chi113131 + F11*F22*chi11*dAdgrad_chi121131 + F11*F22*chi12*dAdgrad_chi122131 + F11*F22*chi13*dAdgrad_chi123131 + F11*F23*chi11*dAdgrad_chi131131 + F11*F23*chi12*dAdgrad_chi132131 + F11*F23*chi13*dAdgrad_chi133131 + F12*F21*chi11*dAdgrad_chi211131 + F12*F21*chi12*dAdgrad_chi212131 + F12*F21*chi13*dAdgrad_chi213131 + F12*F22*chi11*dAdgrad_chi221131 + F12*F22*chi12*dAdgrad_chi222131 + F12*F22*chi13*dAdgrad_chi223131 + F12*F23*chi11*dAdgrad_chi231131 + F12*F23*chi12*dAdgrad_chi232131 + F12*F23*chi13*dAdgrad_chi233131 + F13*F21*chi11*dAdgrad_chi311131 + F13*F21*chi12*dAdgrad_chi312131 + F13*F21*chi13*dAdgrad_chi313131 + F13*F22*chi11*dAdgrad_chi321131 + F13*F22*chi12*dAdgrad_chi322131 + F13*F22*chi13*dAdgrad_chi323131 + F13*F23*chi11*dAdgrad_chi331131 + F13*F23*chi12*dAdgrad_chi332131 + F13*F23*chi13*dAdgrad_chi333131 + _121131;
        dadgrad_chi(8,8) = F11*F21*chi11*dAdgrad_chi111121 + F11*F21*chi12*dAdgrad_chi112121 + F11*F21*chi13*dAdgrad_chi113121 + F11*F22*chi11*dAdgrad_chi121121 + F11*F22*chi12*dAdgrad_chi122121 + F11*F22*chi13*dAdgrad_chi123121 + F11*F23*chi11*dAdgrad_chi131121 + F11*F23*chi12*dAdgrad_chi132121 + F11*F23*chi13*dAdgrad_chi133121 + F12*F21*chi11*dAdgrad_chi211121 + F12*F21*chi12*dAdgrad_chi212121 + F12*F21*chi13*dAdgrad_chi213121 + F12*F22*chi11*dAdgrad_chi221121 + F12*F22*chi12*dAdgrad_chi222121 + F12*F22*chi13*dAdgrad_chi223121 + F12*F23*chi11*dAdgrad_chi231121 + F12*F23*chi12*dAdgrad_chi232121 + F12*F23*chi13*dAdgrad_chi233121 + F13*F21*chi11*dAdgrad_chi311121 + F13*F21*chi12*dAdgrad_chi312121 + F13*F21*chi13*dAdgrad_chi313121 + F13*F22*chi11*dAdgrad_chi321121 + F13*F22*chi12*dAdgrad_chi322121 + F13*F22*chi13*dAdgrad_chi323121 + F13*F23*chi11*dAdgrad_chi331121 + F13*F23*chi12*dAdgrad_chi332121 + F13*F23*chi13*dAdgrad_chi333121 + _121121;
        dadgrad_chi(8,9) = F11*F21*chi11*dAdgrad_chi111211 + F11*F21*chi12*dAdgrad_chi112211 + F11*F21*chi13*dAdgrad_chi113211 + F11*F22*chi11*dAdgrad_chi121211 + F11*F22*chi12*dAdgrad_chi122211 + F11*F22*chi13*dAdgrad_chi123211 + F11*F23*chi11*dAdgrad_chi131211 + F11*F23*chi12*dAdgrad_chi132211 + F11*F23*chi13*dAdgrad_chi133211 + F12*F21*chi11*dAdgrad_chi211211 + F12*F21*chi12*dAdgrad_chi212211 + F12*F21*chi13*dAdgrad_chi213211 + F12*F22*chi11*dAdgrad_chi221211 + F12*F22*chi12*dAdgrad_chi222211 + F12*F22*chi13*dAdgrad_chi223211 + F12*F23*chi11*dAdgrad_chi231211 + F12*F23*chi12*dAdgrad_chi232211 + F12*F23*chi13*dAdgrad_chi233211 + F13*F21*chi11*dAdgrad_chi311211 + F13*F21*chi12*dAdgrad_chi312211 + F13*F21*chi13*dAdgrad_chi313211 + F13*F22*chi11*dAdgrad_chi321211 + F13*F22*chi12*dAdgrad_chi322211 + F13*F22*chi13*dAdgrad_chi323211 + F13*F23*chi11*dAdgrad_chi331211 + F13*F23*chi12*dAdgrad_chi332211 + F13*F23*chi13*dAdgrad_chi333211 + _121211;
        dadgrad_chi(8,10) = F11*F21*chi11*dAdgrad_chi111222 + F11*F21*chi12*dAdgrad_chi112222 + F11*F21*chi13*dAdgrad_chi113222 + F11*F22*chi11*dAdgrad_chi121222 + F11*F22*chi12*dAdgrad_chi122222 + F11*F22*chi13*dAdgrad_chi123222 + F11*F23*chi11*dAdgrad_chi131222 + F11*F23*chi12*dAdgrad_chi132222 + F11*F23*chi13*dAdgrad_chi133222 + F12*F21*chi11*dAdgrad_chi211222 + F12*F21*chi12*dAdgrad_chi212222 + F12*F21*chi13*dAdgrad_chi213222 + F12*F22*chi11*dAdgrad_chi221222 + F12*F22*chi12*dAdgrad_chi222222 + F12*F22*chi13*dAdgrad_chi223222 + F12*F23*chi11*dAdgrad_chi231222 + F12*F23*chi12*dAdgrad_chi232222 + F12*F23*chi13*dAdgrad_chi233222 + F13*F21*chi11*dAdgrad_chi311222 + F13*F21*chi12*dAdgrad_chi312222 + F13*F21*chi13*dAdgrad_chi313222 + F13*F22*chi11*dAdgrad_chi321222 + F13*F22*chi12*dAdgrad_chi322222 + F13*F22*chi13*dAdgrad_chi323222 + F13*F23*chi11*dAdgrad_chi331222 + F13*F23*chi12*dAdgrad_chi332222 + F13*F23*chi13*dAdgrad_chi333222 + _121222;
        dadgrad_chi(8,11) = F11*F21*chi11*dAdgrad_chi111233 + F11*F21*chi12*dAdgrad_chi112233 + F11*F21*chi13*dAdgrad_chi113233 + F11*F22*chi11*dAdgrad_chi121233 + F11*F22*chi12*dAdgrad_chi122233 + F11*F22*chi13*dAdgrad_chi123233 + F11*F23*chi11*dAdgrad_chi131233 + F11*F23*chi12*dAdgrad_chi132233 + F11*F23*chi13*dAdgrad_chi133233 + F12*F21*chi11*dAdgrad_chi211233 + F12*F21*chi12*dAdgrad_chi212233 + F12*F21*chi13*dAdgrad_chi213233 + F12*F22*chi11*dAdgrad_chi221233 + F12*F22*chi12*dAdgrad_chi222233 + F12*F22*chi13*dAdgrad_chi223233 + F12*F23*chi11*dAdgrad_chi231233 + F12*F23*chi12*dAdgrad_chi232233 + F12*F23*chi13*dAdgrad_chi233233 + F13*F21*chi11*dAdgrad_chi311233 + F13*F21*chi12*dAdgrad_chi312233 + F13*F21*chi13*dAdgrad_chi313233 + F13*F22*chi11*dAdgrad_chi321233 + F13*F22*chi12*dAdgrad_chi322233 + F13*F22*chi13*dAdgrad_chi323233 + F13*F23*chi11*dAdgrad_chi331233 + F13*F23*chi12*dAdgrad_chi332233 + F13*F23*chi13*dAdgrad_chi333233 + _121233;
        dadgrad_chi(8,12) = F11*F21*chi11*dAdgrad_chi111223 + F11*F21*chi12*dAdgrad_chi112223 + F11*F21*chi13*dAdgrad_chi113223 + F11*F22*chi11*dAdgrad_chi121223 + F11*F22*chi12*dAdgrad_chi122223 + F11*F22*chi13*dAdgrad_chi123223 + F11*F23*chi11*dAdgrad_chi131223 + F11*F23*chi12*dAdgrad_chi132223 + F11*F23*chi13*dAdgrad_chi133223 + F12*F21*chi11*dAdgrad_chi211223 + F12*F21*chi12*dAdgrad_chi212223 + F12*F21*chi13*dAdgrad_chi213223 + F12*F22*chi11*dAdgrad_chi221223 + F12*F22*chi12*dAdgrad_chi222223 + F12*F22*chi13*dAdgrad_chi223223 + F12*F23*chi11*dAdgrad_chi231223 + F12*F23*chi12*dAdgrad_chi232223 + F12*F23*chi13*dAdgrad_chi233223 + F13*F21*chi11*dAdgrad_chi311223 + F13*F21*chi12*dAdgrad_chi312223 + F13*F21*chi13*dAdgrad_chi313223 + F13*F22*chi11*dAdgrad_chi321223 + F13*F22*chi12*dAdgrad_chi322223 + F13*F22*chi13*dAdgrad_chi323223 + F13*F23*chi11*dAdgrad_chi331223 + F13*F23*chi12*dAdgrad_chi332223 + F13*F23*chi13*dAdgrad_chi333223 + _121223;
        dadgrad_chi(8,13) = F11*F21*chi11*dAdgrad_chi111213 + F11*F21*chi12*dAdgrad_chi112213 + F11*F21*chi13*dAdgrad_chi113213 + F11*F22*chi11*dAdgrad_chi121213 + F11*F22*chi12*dAdgrad_chi122213 + F11*F22*chi13*dAdgrad_chi123213 + F11*F23*chi11*dAdgrad_chi131213 + F11*F23*chi12*dAdgrad_chi132213 + F11*F23*chi13*dAdgrad_chi133213 + F12*F21*chi11*dAdgrad_chi211213 + F12*F21*chi12*dAdgrad_chi212213 + F12*F21*chi13*dAdgrad_chi213213 + F12*F22*chi11*dAdgrad_chi221213 + F12*F22*chi12*dAdgrad_chi222213 + F12*F22*chi13*dAdgrad_chi223213 + F12*F23*chi11*dAdgrad_chi231213 + F12*F23*chi12*dAdgrad_chi232213 + F12*F23*chi13*dAdgrad_chi233213 + F13*F21*chi11*dAdgrad_chi311213 + F13*F21*chi12*dAdgrad_chi312213 + F13*F21*chi13*dAdgrad_chi313213 + F13*F22*chi11*dAdgrad_chi321213 + F13*F22*chi12*dAdgrad_chi322213 + F13*F22*chi13*dAdgrad_chi323213 + F13*F23*chi11*dAdgrad_chi331213 + F13*F23*chi12*dAdgrad_chi332213 + F13*F23*chi13*dAdgrad_chi333213 + _121213;
        dadgrad_chi(8,14) = F11*F21*chi11*dAdgrad_chi111212 + F11*F21*chi12*dAdgrad_chi112212 + F11*F21*chi13*dAdgrad_chi113212 + F11*F22*chi11*dAdgrad_chi121212 + F11*F22*chi12*dAdgrad_chi122212 + F11*F22*chi13*dAdgrad_chi123212 + F11*F23*chi11*dAdgrad_chi131212 + F11*F23*chi12*dAdgrad_chi132212 + F11*F23*chi13*dAdgrad_chi133212 + F12*F21*chi11*dAdgrad_chi211212 + F12*F21*chi12*dAdgrad_chi212212 + F12*F21*chi13*dAdgrad_chi213212 + F12*F22*chi11*dAdgrad_chi221212 + F12*F22*chi12*dAdgrad_chi222212 + F12*F22*chi13*dAdgrad_chi223212 + F12*F23*chi11*dAdgrad_chi231212 + F12*F23*chi12*dAdgrad_chi232212 + F12*F23*chi13*dAdgrad_chi233212 + F13*F21*chi11*dAdgrad_chi311212 + F13*F21*chi12*dAdgrad_chi312212 + F13*F21*chi13*dAdgrad_chi313212 + F13*F22*chi11*dAdgrad_chi321212 + F13*F22*chi12*dAdgrad_chi322212 + F13*F22*chi13*dAdgrad_chi323212 + F13*F23*chi11*dAdgrad_chi331212 + F13*F23*chi12*dAdgrad_chi332212 + F13*F23*chi13*dAdgrad_chi333212 + _121212;
        dadgrad_chi(8,15) = F11*F21*chi11*dAdgrad_chi111232 + F11*F21*chi12*dAdgrad_chi112232 + F11*F21*chi13*dAdgrad_chi113232 + F11*F22*chi11*dAdgrad_chi121232 + F11*F22*chi12*dAdgrad_chi122232 + F11*F22*chi13*dAdgrad_chi123232 + F11*F23*chi11*dAdgrad_chi131232 + F11*F23*chi12*dAdgrad_chi132232 + F11*F23*chi13*dAdgrad_chi133232 + F12*F21*chi11*dAdgrad_chi211232 + F12*F21*chi12*dAdgrad_chi212232 + F12*F21*chi13*dAdgrad_chi213232 + F12*F22*chi11*dAdgrad_chi221232 + F12*F22*chi12*dAdgrad_chi222232 + F12*F22*chi13*dAdgrad_chi223232 + F12*F23*chi11*dAdgrad_chi231232 + F12*F23*chi12*dAdgrad_chi232232 + F12*F23*chi13*dAdgrad_chi233232 + F13*F21*chi11*dAdgrad_chi311232 + F13*F21*chi12*dAdgrad_chi312232 + F13*F21*chi13*dAdgrad_chi313232 + F13*F22*chi11*dAdgrad_chi321232 + F13*F22*chi12*dAdgrad_chi322232 + F13*F22*chi13*dAdgrad_chi323232 + F13*F23*chi11*dAdgrad_chi331232 + F13*F23*chi12*dAdgrad_chi332232 + F13*F23*chi13*dAdgrad_chi333232 + _121232;
        dadgrad_chi(8,16) = F11*F21*chi11*dAdgrad_chi111231 + F11*F21*chi12*dAdgrad_chi112231 + F11*F21*chi13*dAdgrad_chi113231 + F11*F22*chi11*dAdgrad_chi121231 + F11*F22*chi12*dAdgrad_chi122231 + F11*F22*chi13*dAdgrad_chi123231 + F11*F23*chi11*dAdgrad_chi131231 + F11*F23*chi12*dAdgrad_chi132231 + F11*F23*chi13*dAdgrad_chi133231 + F12*F21*chi11*dAdgrad_chi211231 + F12*F21*chi12*dAdgrad_chi212231 + F12*F21*chi13*dAdgrad_chi213231 + F12*F22*chi11*dAdgrad_chi221231 + F12*F22*chi12*dAdgrad_chi222231 + F12*F22*chi13*dAdgrad_chi223231 + F12*F23*chi11*dAdgrad_chi231231 + F12*F23*chi12*dAdgrad_chi232231 + F12*F23*chi13*dAdgrad_chi233231 + F13*F21*chi11*dAdgrad_chi311231 + F13*F21*chi12*dAdgrad_chi312231 + F13*F21*chi13*dAdgrad_chi313231 + F13*F22*chi11*dAdgrad_chi321231 + F13*F22*chi12*dAdgrad_chi322231 + F13*F22*chi13*dAdgrad_chi323231 + F13*F23*chi11*dAdgrad_chi331231 + F13*F23*chi12*dAdgrad_chi332231 + F13*F23*chi13*dAdgrad_chi333231 + _121231;
        dadgrad_chi(8,17) = F11*F21*chi11*dAdgrad_chi111221 + F11*F21*chi12*dAdgrad_chi112221 + F11*F21*chi13*dAdgrad_chi113221 + F11*F22*chi11*dAdgrad_chi121221 + F11*F22*chi12*dAdgrad_chi122221 + F11*F22*chi13*dAdgrad_chi123221 + F11*F23*chi11*dAdgrad_chi131221 + F11*F23*chi12*dAdgrad_chi132221 + F11*F23*chi13*dAdgrad_chi133221 + F12*F21*chi11*dAdgrad_chi211221 + F12*F21*chi12*dAdgrad_chi212221 + F12*F21*chi13*dAdgrad_chi213221 + F12*F22*chi11*dAdgrad_chi221221 + F12*F22*chi12*dAdgrad_chi222221 + F12*F22*chi13*dAdgrad_chi223221 + F12*F23*chi11*dAdgrad_chi231221 + F12*F23*chi12*dAdgrad_chi232221 + F12*F23*chi13*dAdgrad_chi233221 + F13*F21*chi11*dAdgrad_chi311221 + F13*F21*chi12*dAdgrad_chi312221 + F13*F21*chi13*dAdgrad_chi313221 + F13*F22*chi11*dAdgrad_chi321221 + F13*F22*chi12*dAdgrad_chi322221 + F13*F22*chi13*dAdgrad_chi323221 + F13*F23*chi11*dAdgrad_chi331221 + F13*F23*chi12*dAdgrad_chi332221 + F13*F23*chi13*dAdgrad_chi333221 + _121221;
        dadgrad_chi(8,18) = F11*F21*chi11*dAdgrad_chi111311 + F11*F21*chi12*dAdgrad_chi112311 + F11*F21*chi13*dAdgrad_chi113311 + F11*F22*chi11*dAdgrad_chi121311 + F11*F22*chi12*dAdgrad_chi122311 + F11*F22*chi13*dAdgrad_chi123311 + F11*F23*chi11*dAdgrad_chi131311 + F11*F23*chi12*dAdgrad_chi132311 + F11*F23*chi13*dAdgrad_chi133311 + F12*F21*chi11*dAdgrad_chi211311 + F12*F21*chi12*dAdgrad_chi212311 + F12*F21*chi13*dAdgrad_chi213311 + F12*F22*chi11*dAdgrad_chi221311 + F12*F22*chi12*dAdgrad_chi222311 + F12*F22*chi13*dAdgrad_chi223311 + F12*F23*chi11*dAdgrad_chi231311 + F12*F23*chi12*dAdgrad_chi232311 + F12*F23*chi13*dAdgrad_chi233311 + F13*F21*chi11*dAdgrad_chi311311 + F13*F21*chi12*dAdgrad_chi312311 + F13*F21*chi13*dAdgrad_chi313311 + F13*F22*chi11*dAdgrad_chi321311 + F13*F22*chi12*dAdgrad_chi322311 + F13*F22*chi13*dAdgrad_chi323311 + F13*F23*chi11*dAdgrad_chi331311 + F13*F23*chi12*dAdgrad_chi332311 + F13*F23*chi13*dAdgrad_chi333311 + _121311;
        dadgrad_chi(8,19) = F11*F21*chi11*dAdgrad_chi111322 + F11*F21*chi12*dAdgrad_chi112322 + F11*F21*chi13*dAdgrad_chi113322 + F11*F22*chi11*dAdgrad_chi121322 + F11*F22*chi12*dAdgrad_chi122322 + F11*F22*chi13*dAdgrad_chi123322 + F11*F23*chi11*dAdgrad_chi131322 + F11*F23*chi12*dAdgrad_chi132322 + F11*F23*chi13*dAdgrad_chi133322 + F12*F21*chi11*dAdgrad_chi211322 + F12*F21*chi12*dAdgrad_chi212322 + F12*F21*chi13*dAdgrad_chi213322 + F12*F22*chi11*dAdgrad_chi221322 + F12*F22*chi12*dAdgrad_chi222322 + F12*F22*chi13*dAdgrad_chi223322 + F12*F23*chi11*dAdgrad_chi231322 + F12*F23*chi12*dAdgrad_chi232322 + F12*F23*chi13*dAdgrad_chi233322 + F13*F21*chi11*dAdgrad_chi311322 + F13*F21*chi12*dAdgrad_chi312322 + F13*F21*chi13*dAdgrad_chi313322 + F13*F22*chi11*dAdgrad_chi321322 + F13*F22*chi12*dAdgrad_chi322322 + F13*F22*chi13*dAdgrad_chi323322 + F13*F23*chi11*dAdgrad_chi331322 + F13*F23*chi12*dAdgrad_chi332322 + F13*F23*chi13*dAdgrad_chi333322 + _121322;
        dadgrad_chi(8,20) = F11*F21*chi11*dAdgrad_chi111333 + F11*F21*chi12*dAdgrad_chi112333 + F11*F21*chi13*dAdgrad_chi113333 + F11*F22*chi11*dAdgrad_chi121333 + F11*F22*chi12*dAdgrad_chi122333 + F11*F22*chi13*dAdgrad_chi123333 + F11*F23*chi11*dAdgrad_chi131333 + F11*F23*chi12*dAdgrad_chi132333 + F11*F23*chi13*dAdgrad_chi133333 + F12*F21*chi11*dAdgrad_chi211333 + F12*F21*chi12*dAdgrad_chi212333 + F12*F21*chi13*dAdgrad_chi213333 + F12*F22*chi11*dAdgrad_chi221333 + F12*F22*chi12*dAdgrad_chi222333 + F12*F22*chi13*dAdgrad_chi223333 + F12*F23*chi11*dAdgrad_chi231333 + F12*F23*chi12*dAdgrad_chi232333 + F12*F23*chi13*dAdgrad_chi233333 + F13*F21*chi11*dAdgrad_chi311333 + F13*F21*chi12*dAdgrad_chi312333 + F13*F21*chi13*dAdgrad_chi313333 + F13*F22*chi11*dAdgrad_chi321333 + F13*F22*chi12*dAdgrad_chi322333 + F13*F22*chi13*dAdgrad_chi323333 + F13*F23*chi11*dAdgrad_chi331333 + F13*F23*chi12*dAdgrad_chi332333 + F13*F23*chi13*dAdgrad_chi333333 + _121333;
        dadgrad_chi(8,21) = F11*F21*chi11*dAdgrad_chi111323 + F11*F21*chi12*dAdgrad_chi112323 + F11*F21*chi13*dAdgrad_chi113323 + F11*F22*chi11*dAdgrad_chi121323 + F11*F22*chi12*dAdgrad_chi122323 + F11*F22*chi13*dAdgrad_chi123323 + F11*F23*chi11*dAdgrad_chi131323 + F11*F23*chi12*dAdgrad_chi132323 + F11*F23*chi13*dAdgrad_chi133323 + F12*F21*chi11*dAdgrad_chi211323 + F12*F21*chi12*dAdgrad_chi212323 + F12*F21*chi13*dAdgrad_chi213323 + F12*F22*chi11*dAdgrad_chi221323 + F12*F22*chi12*dAdgrad_chi222323 + F12*F22*chi13*dAdgrad_chi223323 + F12*F23*chi11*dAdgrad_chi231323 + F12*F23*chi12*dAdgrad_chi232323 + F12*F23*chi13*dAdgrad_chi233323 + F13*F21*chi11*dAdgrad_chi311323 + F13*F21*chi12*dAdgrad_chi312323 + F13*F21*chi13*dAdgrad_chi313323 + F13*F22*chi11*dAdgrad_chi321323 + F13*F22*chi12*dAdgrad_chi322323 + F13*F22*chi13*dAdgrad_chi323323 + F13*F23*chi11*dAdgrad_chi331323 + F13*F23*chi12*dAdgrad_chi332323 + F13*F23*chi13*dAdgrad_chi333323 + _121323;
        dadgrad_chi(8,22) = F11*F21*chi11*dAdgrad_chi111313 + F11*F21*chi12*dAdgrad_chi112313 + F11*F21*chi13*dAdgrad_chi113313 + F11*F22*chi11*dAdgrad_chi121313 + F11*F22*chi12*dAdgrad_chi122313 + F11*F22*chi13*dAdgrad_chi123313 + F11*F23*chi11*dAdgrad_chi131313 + F11*F23*chi12*dAdgrad_chi132313 + F11*F23*chi13*dAdgrad_chi133313 + F12*F21*chi11*dAdgrad_chi211313 + F12*F21*chi12*dAdgrad_chi212313 + F12*F21*chi13*dAdgrad_chi213313 + F12*F22*chi11*dAdgrad_chi221313 + F12*F22*chi12*dAdgrad_chi222313 + F12*F22*chi13*dAdgrad_chi223313 + F12*F23*chi11*dAdgrad_chi231313 + F12*F23*chi12*dAdgrad_chi232313 + F12*F23*chi13*dAdgrad_chi233313 + F13*F21*chi11*dAdgrad_chi311313 + F13*F21*chi12*dAdgrad_chi312313 + F13*F21*chi13*dAdgrad_chi313313 + F13*F22*chi11*dAdgrad_chi321313 + F13*F22*chi12*dAdgrad_chi322313 + F13*F22*chi13*dAdgrad_chi323313 + F13*F23*chi11*dAdgrad_chi331313 + F13*F23*chi12*dAdgrad_chi332313 + F13*F23*chi13*dAdgrad_chi333313 + _121313;
        dadgrad_chi(8,23) = F11*F21*chi11*dAdgrad_chi111312 + F11*F21*chi12*dAdgrad_chi112312 + F11*F21*chi13*dAdgrad_chi113312 + F11*F22*chi11*dAdgrad_chi121312 + F11*F22*chi12*dAdgrad_chi122312 + F11*F22*chi13*dAdgrad_chi123312 + F11*F23*chi11*dAdgrad_chi131312 + F11*F23*chi12*dAdgrad_chi132312 + F11*F23*chi13*dAdgrad_chi133312 + F12*F21*chi11*dAdgrad_chi211312 + F12*F21*chi12*dAdgrad_chi212312 + F12*F21*chi13*dAdgrad_chi213312 + F12*F22*chi11*dAdgrad_chi221312 + F12*F22*chi12*dAdgrad_chi222312 + F12*F22*chi13*dAdgrad_chi223312 + F12*F23*chi11*dAdgrad_chi231312 + F12*F23*chi12*dAdgrad_chi232312 + F12*F23*chi13*dAdgrad_chi233312 + F13*F21*chi11*dAdgrad_chi311312 + F13*F21*chi12*dAdgrad_chi312312 + F13*F21*chi13*dAdgrad_chi313312 + F13*F22*chi11*dAdgrad_chi321312 + F13*F22*chi12*dAdgrad_chi322312 + F13*F22*chi13*dAdgrad_chi323312 + F13*F23*chi11*dAdgrad_chi331312 + F13*F23*chi12*dAdgrad_chi332312 + F13*F23*chi13*dAdgrad_chi333312 + _121312;
        dadgrad_chi(8,24) = F11*F21*chi11*dAdgrad_chi111332 + F11*F21*chi12*dAdgrad_chi112332 + F11*F21*chi13*dAdgrad_chi113332 + F11*F22*chi11*dAdgrad_chi121332 + F11*F22*chi12*dAdgrad_chi122332 + F11*F22*chi13*dAdgrad_chi123332 + F11*F23*chi11*dAdgrad_chi131332 + F11*F23*chi12*dAdgrad_chi132332 + F11*F23*chi13*dAdgrad_chi133332 + F12*F21*chi11*dAdgrad_chi211332 + F12*F21*chi12*dAdgrad_chi212332 + F12*F21*chi13*dAdgrad_chi213332 + F12*F22*chi11*dAdgrad_chi221332 + F12*F22*chi12*dAdgrad_chi222332 + F12*F22*chi13*dAdgrad_chi223332 + F12*F23*chi11*dAdgrad_chi231332 + F12*F23*chi12*dAdgrad_chi232332 + F12*F23*chi13*dAdgrad_chi233332 + F13*F21*chi11*dAdgrad_chi311332 + F13*F21*chi12*dAdgrad_chi312332 + F13*F21*chi13*dAdgrad_chi313332 + F13*F22*chi11*dAdgrad_chi321332 + F13*F22*chi12*dAdgrad_chi322332 + F13*F22*chi13*dAdgrad_chi323332 + F13*F23*chi11*dAdgrad_chi331332 + F13*F23*chi12*dAdgrad_chi332332 + F13*F23*chi13*dAdgrad_chi333332 + _121332;
        dadgrad_chi(8,25) = F11*F21*chi11*dAdgrad_chi111331 + F11*F21*chi12*dAdgrad_chi112331 + F11*F21*chi13*dAdgrad_chi113331 + F11*F22*chi11*dAdgrad_chi121331 + F11*F22*chi12*dAdgrad_chi122331 + F11*F22*chi13*dAdgrad_chi123331 + F11*F23*chi11*dAdgrad_chi131331 + F11*F23*chi12*dAdgrad_chi132331 + F11*F23*chi13*dAdgrad_chi133331 + F12*F21*chi11*dAdgrad_chi211331 + F12*F21*chi12*dAdgrad_chi212331 + F12*F21*chi13*dAdgrad_chi213331 + F12*F22*chi11*dAdgrad_chi221331 + F12*F22*chi12*dAdgrad_chi222331 + F12*F22*chi13*dAdgrad_chi223331 + F12*F23*chi11*dAdgrad_chi231331 + F12*F23*chi12*dAdgrad_chi232331 + F12*F23*chi13*dAdgrad_chi233331 + F13*F21*chi11*dAdgrad_chi311331 + F13*F21*chi12*dAdgrad_chi312331 + F13*F21*chi13*dAdgrad_chi313331 + F13*F22*chi11*dAdgrad_chi321331 + F13*F22*chi12*dAdgrad_chi322331 + F13*F22*chi13*dAdgrad_chi323331 + F13*F23*chi11*dAdgrad_chi331331 + F13*F23*chi12*dAdgrad_chi332331 + F13*F23*chi13*dAdgrad_chi333331 + _121331;
        dadgrad_chi(8,26) = F11*F21*chi11*dAdgrad_chi111321 + F11*F21*chi12*dAdgrad_chi112321 + F11*F21*chi13*dAdgrad_chi113321 + F11*F22*chi11*dAdgrad_chi121321 + F11*F22*chi12*dAdgrad_chi122321 + F11*F22*chi13*dAdgrad_chi123321 + F11*F23*chi11*dAdgrad_chi131321 + F11*F23*chi12*dAdgrad_chi132321 + F11*F23*chi13*dAdgrad_chi133321 + F12*F21*chi11*dAdgrad_chi211321 + F12*F21*chi12*dAdgrad_chi212321 + F12*F21*chi13*dAdgrad_chi213321 + F12*F22*chi11*dAdgrad_chi221321 + F12*F22*chi12*dAdgrad_chi222321 + F12*F22*chi13*dAdgrad_chi223321 + F12*F23*chi11*dAdgrad_chi231321 + F12*F23*chi12*dAdgrad_chi232321 + F12*F23*chi13*dAdgrad_chi233321 + F13*F21*chi11*dAdgrad_chi311321 + F13*F21*chi12*dAdgrad_chi312321 + F13*F21*chi13*dAdgrad_chi313321 + F13*F22*chi11*dAdgrad_chi321321 + F13*F22*chi12*dAdgrad_chi322321 + F13*F22*chi13*dAdgrad_chi323321 + F13*F23*chi11*dAdgrad_chi331321 + F13*F23*chi12*dAdgrad_chi332321 + F13*F23*chi13*dAdgrad_chi333321 + _121321;
        dadgrad_chi(9,0) = F11*F21*chi11*dAdgrad_chi111111 + F11*F21*chi12*dAdgrad_chi112111 + F11*F21*chi13*dAdgrad_chi113111 + F11*F22*chi11*dAdgrad_chi211111 + F11*F22*chi12*dAdgrad_chi212111 + F11*F22*chi13*dAdgrad_chi213111 + F11*F23*chi11*dAdgrad_chi311111 + F11*F23*chi12*dAdgrad_chi312111 + F11*F23*chi13*dAdgrad_chi313111 + F12*F21*chi11*dAdgrad_chi121111 + F12*F21*chi12*dAdgrad_chi122111 + F12*F21*chi13*dAdgrad_chi123111 + F12*F22*chi11*dAdgrad_chi221111 + F12*F22*chi12*dAdgrad_chi222111 + F12*F22*chi13*dAdgrad_chi223111 + F12*F23*chi11*dAdgrad_chi321111 + F12*F23*chi12*dAdgrad_chi322111 + F12*F23*chi13*dAdgrad_chi323111 + F13*F21*chi11*dAdgrad_chi131111 + F13*F21*chi12*dAdgrad_chi132111 + F13*F21*chi13*dAdgrad_chi133111 + F13*F22*chi11*dAdgrad_chi231111 + F13*F22*chi12*dAdgrad_chi232111 + F13*F22*chi13*dAdgrad_chi233111 + F13*F23*chi11*dAdgrad_chi331111 + F13*F23*chi12*dAdgrad_chi332111 + F13*F23*chi13*dAdgrad_chi333111 + _211111;
        dadgrad_chi(9,1) = F11*F21*chi11*dAdgrad_chi111122 + F11*F21*chi12*dAdgrad_chi112122 + F11*F21*chi13*dAdgrad_chi113122 + F11*F22*chi11*dAdgrad_chi211122 + F11*F22*chi12*dAdgrad_chi212122 + F11*F22*chi13*dAdgrad_chi213122 + F11*F23*chi11*dAdgrad_chi311122 + F11*F23*chi12*dAdgrad_chi312122 + F11*F23*chi13*dAdgrad_chi313122 + F12*F21*chi11*dAdgrad_chi121122 + F12*F21*chi12*dAdgrad_chi122122 + F12*F21*chi13*dAdgrad_chi123122 + F12*F22*chi11*dAdgrad_chi221122 + F12*F22*chi12*dAdgrad_chi222122 + F12*F22*chi13*dAdgrad_chi223122 + F12*F23*chi11*dAdgrad_chi321122 + F12*F23*chi12*dAdgrad_chi322122 + F12*F23*chi13*dAdgrad_chi323122 + F13*F21*chi11*dAdgrad_chi131122 + F13*F21*chi12*dAdgrad_chi132122 + F13*F21*chi13*dAdgrad_chi133122 + F13*F22*chi11*dAdgrad_chi231122 + F13*F22*chi12*dAdgrad_chi232122 + F13*F22*chi13*dAdgrad_chi233122 + F13*F23*chi11*dAdgrad_chi331122 + F13*F23*chi12*dAdgrad_chi332122 + F13*F23*chi13*dAdgrad_chi333122 + _211122;
        dadgrad_chi(9,2) = F11*F21*chi11*dAdgrad_chi111133 + F11*F21*chi12*dAdgrad_chi112133 + F11*F21*chi13*dAdgrad_chi113133 + F11*F22*chi11*dAdgrad_chi211133 + F11*F22*chi12*dAdgrad_chi212133 + F11*F22*chi13*dAdgrad_chi213133 + F11*F23*chi11*dAdgrad_chi311133 + F11*F23*chi12*dAdgrad_chi312133 + F11*F23*chi13*dAdgrad_chi313133 + F12*F21*chi11*dAdgrad_chi121133 + F12*F21*chi12*dAdgrad_chi122133 + F12*F21*chi13*dAdgrad_chi123133 + F12*F22*chi11*dAdgrad_chi221133 + F12*F22*chi12*dAdgrad_chi222133 + F12*F22*chi13*dAdgrad_chi223133 + F12*F23*chi11*dAdgrad_chi321133 + F12*F23*chi12*dAdgrad_chi322133 + F12*F23*chi13*dAdgrad_chi323133 + F13*F21*chi11*dAdgrad_chi131133 + F13*F21*chi12*dAdgrad_chi132133 + F13*F21*chi13*dAdgrad_chi133133 + F13*F22*chi11*dAdgrad_chi231133 + F13*F22*chi12*dAdgrad_chi232133 + F13*F22*chi13*dAdgrad_chi233133 + F13*F23*chi11*dAdgrad_chi331133 + F13*F23*chi12*dAdgrad_chi332133 + F13*F23*chi13*dAdgrad_chi333133 + _211133;
        dadgrad_chi(9,3) = F11*F21*chi11*dAdgrad_chi111123 + F11*F21*chi12*dAdgrad_chi112123 + F11*F21*chi13*dAdgrad_chi113123 + F11*F22*chi11*dAdgrad_chi211123 + F11*F22*chi12*dAdgrad_chi212123 + F11*F22*chi13*dAdgrad_chi213123 + F11*F23*chi11*dAdgrad_chi311123 + F11*F23*chi12*dAdgrad_chi312123 + F11*F23*chi13*dAdgrad_chi313123 + F12*F21*chi11*dAdgrad_chi121123 + F12*F21*chi12*dAdgrad_chi122123 + F12*F21*chi13*dAdgrad_chi123123 + F12*F22*chi11*dAdgrad_chi221123 + F12*F22*chi12*dAdgrad_chi222123 + F12*F22*chi13*dAdgrad_chi223123 + F12*F23*chi11*dAdgrad_chi321123 + F12*F23*chi12*dAdgrad_chi322123 + F12*F23*chi13*dAdgrad_chi323123 + F13*F21*chi11*dAdgrad_chi131123 + F13*F21*chi12*dAdgrad_chi132123 + F13*F21*chi13*dAdgrad_chi133123 + F13*F22*chi11*dAdgrad_chi231123 + F13*F22*chi12*dAdgrad_chi232123 + F13*F22*chi13*dAdgrad_chi233123 + F13*F23*chi11*dAdgrad_chi331123 + F13*F23*chi12*dAdgrad_chi332123 + F13*F23*chi13*dAdgrad_chi333123 + _211123;
        dadgrad_chi(9,4) = F11*F21*chi11*dAdgrad_chi111113 + F11*F21*chi12*dAdgrad_chi112113 + F11*F21*chi13*dAdgrad_chi113113 + F11*F22*chi11*dAdgrad_chi211113 + F11*F22*chi12*dAdgrad_chi212113 + F11*F22*chi13*dAdgrad_chi213113 + F11*F23*chi11*dAdgrad_chi311113 + F11*F23*chi12*dAdgrad_chi312113 + F11*F23*chi13*dAdgrad_chi313113 + F12*F21*chi11*dAdgrad_chi121113 + F12*F21*chi12*dAdgrad_chi122113 + F12*F21*chi13*dAdgrad_chi123113 + F12*F22*chi11*dAdgrad_chi221113 + F12*F22*chi12*dAdgrad_chi222113 + F12*F22*chi13*dAdgrad_chi223113 + F12*F23*chi11*dAdgrad_chi321113 + F12*F23*chi12*dAdgrad_chi322113 + F12*F23*chi13*dAdgrad_chi323113 + F13*F21*chi11*dAdgrad_chi131113 + F13*F21*chi12*dAdgrad_chi132113 + F13*F21*chi13*dAdgrad_chi133113 + F13*F22*chi11*dAdgrad_chi231113 + F13*F22*chi12*dAdgrad_chi232113 + F13*F22*chi13*dAdgrad_chi233113 + F13*F23*chi11*dAdgrad_chi331113 + F13*F23*chi12*dAdgrad_chi332113 + F13*F23*chi13*dAdgrad_chi333113 + _211113;
        dadgrad_chi(9,5) = F11*F21*chi11*dAdgrad_chi111112 + F11*F21*chi12*dAdgrad_chi112112 + F11*F21*chi13*dAdgrad_chi113112 + F11*F22*chi11*dAdgrad_chi211112 + F11*F22*chi12*dAdgrad_chi212112 + F11*F22*chi13*dAdgrad_chi213112 + F11*F23*chi11*dAdgrad_chi311112 + F11*F23*chi12*dAdgrad_chi312112 + F11*F23*chi13*dAdgrad_chi313112 + F12*F21*chi11*dAdgrad_chi121112 + F12*F21*chi12*dAdgrad_chi122112 + F12*F21*chi13*dAdgrad_chi123112 + F12*F22*chi11*dAdgrad_chi221112 + F12*F22*chi12*dAdgrad_chi222112 + F12*F22*chi13*dAdgrad_chi223112 + F12*F23*chi11*dAdgrad_chi321112 + F12*F23*chi12*dAdgrad_chi322112 + F12*F23*chi13*dAdgrad_chi323112 + F13*F21*chi11*dAdgrad_chi131112 + F13*F21*chi12*dAdgrad_chi132112 + F13*F21*chi13*dAdgrad_chi133112 + F13*F22*chi11*dAdgrad_chi231112 + F13*F22*chi12*dAdgrad_chi232112 + F13*F22*chi13*dAdgrad_chi233112 + F13*F23*chi11*dAdgrad_chi331112 + F13*F23*chi12*dAdgrad_chi332112 + F13*F23*chi13*dAdgrad_chi333112 + _211112;
        dadgrad_chi(9,6) = F11*F21*chi11*dAdgrad_chi111132 + F11*F21*chi12*dAdgrad_chi112132 + F11*F21*chi13*dAdgrad_chi113132 + F11*F22*chi11*dAdgrad_chi211132 + F11*F22*chi12*dAdgrad_chi212132 + F11*F22*chi13*dAdgrad_chi213132 + F11*F23*chi11*dAdgrad_chi311132 + F11*F23*chi12*dAdgrad_chi312132 + F11*F23*chi13*dAdgrad_chi313132 + F12*F21*chi11*dAdgrad_chi121132 + F12*F21*chi12*dAdgrad_chi122132 + F12*F21*chi13*dAdgrad_chi123132 + F12*F22*chi11*dAdgrad_chi221132 + F12*F22*chi12*dAdgrad_chi222132 + F12*F22*chi13*dAdgrad_chi223132 + F12*F23*chi11*dAdgrad_chi321132 + F12*F23*chi12*dAdgrad_chi322132 + F12*F23*chi13*dAdgrad_chi323132 + F13*F21*chi11*dAdgrad_chi131132 + F13*F21*chi12*dAdgrad_chi132132 + F13*F21*chi13*dAdgrad_chi133132 + F13*F22*chi11*dAdgrad_chi231132 + F13*F22*chi12*dAdgrad_chi232132 + F13*F22*chi13*dAdgrad_chi233132 + F13*F23*chi11*dAdgrad_chi331132 + F13*F23*chi12*dAdgrad_chi332132 + F13*F23*chi13*dAdgrad_chi333132 + _211132;
        dadgrad_chi(9,7) = F11*F21*chi11*dAdgrad_chi111131 + F11*F21*chi12*dAdgrad_chi112131 + F11*F21*chi13*dAdgrad_chi113131 + F11*F22*chi11*dAdgrad_chi211131 + F11*F22*chi12*dAdgrad_chi212131 + F11*F22*chi13*dAdgrad_chi213131 + F11*F23*chi11*dAdgrad_chi311131 + F11*F23*chi12*dAdgrad_chi312131 + F11*F23*chi13*dAdgrad_chi313131 + F12*F21*chi11*dAdgrad_chi121131 + F12*F21*chi12*dAdgrad_chi122131 + F12*F21*chi13*dAdgrad_chi123131 + F12*F22*chi11*dAdgrad_chi221131 + F12*F22*chi12*dAdgrad_chi222131 + F12*F22*chi13*dAdgrad_chi223131 + F12*F23*chi11*dAdgrad_chi321131 + F12*F23*chi12*dAdgrad_chi322131 + F12*F23*chi13*dAdgrad_chi323131 + F13*F21*chi11*dAdgrad_chi131131 + F13*F21*chi12*dAdgrad_chi132131 + F13*F21*chi13*dAdgrad_chi133131 + F13*F22*chi11*dAdgrad_chi231131 + F13*F22*chi12*dAdgrad_chi232131 + F13*F22*chi13*dAdgrad_chi233131 + F13*F23*chi11*dAdgrad_chi331131 + F13*F23*chi12*dAdgrad_chi332131 + F13*F23*chi13*dAdgrad_chi333131 + _211131;
        dadgrad_chi(9,8) = F11*F21*chi11*dAdgrad_chi111121 + F11*F21*chi12*dAdgrad_chi112121 + F11*F21*chi13*dAdgrad_chi113121 + F11*F22*chi11*dAdgrad_chi211121 + F11*F22*chi12*dAdgrad_chi212121 + F11*F22*chi13*dAdgrad_chi213121 + F11*F23*chi11*dAdgrad_chi311121 + F11*F23*chi12*dAdgrad_chi312121 + F11*F23*chi13*dAdgrad_chi313121 + F12*F21*chi11*dAdgrad_chi121121 + F12*F21*chi12*dAdgrad_chi122121 + F12*F21*chi13*dAdgrad_chi123121 + F12*F22*chi11*dAdgrad_chi221121 + F12*F22*chi12*dAdgrad_chi222121 + F12*F22*chi13*dAdgrad_chi223121 + F12*F23*chi11*dAdgrad_chi321121 + F12*F23*chi12*dAdgrad_chi322121 + F12*F23*chi13*dAdgrad_chi323121 + F13*F21*chi11*dAdgrad_chi131121 + F13*F21*chi12*dAdgrad_chi132121 + F13*F21*chi13*dAdgrad_chi133121 + F13*F22*chi11*dAdgrad_chi231121 + F13*F22*chi12*dAdgrad_chi232121 + F13*F22*chi13*dAdgrad_chi233121 + F13*F23*chi11*dAdgrad_chi331121 + F13*F23*chi12*dAdgrad_chi332121 + F13*F23*chi13*dAdgrad_chi333121 + _211121;
        dadgrad_chi(9,9) = F11*F21*chi11*dAdgrad_chi111211 + F11*F21*chi12*dAdgrad_chi112211 + F11*F21*chi13*dAdgrad_chi113211 + F11*F22*chi11*dAdgrad_chi211211 + F11*F22*chi12*dAdgrad_chi212211 + F11*F22*chi13*dAdgrad_chi213211 + F11*F23*chi11*dAdgrad_chi311211 + F11*F23*chi12*dAdgrad_chi312211 + F11*F23*chi13*dAdgrad_chi313211 + F12*F21*chi11*dAdgrad_chi121211 + F12*F21*chi12*dAdgrad_chi122211 + F12*F21*chi13*dAdgrad_chi123211 + F12*F22*chi11*dAdgrad_chi221211 + F12*F22*chi12*dAdgrad_chi222211 + F12*F22*chi13*dAdgrad_chi223211 + F12*F23*chi11*dAdgrad_chi321211 + F12*F23*chi12*dAdgrad_chi322211 + F12*F23*chi13*dAdgrad_chi323211 + F13*F21*chi11*dAdgrad_chi131211 + F13*F21*chi12*dAdgrad_chi132211 + F13*F21*chi13*dAdgrad_chi133211 + F13*F22*chi11*dAdgrad_chi231211 + F13*F22*chi12*dAdgrad_chi232211 + F13*F22*chi13*dAdgrad_chi233211 + F13*F23*chi11*dAdgrad_chi331211 + F13*F23*chi12*dAdgrad_chi332211 + F13*F23*chi13*dAdgrad_chi333211 + _211211;
        dadgrad_chi(9,10) = F11*F21*chi11*dAdgrad_chi111222 + F11*F21*chi12*dAdgrad_chi112222 + F11*F21*chi13*dAdgrad_chi113222 + F11*F22*chi11*dAdgrad_chi211222 + F11*F22*chi12*dAdgrad_chi212222 + F11*F22*chi13*dAdgrad_chi213222 + F11*F23*chi11*dAdgrad_chi311222 + F11*F23*chi12*dAdgrad_chi312222 + F11*F23*chi13*dAdgrad_chi313222 + F12*F21*chi11*dAdgrad_chi121222 + F12*F21*chi12*dAdgrad_chi122222 + F12*F21*chi13*dAdgrad_chi123222 + F12*F22*chi11*dAdgrad_chi221222 + F12*F22*chi12*dAdgrad_chi222222 + F12*F22*chi13*dAdgrad_chi223222 + F12*F23*chi11*dAdgrad_chi321222 + F12*F23*chi12*dAdgrad_chi322222 + F12*F23*chi13*dAdgrad_chi323222 + F13*F21*chi11*dAdgrad_chi131222 + F13*F21*chi12*dAdgrad_chi132222 + F13*F21*chi13*dAdgrad_chi133222 + F13*F22*chi11*dAdgrad_chi231222 + F13*F22*chi12*dAdgrad_chi232222 + F13*F22*chi13*dAdgrad_chi233222 + F13*F23*chi11*dAdgrad_chi331222 + F13*F23*chi12*dAdgrad_chi332222 + F13*F23*chi13*dAdgrad_chi333222 + _211222;
        dadgrad_chi(9,11) = F11*F21*chi11*dAdgrad_chi111233 + F11*F21*chi12*dAdgrad_chi112233 + F11*F21*chi13*dAdgrad_chi113233 + F11*F22*chi11*dAdgrad_chi211233 + F11*F22*chi12*dAdgrad_chi212233 + F11*F22*chi13*dAdgrad_chi213233 + F11*F23*chi11*dAdgrad_chi311233 + F11*F23*chi12*dAdgrad_chi312233 + F11*F23*chi13*dAdgrad_chi313233 + F12*F21*chi11*dAdgrad_chi121233 + F12*F21*chi12*dAdgrad_chi122233 + F12*F21*chi13*dAdgrad_chi123233 + F12*F22*chi11*dAdgrad_chi221233 + F12*F22*chi12*dAdgrad_chi222233 + F12*F22*chi13*dAdgrad_chi223233 + F12*F23*chi11*dAdgrad_chi321233 + F12*F23*chi12*dAdgrad_chi322233 + F12*F23*chi13*dAdgrad_chi323233 + F13*F21*chi11*dAdgrad_chi131233 + F13*F21*chi12*dAdgrad_chi132233 + F13*F21*chi13*dAdgrad_chi133233 + F13*F22*chi11*dAdgrad_chi231233 + F13*F22*chi12*dAdgrad_chi232233 + F13*F22*chi13*dAdgrad_chi233233 + F13*F23*chi11*dAdgrad_chi331233 + F13*F23*chi12*dAdgrad_chi332233 + F13*F23*chi13*dAdgrad_chi333233 + _211233;
        dadgrad_chi(9,12) = F11*F21*chi11*dAdgrad_chi111223 + F11*F21*chi12*dAdgrad_chi112223 + F11*F21*chi13*dAdgrad_chi113223 + F11*F22*chi11*dAdgrad_chi211223 + F11*F22*chi12*dAdgrad_chi212223 + F11*F22*chi13*dAdgrad_chi213223 + F11*F23*chi11*dAdgrad_chi311223 + F11*F23*chi12*dAdgrad_chi312223 + F11*F23*chi13*dAdgrad_chi313223 + F12*F21*chi11*dAdgrad_chi121223 + F12*F21*chi12*dAdgrad_chi122223 + F12*F21*chi13*dAdgrad_chi123223 + F12*F22*chi11*dAdgrad_chi221223 + F12*F22*chi12*dAdgrad_chi222223 + F12*F22*chi13*dAdgrad_chi223223 + F12*F23*chi11*dAdgrad_chi321223 + F12*F23*chi12*dAdgrad_chi322223 + F12*F23*chi13*dAdgrad_chi323223 + F13*F21*chi11*dAdgrad_chi131223 + F13*F21*chi12*dAdgrad_chi132223 + F13*F21*chi13*dAdgrad_chi133223 + F13*F22*chi11*dAdgrad_chi231223 + F13*F22*chi12*dAdgrad_chi232223 + F13*F22*chi13*dAdgrad_chi233223 + F13*F23*chi11*dAdgrad_chi331223 + F13*F23*chi12*dAdgrad_chi332223 + F13*F23*chi13*dAdgrad_chi333223 + _211223;
        dadgrad_chi(9,13) = F11*F21*chi11*dAdgrad_chi111213 + F11*F21*chi12*dAdgrad_chi112213 + F11*F21*chi13*dAdgrad_chi113213 + F11*F22*chi11*dAdgrad_chi211213 + F11*F22*chi12*dAdgrad_chi212213 + F11*F22*chi13*dAdgrad_chi213213 + F11*F23*chi11*dAdgrad_chi311213 + F11*F23*chi12*dAdgrad_chi312213 + F11*F23*chi13*dAdgrad_chi313213 + F12*F21*chi11*dAdgrad_chi121213 + F12*F21*chi12*dAdgrad_chi122213 + F12*F21*chi13*dAdgrad_chi123213 + F12*F22*chi11*dAdgrad_chi221213 + F12*F22*chi12*dAdgrad_chi222213 + F12*F22*chi13*dAdgrad_chi223213 + F12*F23*chi11*dAdgrad_chi321213 + F12*F23*chi12*dAdgrad_chi322213 + F12*F23*chi13*dAdgrad_chi323213 + F13*F21*chi11*dAdgrad_chi131213 + F13*F21*chi12*dAdgrad_chi132213 + F13*F21*chi13*dAdgrad_chi133213 + F13*F22*chi11*dAdgrad_chi231213 + F13*F22*chi12*dAdgrad_chi232213 + F13*F22*chi13*dAdgrad_chi233213 + F13*F23*chi11*dAdgrad_chi331213 + F13*F23*chi12*dAdgrad_chi332213 + F13*F23*chi13*dAdgrad_chi333213 + _211213;
        dadgrad_chi(9,14) = F11*F21*chi11*dAdgrad_chi111212 + F11*F21*chi12*dAdgrad_chi112212 + F11*F21*chi13*dAdgrad_chi113212 + F11*F22*chi11*dAdgrad_chi211212 + F11*F22*chi12*dAdgrad_chi212212 + F11*F22*chi13*dAdgrad_chi213212 + F11*F23*chi11*dAdgrad_chi311212 + F11*F23*chi12*dAdgrad_chi312212 + F11*F23*chi13*dAdgrad_chi313212 + F12*F21*chi11*dAdgrad_chi121212 + F12*F21*chi12*dAdgrad_chi122212 + F12*F21*chi13*dAdgrad_chi123212 + F12*F22*chi11*dAdgrad_chi221212 + F12*F22*chi12*dAdgrad_chi222212 + F12*F22*chi13*dAdgrad_chi223212 + F12*F23*chi11*dAdgrad_chi321212 + F12*F23*chi12*dAdgrad_chi322212 + F12*F23*chi13*dAdgrad_chi323212 + F13*F21*chi11*dAdgrad_chi131212 + F13*F21*chi12*dAdgrad_chi132212 + F13*F21*chi13*dAdgrad_chi133212 + F13*F22*chi11*dAdgrad_chi231212 + F13*F22*chi12*dAdgrad_chi232212 + F13*F22*chi13*dAdgrad_chi233212 + F13*F23*chi11*dAdgrad_chi331212 + F13*F23*chi12*dAdgrad_chi332212 + F13*F23*chi13*dAdgrad_chi333212 + _211212;
        dadgrad_chi(9,15) = F11*F21*chi11*dAdgrad_chi111232 + F11*F21*chi12*dAdgrad_chi112232 + F11*F21*chi13*dAdgrad_chi113232 + F11*F22*chi11*dAdgrad_chi211232 + F11*F22*chi12*dAdgrad_chi212232 + F11*F22*chi13*dAdgrad_chi213232 + F11*F23*chi11*dAdgrad_chi311232 + F11*F23*chi12*dAdgrad_chi312232 + F11*F23*chi13*dAdgrad_chi313232 + F12*F21*chi11*dAdgrad_chi121232 + F12*F21*chi12*dAdgrad_chi122232 + F12*F21*chi13*dAdgrad_chi123232 + F12*F22*chi11*dAdgrad_chi221232 + F12*F22*chi12*dAdgrad_chi222232 + F12*F22*chi13*dAdgrad_chi223232 + F12*F23*chi11*dAdgrad_chi321232 + F12*F23*chi12*dAdgrad_chi322232 + F12*F23*chi13*dAdgrad_chi323232 + F13*F21*chi11*dAdgrad_chi131232 + F13*F21*chi12*dAdgrad_chi132232 + F13*F21*chi13*dAdgrad_chi133232 + F13*F22*chi11*dAdgrad_chi231232 + F13*F22*chi12*dAdgrad_chi232232 + F13*F22*chi13*dAdgrad_chi233232 + F13*F23*chi11*dAdgrad_chi331232 + F13*F23*chi12*dAdgrad_chi332232 + F13*F23*chi13*dAdgrad_chi333232 + _211232;
        dadgrad_chi(9,16) = F11*F21*chi11*dAdgrad_chi111231 + F11*F21*chi12*dAdgrad_chi112231 + F11*F21*chi13*dAdgrad_chi113231 + F11*F22*chi11*dAdgrad_chi211231 + F11*F22*chi12*dAdgrad_chi212231 + F11*F22*chi13*dAdgrad_chi213231 + F11*F23*chi11*dAdgrad_chi311231 + F11*F23*chi12*dAdgrad_chi312231 + F11*F23*chi13*dAdgrad_chi313231 + F12*F21*chi11*dAdgrad_chi121231 + F12*F21*chi12*dAdgrad_chi122231 + F12*F21*chi13*dAdgrad_chi123231 + F12*F22*chi11*dAdgrad_chi221231 + F12*F22*chi12*dAdgrad_chi222231 + F12*F22*chi13*dAdgrad_chi223231 + F12*F23*chi11*dAdgrad_chi321231 + F12*F23*chi12*dAdgrad_chi322231 + F12*F23*chi13*dAdgrad_chi323231 + F13*F21*chi11*dAdgrad_chi131231 + F13*F21*chi12*dAdgrad_chi132231 + F13*F21*chi13*dAdgrad_chi133231 + F13*F22*chi11*dAdgrad_chi231231 + F13*F22*chi12*dAdgrad_chi232231 + F13*F22*chi13*dAdgrad_chi233231 + F13*F23*chi11*dAdgrad_chi331231 + F13*F23*chi12*dAdgrad_chi332231 + F13*F23*chi13*dAdgrad_chi333231 + _211231;
        dadgrad_chi(9,17) = F11*F21*chi11*dAdgrad_chi111221 + F11*F21*chi12*dAdgrad_chi112221 + F11*F21*chi13*dAdgrad_chi113221 + F11*F22*chi11*dAdgrad_chi211221 + F11*F22*chi12*dAdgrad_chi212221 + F11*F22*chi13*dAdgrad_chi213221 + F11*F23*chi11*dAdgrad_chi311221 + F11*F23*chi12*dAdgrad_chi312221 + F11*F23*chi13*dAdgrad_chi313221 + F12*F21*chi11*dAdgrad_chi121221 + F12*F21*chi12*dAdgrad_chi122221 + F12*F21*chi13*dAdgrad_chi123221 + F12*F22*chi11*dAdgrad_chi221221 + F12*F22*chi12*dAdgrad_chi222221 + F12*F22*chi13*dAdgrad_chi223221 + F12*F23*chi11*dAdgrad_chi321221 + F12*F23*chi12*dAdgrad_chi322221 + F12*F23*chi13*dAdgrad_chi323221 + F13*F21*chi11*dAdgrad_chi131221 + F13*F21*chi12*dAdgrad_chi132221 + F13*F21*chi13*dAdgrad_chi133221 + F13*F22*chi11*dAdgrad_chi231221 + F13*F22*chi12*dAdgrad_chi232221 + F13*F22*chi13*dAdgrad_chi233221 + F13*F23*chi11*dAdgrad_chi331221 + F13*F23*chi12*dAdgrad_chi332221 + F13*F23*chi13*dAdgrad_chi333221 + _211221;
        dadgrad_chi(9,18) = F11*F21*chi11*dAdgrad_chi111311 + F11*F21*chi12*dAdgrad_chi112311 + F11*F21*chi13*dAdgrad_chi113311 + F11*F22*chi11*dAdgrad_chi211311 + F11*F22*chi12*dAdgrad_chi212311 + F11*F22*chi13*dAdgrad_chi213311 + F11*F23*chi11*dAdgrad_chi311311 + F11*F23*chi12*dAdgrad_chi312311 + F11*F23*chi13*dAdgrad_chi313311 + F12*F21*chi11*dAdgrad_chi121311 + F12*F21*chi12*dAdgrad_chi122311 + F12*F21*chi13*dAdgrad_chi123311 + F12*F22*chi11*dAdgrad_chi221311 + F12*F22*chi12*dAdgrad_chi222311 + F12*F22*chi13*dAdgrad_chi223311 + F12*F23*chi11*dAdgrad_chi321311 + F12*F23*chi12*dAdgrad_chi322311 + F12*F23*chi13*dAdgrad_chi323311 + F13*F21*chi11*dAdgrad_chi131311 + F13*F21*chi12*dAdgrad_chi132311 + F13*F21*chi13*dAdgrad_chi133311 + F13*F22*chi11*dAdgrad_chi231311 + F13*F22*chi12*dAdgrad_chi232311 + F13*F22*chi13*dAdgrad_chi233311 + F13*F23*chi11*dAdgrad_chi331311 + F13*F23*chi12*dAdgrad_chi332311 + F13*F23*chi13*dAdgrad_chi333311 + _211311;
        dadgrad_chi(9,19) = F11*F21*chi11*dAdgrad_chi111322 + F11*F21*chi12*dAdgrad_chi112322 + F11*F21*chi13*dAdgrad_chi113322 + F11*F22*chi11*dAdgrad_chi211322 + F11*F22*chi12*dAdgrad_chi212322 + F11*F22*chi13*dAdgrad_chi213322 + F11*F23*chi11*dAdgrad_chi311322 + F11*F23*chi12*dAdgrad_chi312322 + F11*F23*chi13*dAdgrad_chi313322 + F12*F21*chi11*dAdgrad_chi121322 + F12*F21*chi12*dAdgrad_chi122322 + F12*F21*chi13*dAdgrad_chi123322 + F12*F22*chi11*dAdgrad_chi221322 + F12*F22*chi12*dAdgrad_chi222322 + F12*F22*chi13*dAdgrad_chi223322 + F12*F23*chi11*dAdgrad_chi321322 + F12*F23*chi12*dAdgrad_chi322322 + F12*F23*chi13*dAdgrad_chi323322 + F13*F21*chi11*dAdgrad_chi131322 + F13*F21*chi12*dAdgrad_chi132322 + F13*F21*chi13*dAdgrad_chi133322 + F13*F22*chi11*dAdgrad_chi231322 + F13*F22*chi12*dAdgrad_chi232322 + F13*F22*chi13*dAdgrad_chi233322 + F13*F23*chi11*dAdgrad_chi331322 + F13*F23*chi12*dAdgrad_chi332322 + F13*F23*chi13*dAdgrad_chi333322 + _211322;
        dadgrad_chi(9,20) = F11*F21*chi11*dAdgrad_chi111333 + F11*F21*chi12*dAdgrad_chi112333 + F11*F21*chi13*dAdgrad_chi113333 + F11*F22*chi11*dAdgrad_chi211333 + F11*F22*chi12*dAdgrad_chi212333 + F11*F22*chi13*dAdgrad_chi213333 + F11*F23*chi11*dAdgrad_chi311333 + F11*F23*chi12*dAdgrad_chi312333 + F11*F23*chi13*dAdgrad_chi313333 + F12*F21*chi11*dAdgrad_chi121333 + F12*F21*chi12*dAdgrad_chi122333 + F12*F21*chi13*dAdgrad_chi123333 + F12*F22*chi11*dAdgrad_chi221333 + F12*F22*chi12*dAdgrad_chi222333 + F12*F22*chi13*dAdgrad_chi223333 + F12*F23*chi11*dAdgrad_chi321333 + F12*F23*chi12*dAdgrad_chi322333 + F12*F23*chi13*dAdgrad_chi323333 + F13*F21*chi11*dAdgrad_chi131333 + F13*F21*chi12*dAdgrad_chi132333 + F13*F21*chi13*dAdgrad_chi133333 + F13*F22*chi11*dAdgrad_chi231333 + F13*F22*chi12*dAdgrad_chi232333 + F13*F22*chi13*dAdgrad_chi233333 + F13*F23*chi11*dAdgrad_chi331333 + F13*F23*chi12*dAdgrad_chi332333 + F13*F23*chi13*dAdgrad_chi333333 + _211333;
        dadgrad_chi(9,21) = F11*F21*chi11*dAdgrad_chi111323 + F11*F21*chi12*dAdgrad_chi112323 + F11*F21*chi13*dAdgrad_chi113323 + F11*F22*chi11*dAdgrad_chi211323 + F11*F22*chi12*dAdgrad_chi212323 + F11*F22*chi13*dAdgrad_chi213323 + F11*F23*chi11*dAdgrad_chi311323 + F11*F23*chi12*dAdgrad_chi312323 + F11*F23*chi13*dAdgrad_chi313323 + F12*F21*chi11*dAdgrad_chi121323 + F12*F21*chi12*dAdgrad_chi122323 + F12*F21*chi13*dAdgrad_chi123323 + F12*F22*chi11*dAdgrad_chi221323 + F12*F22*chi12*dAdgrad_chi222323 + F12*F22*chi13*dAdgrad_chi223323 + F12*F23*chi11*dAdgrad_chi321323 + F12*F23*chi12*dAdgrad_chi322323 + F12*F23*chi13*dAdgrad_chi323323 + F13*F21*chi11*dAdgrad_chi131323 + F13*F21*chi12*dAdgrad_chi132323 + F13*F21*chi13*dAdgrad_chi133323 + F13*F22*chi11*dAdgrad_chi231323 + F13*F22*chi12*dAdgrad_chi232323 + F13*F22*chi13*dAdgrad_chi233323 + F13*F23*chi11*dAdgrad_chi331323 + F13*F23*chi12*dAdgrad_chi332323 + F13*F23*chi13*dAdgrad_chi333323 + _211323;
        dadgrad_chi(9,22) = F11*F21*chi11*dAdgrad_chi111313 + F11*F21*chi12*dAdgrad_chi112313 + F11*F21*chi13*dAdgrad_chi113313 + F11*F22*chi11*dAdgrad_chi211313 + F11*F22*chi12*dAdgrad_chi212313 + F11*F22*chi13*dAdgrad_chi213313 + F11*F23*chi11*dAdgrad_chi311313 + F11*F23*chi12*dAdgrad_chi312313 + F11*F23*chi13*dAdgrad_chi313313 + F12*F21*chi11*dAdgrad_chi121313 + F12*F21*chi12*dAdgrad_chi122313 + F12*F21*chi13*dAdgrad_chi123313 + F12*F22*chi11*dAdgrad_chi221313 + F12*F22*chi12*dAdgrad_chi222313 + F12*F22*chi13*dAdgrad_chi223313 + F12*F23*chi11*dAdgrad_chi321313 + F12*F23*chi12*dAdgrad_chi322313 + F12*F23*chi13*dAdgrad_chi323313 + F13*F21*chi11*dAdgrad_chi131313 + F13*F21*chi12*dAdgrad_chi132313 + F13*F21*chi13*dAdgrad_chi133313 + F13*F22*chi11*dAdgrad_chi231313 + F13*F22*chi12*dAdgrad_chi232313 + F13*F22*chi13*dAdgrad_chi233313 + F13*F23*chi11*dAdgrad_chi331313 + F13*F23*chi12*dAdgrad_chi332313 + F13*F23*chi13*dAdgrad_chi333313 + _211313;
        dadgrad_chi(9,23) = F11*F21*chi11*dAdgrad_chi111312 + F11*F21*chi12*dAdgrad_chi112312 + F11*F21*chi13*dAdgrad_chi113312 + F11*F22*chi11*dAdgrad_chi211312 + F11*F22*chi12*dAdgrad_chi212312 + F11*F22*chi13*dAdgrad_chi213312 + F11*F23*chi11*dAdgrad_chi311312 + F11*F23*chi12*dAdgrad_chi312312 + F11*F23*chi13*dAdgrad_chi313312 + F12*F21*chi11*dAdgrad_chi121312 + F12*F21*chi12*dAdgrad_chi122312 + F12*F21*chi13*dAdgrad_chi123312 + F12*F22*chi11*dAdgrad_chi221312 + F12*F22*chi12*dAdgrad_chi222312 + F12*F22*chi13*dAdgrad_chi223312 + F12*F23*chi11*dAdgrad_chi321312 + F12*F23*chi12*dAdgrad_chi322312 + F12*F23*chi13*dAdgrad_chi323312 + F13*F21*chi11*dAdgrad_chi131312 + F13*F21*chi12*dAdgrad_chi132312 + F13*F21*chi13*dAdgrad_chi133312 + F13*F22*chi11*dAdgrad_chi231312 + F13*F22*chi12*dAdgrad_chi232312 + F13*F22*chi13*dAdgrad_chi233312 + F13*F23*chi11*dAdgrad_chi331312 + F13*F23*chi12*dAdgrad_chi332312 + F13*F23*chi13*dAdgrad_chi333312 + _211312;
        dadgrad_chi(9,24) = F11*F21*chi11*dAdgrad_chi111332 + F11*F21*chi12*dAdgrad_chi112332 + F11*F21*chi13*dAdgrad_chi113332 + F11*F22*chi11*dAdgrad_chi211332 + F11*F22*chi12*dAdgrad_chi212332 + F11*F22*chi13*dAdgrad_chi213332 + F11*F23*chi11*dAdgrad_chi311332 + F11*F23*chi12*dAdgrad_chi312332 + F11*F23*chi13*dAdgrad_chi313332 + F12*F21*chi11*dAdgrad_chi121332 + F12*F21*chi12*dAdgrad_chi122332 + F12*F21*chi13*dAdgrad_chi123332 + F12*F22*chi11*dAdgrad_chi221332 + F12*F22*chi12*dAdgrad_chi222332 + F12*F22*chi13*dAdgrad_chi223332 + F12*F23*chi11*dAdgrad_chi321332 + F12*F23*chi12*dAdgrad_chi322332 + F12*F23*chi13*dAdgrad_chi323332 + F13*F21*chi11*dAdgrad_chi131332 + F13*F21*chi12*dAdgrad_chi132332 + F13*F21*chi13*dAdgrad_chi133332 + F13*F22*chi11*dAdgrad_chi231332 + F13*F22*chi12*dAdgrad_chi232332 + F13*F22*chi13*dAdgrad_chi233332 + F13*F23*chi11*dAdgrad_chi331332 + F13*F23*chi12*dAdgrad_chi332332 + F13*F23*chi13*dAdgrad_chi333332 + _211332;
        dadgrad_chi(9,25) = F11*F21*chi11*dAdgrad_chi111331 + F11*F21*chi12*dAdgrad_chi112331 + F11*F21*chi13*dAdgrad_chi113331 + F11*F22*chi11*dAdgrad_chi211331 + F11*F22*chi12*dAdgrad_chi212331 + F11*F22*chi13*dAdgrad_chi213331 + F11*F23*chi11*dAdgrad_chi311331 + F11*F23*chi12*dAdgrad_chi312331 + F11*F23*chi13*dAdgrad_chi313331 + F12*F21*chi11*dAdgrad_chi121331 + F12*F21*chi12*dAdgrad_chi122331 + F12*F21*chi13*dAdgrad_chi123331 + F12*F22*chi11*dAdgrad_chi221331 + F12*F22*chi12*dAdgrad_chi222331 + F12*F22*chi13*dAdgrad_chi223331 + F12*F23*chi11*dAdgrad_chi321331 + F12*F23*chi12*dAdgrad_chi322331 + F12*F23*chi13*dAdgrad_chi323331 + F13*F21*chi11*dAdgrad_chi131331 + F13*F21*chi12*dAdgrad_chi132331 + F13*F21*chi13*dAdgrad_chi133331 + F13*F22*chi11*dAdgrad_chi231331 + F13*F22*chi12*dAdgrad_chi232331 + F13*F22*chi13*dAdgrad_chi233331 + F13*F23*chi11*dAdgrad_chi331331 + F13*F23*chi12*dAdgrad_chi332331 + F13*F23*chi13*dAdgrad_chi333331 + _211331;
        dadgrad_chi(9,26) = F11*F21*chi11*dAdgrad_chi111321 + F11*F21*chi12*dAdgrad_chi112321 + F11*F21*chi13*dAdgrad_chi113321 + F11*F22*chi11*dAdgrad_chi211321 + F11*F22*chi12*dAdgrad_chi212321 + F11*F22*chi13*dAdgrad_chi213321 + F11*F23*chi11*dAdgrad_chi311321 + F11*F23*chi12*dAdgrad_chi312321 + F11*F23*chi13*dAdgrad_chi313321 + F12*F21*chi11*dAdgrad_chi121321 + F12*F21*chi12*dAdgrad_chi122321 + F12*F21*chi13*dAdgrad_chi123321 + F12*F22*chi11*dAdgrad_chi221321 + F12*F22*chi12*dAdgrad_chi222321 + F12*F22*chi13*dAdgrad_chi223321 + F12*F23*chi11*dAdgrad_chi321321 + F12*F23*chi12*dAdgrad_chi322321 + F12*F23*chi13*dAdgrad_chi323321 + F13*F21*chi11*dAdgrad_chi131321 + F13*F21*chi12*dAdgrad_chi132321 + F13*F21*chi13*dAdgrad_chi133321 + F13*F22*chi11*dAdgrad_chi231321 + F13*F22*chi12*dAdgrad_chi232321 + F13*F22*chi13*dAdgrad_chi233321 + F13*F23*chi11*dAdgrad_chi331321 + F13*F23*chi12*dAdgrad_chi332321 + F13*F23*chi13*dAdgrad_chi333321 + _211321;
        dadgrad_chi(10,0) = F21*F21*chi21*dAdgrad_chi111111 + F21*F21*chi22*dAdgrad_chi112111 + F21*F21*chi23*dAdgrad_chi113111 + F21*F22*chi21*dAdgrad_chi121111 + F21*F22*chi21*dAdgrad_chi211111 + F21*F22*chi22*dAdgrad_chi122111 + F21*F22*chi22*dAdgrad_chi212111 + F21*F22*chi23*dAdgrad_chi123111 + F21*F22*chi23*dAdgrad_chi213111 + F21*F23*chi21*dAdgrad_chi131111 + F21*F23*chi21*dAdgrad_chi311111 + F21*F23*chi22*dAdgrad_chi132111 + F21*F23*chi22*dAdgrad_chi312111 + F21*F23*chi23*dAdgrad_chi133111 + F21*F23*chi23*dAdgrad_chi313111 + F22*F22*chi21*dAdgrad_chi221111 + F22*F22*chi22*dAdgrad_chi222111 + F22*F22*chi23*dAdgrad_chi223111 + F22*F23*chi21*dAdgrad_chi231111 + F22*F23*chi21*dAdgrad_chi321111 + F22*F23*chi22*dAdgrad_chi232111 + F22*F23*chi22*dAdgrad_chi322111 + F22*F23*chi23*dAdgrad_chi233111 + F22*F23*chi23*dAdgrad_chi323111 + F23*F23*chi21*dAdgrad_chi331111 + F23*F23*chi22*dAdgrad_chi332111 + F23*F23*chi23*dAdgrad_chi333111 + _222111;
        dadgrad_chi(10,1) = F21*F21*chi21*dAdgrad_chi111122 + F21*F21*chi22*dAdgrad_chi112122 + F21*F21*chi23*dAdgrad_chi113122 + F21*F22*chi21*dAdgrad_chi121122 + F21*F22*chi21*dAdgrad_chi211122 + F21*F22*chi22*dAdgrad_chi122122 + F21*F22*chi22*dAdgrad_chi212122 + F21*F22*chi23*dAdgrad_chi123122 + F21*F22*chi23*dAdgrad_chi213122 + F21*F23*chi21*dAdgrad_chi131122 + F21*F23*chi21*dAdgrad_chi311122 + F21*F23*chi22*dAdgrad_chi132122 + F21*F23*chi22*dAdgrad_chi312122 + F21*F23*chi23*dAdgrad_chi133122 + F21*F23*chi23*dAdgrad_chi313122 + F22*F22*chi21*dAdgrad_chi221122 + F22*F22*chi22*dAdgrad_chi222122 + F22*F22*chi23*dAdgrad_chi223122 + F22*F23*chi21*dAdgrad_chi231122 + F22*F23*chi21*dAdgrad_chi321122 + F22*F23*chi22*dAdgrad_chi232122 + F22*F23*chi22*dAdgrad_chi322122 + F22*F23*chi23*dAdgrad_chi233122 + F22*F23*chi23*dAdgrad_chi323122 + F23*F23*chi21*dAdgrad_chi331122 + F23*F23*chi22*dAdgrad_chi332122 + F23*F23*chi23*dAdgrad_chi333122 + _222122;
        dadgrad_chi(10,2) = F21*F21*chi21*dAdgrad_chi111133 + F21*F21*chi22*dAdgrad_chi112133 + F21*F21*chi23*dAdgrad_chi113133 + F21*F22*chi21*dAdgrad_chi121133 + F21*F22*chi21*dAdgrad_chi211133 + F21*F22*chi22*dAdgrad_chi122133 + F21*F22*chi22*dAdgrad_chi212133 + F21*F22*chi23*dAdgrad_chi123133 + F21*F22*chi23*dAdgrad_chi213133 + F21*F23*chi21*dAdgrad_chi131133 + F21*F23*chi21*dAdgrad_chi311133 + F21*F23*chi22*dAdgrad_chi132133 + F21*F23*chi22*dAdgrad_chi312133 + F21*F23*chi23*dAdgrad_chi133133 + F21*F23*chi23*dAdgrad_chi313133 + F22*F22*chi21*dAdgrad_chi221133 + F22*F22*chi22*dAdgrad_chi222133 + F22*F22*chi23*dAdgrad_chi223133 + F22*F23*chi21*dAdgrad_chi231133 + F22*F23*chi21*dAdgrad_chi321133 + F22*F23*chi22*dAdgrad_chi232133 + F22*F23*chi22*dAdgrad_chi322133 + F22*F23*chi23*dAdgrad_chi233133 + F22*F23*chi23*dAdgrad_chi323133 + F23*F23*chi21*dAdgrad_chi331133 + F23*F23*chi22*dAdgrad_chi332133 + F23*F23*chi23*dAdgrad_chi333133 + _222133;
        dadgrad_chi(10,3) = F21*F21*chi21*dAdgrad_chi111123 + F21*F21*chi22*dAdgrad_chi112123 + F21*F21*chi23*dAdgrad_chi113123 + F21*F22*chi21*dAdgrad_chi121123 + F21*F22*chi21*dAdgrad_chi211123 + F21*F22*chi22*dAdgrad_chi122123 + F21*F22*chi22*dAdgrad_chi212123 + F21*F22*chi23*dAdgrad_chi123123 + F21*F22*chi23*dAdgrad_chi213123 + F21*F23*chi21*dAdgrad_chi131123 + F21*F23*chi21*dAdgrad_chi311123 + F21*F23*chi22*dAdgrad_chi132123 + F21*F23*chi22*dAdgrad_chi312123 + F21*F23*chi23*dAdgrad_chi133123 + F21*F23*chi23*dAdgrad_chi313123 + F22*F22*chi21*dAdgrad_chi221123 + F22*F22*chi22*dAdgrad_chi222123 + F22*F22*chi23*dAdgrad_chi223123 + F22*F23*chi21*dAdgrad_chi231123 + F22*F23*chi21*dAdgrad_chi321123 + F22*F23*chi22*dAdgrad_chi232123 + F22*F23*chi22*dAdgrad_chi322123 + F22*F23*chi23*dAdgrad_chi233123 + F22*F23*chi23*dAdgrad_chi323123 + F23*F23*chi21*dAdgrad_chi331123 + F23*F23*chi22*dAdgrad_chi332123 + F23*F23*chi23*dAdgrad_chi333123 + _222123;
        dadgrad_chi(10,4) = F21*F21*chi21*dAdgrad_chi111113 + F21*F21*chi22*dAdgrad_chi112113 + F21*F21*chi23*dAdgrad_chi113113 + F21*F22*chi21*dAdgrad_chi121113 + F21*F22*chi21*dAdgrad_chi211113 + F21*F22*chi22*dAdgrad_chi122113 + F21*F22*chi22*dAdgrad_chi212113 + F21*F22*chi23*dAdgrad_chi123113 + F21*F22*chi23*dAdgrad_chi213113 + F21*F23*chi21*dAdgrad_chi131113 + F21*F23*chi21*dAdgrad_chi311113 + F21*F23*chi22*dAdgrad_chi132113 + F21*F23*chi22*dAdgrad_chi312113 + F21*F23*chi23*dAdgrad_chi133113 + F21*F23*chi23*dAdgrad_chi313113 + F22*F22*chi21*dAdgrad_chi221113 + F22*F22*chi22*dAdgrad_chi222113 + F22*F22*chi23*dAdgrad_chi223113 + F22*F23*chi21*dAdgrad_chi231113 + F22*F23*chi21*dAdgrad_chi321113 + F22*F23*chi22*dAdgrad_chi232113 + F22*F23*chi22*dAdgrad_chi322113 + F22*F23*chi23*dAdgrad_chi233113 + F22*F23*chi23*dAdgrad_chi323113 + F23*F23*chi21*dAdgrad_chi331113 + F23*F23*chi22*dAdgrad_chi332113 + F23*F23*chi23*dAdgrad_chi333113 + _222113;
        dadgrad_chi(10,5) = F21*F21*chi21*dAdgrad_chi111112 + F21*F21*chi22*dAdgrad_chi112112 + F21*F21*chi23*dAdgrad_chi113112 + F21*F22*chi21*dAdgrad_chi121112 + F21*F22*chi21*dAdgrad_chi211112 + F21*F22*chi22*dAdgrad_chi122112 + F21*F22*chi22*dAdgrad_chi212112 + F21*F22*chi23*dAdgrad_chi123112 + F21*F22*chi23*dAdgrad_chi213112 + F21*F23*chi21*dAdgrad_chi131112 + F21*F23*chi21*dAdgrad_chi311112 + F21*F23*chi22*dAdgrad_chi132112 + F21*F23*chi22*dAdgrad_chi312112 + F21*F23*chi23*dAdgrad_chi133112 + F21*F23*chi23*dAdgrad_chi313112 + F22*F22*chi21*dAdgrad_chi221112 + F22*F22*chi22*dAdgrad_chi222112 + F22*F22*chi23*dAdgrad_chi223112 + F22*F23*chi21*dAdgrad_chi231112 + F22*F23*chi21*dAdgrad_chi321112 + F22*F23*chi22*dAdgrad_chi232112 + F22*F23*chi22*dAdgrad_chi322112 + F22*F23*chi23*dAdgrad_chi233112 + F22*F23*chi23*dAdgrad_chi323112 + F23*F23*chi21*dAdgrad_chi331112 + F23*F23*chi22*dAdgrad_chi332112 + F23*F23*chi23*dAdgrad_chi333112 + _222112;
        dadgrad_chi(10,6) = F21*F21*chi21*dAdgrad_chi111132 + F21*F21*chi22*dAdgrad_chi112132 + F21*F21*chi23*dAdgrad_chi113132 + F21*F22*chi21*dAdgrad_chi121132 + F21*F22*chi21*dAdgrad_chi211132 + F21*F22*chi22*dAdgrad_chi122132 + F21*F22*chi22*dAdgrad_chi212132 + F21*F22*chi23*dAdgrad_chi123132 + F21*F22*chi23*dAdgrad_chi213132 + F21*F23*chi21*dAdgrad_chi131132 + F21*F23*chi21*dAdgrad_chi311132 + F21*F23*chi22*dAdgrad_chi132132 + F21*F23*chi22*dAdgrad_chi312132 + F21*F23*chi23*dAdgrad_chi133132 + F21*F23*chi23*dAdgrad_chi313132 + F22*F22*chi21*dAdgrad_chi221132 + F22*F22*chi22*dAdgrad_chi222132 + F22*F22*chi23*dAdgrad_chi223132 + F22*F23*chi21*dAdgrad_chi231132 + F22*F23*chi21*dAdgrad_chi321132 + F22*F23*chi22*dAdgrad_chi232132 + F22*F23*chi22*dAdgrad_chi322132 + F22*F23*chi23*dAdgrad_chi233132 + F22*F23*chi23*dAdgrad_chi323132 + F23*F23*chi21*dAdgrad_chi331132 + F23*F23*chi22*dAdgrad_chi332132 + F23*F23*chi23*dAdgrad_chi333132 + _222132;
        dadgrad_chi(10,7) = F21*F21*chi21*dAdgrad_chi111131 + F21*F21*chi22*dAdgrad_chi112131 + F21*F21*chi23*dAdgrad_chi113131 + F21*F22*chi21*dAdgrad_chi121131 + F21*F22*chi21*dAdgrad_chi211131 + F21*F22*chi22*dAdgrad_chi122131 + F21*F22*chi22*dAdgrad_chi212131 + F21*F22*chi23*dAdgrad_chi123131 + F21*F22*chi23*dAdgrad_chi213131 + F21*F23*chi21*dAdgrad_chi131131 + F21*F23*chi21*dAdgrad_chi311131 + F21*F23*chi22*dAdgrad_chi132131 + F21*F23*chi22*dAdgrad_chi312131 + F21*F23*chi23*dAdgrad_chi133131 + F21*F23*chi23*dAdgrad_chi313131 + F22*F22*chi21*dAdgrad_chi221131 + F22*F22*chi22*dAdgrad_chi222131 + F22*F22*chi23*dAdgrad_chi223131 + F22*F23*chi21*dAdgrad_chi231131 + F22*F23*chi21*dAdgrad_chi321131 + F22*F23*chi22*dAdgrad_chi232131 + F22*F23*chi22*dAdgrad_chi322131 + F22*F23*chi23*dAdgrad_chi233131 + F22*F23*chi23*dAdgrad_chi323131 + F23*F23*chi21*dAdgrad_chi331131 + F23*F23*chi22*dAdgrad_chi332131 + F23*F23*chi23*dAdgrad_chi333131 + _222131;
        dadgrad_chi(10,8) = F21*F21*chi21*dAdgrad_chi111121 + F21*F21*chi22*dAdgrad_chi112121 + F21*F21*chi23*dAdgrad_chi113121 + F21*F22*chi21*dAdgrad_chi121121 + F21*F22*chi21*dAdgrad_chi211121 + F21*F22*chi22*dAdgrad_chi122121 + F21*F22*chi22*dAdgrad_chi212121 + F21*F22*chi23*dAdgrad_chi123121 + F21*F22*chi23*dAdgrad_chi213121 + F21*F23*chi21*dAdgrad_chi131121 + F21*F23*chi21*dAdgrad_chi311121 + F21*F23*chi22*dAdgrad_chi132121 + F21*F23*chi22*dAdgrad_chi312121 + F21*F23*chi23*dAdgrad_chi133121 + F21*F23*chi23*dAdgrad_chi313121 + F22*F22*chi21*dAdgrad_chi221121 + F22*F22*chi22*dAdgrad_chi222121 + F22*F22*chi23*dAdgrad_chi223121 + F22*F23*chi21*dAdgrad_chi231121 + F22*F23*chi21*dAdgrad_chi321121 + F22*F23*chi22*dAdgrad_chi232121 + F22*F23*chi22*dAdgrad_chi322121 + F22*F23*chi23*dAdgrad_chi233121 + F22*F23*chi23*dAdgrad_chi323121 + F23*F23*chi21*dAdgrad_chi331121 + F23*F23*chi22*dAdgrad_chi332121 + F23*F23*chi23*dAdgrad_chi333121 + _222121;
        dadgrad_chi(10,9) = F21*F21*chi21*dAdgrad_chi111211 + F21*F21*chi22*dAdgrad_chi112211 + F21*F21*chi23*dAdgrad_chi113211 + F21*F22*chi21*dAdgrad_chi121211 + F21*F22*chi21*dAdgrad_chi211211 + F21*F22*chi22*dAdgrad_chi122211 + F21*F22*chi22*dAdgrad_chi212211 + F21*F22*chi23*dAdgrad_chi123211 + F21*F22*chi23*dAdgrad_chi213211 + F21*F23*chi21*dAdgrad_chi131211 + F21*F23*chi21*dAdgrad_chi311211 + F21*F23*chi22*dAdgrad_chi132211 + F21*F23*chi22*dAdgrad_chi312211 + F21*F23*chi23*dAdgrad_chi133211 + F21*F23*chi23*dAdgrad_chi313211 + F22*F22*chi21*dAdgrad_chi221211 + F22*F22*chi22*dAdgrad_chi222211 + F22*F22*chi23*dAdgrad_chi223211 + F22*F23*chi21*dAdgrad_chi231211 + F22*F23*chi21*dAdgrad_chi321211 + F22*F23*chi22*dAdgrad_chi232211 + F22*F23*chi22*dAdgrad_chi322211 + F22*F23*chi23*dAdgrad_chi233211 + F22*F23*chi23*dAdgrad_chi323211 + F23*F23*chi21*dAdgrad_chi331211 + F23*F23*chi22*dAdgrad_chi332211 + F23*F23*chi23*dAdgrad_chi333211 + _222211;
        dadgrad_chi(10,10) = F21*F21*chi21*dAdgrad_chi111222 + F21*F21*chi22*dAdgrad_chi112222 + F21*F21*chi23*dAdgrad_chi113222 + F21*F22*chi21*dAdgrad_chi121222 + F21*F22*chi21*dAdgrad_chi211222 + F21*F22*chi22*dAdgrad_chi122222 + F21*F22*chi22*dAdgrad_chi212222 + F21*F22*chi23*dAdgrad_chi123222 + F21*F22*chi23*dAdgrad_chi213222 + F21*F23*chi21*dAdgrad_chi131222 + F21*F23*chi21*dAdgrad_chi311222 + F21*F23*chi22*dAdgrad_chi132222 + F21*F23*chi22*dAdgrad_chi312222 + F21*F23*chi23*dAdgrad_chi133222 + F21*F23*chi23*dAdgrad_chi313222 + F22*F22*chi21*dAdgrad_chi221222 + F22*F22*chi22*dAdgrad_chi222222 + F22*F22*chi23*dAdgrad_chi223222 + F22*F23*chi21*dAdgrad_chi231222 + F22*F23*chi21*dAdgrad_chi321222 + F22*F23*chi22*dAdgrad_chi232222 + F22*F23*chi22*dAdgrad_chi322222 + F22*F23*chi23*dAdgrad_chi233222 + F22*F23*chi23*dAdgrad_chi323222 + F23*F23*chi21*dAdgrad_chi331222 + F23*F23*chi22*dAdgrad_chi332222 + F23*F23*chi23*dAdgrad_chi333222 + _222222;
        dadgrad_chi(10,11) = F21*F21*chi21*dAdgrad_chi111233 + F21*F21*chi22*dAdgrad_chi112233 + F21*F21*chi23*dAdgrad_chi113233 + F21*F22*chi21*dAdgrad_chi121233 + F21*F22*chi21*dAdgrad_chi211233 + F21*F22*chi22*dAdgrad_chi122233 + F21*F22*chi22*dAdgrad_chi212233 + F21*F22*chi23*dAdgrad_chi123233 + F21*F22*chi23*dAdgrad_chi213233 + F21*F23*chi21*dAdgrad_chi131233 + F21*F23*chi21*dAdgrad_chi311233 + F21*F23*chi22*dAdgrad_chi132233 + F21*F23*chi22*dAdgrad_chi312233 + F21*F23*chi23*dAdgrad_chi133233 + F21*F23*chi23*dAdgrad_chi313233 + F22*F22*chi21*dAdgrad_chi221233 + F22*F22*chi22*dAdgrad_chi222233 + F22*F22*chi23*dAdgrad_chi223233 + F22*F23*chi21*dAdgrad_chi231233 + F22*F23*chi21*dAdgrad_chi321233 + F22*F23*chi22*dAdgrad_chi232233 + F22*F23*chi22*dAdgrad_chi322233 + F22*F23*chi23*dAdgrad_chi233233 + F22*F23*chi23*dAdgrad_chi323233 + F23*F23*chi21*dAdgrad_chi331233 + F23*F23*chi22*dAdgrad_chi332233 + F23*F23*chi23*dAdgrad_chi333233 + _222233;
        dadgrad_chi(10,12) = F21*F21*chi21*dAdgrad_chi111223 + F21*F21*chi22*dAdgrad_chi112223 + F21*F21*chi23*dAdgrad_chi113223 + F21*F22*chi21*dAdgrad_chi121223 + F21*F22*chi21*dAdgrad_chi211223 + F21*F22*chi22*dAdgrad_chi122223 + F21*F22*chi22*dAdgrad_chi212223 + F21*F22*chi23*dAdgrad_chi123223 + F21*F22*chi23*dAdgrad_chi213223 + F21*F23*chi21*dAdgrad_chi131223 + F21*F23*chi21*dAdgrad_chi311223 + F21*F23*chi22*dAdgrad_chi132223 + F21*F23*chi22*dAdgrad_chi312223 + F21*F23*chi23*dAdgrad_chi133223 + F21*F23*chi23*dAdgrad_chi313223 + F22*F22*chi21*dAdgrad_chi221223 + F22*F22*chi22*dAdgrad_chi222223 + F22*F22*chi23*dAdgrad_chi223223 + F22*F23*chi21*dAdgrad_chi231223 + F22*F23*chi21*dAdgrad_chi321223 + F22*F23*chi22*dAdgrad_chi232223 + F22*F23*chi22*dAdgrad_chi322223 + F22*F23*chi23*dAdgrad_chi233223 + F22*F23*chi23*dAdgrad_chi323223 + F23*F23*chi21*dAdgrad_chi331223 + F23*F23*chi22*dAdgrad_chi332223 + F23*F23*chi23*dAdgrad_chi333223 + _222223;
        dadgrad_chi(10,13) = F21*F21*chi21*dAdgrad_chi111213 + F21*F21*chi22*dAdgrad_chi112213 + F21*F21*chi23*dAdgrad_chi113213 + F21*F22*chi21*dAdgrad_chi121213 + F21*F22*chi21*dAdgrad_chi211213 + F21*F22*chi22*dAdgrad_chi122213 + F21*F22*chi22*dAdgrad_chi212213 + F21*F22*chi23*dAdgrad_chi123213 + F21*F22*chi23*dAdgrad_chi213213 + F21*F23*chi21*dAdgrad_chi131213 + F21*F23*chi21*dAdgrad_chi311213 + F21*F23*chi22*dAdgrad_chi132213 + F21*F23*chi22*dAdgrad_chi312213 + F21*F23*chi23*dAdgrad_chi133213 + F21*F23*chi23*dAdgrad_chi313213 + F22*F22*chi21*dAdgrad_chi221213 + F22*F22*chi22*dAdgrad_chi222213 + F22*F22*chi23*dAdgrad_chi223213 + F22*F23*chi21*dAdgrad_chi231213 + F22*F23*chi21*dAdgrad_chi321213 + F22*F23*chi22*dAdgrad_chi232213 + F22*F23*chi22*dAdgrad_chi322213 + F22*F23*chi23*dAdgrad_chi233213 + F22*F23*chi23*dAdgrad_chi323213 + F23*F23*chi21*dAdgrad_chi331213 + F23*F23*chi22*dAdgrad_chi332213 + F23*F23*chi23*dAdgrad_chi333213 + _222213;
        dadgrad_chi(10,14) = F21*F21*chi21*dAdgrad_chi111212 + F21*F21*chi22*dAdgrad_chi112212 + F21*F21*chi23*dAdgrad_chi113212 + F21*F22*chi21*dAdgrad_chi121212 + F21*F22*chi21*dAdgrad_chi211212 + F21*F22*chi22*dAdgrad_chi122212 + F21*F22*chi22*dAdgrad_chi212212 + F21*F22*chi23*dAdgrad_chi123212 + F21*F22*chi23*dAdgrad_chi213212 + F21*F23*chi21*dAdgrad_chi131212 + F21*F23*chi21*dAdgrad_chi311212 + F21*F23*chi22*dAdgrad_chi132212 + F21*F23*chi22*dAdgrad_chi312212 + F21*F23*chi23*dAdgrad_chi133212 + F21*F23*chi23*dAdgrad_chi313212 + F22*F22*chi21*dAdgrad_chi221212 + F22*F22*chi22*dAdgrad_chi222212 + F22*F22*chi23*dAdgrad_chi223212 + F22*F23*chi21*dAdgrad_chi231212 + F22*F23*chi21*dAdgrad_chi321212 + F22*F23*chi22*dAdgrad_chi232212 + F22*F23*chi22*dAdgrad_chi322212 + F22*F23*chi23*dAdgrad_chi233212 + F22*F23*chi23*dAdgrad_chi323212 + F23*F23*chi21*dAdgrad_chi331212 + F23*F23*chi22*dAdgrad_chi332212 + F23*F23*chi23*dAdgrad_chi333212 + _222212;
        dadgrad_chi(10,15) = F21*F21*chi21*dAdgrad_chi111232 + F21*F21*chi22*dAdgrad_chi112232 + F21*F21*chi23*dAdgrad_chi113232 + F21*F22*chi21*dAdgrad_chi121232 + F21*F22*chi21*dAdgrad_chi211232 + F21*F22*chi22*dAdgrad_chi122232 + F21*F22*chi22*dAdgrad_chi212232 + F21*F22*chi23*dAdgrad_chi123232 + F21*F22*chi23*dAdgrad_chi213232 + F21*F23*chi21*dAdgrad_chi131232 + F21*F23*chi21*dAdgrad_chi311232 + F21*F23*chi22*dAdgrad_chi132232 + F21*F23*chi22*dAdgrad_chi312232 + F21*F23*chi23*dAdgrad_chi133232 + F21*F23*chi23*dAdgrad_chi313232 + F22*F22*chi21*dAdgrad_chi221232 + F22*F22*chi22*dAdgrad_chi222232 + F22*F22*chi23*dAdgrad_chi223232 + F22*F23*chi21*dAdgrad_chi231232 + F22*F23*chi21*dAdgrad_chi321232 + F22*F23*chi22*dAdgrad_chi232232 + F22*F23*chi22*dAdgrad_chi322232 + F22*F23*chi23*dAdgrad_chi233232 + F22*F23*chi23*dAdgrad_chi323232 + F23*F23*chi21*dAdgrad_chi331232 + F23*F23*chi22*dAdgrad_chi332232 + F23*F23*chi23*dAdgrad_chi333232 + _222232;
        dadgrad_chi(10,16) = F21*F21*chi21*dAdgrad_chi111231 + F21*F21*chi22*dAdgrad_chi112231 + F21*F21*chi23*dAdgrad_chi113231 + F21*F22*chi21*dAdgrad_chi121231 + F21*F22*chi21*dAdgrad_chi211231 + F21*F22*chi22*dAdgrad_chi122231 + F21*F22*chi22*dAdgrad_chi212231 + F21*F22*chi23*dAdgrad_chi123231 + F21*F22*chi23*dAdgrad_chi213231 + F21*F23*chi21*dAdgrad_chi131231 + F21*F23*chi21*dAdgrad_chi311231 + F21*F23*chi22*dAdgrad_chi132231 + F21*F23*chi22*dAdgrad_chi312231 + F21*F23*chi23*dAdgrad_chi133231 + F21*F23*chi23*dAdgrad_chi313231 + F22*F22*chi21*dAdgrad_chi221231 + F22*F22*chi22*dAdgrad_chi222231 + F22*F22*chi23*dAdgrad_chi223231 + F22*F23*chi21*dAdgrad_chi231231 + F22*F23*chi21*dAdgrad_chi321231 + F22*F23*chi22*dAdgrad_chi232231 + F22*F23*chi22*dAdgrad_chi322231 + F22*F23*chi23*dAdgrad_chi233231 + F22*F23*chi23*dAdgrad_chi323231 + F23*F23*chi21*dAdgrad_chi331231 + F23*F23*chi22*dAdgrad_chi332231 + F23*F23*chi23*dAdgrad_chi333231 + _222231;
        dadgrad_chi(10,17) = F21*F21*chi21*dAdgrad_chi111221 + F21*F21*chi22*dAdgrad_chi112221 + F21*F21*chi23*dAdgrad_chi113221 + F21*F22*chi21*dAdgrad_chi121221 + F21*F22*chi21*dAdgrad_chi211221 + F21*F22*chi22*dAdgrad_chi122221 + F21*F22*chi22*dAdgrad_chi212221 + F21*F22*chi23*dAdgrad_chi123221 + F21*F22*chi23*dAdgrad_chi213221 + F21*F23*chi21*dAdgrad_chi131221 + F21*F23*chi21*dAdgrad_chi311221 + F21*F23*chi22*dAdgrad_chi132221 + F21*F23*chi22*dAdgrad_chi312221 + F21*F23*chi23*dAdgrad_chi133221 + F21*F23*chi23*dAdgrad_chi313221 + F22*F22*chi21*dAdgrad_chi221221 + F22*F22*chi22*dAdgrad_chi222221 + F22*F22*chi23*dAdgrad_chi223221 + F22*F23*chi21*dAdgrad_chi231221 + F22*F23*chi21*dAdgrad_chi321221 + F22*F23*chi22*dAdgrad_chi232221 + F22*F23*chi22*dAdgrad_chi322221 + F22*F23*chi23*dAdgrad_chi233221 + F22*F23*chi23*dAdgrad_chi323221 + F23*F23*chi21*dAdgrad_chi331221 + F23*F23*chi22*dAdgrad_chi332221 + F23*F23*chi23*dAdgrad_chi333221 + _222221;
        dadgrad_chi(10,18) = F21*F21*chi21*dAdgrad_chi111311 + F21*F21*chi22*dAdgrad_chi112311 + F21*F21*chi23*dAdgrad_chi113311 + F21*F22*chi21*dAdgrad_chi121311 + F21*F22*chi21*dAdgrad_chi211311 + F21*F22*chi22*dAdgrad_chi122311 + F21*F22*chi22*dAdgrad_chi212311 + F21*F22*chi23*dAdgrad_chi123311 + F21*F22*chi23*dAdgrad_chi213311 + F21*F23*chi21*dAdgrad_chi131311 + F21*F23*chi21*dAdgrad_chi311311 + F21*F23*chi22*dAdgrad_chi132311 + F21*F23*chi22*dAdgrad_chi312311 + F21*F23*chi23*dAdgrad_chi133311 + F21*F23*chi23*dAdgrad_chi313311 + F22*F22*chi21*dAdgrad_chi221311 + F22*F22*chi22*dAdgrad_chi222311 + F22*F22*chi23*dAdgrad_chi223311 + F22*F23*chi21*dAdgrad_chi231311 + F22*F23*chi21*dAdgrad_chi321311 + F22*F23*chi22*dAdgrad_chi232311 + F22*F23*chi22*dAdgrad_chi322311 + F22*F23*chi23*dAdgrad_chi233311 + F22*F23*chi23*dAdgrad_chi323311 + F23*F23*chi21*dAdgrad_chi331311 + F23*F23*chi22*dAdgrad_chi332311 + F23*F23*chi23*dAdgrad_chi333311 + _222311;
        dadgrad_chi(10,19) = F21*F21*chi21*dAdgrad_chi111322 + F21*F21*chi22*dAdgrad_chi112322 + F21*F21*chi23*dAdgrad_chi113322 + F21*F22*chi21*dAdgrad_chi121322 + F21*F22*chi21*dAdgrad_chi211322 + F21*F22*chi22*dAdgrad_chi122322 + F21*F22*chi22*dAdgrad_chi212322 + F21*F22*chi23*dAdgrad_chi123322 + F21*F22*chi23*dAdgrad_chi213322 + F21*F23*chi21*dAdgrad_chi131322 + F21*F23*chi21*dAdgrad_chi311322 + F21*F23*chi22*dAdgrad_chi132322 + F21*F23*chi22*dAdgrad_chi312322 + F21*F23*chi23*dAdgrad_chi133322 + F21*F23*chi23*dAdgrad_chi313322 + F22*F22*chi21*dAdgrad_chi221322 + F22*F22*chi22*dAdgrad_chi222322 + F22*F22*chi23*dAdgrad_chi223322 + F22*F23*chi21*dAdgrad_chi231322 + F22*F23*chi21*dAdgrad_chi321322 + F22*F23*chi22*dAdgrad_chi232322 + F22*F23*chi22*dAdgrad_chi322322 + F22*F23*chi23*dAdgrad_chi233322 + F22*F23*chi23*dAdgrad_chi323322 + F23*F23*chi21*dAdgrad_chi331322 + F23*F23*chi22*dAdgrad_chi332322 + F23*F23*chi23*dAdgrad_chi333322 + _222322;
        dadgrad_chi(10,20) = F21*F21*chi21*dAdgrad_chi111333 + F21*F21*chi22*dAdgrad_chi112333 + F21*F21*chi23*dAdgrad_chi113333 + F21*F22*chi21*dAdgrad_chi121333 + F21*F22*chi21*dAdgrad_chi211333 + F21*F22*chi22*dAdgrad_chi122333 + F21*F22*chi22*dAdgrad_chi212333 + F21*F22*chi23*dAdgrad_chi123333 + F21*F22*chi23*dAdgrad_chi213333 + F21*F23*chi21*dAdgrad_chi131333 + F21*F23*chi21*dAdgrad_chi311333 + F21*F23*chi22*dAdgrad_chi132333 + F21*F23*chi22*dAdgrad_chi312333 + F21*F23*chi23*dAdgrad_chi133333 + F21*F23*chi23*dAdgrad_chi313333 + F22*F22*chi21*dAdgrad_chi221333 + F22*F22*chi22*dAdgrad_chi222333 + F22*F22*chi23*dAdgrad_chi223333 + F22*F23*chi21*dAdgrad_chi231333 + F22*F23*chi21*dAdgrad_chi321333 + F22*F23*chi22*dAdgrad_chi232333 + F22*F23*chi22*dAdgrad_chi322333 + F22*F23*chi23*dAdgrad_chi233333 + F22*F23*chi23*dAdgrad_chi323333 + F23*F23*chi21*dAdgrad_chi331333 + F23*F23*chi22*dAdgrad_chi332333 + F23*F23*chi23*dAdgrad_chi333333 + _222333;
        dadgrad_chi(10,21) = F21*F21*chi21*dAdgrad_chi111323 + F21*F21*chi22*dAdgrad_chi112323 + F21*F21*chi23*dAdgrad_chi113323 + F21*F22*chi21*dAdgrad_chi121323 + F21*F22*chi21*dAdgrad_chi211323 + F21*F22*chi22*dAdgrad_chi122323 + F21*F22*chi22*dAdgrad_chi212323 + F21*F22*chi23*dAdgrad_chi123323 + F21*F22*chi23*dAdgrad_chi213323 + F21*F23*chi21*dAdgrad_chi131323 + F21*F23*chi21*dAdgrad_chi311323 + F21*F23*chi22*dAdgrad_chi132323 + F21*F23*chi22*dAdgrad_chi312323 + F21*F23*chi23*dAdgrad_chi133323 + F21*F23*chi23*dAdgrad_chi313323 + F22*F22*chi21*dAdgrad_chi221323 + F22*F22*chi22*dAdgrad_chi222323 + F22*F22*chi23*dAdgrad_chi223323 + F22*F23*chi21*dAdgrad_chi231323 + F22*F23*chi21*dAdgrad_chi321323 + F22*F23*chi22*dAdgrad_chi232323 + F22*F23*chi22*dAdgrad_chi322323 + F22*F23*chi23*dAdgrad_chi233323 + F22*F23*chi23*dAdgrad_chi323323 + F23*F23*chi21*dAdgrad_chi331323 + F23*F23*chi22*dAdgrad_chi332323 + F23*F23*chi23*dAdgrad_chi333323 + _222323;
        dadgrad_chi(10,22) = F21*F21*chi21*dAdgrad_chi111313 + F21*F21*chi22*dAdgrad_chi112313 + F21*F21*chi23*dAdgrad_chi113313 + F21*F22*chi21*dAdgrad_chi121313 + F21*F22*chi21*dAdgrad_chi211313 + F21*F22*chi22*dAdgrad_chi122313 + F21*F22*chi22*dAdgrad_chi212313 + F21*F22*chi23*dAdgrad_chi123313 + F21*F22*chi23*dAdgrad_chi213313 + F21*F23*chi21*dAdgrad_chi131313 + F21*F23*chi21*dAdgrad_chi311313 + F21*F23*chi22*dAdgrad_chi132313 + F21*F23*chi22*dAdgrad_chi312313 + F21*F23*chi23*dAdgrad_chi133313 + F21*F23*chi23*dAdgrad_chi313313 + F22*F22*chi21*dAdgrad_chi221313 + F22*F22*chi22*dAdgrad_chi222313 + F22*F22*chi23*dAdgrad_chi223313 + F22*F23*chi21*dAdgrad_chi231313 + F22*F23*chi21*dAdgrad_chi321313 + F22*F23*chi22*dAdgrad_chi232313 + F22*F23*chi22*dAdgrad_chi322313 + F22*F23*chi23*dAdgrad_chi233313 + F22*F23*chi23*dAdgrad_chi323313 + F23*F23*chi21*dAdgrad_chi331313 + F23*F23*chi22*dAdgrad_chi332313 + F23*F23*chi23*dAdgrad_chi333313 + _222313;
        dadgrad_chi(10,23) = F21*F21*chi21*dAdgrad_chi111312 + F21*F21*chi22*dAdgrad_chi112312 + F21*F21*chi23*dAdgrad_chi113312 + F21*F22*chi21*dAdgrad_chi121312 + F21*F22*chi21*dAdgrad_chi211312 + F21*F22*chi22*dAdgrad_chi122312 + F21*F22*chi22*dAdgrad_chi212312 + F21*F22*chi23*dAdgrad_chi123312 + F21*F22*chi23*dAdgrad_chi213312 + F21*F23*chi21*dAdgrad_chi131312 + F21*F23*chi21*dAdgrad_chi311312 + F21*F23*chi22*dAdgrad_chi132312 + F21*F23*chi22*dAdgrad_chi312312 + F21*F23*chi23*dAdgrad_chi133312 + F21*F23*chi23*dAdgrad_chi313312 + F22*F22*chi21*dAdgrad_chi221312 + F22*F22*chi22*dAdgrad_chi222312 + F22*F22*chi23*dAdgrad_chi223312 + F22*F23*chi21*dAdgrad_chi231312 + F22*F23*chi21*dAdgrad_chi321312 + F22*F23*chi22*dAdgrad_chi232312 + F22*F23*chi22*dAdgrad_chi322312 + F22*F23*chi23*dAdgrad_chi233312 + F22*F23*chi23*dAdgrad_chi323312 + F23*F23*chi21*dAdgrad_chi331312 + F23*F23*chi22*dAdgrad_chi332312 + F23*F23*chi23*dAdgrad_chi333312 + _222312;
        dadgrad_chi(10,24) = F21*F21*chi21*dAdgrad_chi111332 + F21*F21*chi22*dAdgrad_chi112332 + F21*F21*chi23*dAdgrad_chi113332 + F21*F22*chi21*dAdgrad_chi121332 + F21*F22*chi21*dAdgrad_chi211332 + F21*F22*chi22*dAdgrad_chi122332 + F21*F22*chi22*dAdgrad_chi212332 + F21*F22*chi23*dAdgrad_chi123332 + F21*F22*chi23*dAdgrad_chi213332 + F21*F23*chi21*dAdgrad_chi131332 + F21*F23*chi21*dAdgrad_chi311332 + F21*F23*chi22*dAdgrad_chi132332 + F21*F23*chi22*dAdgrad_chi312332 + F21*F23*chi23*dAdgrad_chi133332 + F21*F23*chi23*dAdgrad_chi313332 + F22*F22*chi21*dAdgrad_chi221332 + F22*F22*chi22*dAdgrad_chi222332 + F22*F22*chi23*dAdgrad_chi223332 + F22*F23*chi21*dAdgrad_chi231332 + F22*F23*chi21*dAdgrad_chi321332 + F22*F23*chi22*dAdgrad_chi232332 + F22*F23*chi22*dAdgrad_chi322332 + F22*F23*chi23*dAdgrad_chi233332 + F22*F23*chi23*dAdgrad_chi323332 + F23*F23*chi21*dAdgrad_chi331332 + F23*F23*chi22*dAdgrad_chi332332 + F23*F23*chi23*dAdgrad_chi333332 + _222332;
        dadgrad_chi(10,25) = F21*F21*chi21*dAdgrad_chi111331 + F21*F21*chi22*dAdgrad_chi112331 + F21*F21*chi23*dAdgrad_chi113331 + F21*F22*chi21*dAdgrad_chi121331 + F21*F22*chi21*dAdgrad_chi211331 + F21*F22*chi22*dAdgrad_chi122331 + F21*F22*chi22*dAdgrad_chi212331 + F21*F22*chi23*dAdgrad_chi123331 + F21*F22*chi23*dAdgrad_chi213331 + F21*F23*chi21*dAdgrad_chi131331 + F21*F23*chi21*dAdgrad_chi311331 + F21*F23*chi22*dAdgrad_chi132331 + F21*F23*chi22*dAdgrad_chi312331 + F21*F23*chi23*dAdgrad_chi133331 + F21*F23*chi23*dAdgrad_chi313331 + F22*F22*chi21*dAdgrad_chi221331 + F22*F22*chi22*dAdgrad_chi222331 + F22*F22*chi23*dAdgrad_chi223331 + F22*F23*chi21*dAdgrad_chi231331 + F22*F23*chi21*dAdgrad_chi321331 + F22*F23*chi22*dAdgrad_chi232331 + F22*F23*chi22*dAdgrad_chi322331 + F22*F23*chi23*dAdgrad_chi233331 + F22*F23*chi23*dAdgrad_chi323331 + F23*F23*chi21*dAdgrad_chi331331 + F23*F23*chi22*dAdgrad_chi332331 + F23*F23*chi23*dAdgrad_chi333331 + _222331;
        dadgrad_chi(10,26) = F21*F21*chi21*dAdgrad_chi111321 + F21*F21*chi22*dAdgrad_chi112321 + F21*F21*chi23*dAdgrad_chi113321 + F21*F22*chi21*dAdgrad_chi121321 + F21*F22*chi21*dAdgrad_chi211321 + F21*F22*chi22*dAdgrad_chi122321 + F21*F22*chi22*dAdgrad_chi212321 + F21*F22*chi23*dAdgrad_chi123321 + F21*F22*chi23*dAdgrad_chi213321 + F21*F23*chi21*dAdgrad_chi131321 + F21*F23*chi21*dAdgrad_chi311321 + F21*F23*chi22*dAdgrad_chi132321 + F21*F23*chi22*dAdgrad_chi312321 + F21*F23*chi23*dAdgrad_chi133321 + F21*F23*chi23*dAdgrad_chi313321 + F22*F22*chi21*dAdgrad_chi221321 + F22*F22*chi22*dAdgrad_chi222321 + F22*F22*chi23*dAdgrad_chi223321 + F22*F23*chi21*dAdgrad_chi231321 + F22*F23*chi21*dAdgrad_chi321321 + F22*F23*chi22*dAdgrad_chi232321 + F22*F23*chi22*dAdgrad_chi322321 + F22*F23*chi23*dAdgrad_chi233321 + F22*F23*chi23*dAdgrad_chi323321 + F23*F23*chi21*dAdgrad_chi331321 + F23*F23*chi22*dAdgrad_chi332321 + F23*F23*chi23*dAdgrad_chi333321 + _222321;
        dadgrad_chi(11,0) = F21*F31*chi31*dAdgrad_chi111111 + F21*F31*chi32*dAdgrad_chi112111 + F21*F31*chi33*dAdgrad_chi113111 + F21*F32*chi31*dAdgrad_chi121111 + F21*F32*chi32*dAdgrad_chi122111 + F21*F32*chi33*dAdgrad_chi123111 + F21*F33*chi31*dAdgrad_chi131111 + F21*F33*chi32*dAdgrad_chi132111 + F21*F33*chi33*dAdgrad_chi133111 + F22*F31*chi31*dAdgrad_chi211111 + F22*F31*chi32*dAdgrad_chi212111 + F22*F31*chi33*dAdgrad_chi213111 + F22*F32*chi31*dAdgrad_chi221111 + F22*F32*chi32*dAdgrad_chi222111 + F22*F32*chi33*dAdgrad_chi223111 + F22*F33*chi31*dAdgrad_chi231111 + F22*F33*chi32*dAdgrad_chi232111 + F22*F33*chi33*dAdgrad_chi233111 + F23*F31*chi31*dAdgrad_chi311111 + F23*F31*chi32*dAdgrad_chi312111 + F23*F31*chi33*dAdgrad_chi313111 + F23*F32*chi31*dAdgrad_chi321111 + F23*F32*chi32*dAdgrad_chi322111 + F23*F32*chi33*dAdgrad_chi323111 + F23*F33*chi31*dAdgrad_chi331111 + F23*F33*chi32*dAdgrad_chi332111 + F23*F33*chi33*dAdgrad_chi333111 + _233111;
        dadgrad_chi(11,1) = F21*F31*chi31*dAdgrad_chi111122 + F21*F31*chi32*dAdgrad_chi112122 + F21*F31*chi33*dAdgrad_chi113122 + F21*F32*chi31*dAdgrad_chi121122 + F21*F32*chi32*dAdgrad_chi122122 + F21*F32*chi33*dAdgrad_chi123122 + F21*F33*chi31*dAdgrad_chi131122 + F21*F33*chi32*dAdgrad_chi132122 + F21*F33*chi33*dAdgrad_chi133122 + F22*F31*chi31*dAdgrad_chi211122 + F22*F31*chi32*dAdgrad_chi212122 + F22*F31*chi33*dAdgrad_chi213122 + F22*F32*chi31*dAdgrad_chi221122 + F22*F32*chi32*dAdgrad_chi222122 + F22*F32*chi33*dAdgrad_chi223122 + F22*F33*chi31*dAdgrad_chi231122 + F22*F33*chi32*dAdgrad_chi232122 + F22*F33*chi33*dAdgrad_chi233122 + F23*F31*chi31*dAdgrad_chi311122 + F23*F31*chi32*dAdgrad_chi312122 + F23*F31*chi33*dAdgrad_chi313122 + F23*F32*chi31*dAdgrad_chi321122 + F23*F32*chi32*dAdgrad_chi322122 + F23*F32*chi33*dAdgrad_chi323122 + F23*F33*chi31*dAdgrad_chi331122 + F23*F33*chi32*dAdgrad_chi332122 + F23*F33*chi33*dAdgrad_chi333122 + _233122;
        dadgrad_chi(11,2) = F21*F31*chi31*dAdgrad_chi111133 + F21*F31*chi32*dAdgrad_chi112133 + F21*F31*chi33*dAdgrad_chi113133 + F21*F32*chi31*dAdgrad_chi121133 + F21*F32*chi32*dAdgrad_chi122133 + F21*F32*chi33*dAdgrad_chi123133 + F21*F33*chi31*dAdgrad_chi131133 + F21*F33*chi32*dAdgrad_chi132133 + F21*F33*chi33*dAdgrad_chi133133 + F22*F31*chi31*dAdgrad_chi211133 + F22*F31*chi32*dAdgrad_chi212133 + F22*F31*chi33*dAdgrad_chi213133 + F22*F32*chi31*dAdgrad_chi221133 + F22*F32*chi32*dAdgrad_chi222133 + F22*F32*chi33*dAdgrad_chi223133 + F22*F33*chi31*dAdgrad_chi231133 + F22*F33*chi32*dAdgrad_chi232133 + F22*F33*chi33*dAdgrad_chi233133 + F23*F31*chi31*dAdgrad_chi311133 + F23*F31*chi32*dAdgrad_chi312133 + F23*F31*chi33*dAdgrad_chi313133 + F23*F32*chi31*dAdgrad_chi321133 + F23*F32*chi32*dAdgrad_chi322133 + F23*F32*chi33*dAdgrad_chi323133 + F23*F33*chi31*dAdgrad_chi331133 + F23*F33*chi32*dAdgrad_chi332133 + F23*F33*chi33*dAdgrad_chi333133 + _233133;
        dadgrad_chi(11,3) = F21*F31*chi31*dAdgrad_chi111123 + F21*F31*chi32*dAdgrad_chi112123 + F21*F31*chi33*dAdgrad_chi113123 + F21*F32*chi31*dAdgrad_chi121123 + F21*F32*chi32*dAdgrad_chi122123 + F21*F32*chi33*dAdgrad_chi123123 + F21*F33*chi31*dAdgrad_chi131123 + F21*F33*chi32*dAdgrad_chi132123 + F21*F33*chi33*dAdgrad_chi133123 + F22*F31*chi31*dAdgrad_chi211123 + F22*F31*chi32*dAdgrad_chi212123 + F22*F31*chi33*dAdgrad_chi213123 + F22*F32*chi31*dAdgrad_chi221123 + F22*F32*chi32*dAdgrad_chi222123 + F22*F32*chi33*dAdgrad_chi223123 + F22*F33*chi31*dAdgrad_chi231123 + F22*F33*chi32*dAdgrad_chi232123 + F22*F33*chi33*dAdgrad_chi233123 + F23*F31*chi31*dAdgrad_chi311123 + F23*F31*chi32*dAdgrad_chi312123 + F23*F31*chi33*dAdgrad_chi313123 + F23*F32*chi31*dAdgrad_chi321123 + F23*F32*chi32*dAdgrad_chi322123 + F23*F32*chi33*dAdgrad_chi323123 + F23*F33*chi31*dAdgrad_chi331123 + F23*F33*chi32*dAdgrad_chi332123 + F23*F33*chi33*dAdgrad_chi333123 + _233123;
        dadgrad_chi(11,4) = F21*F31*chi31*dAdgrad_chi111113 + F21*F31*chi32*dAdgrad_chi112113 + F21*F31*chi33*dAdgrad_chi113113 + F21*F32*chi31*dAdgrad_chi121113 + F21*F32*chi32*dAdgrad_chi122113 + F21*F32*chi33*dAdgrad_chi123113 + F21*F33*chi31*dAdgrad_chi131113 + F21*F33*chi32*dAdgrad_chi132113 + F21*F33*chi33*dAdgrad_chi133113 + F22*F31*chi31*dAdgrad_chi211113 + F22*F31*chi32*dAdgrad_chi212113 + F22*F31*chi33*dAdgrad_chi213113 + F22*F32*chi31*dAdgrad_chi221113 + F22*F32*chi32*dAdgrad_chi222113 + F22*F32*chi33*dAdgrad_chi223113 + F22*F33*chi31*dAdgrad_chi231113 + F22*F33*chi32*dAdgrad_chi232113 + F22*F33*chi33*dAdgrad_chi233113 + F23*F31*chi31*dAdgrad_chi311113 + F23*F31*chi32*dAdgrad_chi312113 + F23*F31*chi33*dAdgrad_chi313113 + F23*F32*chi31*dAdgrad_chi321113 + F23*F32*chi32*dAdgrad_chi322113 + F23*F32*chi33*dAdgrad_chi323113 + F23*F33*chi31*dAdgrad_chi331113 + F23*F33*chi32*dAdgrad_chi332113 + F23*F33*chi33*dAdgrad_chi333113 + _233113;
        dadgrad_chi(11,5) = F21*F31*chi31*dAdgrad_chi111112 + F21*F31*chi32*dAdgrad_chi112112 + F21*F31*chi33*dAdgrad_chi113112 + F21*F32*chi31*dAdgrad_chi121112 + F21*F32*chi32*dAdgrad_chi122112 + F21*F32*chi33*dAdgrad_chi123112 + F21*F33*chi31*dAdgrad_chi131112 + F21*F33*chi32*dAdgrad_chi132112 + F21*F33*chi33*dAdgrad_chi133112 + F22*F31*chi31*dAdgrad_chi211112 + F22*F31*chi32*dAdgrad_chi212112 + F22*F31*chi33*dAdgrad_chi213112 + F22*F32*chi31*dAdgrad_chi221112 + F22*F32*chi32*dAdgrad_chi222112 + F22*F32*chi33*dAdgrad_chi223112 + F22*F33*chi31*dAdgrad_chi231112 + F22*F33*chi32*dAdgrad_chi232112 + F22*F33*chi33*dAdgrad_chi233112 + F23*F31*chi31*dAdgrad_chi311112 + F23*F31*chi32*dAdgrad_chi312112 + F23*F31*chi33*dAdgrad_chi313112 + F23*F32*chi31*dAdgrad_chi321112 + F23*F32*chi32*dAdgrad_chi322112 + F23*F32*chi33*dAdgrad_chi323112 + F23*F33*chi31*dAdgrad_chi331112 + F23*F33*chi32*dAdgrad_chi332112 + F23*F33*chi33*dAdgrad_chi333112 + _233112;
        dadgrad_chi(11,6) = F21*F31*chi31*dAdgrad_chi111132 + F21*F31*chi32*dAdgrad_chi112132 + F21*F31*chi33*dAdgrad_chi113132 + F21*F32*chi31*dAdgrad_chi121132 + F21*F32*chi32*dAdgrad_chi122132 + F21*F32*chi33*dAdgrad_chi123132 + F21*F33*chi31*dAdgrad_chi131132 + F21*F33*chi32*dAdgrad_chi132132 + F21*F33*chi33*dAdgrad_chi133132 + F22*F31*chi31*dAdgrad_chi211132 + F22*F31*chi32*dAdgrad_chi212132 + F22*F31*chi33*dAdgrad_chi213132 + F22*F32*chi31*dAdgrad_chi221132 + F22*F32*chi32*dAdgrad_chi222132 + F22*F32*chi33*dAdgrad_chi223132 + F22*F33*chi31*dAdgrad_chi231132 + F22*F33*chi32*dAdgrad_chi232132 + F22*F33*chi33*dAdgrad_chi233132 + F23*F31*chi31*dAdgrad_chi311132 + F23*F31*chi32*dAdgrad_chi312132 + F23*F31*chi33*dAdgrad_chi313132 + F23*F32*chi31*dAdgrad_chi321132 + F23*F32*chi32*dAdgrad_chi322132 + F23*F32*chi33*dAdgrad_chi323132 + F23*F33*chi31*dAdgrad_chi331132 + F23*F33*chi32*dAdgrad_chi332132 + F23*F33*chi33*dAdgrad_chi333132 + _233132;
        dadgrad_chi(11,7) = F21*F31*chi31*dAdgrad_chi111131 + F21*F31*chi32*dAdgrad_chi112131 + F21*F31*chi33*dAdgrad_chi113131 + F21*F32*chi31*dAdgrad_chi121131 + F21*F32*chi32*dAdgrad_chi122131 + F21*F32*chi33*dAdgrad_chi123131 + F21*F33*chi31*dAdgrad_chi131131 + F21*F33*chi32*dAdgrad_chi132131 + F21*F33*chi33*dAdgrad_chi133131 + F22*F31*chi31*dAdgrad_chi211131 + F22*F31*chi32*dAdgrad_chi212131 + F22*F31*chi33*dAdgrad_chi213131 + F22*F32*chi31*dAdgrad_chi221131 + F22*F32*chi32*dAdgrad_chi222131 + F22*F32*chi33*dAdgrad_chi223131 + F22*F33*chi31*dAdgrad_chi231131 + F22*F33*chi32*dAdgrad_chi232131 + F22*F33*chi33*dAdgrad_chi233131 + F23*F31*chi31*dAdgrad_chi311131 + F23*F31*chi32*dAdgrad_chi312131 + F23*F31*chi33*dAdgrad_chi313131 + F23*F32*chi31*dAdgrad_chi321131 + F23*F32*chi32*dAdgrad_chi322131 + F23*F32*chi33*dAdgrad_chi323131 + F23*F33*chi31*dAdgrad_chi331131 + F23*F33*chi32*dAdgrad_chi332131 + F23*F33*chi33*dAdgrad_chi333131 + _233131;
        dadgrad_chi(11,8) = F21*F31*chi31*dAdgrad_chi111121 + F21*F31*chi32*dAdgrad_chi112121 + F21*F31*chi33*dAdgrad_chi113121 + F21*F32*chi31*dAdgrad_chi121121 + F21*F32*chi32*dAdgrad_chi122121 + F21*F32*chi33*dAdgrad_chi123121 + F21*F33*chi31*dAdgrad_chi131121 + F21*F33*chi32*dAdgrad_chi132121 + F21*F33*chi33*dAdgrad_chi133121 + F22*F31*chi31*dAdgrad_chi211121 + F22*F31*chi32*dAdgrad_chi212121 + F22*F31*chi33*dAdgrad_chi213121 + F22*F32*chi31*dAdgrad_chi221121 + F22*F32*chi32*dAdgrad_chi222121 + F22*F32*chi33*dAdgrad_chi223121 + F22*F33*chi31*dAdgrad_chi231121 + F22*F33*chi32*dAdgrad_chi232121 + F22*F33*chi33*dAdgrad_chi233121 + F23*F31*chi31*dAdgrad_chi311121 + F23*F31*chi32*dAdgrad_chi312121 + F23*F31*chi33*dAdgrad_chi313121 + F23*F32*chi31*dAdgrad_chi321121 + F23*F32*chi32*dAdgrad_chi322121 + F23*F32*chi33*dAdgrad_chi323121 + F23*F33*chi31*dAdgrad_chi331121 + F23*F33*chi32*dAdgrad_chi332121 + F23*F33*chi33*dAdgrad_chi333121 + _233121;
        dadgrad_chi(11,9) = F21*F31*chi31*dAdgrad_chi111211 + F21*F31*chi32*dAdgrad_chi112211 + F21*F31*chi33*dAdgrad_chi113211 + F21*F32*chi31*dAdgrad_chi121211 + F21*F32*chi32*dAdgrad_chi122211 + F21*F32*chi33*dAdgrad_chi123211 + F21*F33*chi31*dAdgrad_chi131211 + F21*F33*chi32*dAdgrad_chi132211 + F21*F33*chi33*dAdgrad_chi133211 + F22*F31*chi31*dAdgrad_chi211211 + F22*F31*chi32*dAdgrad_chi212211 + F22*F31*chi33*dAdgrad_chi213211 + F22*F32*chi31*dAdgrad_chi221211 + F22*F32*chi32*dAdgrad_chi222211 + F22*F32*chi33*dAdgrad_chi223211 + F22*F33*chi31*dAdgrad_chi231211 + F22*F33*chi32*dAdgrad_chi232211 + F22*F33*chi33*dAdgrad_chi233211 + F23*F31*chi31*dAdgrad_chi311211 + F23*F31*chi32*dAdgrad_chi312211 + F23*F31*chi33*dAdgrad_chi313211 + F23*F32*chi31*dAdgrad_chi321211 + F23*F32*chi32*dAdgrad_chi322211 + F23*F32*chi33*dAdgrad_chi323211 + F23*F33*chi31*dAdgrad_chi331211 + F23*F33*chi32*dAdgrad_chi332211 + F23*F33*chi33*dAdgrad_chi333211 + _233211;
        dadgrad_chi(11,10) = F21*F31*chi31*dAdgrad_chi111222 + F21*F31*chi32*dAdgrad_chi112222 + F21*F31*chi33*dAdgrad_chi113222 + F21*F32*chi31*dAdgrad_chi121222 + F21*F32*chi32*dAdgrad_chi122222 + F21*F32*chi33*dAdgrad_chi123222 + F21*F33*chi31*dAdgrad_chi131222 + F21*F33*chi32*dAdgrad_chi132222 + F21*F33*chi33*dAdgrad_chi133222 + F22*F31*chi31*dAdgrad_chi211222 + F22*F31*chi32*dAdgrad_chi212222 + F22*F31*chi33*dAdgrad_chi213222 + F22*F32*chi31*dAdgrad_chi221222 + F22*F32*chi32*dAdgrad_chi222222 + F22*F32*chi33*dAdgrad_chi223222 + F22*F33*chi31*dAdgrad_chi231222 + F22*F33*chi32*dAdgrad_chi232222 + F22*F33*chi33*dAdgrad_chi233222 + F23*F31*chi31*dAdgrad_chi311222 + F23*F31*chi32*dAdgrad_chi312222 + F23*F31*chi33*dAdgrad_chi313222 + F23*F32*chi31*dAdgrad_chi321222 + F23*F32*chi32*dAdgrad_chi322222 + F23*F32*chi33*dAdgrad_chi323222 + F23*F33*chi31*dAdgrad_chi331222 + F23*F33*chi32*dAdgrad_chi332222 + F23*F33*chi33*dAdgrad_chi333222 + _233222;
        dadgrad_chi(11,11) = F21*F31*chi31*dAdgrad_chi111233 + F21*F31*chi32*dAdgrad_chi112233 + F21*F31*chi33*dAdgrad_chi113233 + F21*F32*chi31*dAdgrad_chi121233 + F21*F32*chi32*dAdgrad_chi122233 + F21*F32*chi33*dAdgrad_chi123233 + F21*F33*chi31*dAdgrad_chi131233 + F21*F33*chi32*dAdgrad_chi132233 + F21*F33*chi33*dAdgrad_chi133233 + F22*F31*chi31*dAdgrad_chi211233 + F22*F31*chi32*dAdgrad_chi212233 + F22*F31*chi33*dAdgrad_chi213233 + F22*F32*chi31*dAdgrad_chi221233 + F22*F32*chi32*dAdgrad_chi222233 + F22*F32*chi33*dAdgrad_chi223233 + F22*F33*chi31*dAdgrad_chi231233 + F22*F33*chi32*dAdgrad_chi232233 + F22*F33*chi33*dAdgrad_chi233233 + F23*F31*chi31*dAdgrad_chi311233 + F23*F31*chi32*dAdgrad_chi312233 + F23*F31*chi33*dAdgrad_chi313233 + F23*F32*chi31*dAdgrad_chi321233 + F23*F32*chi32*dAdgrad_chi322233 + F23*F32*chi33*dAdgrad_chi323233 + F23*F33*chi31*dAdgrad_chi331233 + F23*F33*chi32*dAdgrad_chi332233 + F23*F33*chi33*dAdgrad_chi333233 + _233233;
        dadgrad_chi(11,12) = F21*F31*chi31*dAdgrad_chi111223 + F21*F31*chi32*dAdgrad_chi112223 + F21*F31*chi33*dAdgrad_chi113223 + F21*F32*chi31*dAdgrad_chi121223 + F21*F32*chi32*dAdgrad_chi122223 + F21*F32*chi33*dAdgrad_chi123223 + F21*F33*chi31*dAdgrad_chi131223 + F21*F33*chi32*dAdgrad_chi132223 + F21*F33*chi33*dAdgrad_chi133223 + F22*F31*chi31*dAdgrad_chi211223 + F22*F31*chi32*dAdgrad_chi212223 + F22*F31*chi33*dAdgrad_chi213223 + F22*F32*chi31*dAdgrad_chi221223 + F22*F32*chi32*dAdgrad_chi222223 + F22*F32*chi33*dAdgrad_chi223223 + F22*F33*chi31*dAdgrad_chi231223 + F22*F33*chi32*dAdgrad_chi232223 + F22*F33*chi33*dAdgrad_chi233223 + F23*F31*chi31*dAdgrad_chi311223 + F23*F31*chi32*dAdgrad_chi312223 + F23*F31*chi33*dAdgrad_chi313223 + F23*F32*chi31*dAdgrad_chi321223 + F23*F32*chi32*dAdgrad_chi322223 + F23*F32*chi33*dAdgrad_chi323223 + F23*F33*chi31*dAdgrad_chi331223 + F23*F33*chi32*dAdgrad_chi332223 + F23*F33*chi33*dAdgrad_chi333223 + _233223;
        dadgrad_chi(11,13) = F21*F31*chi31*dAdgrad_chi111213 + F21*F31*chi32*dAdgrad_chi112213 + F21*F31*chi33*dAdgrad_chi113213 + F21*F32*chi31*dAdgrad_chi121213 + F21*F32*chi32*dAdgrad_chi122213 + F21*F32*chi33*dAdgrad_chi123213 + F21*F33*chi31*dAdgrad_chi131213 + F21*F33*chi32*dAdgrad_chi132213 + F21*F33*chi33*dAdgrad_chi133213 + F22*F31*chi31*dAdgrad_chi211213 + F22*F31*chi32*dAdgrad_chi212213 + F22*F31*chi33*dAdgrad_chi213213 + F22*F32*chi31*dAdgrad_chi221213 + F22*F32*chi32*dAdgrad_chi222213 + F22*F32*chi33*dAdgrad_chi223213 + F22*F33*chi31*dAdgrad_chi231213 + F22*F33*chi32*dAdgrad_chi232213 + F22*F33*chi33*dAdgrad_chi233213 + F23*F31*chi31*dAdgrad_chi311213 + F23*F31*chi32*dAdgrad_chi312213 + F23*F31*chi33*dAdgrad_chi313213 + F23*F32*chi31*dAdgrad_chi321213 + F23*F32*chi32*dAdgrad_chi322213 + F23*F32*chi33*dAdgrad_chi323213 + F23*F33*chi31*dAdgrad_chi331213 + F23*F33*chi32*dAdgrad_chi332213 + F23*F33*chi33*dAdgrad_chi333213 + _233213;
        dadgrad_chi(11,14) = F21*F31*chi31*dAdgrad_chi111212 + F21*F31*chi32*dAdgrad_chi112212 + F21*F31*chi33*dAdgrad_chi113212 + F21*F32*chi31*dAdgrad_chi121212 + F21*F32*chi32*dAdgrad_chi122212 + F21*F32*chi33*dAdgrad_chi123212 + F21*F33*chi31*dAdgrad_chi131212 + F21*F33*chi32*dAdgrad_chi132212 + F21*F33*chi33*dAdgrad_chi133212 + F22*F31*chi31*dAdgrad_chi211212 + F22*F31*chi32*dAdgrad_chi212212 + F22*F31*chi33*dAdgrad_chi213212 + F22*F32*chi31*dAdgrad_chi221212 + F22*F32*chi32*dAdgrad_chi222212 + F22*F32*chi33*dAdgrad_chi223212 + F22*F33*chi31*dAdgrad_chi231212 + F22*F33*chi32*dAdgrad_chi232212 + F22*F33*chi33*dAdgrad_chi233212 + F23*F31*chi31*dAdgrad_chi311212 + F23*F31*chi32*dAdgrad_chi312212 + F23*F31*chi33*dAdgrad_chi313212 + F23*F32*chi31*dAdgrad_chi321212 + F23*F32*chi32*dAdgrad_chi322212 + F23*F32*chi33*dAdgrad_chi323212 + F23*F33*chi31*dAdgrad_chi331212 + F23*F33*chi32*dAdgrad_chi332212 + F23*F33*chi33*dAdgrad_chi333212 + _233212;
        dadgrad_chi(11,15) = F21*F31*chi31*dAdgrad_chi111232 + F21*F31*chi32*dAdgrad_chi112232 + F21*F31*chi33*dAdgrad_chi113232 + F21*F32*chi31*dAdgrad_chi121232 + F21*F32*chi32*dAdgrad_chi122232 + F21*F32*chi33*dAdgrad_chi123232 + F21*F33*chi31*dAdgrad_chi131232 + F21*F33*chi32*dAdgrad_chi132232 + F21*F33*chi33*dAdgrad_chi133232 + F22*F31*chi31*dAdgrad_chi211232 + F22*F31*chi32*dAdgrad_chi212232 + F22*F31*chi33*dAdgrad_chi213232 + F22*F32*chi31*dAdgrad_chi221232 + F22*F32*chi32*dAdgrad_chi222232 + F22*F32*chi33*dAdgrad_chi223232 + F22*F33*chi31*dAdgrad_chi231232 + F22*F33*chi32*dAdgrad_chi232232 + F22*F33*chi33*dAdgrad_chi233232 + F23*F31*chi31*dAdgrad_chi311232 + F23*F31*chi32*dAdgrad_chi312232 + F23*F31*chi33*dAdgrad_chi313232 + F23*F32*chi31*dAdgrad_chi321232 + F23*F32*chi32*dAdgrad_chi322232 + F23*F32*chi33*dAdgrad_chi323232 + F23*F33*chi31*dAdgrad_chi331232 + F23*F33*chi32*dAdgrad_chi332232 + F23*F33*chi33*dAdgrad_chi333232 + _233232;
        dadgrad_chi(11,16) = F21*F31*chi31*dAdgrad_chi111231 + F21*F31*chi32*dAdgrad_chi112231 + F21*F31*chi33*dAdgrad_chi113231 + F21*F32*chi31*dAdgrad_chi121231 + F21*F32*chi32*dAdgrad_chi122231 + F21*F32*chi33*dAdgrad_chi123231 + F21*F33*chi31*dAdgrad_chi131231 + F21*F33*chi32*dAdgrad_chi132231 + F21*F33*chi33*dAdgrad_chi133231 + F22*F31*chi31*dAdgrad_chi211231 + F22*F31*chi32*dAdgrad_chi212231 + F22*F31*chi33*dAdgrad_chi213231 + F22*F32*chi31*dAdgrad_chi221231 + F22*F32*chi32*dAdgrad_chi222231 + F22*F32*chi33*dAdgrad_chi223231 + F22*F33*chi31*dAdgrad_chi231231 + F22*F33*chi32*dAdgrad_chi232231 + F22*F33*chi33*dAdgrad_chi233231 + F23*F31*chi31*dAdgrad_chi311231 + F23*F31*chi32*dAdgrad_chi312231 + F23*F31*chi33*dAdgrad_chi313231 + F23*F32*chi31*dAdgrad_chi321231 + F23*F32*chi32*dAdgrad_chi322231 + F23*F32*chi33*dAdgrad_chi323231 + F23*F33*chi31*dAdgrad_chi331231 + F23*F33*chi32*dAdgrad_chi332231 + F23*F33*chi33*dAdgrad_chi333231 + _233231;
        dadgrad_chi(11,17) = F21*F31*chi31*dAdgrad_chi111221 + F21*F31*chi32*dAdgrad_chi112221 + F21*F31*chi33*dAdgrad_chi113221 + F21*F32*chi31*dAdgrad_chi121221 + F21*F32*chi32*dAdgrad_chi122221 + F21*F32*chi33*dAdgrad_chi123221 + F21*F33*chi31*dAdgrad_chi131221 + F21*F33*chi32*dAdgrad_chi132221 + F21*F33*chi33*dAdgrad_chi133221 + F22*F31*chi31*dAdgrad_chi211221 + F22*F31*chi32*dAdgrad_chi212221 + F22*F31*chi33*dAdgrad_chi213221 + F22*F32*chi31*dAdgrad_chi221221 + F22*F32*chi32*dAdgrad_chi222221 + F22*F32*chi33*dAdgrad_chi223221 + F22*F33*chi31*dAdgrad_chi231221 + F22*F33*chi32*dAdgrad_chi232221 + F22*F33*chi33*dAdgrad_chi233221 + F23*F31*chi31*dAdgrad_chi311221 + F23*F31*chi32*dAdgrad_chi312221 + F23*F31*chi33*dAdgrad_chi313221 + F23*F32*chi31*dAdgrad_chi321221 + F23*F32*chi32*dAdgrad_chi322221 + F23*F32*chi33*dAdgrad_chi323221 + F23*F33*chi31*dAdgrad_chi331221 + F23*F33*chi32*dAdgrad_chi332221 + F23*F33*chi33*dAdgrad_chi333221 + _233221;
        dadgrad_chi(11,18) = F21*F31*chi31*dAdgrad_chi111311 + F21*F31*chi32*dAdgrad_chi112311 + F21*F31*chi33*dAdgrad_chi113311 + F21*F32*chi31*dAdgrad_chi121311 + F21*F32*chi32*dAdgrad_chi122311 + F21*F32*chi33*dAdgrad_chi123311 + F21*F33*chi31*dAdgrad_chi131311 + F21*F33*chi32*dAdgrad_chi132311 + F21*F33*chi33*dAdgrad_chi133311 + F22*F31*chi31*dAdgrad_chi211311 + F22*F31*chi32*dAdgrad_chi212311 + F22*F31*chi33*dAdgrad_chi213311 + F22*F32*chi31*dAdgrad_chi221311 + F22*F32*chi32*dAdgrad_chi222311 + F22*F32*chi33*dAdgrad_chi223311 + F22*F33*chi31*dAdgrad_chi231311 + F22*F33*chi32*dAdgrad_chi232311 + F22*F33*chi33*dAdgrad_chi233311 + F23*F31*chi31*dAdgrad_chi311311 + F23*F31*chi32*dAdgrad_chi312311 + F23*F31*chi33*dAdgrad_chi313311 + F23*F32*chi31*dAdgrad_chi321311 + F23*F32*chi32*dAdgrad_chi322311 + F23*F32*chi33*dAdgrad_chi323311 + F23*F33*chi31*dAdgrad_chi331311 + F23*F33*chi32*dAdgrad_chi332311 + F23*F33*chi33*dAdgrad_chi333311 + _233311;
        dadgrad_chi(11,19) = F21*F31*chi31*dAdgrad_chi111322 + F21*F31*chi32*dAdgrad_chi112322 + F21*F31*chi33*dAdgrad_chi113322 + F21*F32*chi31*dAdgrad_chi121322 + F21*F32*chi32*dAdgrad_chi122322 + F21*F32*chi33*dAdgrad_chi123322 + F21*F33*chi31*dAdgrad_chi131322 + F21*F33*chi32*dAdgrad_chi132322 + F21*F33*chi33*dAdgrad_chi133322 + F22*F31*chi31*dAdgrad_chi211322 + F22*F31*chi32*dAdgrad_chi212322 + F22*F31*chi33*dAdgrad_chi213322 + F22*F32*chi31*dAdgrad_chi221322 + F22*F32*chi32*dAdgrad_chi222322 + F22*F32*chi33*dAdgrad_chi223322 + F22*F33*chi31*dAdgrad_chi231322 + F22*F33*chi32*dAdgrad_chi232322 + F22*F33*chi33*dAdgrad_chi233322 + F23*F31*chi31*dAdgrad_chi311322 + F23*F31*chi32*dAdgrad_chi312322 + F23*F31*chi33*dAdgrad_chi313322 + F23*F32*chi31*dAdgrad_chi321322 + F23*F32*chi32*dAdgrad_chi322322 + F23*F32*chi33*dAdgrad_chi323322 + F23*F33*chi31*dAdgrad_chi331322 + F23*F33*chi32*dAdgrad_chi332322 + F23*F33*chi33*dAdgrad_chi333322 + _233322;
        dadgrad_chi(11,20) = F21*F31*chi31*dAdgrad_chi111333 + F21*F31*chi32*dAdgrad_chi112333 + F21*F31*chi33*dAdgrad_chi113333 + F21*F32*chi31*dAdgrad_chi121333 + F21*F32*chi32*dAdgrad_chi122333 + F21*F32*chi33*dAdgrad_chi123333 + F21*F33*chi31*dAdgrad_chi131333 + F21*F33*chi32*dAdgrad_chi132333 + F21*F33*chi33*dAdgrad_chi133333 + F22*F31*chi31*dAdgrad_chi211333 + F22*F31*chi32*dAdgrad_chi212333 + F22*F31*chi33*dAdgrad_chi213333 + F22*F32*chi31*dAdgrad_chi221333 + F22*F32*chi32*dAdgrad_chi222333 + F22*F32*chi33*dAdgrad_chi223333 + F22*F33*chi31*dAdgrad_chi231333 + F22*F33*chi32*dAdgrad_chi232333 + F22*F33*chi33*dAdgrad_chi233333 + F23*F31*chi31*dAdgrad_chi311333 + F23*F31*chi32*dAdgrad_chi312333 + F23*F31*chi33*dAdgrad_chi313333 + F23*F32*chi31*dAdgrad_chi321333 + F23*F32*chi32*dAdgrad_chi322333 + F23*F32*chi33*dAdgrad_chi323333 + F23*F33*chi31*dAdgrad_chi331333 + F23*F33*chi32*dAdgrad_chi332333 + F23*F33*chi33*dAdgrad_chi333333 + _233333;
        dadgrad_chi(11,21) = F21*F31*chi31*dAdgrad_chi111323 + F21*F31*chi32*dAdgrad_chi112323 + F21*F31*chi33*dAdgrad_chi113323 + F21*F32*chi31*dAdgrad_chi121323 + F21*F32*chi32*dAdgrad_chi122323 + F21*F32*chi33*dAdgrad_chi123323 + F21*F33*chi31*dAdgrad_chi131323 + F21*F33*chi32*dAdgrad_chi132323 + F21*F33*chi33*dAdgrad_chi133323 + F22*F31*chi31*dAdgrad_chi211323 + F22*F31*chi32*dAdgrad_chi212323 + F22*F31*chi33*dAdgrad_chi213323 + F22*F32*chi31*dAdgrad_chi221323 + F22*F32*chi32*dAdgrad_chi222323 + F22*F32*chi33*dAdgrad_chi223323 + F22*F33*chi31*dAdgrad_chi231323 + F22*F33*chi32*dAdgrad_chi232323 + F22*F33*chi33*dAdgrad_chi233323 + F23*F31*chi31*dAdgrad_chi311323 + F23*F31*chi32*dAdgrad_chi312323 + F23*F31*chi33*dAdgrad_chi313323 + F23*F32*chi31*dAdgrad_chi321323 + F23*F32*chi32*dAdgrad_chi322323 + F23*F32*chi33*dAdgrad_chi323323 + F23*F33*chi31*dAdgrad_chi331323 + F23*F33*chi32*dAdgrad_chi332323 + F23*F33*chi33*dAdgrad_chi333323 + _233323;
        dadgrad_chi(11,22) = F21*F31*chi31*dAdgrad_chi111313 + F21*F31*chi32*dAdgrad_chi112313 + F21*F31*chi33*dAdgrad_chi113313 + F21*F32*chi31*dAdgrad_chi121313 + F21*F32*chi32*dAdgrad_chi122313 + F21*F32*chi33*dAdgrad_chi123313 + F21*F33*chi31*dAdgrad_chi131313 + F21*F33*chi32*dAdgrad_chi132313 + F21*F33*chi33*dAdgrad_chi133313 + F22*F31*chi31*dAdgrad_chi211313 + F22*F31*chi32*dAdgrad_chi212313 + F22*F31*chi33*dAdgrad_chi213313 + F22*F32*chi31*dAdgrad_chi221313 + F22*F32*chi32*dAdgrad_chi222313 + F22*F32*chi33*dAdgrad_chi223313 + F22*F33*chi31*dAdgrad_chi231313 + F22*F33*chi32*dAdgrad_chi232313 + F22*F33*chi33*dAdgrad_chi233313 + F23*F31*chi31*dAdgrad_chi311313 + F23*F31*chi32*dAdgrad_chi312313 + F23*F31*chi33*dAdgrad_chi313313 + F23*F32*chi31*dAdgrad_chi321313 + F23*F32*chi32*dAdgrad_chi322313 + F23*F32*chi33*dAdgrad_chi323313 + F23*F33*chi31*dAdgrad_chi331313 + F23*F33*chi32*dAdgrad_chi332313 + F23*F33*chi33*dAdgrad_chi333313 + _233313;
        dadgrad_chi(11,23) = F21*F31*chi31*dAdgrad_chi111312 + F21*F31*chi32*dAdgrad_chi112312 + F21*F31*chi33*dAdgrad_chi113312 + F21*F32*chi31*dAdgrad_chi121312 + F21*F32*chi32*dAdgrad_chi122312 + F21*F32*chi33*dAdgrad_chi123312 + F21*F33*chi31*dAdgrad_chi131312 + F21*F33*chi32*dAdgrad_chi132312 + F21*F33*chi33*dAdgrad_chi133312 + F22*F31*chi31*dAdgrad_chi211312 + F22*F31*chi32*dAdgrad_chi212312 + F22*F31*chi33*dAdgrad_chi213312 + F22*F32*chi31*dAdgrad_chi221312 + F22*F32*chi32*dAdgrad_chi222312 + F22*F32*chi33*dAdgrad_chi223312 + F22*F33*chi31*dAdgrad_chi231312 + F22*F33*chi32*dAdgrad_chi232312 + F22*F33*chi33*dAdgrad_chi233312 + F23*F31*chi31*dAdgrad_chi311312 + F23*F31*chi32*dAdgrad_chi312312 + F23*F31*chi33*dAdgrad_chi313312 + F23*F32*chi31*dAdgrad_chi321312 + F23*F32*chi32*dAdgrad_chi322312 + F23*F32*chi33*dAdgrad_chi323312 + F23*F33*chi31*dAdgrad_chi331312 + F23*F33*chi32*dAdgrad_chi332312 + F23*F33*chi33*dAdgrad_chi333312 + _233312;
        dadgrad_chi(11,24) = F21*F31*chi31*dAdgrad_chi111332 + F21*F31*chi32*dAdgrad_chi112332 + F21*F31*chi33*dAdgrad_chi113332 + F21*F32*chi31*dAdgrad_chi121332 + F21*F32*chi32*dAdgrad_chi122332 + F21*F32*chi33*dAdgrad_chi123332 + F21*F33*chi31*dAdgrad_chi131332 + F21*F33*chi32*dAdgrad_chi132332 + F21*F33*chi33*dAdgrad_chi133332 + F22*F31*chi31*dAdgrad_chi211332 + F22*F31*chi32*dAdgrad_chi212332 + F22*F31*chi33*dAdgrad_chi213332 + F22*F32*chi31*dAdgrad_chi221332 + F22*F32*chi32*dAdgrad_chi222332 + F22*F32*chi33*dAdgrad_chi223332 + F22*F33*chi31*dAdgrad_chi231332 + F22*F33*chi32*dAdgrad_chi232332 + F22*F33*chi33*dAdgrad_chi233332 + F23*F31*chi31*dAdgrad_chi311332 + F23*F31*chi32*dAdgrad_chi312332 + F23*F31*chi33*dAdgrad_chi313332 + F23*F32*chi31*dAdgrad_chi321332 + F23*F32*chi32*dAdgrad_chi322332 + F23*F32*chi33*dAdgrad_chi323332 + F23*F33*chi31*dAdgrad_chi331332 + F23*F33*chi32*dAdgrad_chi332332 + F23*F33*chi33*dAdgrad_chi333332 + _233332;
        dadgrad_chi(11,25) = F21*F31*chi31*dAdgrad_chi111331 + F21*F31*chi32*dAdgrad_chi112331 + F21*F31*chi33*dAdgrad_chi113331 + F21*F32*chi31*dAdgrad_chi121331 + F21*F32*chi32*dAdgrad_chi122331 + F21*F32*chi33*dAdgrad_chi123331 + F21*F33*chi31*dAdgrad_chi131331 + F21*F33*chi32*dAdgrad_chi132331 + F21*F33*chi33*dAdgrad_chi133331 + F22*F31*chi31*dAdgrad_chi211331 + F22*F31*chi32*dAdgrad_chi212331 + F22*F31*chi33*dAdgrad_chi213331 + F22*F32*chi31*dAdgrad_chi221331 + F22*F32*chi32*dAdgrad_chi222331 + F22*F32*chi33*dAdgrad_chi223331 + F22*F33*chi31*dAdgrad_chi231331 + F22*F33*chi32*dAdgrad_chi232331 + F22*F33*chi33*dAdgrad_chi233331 + F23*F31*chi31*dAdgrad_chi311331 + F23*F31*chi32*dAdgrad_chi312331 + F23*F31*chi33*dAdgrad_chi313331 + F23*F32*chi31*dAdgrad_chi321331 + F23*F32*chi32*dAdgrad_chi322331 + F23*F32*chi33*dAdgrad_chi323331 + F23*F33*chi31*dAdgrad_chi331331 + F23*F33*chi32*dAdgrad_chi332331 + F23*F33*chi33*dAdgrad_chi333331 + _233331;
        dadgrad_chi(11,26) = F21*F31*chi31*dAdgrad_chi111321 + F21*F31*chi32*dAdgrad_chi112321 + F21*F31*chi33*dAdgrad_chi113321 + F21*F32*chi31*dAdgrad_chi121321 + F21*F32*chi32*dAdgrad_chi122321 + F21*F32*chi33*dAdgrad_chi123321 + F21*F33*chi31*dAdgrad_chi131321 + F21*F33*chi32*dAdgrad_chi132321 + F21*F33*chi33*dAdgrad_chi133321 + F22*F31*chi31*dAdgrad_chi211321 + F22*F31*chi32*dAdgrad_chi212321 + F22*F31*chi33*dAdgrad_chi213321 + F22*F32*chi31*dAdgrad_chi221321 + F22*F32*chi32*dAdgrad_chi222321 + F22*F32*chi33*dAdgrad_chi223321 + F22*F33*chi31*dAdgrad_chi231321 + F22*F33*chi32*dAdgrad_chi232321 + F22*F33*chi33*dAdgrad_chi233321 + F23*F31*chi31*dAdgrad_chi311321 + F23*F31*chi32*dAdgrad_chi312321 + F23*F31*chi33*dAdgrad_chi313321 + F23*F32*chi31*dAdgrad_chi321321 + F23*F32*chi32*dAdgrad_chi322321 + F23*F32*chi33*dAdgrad_chi323321 + F23*F33*chi31*dAdgrad_chi331321 + F23*F33*chi32*dAdgrad_chi332321 + F23*F33*chi33*dAdgrad_chi333321 + _233321;
        dadgrad_chi(12,0) = F21*F21*chi31*dAdgrad_chi111111 + F21*F21*chi32*dAdgrad_chi112111 + F21*F21*chi33*dAdgrad_chi113111 + F21*F22*chi31*dAdgrad_chi121111 + F21*F22*chi31*dAdgrad_chi211111 + F21*F22*chi32*dAdgrad_chi122111 + F21*F22*chi32*dAdgrad_chi212111 + F21*F22*chi33*dAdgrad_chi123111 + F21*F22*chi33*dAdgrad_chi213111 + F21*F23*chi31*dAdgrad_chi131111 + F21*F23*chi31*dAdgrad_chi311111 + F21*F23*chi32*dAdgrad_chi132111 + F21*F23*chi32*dAdgrad_chi312111 + F21*F23*chi33*dAdgrad_chi133111 + F21*F23*chi33*dAdgrad_chi313111 + F22*F22*chi31*dAdgrad_chi221111 + F22*F22*chi32*dAdgrad_chi222111 + F22*F22*chi33*dAdgrad_chi223111 + F22*F23*chi31*dAdgrad_chi231111 + F22*F23*chi31*dAdgrad_chi321111 + F22*F23*chi32*dAdgrad_chi232111 + F22*F23*chi32*dAdgrad_chi322111 + F22*F23*chi33*dAdgrad_chi233111 + F22*F23*chi33*dAdgrad_chi323111 + F23*F23*chi31*dAdgrad_chi331111 + F23*F23*chi32*dAdgrad_chi332111 + F23*F23*chi33*dAdgrad_chi333111 + _223111;
        dadgrad_chi(12,1) = F21*F21*chi31*dAdgrad_chi111122 + F21*F21*chi32*dAdgrad_chi112122 + F21*F21*chi33*dAdgrad_chi113122 + F21*F22*chi31*dAdgrad_chi121122 + F21*F22*chi31*dAdgrad_chi211122 + F21*F22*chi32*dAdgrad_chi122122 + F21*F22*chi32*dAdgrad_chi212122 + F21*F22*chi33*dAdgrad_chi123122 + F21*F22*chi33*dAdgrad_chi213122 + F21*F23*chi31*dAdgrad_chi131122 + F21*F23*chi31*dAdgrad_chi311122 + F21*F23*chi32*dAdgrad_chi132122 + F21*F23*chi32*dAdgrad_chi312122 + F21*F23*chi33*dAdgrad_chi133122 + F21*F23*chi33*dAdgrad_chi313122 + F22*F22*chi31*dAdgrad_chi221122 + F22*F22*chi32*dAdgrad_chi222122 + F22*F22*chi33*dAdgrad_chi223122 + F22*F23*chi31*dAdgrad_chi231122 + F22*F23*chi31*dAdgrad_chi321122 + F22*F23*chi32*dAdgrad_chi232122 + F22*F23*chi32*dAdgrad_chi322122 + F22*F23*chi33*dAdgrad_chi233122 + F22*F23*chi33*dAdgrad_chi323122 + F23*F23*chi31*dAdgrad_chi331122 + F23*F23*chi32*dAdgrad_chi332122 + F23*F23*chi33*dAdgrad_chi333122 + _223122;
        dadgrad_chi(12,2) = F21*F21*chi31*dAdgrad_chi111133 + F21*F21*chi32*dAdgrad_chi112133 + F21*F21*chi33*dAdgrad_chi113133 + F21*F22*chi31*dAdgrad_chi121133 + F21*F22*chi31*dAdgrad_chi211133 + F21*F22*chi32*dAdgrad_chi122133 + F21*F22*chi32*dAdgrad_chi212133 + F21*F22*chi33*dAdgrad_chi123133 + F21*F22*chi33*dAdgrad_chi213133 + F21*F23*chi31*dAdgrad_chi131133 + F21*F23*chi31*dAdgrad_chi311133 + F21*F23*chi32*dAdgrad_chi132133 + F21*F23*chi32*dAdgrad_chi312133 + F21*F23*chi33*dAdgrad_chi133133 + F21*F23*chi33*dAdgrad_chi313133 + F22*F22*chi31*dAdgrad_chi221133 + F22*F22*chi32*dAdgrad_chi222133 + F22*F22*chi33*dAdgrad_chi223133 + F22*F23*chi31*dAdgrad_chi231133 + F22*F23*chi31*dAdgrad_chi321133 + F22*F23*chi32*dAdgrad_chi232133 + F22*F23*chi32*dAdgrad_chi322133 + F22*F23*chi33*dAdgrad_chi233133 + F22*F23*chi33*dAdgrad_chi323133 + F23*F23*chi31*dAdgrad_chi331133 + F23*F23*chi32*dAdgrad_chi332133 + F23*F23*chi33*dAdgrad_chi333133 + _223133;
        dadgrad_chi(12,3) = F21*F21*chi31*dAdgrad_chi111123 + F21*F21*chi32*dAdgrad_chi112123 + F21*F21*chi33*dAdgrad_chi113123 + F21*F22*chi31*dAdgrad_chi121123 + F21*F22*chi31*dAdgrad_chi211123 + F21*F22*chi32*dAdgrad_chi122123 + F21*F22*chi32*dAdgrad_chi212123 + F21*F22*chi33*dAdgrad_chi123123 + F21*F22*chi33*dAdgrad_chi213123 + F21*F23*chi31*dAdgrad_chi131123 + F21*F23*chi31*dAdgrad_chi311123 + F21*F23*chi32*dAdgrad_chi132123 + F21*F23*chi32*dAdgrad_chi312123 + F21*F23*chi33*dAdgrad_chi133123 + F21*F23*chi33*dAdgrad_chi313123 + F22*F22*chi31*dAdgrad_chi221123 + F22*F22*chi32*dAdgrad_chi222123 + F22*F22*chi33*dAdgrad_chi223123 + F22*F23*chi31*dAdgrad_chi231123 + F22*F23*chi31*dAdgrad_chi321123 + F22*F23*chi32*dAdgrad_chi232123 + F22*F23*chi32*dAdgrad_chi322123 + F22*F23*chi33*dAdgrad_chi233123 + F22*F23*chi33*dAdgrad_chi323123 + F23*F23*chi31*dAdgrad_chi331123 + F23*F23*chi32*dAdgrad_chi332123 + F23*F23*chi33*dAdgrad_chi333123 + _223123;
        dadgrad_chi(12,4) = F21*F21*chi31*dAdgrad_chi111113 + F21*F21*chi32*dAdgrad_chi112113 + F21*F21*chi33*dAdgrad_chi113113 + F21*F22*chi31*dAdgrad_chi121113 + F21*F22*chi31*dAdgrad_chi211113 + F21*F22*chi32*dAdgrad_chi122113 + F21*F22*chi32*dAdgrad_chi212113 + F21*F22*chi33*dAdgrad_chi123113 + F21*F22*chi33*dAdgrad_chi213113 + F21*F23*chi31*dAdgrad_chi131113 + F21*F23*chi31*dAdgrad_chi311113 + F21*F23*chi32*dAdgrad_chi132113 + F21*F23*chi32*dAdgrad_chi312113 + F21*F23*chi33*dAdgrad_chi133113 + F21*F23*chi33*dAdgrad_chi313113 + F22*F22*chi31*dAdgrad_chi221113 + F22*F22*chi32*dAdgrad_chi222113 + F22*F22*chi33*dAdgrad_chi223113 + F22*F23*chi31*dAdgrad_chi231113 + F22*F23*chi31*dAdgrad_chi321113 + F22*F23*chi32*dAdgrad_chi232113 + F22*F23*chi32*dAdgrad_chi322113 + F22*F23*chi33*dAdgrad_chi233113 + F22*F23*chi33*dAdgrad_chi323113 + F23*F23*chi31*dAdgrad_chi331113 + F23*F23*chi32*dAdgrad_chi332113 + F23*F23*chi33*dAdgrad_chi333113 + _223113;
        dadgrad_chi(12,5) = F21*F21*chi31*dAdgrad_chi111112 + F21*F21*chi32*dAdgrad_chi112112 + F21*F21*chi33*dAdgrad_chi113112 + F21*F22*chi31*dAdgrad_chi121112 + F21*F22*chi31*dAdgrad_chi211112 + F21*F22*chi32*dAdgrad_chi122112 + F21*F22*chi32*dAdgrad_chi212112 + F21*F22*chi33*dAdgrad_chi123112 + F21*F22*chi33*dAdgrad_chi213112 + F21*F23*chi31*dAdgrad_chi131112 + F21*F23*chi31*dAdgrad_chi311112 + F21*F23*chi32*dAdgrad_chi132112 + F21*F23*chi32*dAdgrad_chi312112 + F21*F23*chi33*dAdgrad_chi133112 + F21*F23*chi33*dAdgrad_chi313112 + F22*F22*chi31*dAdgrad_chi221112 + F22*F22*chi32*dAdgrad_chi222112 + F22*F22*chi33*dAdgrad_chi223112 + F22*F23*chi31*dAdgrad_chi231112 + F22*F23*chi31*dAdgrad_chi321112 + F22*F23*chi32*dAdgrad_chi232112 + F22*F23*chi32*dAdgrad_chi322112 + F22*F23*chi33*dAdgrad_chi233112 + F22*F23*chi33*dAdgrad_chi323112 + F23*F23*chi31*dAdgrad_chi331112 + F23*F23*chi32*dAdgrad_chi332112 + F23*F23*chi33*dAdgrad_chi333112 + _223112;
        dadgrad_chi(12,6) = F21*F21*chi31*dAdgrad_chi111132 + F21*F21*chi32*dAdgrad_chi112132 + F21*F21*chi33*dAdgrad_chi113132 + F21*F22*chi31*dAdgrad_chi121132 + F21*F22*chi31*dAdgrad_chi211132 + F21*F22*chi32*dAdgrad_chi122132 + F21*F22*chi32*dAdgrad_chi212132 + F21*F22*chi33*dAdgrad_chi123132 + F21*F22*chi33*dAdgrad_chi213132 + F21*F23*chi31*dAdgrad_chi131132 + F21*F23*chi31*dAdgrad_chi311132 + F21*F23*chi32*dAdgrad_chi132132 + F21*F23*chi32*dAdgrad_chi312132 + F21*F23*chi33*dAdgrad_chi133132 + F21*F23*chi33*dAdgrad_chi313132 + F22*F22*chi31*dAdgrad_chi221132 + F22*F22*chi32*dAdgrad_chi222132 + F22*F22*chi33*dAdgrad_chi223132 + F22*F23*chi31*dAdgrad_chi231132 + F22*F23*chi31*dAdgrad_chi321132 + F22*F23*chi32*dAdgrad_chi232132 + F22*F23*chi32*dAdgrad_chi322132 + F22*F23*chi33*dAdgrad_chi233132 + F22*F23*chi33*dAdgrad_chi323132 + F23*F23*chi31*dAdgrad_chi331132 + F23*F23*chi32*dAdgrad_chi332132 + F23*F23*chi33*dAdgrad_chi333132 + _223132;
        dadgrad_chi(12,7) = F21*F21*chi31*dAdgrad_chi111131 + F21*F21*chi32*dAdgrad_chi112131 + F21*F21*chi33*dAdgrad_chi113131 + F21*F22*chi31*dAdgrad_chi121131 + F21*F22*chi31*dAdgrad_chi211131 + F21*F22*chi32*dAdgrad_chi122131 + F21*F22*chi32*dAdgrad_chi212131 + F21*F22*chi33*dAdgrad_chi123131 + F21*F22*chi33*dAdgrad_chi213131 + F21*F23*chi31*dAdgrad_chi131131 + F21*F23*chi31*dAdgrad_chi311131 + F21*F23*chi32*dAdgrad_chi132131 + F21*F23*chi32*dAdgrad_chi312131 + F21*F23*chi33*dAdgrad_chi133131 + F21*F23*chi33*dAdgrad_chi313131 + F22*F22*chi31*dAdgrad_chi221131 + F22*F22*chi32*dAdgrad_chi222131 + F22*F22*chi33*dAdgrad_chi223131 + F22*F23*chi31*dAdgrad_chi231131 + F22*F23*chi31*dAdgrad_chi321131 + F22*F23*chi32*dAdgrad_chi232131 + F22*F23*chi32*dAdgrad_chi322131 + F22*F23*chi33*dAdgrad_chi233131 + F22*F23*chi33*dAdgrad_chi323131 + F23*F23*chi31*dAdgrad_chi331131 + F23*F23*chi32*dAdgrad_chi332131 + F23*F23*chi33*dAdgrad_chi333131 + _223131;
        dadgrad_chi(12,8) = F21*F21*chi31*dAdgrad_chi111121 + F21*F21*chi32*dAdgrad_chi112121 + F21*F21*chi33*dAdgrad_chi113121 + F21*F22*chi31*dAdgrad_chi121121 + F21*F22*chi31*dAdgrad_chi211121 + F21*F22*chi32*dAdgrad_chi122121 + F21*F22*chi32*dAdgrad_chi212121 + F21*F22*chi33*dAdgrad_chi123121 + F21*F22*chi33*dAdgrad_chi213121 + F21*F23*chi31*dAdgrad_chi131121 + F21*F23*chi31*dAdgrad_chi311121 + F21*F23*chi32*dAdgrad_chi132121 + F21*F23*chi32*dAdgrad_chi312121 + F21*F23*chi33*dAdgrad_chi133121 + F21*F23*chi33*dAdgrad_chi313121 + F22*F22*chi31*dAdgrad_chi221121 + F22*F22*chi32*dAdgrad_chi222121 + F22*F22*chi33*dAdgrad_chi223121 + F22*F23*chi31*dAdgrad_chi231121 + F22*F23*chi31*dAdgrad_chi321121 + F22*F23*chi32*dAdgrad_chi232121 + F22*F23*chi32*dAdgrad_chi322121 + F22*F23*chi33*dAdgrad_chi233121 + F22*F23*chi33*dAdgrad_chi323121 + F23*F23*chi31*dAdgrad_chi331121 + F23*F23*chi32*dAdgrad_chi332121 + F23*F23*chi33*dAdgrad_chi333121 + _223121;
        dadgrad_chi(12,9) = F21*F21*chi31*dAdgrad_chi111211 + F21*F21*chi32*dAdgrad_chi112211 + F21*F21*chi33*dAdgrad_chi113211 + F21*F22*chi31*dAdgrad_chi121211 + F21*F22*chi31*dAdgrad_chi211211 + F21*F22*chi32*dAdgrad_chi122211 + F21*F22*chi32*dAdgrad_chi212211 + F21*F22*chi33*dAdgrad_chi123211 + F21*F22*chi33*dAdgrad_chi213211 + F21*F23*chi31*dAdgrad_chi131211 + F21*F23*chi31*dAdgrad_chi311211 + F21*F23*chi32*dAdgrad_chi132211 + F21*F23*chi32*dAdgrad_chi312211 + F21*F23*chi33*dAdgrad_chi133211 + F21*F23*chi33*dAdgrad_chi313211 + F22*F22*chi31*dAdgrad_chi221211 + F22*F22*chi32*dAdgrad_chi222211 + F22*F22*chi33*dAdgrad_chi223211 + F22*F23*chi31*dAdgrad_chi231211 + F22*F23*chi31*dAdgrad_chi321211 + F22*F23*chi32*dAdgrad_chi232211 + F22*F23*chi32*dAdgrad_chi322211 + F22*F23*chi33*dAdgrad_chi233211 + F22*F23*chi33*dAdgrad_chi323211 + F23*F23*chi31*dAdgrad_chi331211 + F23*F23*chi32*dAdgrad_chi332211 + F23*F23*chi33*dAdgrad_chi333211 + _223211;
        dadgrad_chi(12,10) = F21*F21*chi31*dAdgrad_chi111222 + F21*F21*chi32*dAdgrad_chi112222 + F21*F21*chi33*dAdgrad_chi113222 + F21*F22*chi31*dAdgrad_chi121222 + F21*F22*chi31*dAdgrad_chi211222 + F21*F22*chi32*dAdgrad_chi122222 + F21*F22*chi32*dAdgrad_chi212222 + F21*F22*chi33*dAdgrad_chi123222 + F21*F22*chi33*dAdgrad_chi213222 + F21*F23*chi31*dAdgrad_chi131222 + F21*F23*chi31*dAdgrad_chi311222 + F21*F23*chi32*dAdgrad_chi132222 + F21*F23*chi32*dAdgrad_chi312222 + F21*F23*chi33*dAdgrad_chi133222 + F21*F23*chi33*dAdgrad_chi313222 + F22*F22*chi31*dAdgrad_chi221222 + F22*F22*chi32*dAdgrad_chi222222 + F22*F22*chi33*dAdgrad_chi223222 + F22*F23*chi31*dAdgrad_chi231222 + F22*F23*chi31*dAdgrad_chi321222 + F22*F23*chi32*dAdgrad_chi232222 + F22*F23*chi32*dAdgrad_chi322222 + F22*F23*chi33*dAdgrad_chi233222 + F22*F23*chi33*dAdgrad_chi323222 + F23*F23*chi31*dAdgrad_chi331222 + F23*F23*chi32*dAdgrad_chi332222 + F23*F23*chi33*dAdgrad_chi333222 + _223222;
        dadgrad_chi(12,11) = F21*F21*chi31*dAdgrad_chi111233 + F21*F21*chi32*dAdgrad_chi112233 + F21*F21*chi33*dAdgrad_chi113233 + F21*F22*chi31*dAdgrad_chi121233 + F21*F22*chi31*dAdgrad_chi211233 + F21*F22*chi32*dAdgrad_chi122233 + F21*F22*chi32*dAdgrad_chi212233 + F21*F22*chi33*dAdgrad_chi123233 + F21*F22*chi33*dAdgrad_chi213233 + F21*F23*chi31*dAdgrad_chi131233 + F21*F23*chi31*dAdgrad_chi311233 + F21*F23*chi32*dAdgrad_chi132233 + F21*F23*chi32*dAdgrad_chi312233 + F21*F23*chi33*dAdgrad_chi133233 + F21*F23*chi33*dAdgrad_chi313233 + F22*F22*chi31*dAdgrad_chi221233 + F22*F22*chi32*dAdgrad_chi222233 + F22*F22*chi33*dAdgrad_chi223233 + F22*F23*chi31*dAdgrad_chi231233 + F22*F23*chi31*dAdgrad_chi321233 + F22*F23*chi32*dAdgrad_chi232233 + F22*F23*chi32*dAdgrad_chi322233 + F22*F23*chi33*dAdgrad_chi233233 + F22*F23*chi33*dAdgrad_chi323233 + F23*F23*chi31*dAdgrad_chi331233 + F23*F23*chi32*dAdgrad_chi332233 + F23*F23*chi33*dAdgrad_chi333233 + _223233;
        dadgrad_chi(12,12) = F21*F21*chi31*dAdgrad_chi111223 + F21*F21*chi32*dAdgrad_chi112223 + F21*F21*chi33*dAdgrad_chi113223 + F21*F22*chi31*dAdgrad_chi121223 + F21*F22*chi31*dAdgrad_chi211223 + F21*F22*chi32*dAdgrad_chi122223 + F21*F22*chi32*dAdgrad_chi212223 + F21*F22*chi33*dAdgrad_chi123223 + F21*F22*chi33*dAdgrad_chi213223 + F21*F23*chi31*dAdgrad_chi131223 + F21*F23*chi31*dAdgrad_chi311223 + F21*F23*chi32*dAdgrad_chi132223 + F21*F23*chi32*dAdgrad_chi312223 + F21*F23*chi33*dAdgrad_chi133223 + F21*F23*chi33*dAdgrad_chi313223 + F22*F22*chi31*dAdgrad_chi221223 + F22*F22*chi32*dAdgrad_chi222223 + F22*F22*chi33*dAdgrad_chi223223 + F22*F23*chi31*dAdgrad_chi231223 + F22*F23*chi31*dAdgrad_chi321223 + F22*F23*chi32*dAdgrad_chi232223 + F22*F23*chi32*dAdgrad_chi322223 + F22*F23*chi33*dAdgrad_chi233223 + F22*F23*chi33*dAdgrad_chi323223 + F23*F23*chi31*dAdgrad_chi331223 + F23*F23*chi32*dAdgrad_chi332223 + F23*F23*chi33*dAdgrad_chi333223 + _223223;
        dadgrad_chi(12,13) = F21*F21*chi31*dAdgrad_chi111213 + F21*F21*chi32*dAdgrad_chi112213 + F21*F21*chi33*dAdgrad_chi113213 + F21*F22*chi31*dAdgrad_chi121213 + F21*F22*chi31*dAdgrad_chi211213 + F21*F22*chi32*dAdgrad_chi122213 + F21*F22*chi32*dAdgrad_chi212213 + F21*F22*chi33*dAdgrad_chi123213 + F21*F22*chi33*dAdgrad_chi213213 + F21*F23*chi31*dAdgrad_chi131213 + F21*F23*chi31*dAdgrad_chi311213 + F21*F23*chi32*dAdgrad_chi132213 + F21*F23*chi32*dAdgrad_chi312213 + F21*F23*chi33*dAdgrad_chi133213 + F21*F23*chi33*dAdgrad_chi313213 + F22*F22*chi31*dAdgrad_chi221213 + F22*F22*chi32*dAdgrad_chi222213 + F22*F22*chi33*dAdgrad_chi223213 + F22*F23*chi31*dAdgrad_chi231213 + F22*F23*chi31*dAdgrad_chi321213 + F22*F23*chi32*dAdgrad_chi232213 + F22*F23*chi32*dAdgrad_chi322213 + F22*F23*chi33*dAdgrad_chi233213 + F22*F23*chi33*dAdgrad_chi323213 + F23*F23*chi31*dAdgrad_chi331213 + F23*F23*chi32*dAdgrad_chi332213 + F23*F23*chi33*dAdgrad_chi333213 + _223213;
        dadgrad_chi(12,14) = F21*F21*chi31*dAdgrad_chi111212 + F21*F21*chi32*dAdgrad_chi112212 + F21*F21*chi33*dAdgrad_chi113212 + F21*F22*chi31*dAdgrad_chi121212 + F21*F22*chi31*dAdgrad_chi211212 + F21*F22*chi32*dAdgrad_chi122212 + F21*F22*chi32*dAdgrad_chi212212 + F21*F22*chi33*dAdgrad_chi123212 + F21*F22*chi33*dAdgrad_chi213212 + F21*F23*chi31*dAdgrad_chi131212 + F21*F23*chi31*dAdgrad_chi311212 + F21*F23*chi32*dAdgrad_chi132212 + F21*F23*chi32*dAdgrad_chi312212 + F21*F23*chi33*dAdgrad_chi133212 + F21*F23*chi33*dAdgrad_chi313212 + F22*F22*chi31*dAdgrad_chi221212 + F22*F22*chi32*dAdgrad_chi222212 + F22*F22*chi33*dAdgrad_chi223212 + F22*F23*chi31*dAdgrad_chi231212 + F22*F23*chi31*dAdgrad_chi321212 + F22*F23*chi32*dAdgrad_chi232212 + F22*F23*chi32*dAdgrad_chi322212 + F22*F23*chi33*dAdgrad_chi233212 + F22*F23*chi33*dAdgrad_chi323212 + F23*F23*chi31*dAdgrad_chi331212 + F23*F23*chi32*dAdgrad_chi332212 + F23*F23*chi33*dAdgrad_chi333212 + _223212;
        dadgrad_chi(12,15) = F21*F21*chi31*dAdgrad_chi111232 + F21*F21*chi32*dAdgrad_chi112232 + F21*F21*chi33*dAdgrad_chi113232 + F21*F22*chi31*dAdgrad_chi121232 + F21*F22*chi31*dAdgrad_chi211232 + F21*F22*chi32*dAdgrad_chi122232 + F21*F22*chi32*dAdgrad_chi212232 + F21*F22*chi33*dAdgrad_chi123232 + F21*F22*chi33*dAdgrad_chi213232 + F21*F23*chi31*dAdgrad_chi131232 + F21*F23*chi31*dAdgrad_chi311232 + F21*F23*chi32*dAdgrad_chi132232 + F21*F23*chi32*dAdgrad_chi312232 + F21*F23*chi33*dAdgrad_chi133232 + F21*F23*chi33*dAdgrad_chi313232 + F22*F22*chi31*dAdgrad_chi221232 + F22*F22*chi32*dAdgrad_chi222232 + F22*F22*chi33*dAdgrad_chi223232 + F22*F23*chi31*dAdgrad_chi231232 + F22*F23*chi31*dAdgrad_chi321232 + F22*F23*chi32*dAdgrad_chi232232 + F22*F23*chi32*dAdgrad_chi322232 + F22*F23*chi33*dAdgrad_chi233232 + F22*F23*chi33*dAdgrad_chi323232 + F23*F23*chi31*dAdgrad_chi331232 + F23*F23*chi32*dAdgrad_chi332232 + F23*F23*chi33*dAdgrad_chi333232 + _223232;
        dadgrad_chi(12,16) = F21*F21*chi31*dAdgrad_chi111231 + F21*F21*chi32*dAdgrad_chi112231 + F21*F21*chi33*dAdgrad_chi113231 + F21*F22*chi31*dAdgrad_chi121231 + F21*F22*chi31*dAdgrad_chi211231 + F21*F22*chi32*dAdgrad_chi122231 + F21*F22*chi32*dAdgrad_chi212231 + F21*F22*chi33*dAdgrad_chi123231 + F21*F22*chi33*dAdgrad_chi213231 + F21*F23*chi31*dAdgrad_chi131231 + F21*F23*chi31*dAdgrad_chi311231 + F21*F23*chi32*dAdgrad_chi132231 + F21*F23*chi32*dAdgrad_chi312231 + F21*F23*chi33*dAdgrad_chi133231 + F21*F23*chi33*dAdgrad_chi313231 + F22*F22*chi31*dAdgrad_chi221231 + F22*F22*chi32*dAdgrad_chi222231 + F22*F22*chi33*dAdgrad_chi223231 + F22*F23*chi31*dAdgrad_chi231231 + F22*F23*chi31*dAdgrad_chi321231 + F22*F23*chi32*dAdgrad_chi232231 + F22*F23*chi32*dAdgrad_chi322231 + F22*F23*chi33*dAdgrad_chi233231 + F22*F23*chi33*dAdgrad_chi323231 + F23*F23*chi31*dAdgrad_chi331231 + F23*F23*chi32*dAdgrad_chi332231 + F23*F23*chi33*dAdgrad_chi333231 + _223231;
        dadgrad_chi(12,17) = F21*F21*chi31*dAdgrad_chi111221 + F21*F21*chi32*dAdgrad_chi112221 + F21*F21*chi33*dAdgrad_chi113221 + F21*F22*chi31*dAdgrad_chi121221 + F21*F22*chi31*dAdgrad_chi211221 + F21*F22*chi32*dAdgrad_chi122221 + F21*F22*chi32*dAdgrad_chi212221 + F21*F22*chi33*dAdgrad_chi123221 + F21*F22*chi33*dAdgrad_chi213221 + F21*F23*chi31*dAdgrad_chi131221 + F21*F23*chi31*dAdgrad_chi311221 + F21*F23*chi32*dAdgrad_chi132221 + F21*F23*chi32*dAdgrad_chi312221 + F21*F23*chi33*dAdgrad_chi133221 + F21*F23*chi33*dAdgrad_chi313221 + F22*F22*chi31*dAdgrad_chi221221 + F22*F22*chi32*dAdgrad_chi222221 + F22*F22*chi33*dAdgrad_chi223221 + F22*F23*chi31*dAdgrad_chi231221 + F22*F23*chi31*dAdgrad_chi321221 + F22*F23*chi32*dAdgrad_chi232221 + F22*F23*chi32*dAdgrad_chi322221 + F22*F23*chi33*dAdgrad_chi233221 + F22*F23*chi33*dAdgrad_chi323221 + F23*F23*chi31*dAdgrad_chi331221 + F23*F23*chi32*dAdgrad_chi332221 + F23*F23*chi33*dAdgrad_chi333221 + _223221;
        dadgrad_chi(12,18) = F21*F21*chi31*dAdgrad_chi111311 + F21*F21*chi32*dAdgrad_chi112311 + F21*F21*chi33*dAdgrad_chi113311 + F21*F22*chi31*dAdgrad_chi121311 + F21*F22*chi31*dAdgrad_chi211311 + F21*F22*chi32*dAdgrad_chi122311 + F21*F22*chi32*dAdgrad_chi212311 + F21*F22*chi33*dAdgrad_chi123311 + F21*F22*chi33*dAdgrad_chi213311 + F21*F23*chi31*dAdgrad_chi131311 + F21*F23*chi31*dAdgrad_chi311311 + F21*F23*chi32*dAdgrad_chi132311 + F21*F23*chi32*dAdgrad_chi312311 + F21*F23*chi33*dAdgrad_chi133311 + F21*F23*chi33*dAdgrad_chi313311 + F22*F22*chi31*dAdgrad_chi221311 + F22*F22*chi32*dAdgrad_chi222311 + F22*F22*chi33*dAdgrad_chi223311 + F22*F23*chi31*dAdgrad_chi231311 + F22*F23*chi31*dAdgrad_chi321311 + F22*F23*chi32*dAdgrad_chi232311 + F22*F23*chi32*dAdgrad_chi322311 + F22*F23*chi33*dAdgrad_chi233311 + F22*F23*chi33*dAdgrad_chi323311 + F23*F23*chi31*dAdgrad_chi331311 + F23*F23*chi32*dAdgrad_chi332311 + F23*F23*chi33*dAdgrad_chi333311 + _223311;
        dadgrad_chi(12,19) = F21*F21*chi31*dAdgrad_chi111322 + F21*F21*chi32*dAdgrad_chi112322 + F21*F21*chi33*dAdgrad_chi113322 + F21*F22*chi31*dAdgrad_chi121322 + F21*F22*chi31*dAdgrad_chi211322 + F21*F22*chi32*dAdgrad_chi122322 + F21*F22*chi32*dAdgrad_chi212322 + F21*F22*chi33*dAdgrad_chi123322 + F21*F22*chi33*dAdgrad_chi213322 + F21*F23*chi31*dAdgrad_chi131322 + F21*F23*chi31*dAdgrad_chi311322 + F21*F23*chi32*dAdgrad_chi132322 + F21*F23*chi32*dAdgrad_chi312322 + F21*F23*chi33*dAdgrad_chi133322 + F21*F23*chi33*dAdgrad_chi313322 + F22*F22*chi31*dAdgrad_chi221322 + F22*F22*chi32*dAdgrad_chi222322 + F22*F22*chi33*dAdgrad_chi223322 + F22*F23*chi31*dAdgrad_chi231322 + F22*F23*chi31*dAdgrad_chi321322 + F22*F23*chi32*dAdgrad_chi232322 + F22*F23*chi32*dAdgrad_chi322322 + F22*F23*chi33*dAdgrad_chi233322 + F22*F23*chi33*dAdgrad_chi323322 + F23*F23*chi31*dAdgrad_chi331322 + F23*F23*chi32*dAdgrad_chi332322 + F23*F23*chi33*dAdgrad_chi333322 + _223322;
        dadgrad_chi(12,20) = F21*F21*chi31*dAdgrad_chi111333 + F21*F21*chi32*dAdgrad_chi112333 + F21*F21*chi33*dAdgrad_chi113333 + F21*F22*chi31*dAdgrad_chi121333 + F21*F22*chi31*dAdgrad_chi211333 + F21*F22*chi32*dAdgrad_chi122333 + F21*F22*chi32*dAdgrad_chi212333 + F21*F22*chi33*dAdgrad_chi123333 + F21*F22*chi33*dAdgrad_chi213333 + F21*F23*chi31*dAdgrad_chi131333 + F21*F23*chi31*dAdgrad_chi311333 + F21*F23*chi32*dAdgrad_chi132333 + F21*F23*chi32*dAdgrad_chi312333 + F21*F23*chi33*dAdgrad_chi133333 + F21*F23*chi33*dAdgrad_chi313333 + F22*F22*chi31*dAdgrad_chi221333 + F22*F22*chi32*dAdgrad_chi222333 + F22*F22*chi33*dAdgrad_chi223333 + F22*F23*chi31*dAdgrad_chi231333 + F22*F23*chi31*dAdgrad_chi321333 + F22*F23*chi32*dAdgrad_chi232333 + F22*F23*chi32*dAdgrad_chi322333 + F22*F23*chi33*dAdgrad_chi233333 + F22*F23*chi33*dAdgrad_chi323333 + F23*F23*chi31*dAdgrad_chi331333 + F23*F23*chi32*dAdgrad_chi332333 + F23*F23*chi33*dAdgrad_chi333333 + _223333;
        dadgrad_chi(12,21) = F21*F21*chi31*dAdgrad_chi111323 + F21*F21*chi32*dAdgrad_chi112323 + F21*F21*chi33*dAdgrad_chi113323 + F21*F22*chi31*dAdgrad_chi121323 + F21*F22*chi31*dAdgrad_chi211323 + F21*F22*chi32*dAdgrad_chi122323 + F21*F22*chi32*dAdgrad_chi212323 + F21*F22*chi33*dAdgrad_chi123323 + F21*F22*chi33*dAdgrad_chi213323 + F21*F23*chi31*dAdgrad_chi131323 + F21*F23*chi31*dAdgrad_chi311323 + F21*F23*chi32*dAdgrad_chi132323 + F21*F23*chi32*dAdgrad_chi312323 + F21*F23*chi33*dAdgrad_chi133323 + F21*F23*chi33*dAdgrad_chi313323 + F22*F22*chi31*dAdgrad_chi221323 + F22*F22*chi32*dAdgrad_chi222323 + F22*F22*chi33*dAdgrad_chi223323 + F22*F23*chi31*dAdgrad_chi231323 + F22*F23*chi31*dAdgrad_chi321323 + F22*F23*chi32*dAdgrad_chi232323 + F22*F23*chi32*dAdgrad_chi322323 + F22*F23*chi33*dAdgrad_chi233323 + F22*F23*chi33*dAdgrad_chi323323 + F23*F23*chi31*dAdgrad_chi331323 + F23*F23*chi32*dAdgrad_chi332323 + F23*F23*chi33*dAdgrad_chi333323 + _223323;
        dadgrad_chi(12,22) = F21*F21*chi31*dAdgrad_chi111313 + F21*F21*chi32*dAdgrad_chi112313 + F21*F21*chi33*dAdgrad_chi113313 + F21*F22*chi31*dAdgrad_chi121313 + F21*F22*chi31*dAdgrad_chi211313 + F21*F22*chi32*dAdgrad_chi122313 + F21*F22*chi32*dAdgrad_chi212313 + F21*F22*chi33*dAdgrad_chi123313 + F21*F22*chi33*dAdgrad_chi213313 + F21*F23*chi31*dAdgrad_chi131313 + F21*F23*chi31*dAdgrad_chi311313 + F21*F23*chi32*dAdgrad_chi132313 + F21*F23*chi32*dAdgrad_chi312313 + F21*F23*chi33*dAdgrad_chi133313 + F21*F23*chi33*dAdgrad_chi313313 + F22*F22*chi31*dAdgrad_chi221313 + F22*F22*chi32*dAdgrad_chi222313 + F22*F22*chi33*dAdgrad_chi223313 + F22*F23*chi31*dAdgrad_chi231313 + F22*F23*chi31*dAdgrad_chi321313 + F22*F23*chi32*dAdgrad_chi232313 + F22*F23*chi32*dAdgrad_chi322313 + F22*F23*chi33*dAdgrad_chi233313 + F22*F23*chi33*dAdgrad_chi323313 + F23*F23*chi31*dAdgrad_chi331313 + F23*F23*chi32*dAdgrad_chi332313 + F23*F23*chi33*dAdgrad_chi333313 + _223313;
        dadgrad_chi(12,23) = F21*F21*chi31*dAdgrad_chi111312 + F21*F21*chi32*dAdgrad_chi112312 + F21*F21*chi33*dAdgrad_chi113312 + F21*F22*chi31*dAdgrad_chi121312 + F21*F22*chi31*dAdgrad_chi211312 + F21*F22*chi32*dAdgrad_chi122312 + F21*F22*chi32*dAdgrad_chi212312 + F21*F22*chi33*dAdgrad_chi123312 + F21*F22*chi33*dAdgrad_chi213312 + F21*F23*chi31*dAdgrad_chi131312 + F21*F23*chi31*dAdgrad_chi311312 + F21*F23*chi32*dAdgrad_chi132312 + F21*F23*chi32*dAdgrad_chi312312 + F21*F23*chi33*dAdgrad_chi133312 + F21*F23*chi33*dAdgrad_chi313312 + F22*F22*chi31*dAdgrad_chi221312 + F22*F22*chi32*dAdgrad_chi222312 + F22*F22*chi33*dAdgrad_chi223312 + F22*F23*chi31*dAdgrad_chi231312 + F22*F23*chi31*dAdgrad_chi321312 + F22*F23*chi32*dAdgrad_chi232312 + F22*F23*chi32*dAdgrad_chi322312 + F22*F23*chi33*dAdgrad_chi233312 + F22*F23*chi33*dAdgrad_chi323312 + F23*F23*chi31*dAdgrad_chi331312 + F23*F23*chi32*dAdgrad_chi332312 + F23*F23*chi33*dAdgrad_chi333312 + _223312;
        dadgrad_chi(12,24) = F21*F21*chi31*dAdgrad_chi111332 + F21*F21*chi32*dAdgrad_chi112332 + F21*F21*chi33*dAdgrad_chi113332 + F21*F22*chi31*dAdgrad_chi121332 + F21*F22*chi31*dAdgrad_chi211332 + F21*F22*chi32*dAdgrad_chi122332 + F21*F22*chi32*dAdgrad_chi212332 + F21*F22*chi33*dAdgrad_chi123332 + F21*F22*chi33*dAdgrad_chi213332 + F21*F23*chi31*dAdgrad_chi131332 + F21*F23*chi31*dAdgrad_chi311332 + F21*F23*chi32*dAdgrad_chi132332 + F21*F23*chi32*dAdgrad_chi312332 + F21*F23*chi33*dAdgrad_chi133332 + F21*F23*chi33*dAdgrad_chi313332 + F22*F22*chi31*dAdgrad_chi221332 + F22*F22*chi32*dAdgrad_chi222332 + F22*F22*chi33*dAdgrad_chi223332 + F22*F23*chi31*dAdgrad_chi231332 + F22*F23*chi31*dAdgrad_chi321332 + F22*F23*chi32*dAdgrad_chi232332 + F22*F23*chi32*dAdgrad_chi322332 + F22*F23*chi33*dAdgrad_chi233332 + F22*F23*chi33*dAdgrad_chi323332 + F23*F23*chi31*dAdgrad_chi331332 + F23*F23*chi32*dAdgrad_chi332332 + F23*F23*chi33*dAdgrad_chi333332 + _223332;
        dadgrad_chi(12,25) = F21*F21*chi31*dAdgrad_chi111331 + F21*F21*chi32*dAdgrad_chi112331 + F21*F21*chi33*dAdgrad_chi113331 + F21*F22*chi31*dAdgrad_chi121331 + F21*F22*chi31*dAdgrad_chi211331 + F21*F22*chi32*dAdgrad_chi122331 + F21*F22*chi32*dAdgrad_chi212331 + F21*F22*chi33*dAdgrad_chi123331 + F21*F22*chi33*dAdgrad_chi213331 + F21*F23*chi31*dAdgrad_chi131331 + F21*F23*chi31*dAdgrad_chi311331 + F21*F23*chi32*dAdgrad_chi132331 + F21*F23*chi32*dAdgrad_chi312331 + F21*F23*chi33*dAdgrad_chi133331 + F21*F23*chi33*dAdgrad_chi313331 + F22*F22*chi31*dAdgrad_chi221331 + F22*F22*chi32*dAdgrad_chi222331 + F22*F22*chi33*dAdgrad_chi223331 + F22*F23*chi31*dAdgrad_chi231331 + F22*F23*chi31*dAdgrad_chi321331 + F22*F23*chi32*dAdgrad_chi232331 + F22*F23*chi32*dAdgrad_chi322331 + F22*F23*chi33*dAdgrad_chi233331 + F22*F23*chi33*dAdgrad_chi323331 + F23*F23*chi31*dAdgrad_chi331331 + F23*F23*chi32*dAdgrad_chi332331 + F23*F23*chi33*dAdgrad_chi333331 + _223331;
        dadgrad_chi(12,26) = F21*F21*chi31*dAdgrad_chi111321 + F21*F21*chi32*dAdgrad_chi112321 + F21*F21*chi33*dAdgrad_chi113321 + F21*F22*chi31*dAdgrad_chi121321 + F21*F22*chi31*dAdgrad_chi211321 + F21*F22*chi32*dAdgrad_chi122321 + F21*F22*chi32*dAdgrad_chi212321 + F21*F22*chi33*dAdgrad_chi123321 + F21*F22*chi33*dAdgrad_chi213321 + F21*F23*chi31*dAdgrad_chi131321 + F21*F23*chi31*dAdgrad_chi311321 + F21*F23*chi32*dAdgrad_chi132321 + F21*F23*chi32*dAdgrad_chi312321 + F21*F23*chi33*dAdgrad_chi133321 + F21*F23*chi33*dAdgrad_chi313321 + F22*F22*chi31*dAdgrad_chi221321 + F22*F22*chi32*dAdgrad_chi222321 + F22*F22*chi33*dAdgrad_chi223321 + F22*F23*chi31*dAdgrad_chi231321 + F22*F23*chi31*dAdgrad_chi321321 + F22*F23*chi32*dAdgrad_chi232321 + F22*F23*chi32*dAdgrad_chi322321 + F22*F23*chi33*dAdgrad_chi233321 + F22*F23*chi33*dAdgrad_chi323321 + F23*F23*chi31*dAdgrad_chi331321 + F23*F23*chi32*dAdgrad_chi332321 + F23*F23*chi33*dAdgrad_chi333321 + _223321;
        dadgrad_chi(13,0) = F11*F21*chi31*dAdgrad_chi111111 + F11*F21*chi32*dAdgrad_chi112111 + F11*F21*chi33*dAdgrad_chi113111 + F11*F22*chi31*dAdgrad_chi211111 + F11*F22*chi32*dAdgrad_chi212111 + F11*F22*chi33*dAdgrad_chi213111 + F11*F23*chi31*dAdgrad_chi311111 + F11*F23*chi32*dAdgrad_chi312111 + F11*F23*chi33*dAdgrad_chi313111 + F12*F21*chi31*dAdgrad_chi121111 + F12*F21*chi32*dAdgrad_chi122111 + F12*F21*chi33*dAdgrad_chi123111 + F12*F22*chi31*dAdgrad_chi221111 + F12*F22*chi32*dAdgrad_chi222111 + F12*F22*chi33*dAdgrad_chi223111 + F12*F23*chi31*dAdgrad_chi321111 + F12*F23*chi32*dAdgrad_chi322111 + F12*F23*chi33*dAdgrad_chi323111 + F13*F21*chi31*dAdgrad_chi131111 + F13*F21*chi32*dAdgrad_chi132111 + F13*F21*chi33*dAdgrad_chi133111 + F13*F22*chi31*dAdgrad_chi231111 + F13*F22*chi32*dAdgrad_chi232111 + F13*F22*chi33*dAdgrad_chi233111 + F13*F23*chi31*dAdgrad_chi331111 + F13*F23*chi32*dAdgrad_chi332111 + F13*F23*chi33*dAdgrad_chi333111 + _213111;
        dadgrad_chi(13,1) = F11*F21*chi31*dAdgrad_chi111122 + F11*F21*chi32*dAdgrad_chi112122 + F11*F21*chi33*dAdgrad_chi113122 + F11*F22*chi31*dAdgrad_chi211122 + F11*F22*chi32*dAdgrad_chi212122 + F11*F22*chi33*dAdgrad_chi213122 + F11*F23*chi31*dAdgrad_chi311122 + F11*F23*chi32*dAdgrad_chi312122 + F11*F23*chi33*dAdgrad_chi313122 + F12*F21*chi31*dAdgrad_chi121122 + F12*F21*chi32*dAdgrad_chi122122 + F12*F21*chi33*dAdgrad_chi123122 + F12*F22*chi31*dAdgrad_chi221122 + F12*F22*chi32*dAdgrad_chi222122 + F12*F22*chi33*dAdgrad_chi223122 + F12*F23*chi31*dAdgrad_chi321122 + F12*F23*chi32*dAdgrad_chi322122 + F12*F23*chi33*dAdgrad_chi323122 + F13*F21*chi31*dAdgrad_chi131122 + F13*F21*chi32*dAdgrad_chi132122 + F13*F21*chi33*dAdgrad_chi133122 + F13*F22*chi31*dAdgrad_chi231122 + F13*F22*chi32*dAdgrad_chi232122 + F13*F22*chi33*dAdgrad_chi233122 + F13*F23*chi31*dAdgrad_chi331122 + F13*F23*chi32*dAdgrad_chi332122 + F13*F23*chi33*dAdgrad_chi333122 + _213122;
        dadgrad_chi(13,2) = F11*F21*chi31*dAdgrad_chi111133 + F11*F21*chi32*dAdgrad_chi112133 + F11*F21*chi33*dAdgrad_chi113133 + F11*F22*chi31*dAdgrad_chi211133 + F11*F22*chi32*dAdgrad_chi212133 + F11*F22*chi33*dAdgrad_chi213133 + F11*F23*chi31*dAdgrad_chi311133 + F11*F23*chi32*dAdgrad_chi312133 + F11*F23*chi33*dAdgrad_chi313133 + F12*F21*chi31*dAdgrad_chi121133 + F12*F21*chi32*dAdgrad_chi122133 + F12*F21*chi33*dAdgrad_chi123133 + F12*F22*chi31*dAdgrad_chi221133 + F12*F22*chi32*dAdgrad_chi222133 + F12*F22*chi33*dAdgrad_chi223133 + F12*F23*chi31*dAdgrad_chi321133 + F12*F23*chi32*dAdgrad_chi322133 + F12*F23*chi33*dAdgrad_chi323133 + F13*F21*chi31*dAdgrad_chi131133 + F13*F21*chi32*dAdgrad_chi132133 + F13*F21*chi33*dAdgrad_chi133133 + F13*F22*chi31*dAdgrad_chi231133 + F13*F22*chi32*dAdgrad_chi232133 + F13*F22*chi33*dAdgrad_chi233133 + F13*F23*chi31*dAdgrad_chi331133 + F13*F23*chi32*dAdgrad_chi332133 + F13*F23*chi33*dAdgrad_chi333133 + _213133;
        dadgrad_chi(13,3) = F11*F21*chi31*dAdgrad_chi111123 + F11*F21*chi32*dAdgrad_chi112123 + F11*F21*chi33*dAdgrad_chi113123 + F11*F22*chi31*dAdgrad_chi211123 + F11*F22*chi32*dAdgrad_chi212123 + F11*F22*chi33*dAdgrad_chi213123 + F11*F23*chi31*dAdgrad_chi311123 + F11*F23*chi32*dAdgrad_chi312123 + F11*F23*chi33*dAdgrad_chi313123 + F12*F21*chi31*dAdgrad_chi121123 + F12*F21*chi32*dAdgrad_chi122123 + F12*F21*chi33*dAdgrad_chi123123 + F12*F22*chi31*dAdgrad_chi221123 + F12*F22*chi32*dAdgrad_chi222123 + F12*F22*chi33*dAdgrad_chi223123 + F12*F23*chi31*dAdgrad_chi321123 + F12*F23*chi32*dAdgrad_chi322123 + F12*F23*chi33*dAdgrad_chi323123 + F13*F21*chi31*dAdgrad_chi131123 + F13*F21*chi32*dAdgrad_chi132123 + F13*F21*chi33*dAdgrad_chi133123 + F13*F22*chi31*dAdgrad_chi231123 + F13*F22*chi32*dAdgrad_chi232123 + F13*F22*chi33*dAdgrad_chi233123 + F13*F23*chi31*dAdgrad_chi331123 + F13*F23*chi32*dAdgrad_chi332123 + F13*F23*chi33*dAdgrad_chi333123 + _213123;
        dadgrad_chi(13,4) = F11*F21*chi31*dAdgrad_chi111113 + F11*F21*chi32*dAdgrad_chi112113 + F11*F21*chi33*dAdgrad_chi113113 + F11*F22*chi31*dAdgrad_chi211113 + F11*F22*chi32*dAdgrad_chi212113 + F11*F22*chi33*dAdgrad_chi213113 + F11*F23*chi31*dAdgrad_chi311113 + F11*F23*chi32*dAdgrad_chi312113 + F11*F23*chi33*dAdgrad_chi313113 + F12*F21*chi31*dAdgrad_chi121113 + F12*F21*chi32*dAdgrad_chi122113 + F12*F21*chi33*dAdgrad_chi123113 + F12*F22*chi31*dAdgrad_chi221113 + F12*F22*chi32*dAdgrad_chi222113 + F12*F22*chi33*dAdgrad_chi223113 + F12*F23*chi31*dAdgrad_chi321113 + F12*F23*chi32*dAdgrad_chi322113 + F12*F23*chi33*dAdgrad_chi323113 + F13*F21*chi31*dAdgrad_chi131113 + F13*F21*chi32*dAdgrad_chi132113 + F13*F21*chi33*dAdgrad_chi133113 + F13*F22*chi31*dAdgrad_chi231113 + F13*F22*chi32*dAdgrad_chi232113 + F13*F22*chi33*dAdgrad_chi233113 + F13*F23*chi31*dAdgrad_chi331113 + F13*F23*chi32*dAdgrad_chi332113 + F13*F23*chi33*dAdgrad_chi333113 + _213113;
        dadgrad_chi(13,5) = F11*F21*chi31*dAdgrad_chi111112 + F11*F21*chi32*dAdgrad_chi112112 + F11*F21*chi33*dAdgrad_chi113112 + F11*F22*chi31*dAdgrad_chi211112 + F11*F22*chi32*dAdgrad_chi212112 + F11*F22*chi33*dAdgrad_chi213112 + F11*F23*chi31*dAdgrad_chi311112 + F11*F23*chi32*dAdgrad_chi312112 + F11*F23*chi33*dAdgrad_chi313112 + F12*F21*chi31*dAdgrad_chi121112 + F12*F21*chi32*dAdgrad_chi122112 + F12*F21*chi33*dAdgrad_chi123112 + F12*F22*chi31*dAdgrad_chi221112 + F12*F22*chi32*dAdgrad_chi222112 + F12*F22*chi33*dAdgrad_chi223112 + F12*F23*chi31*dAdgrad_chi321112 + F12*F23*chi32*dAdgrad_chi322112 + F12*F23*chi33*dAdgrad_chi323112 + F13*F21*chi31*dAdgrad_chi131112 + F13*F21*chi32*dAdgrad_chi132112 + F13*F21*chi33*dAdgrad_chi133112 + F13*F22*chi31*dAdgrad_chi231112 + F13*F22*chi32*dAdgrad_chi232112 + F13*F22*chi33*dAdgrad_chi233112 + F13*F23*chi31*dAdgrad_chi331112 + F13*F23*chi32*dAdgrad_chi332112 + F13*F23*chi33*dAdgrad_chi333112 + _213112;
        dadgrad_chi(13,6) = F11*F21*chi31*dAdgrad_chi111132 + F11*F21*chi32*dAdgrad_chi112132 + F11*F21*chi33*dAdgrad_chi113132 + F11*F22*chi31*dAdgrad_chi211132 + F11*F22*chi32*dAdgrad_chi212132 + F11*F22*chi33*dAdgrad_chi213132 + F11*F23*chi31*dAdgrad_chi311132 + F11*F23*chi32*dAdgrad_chi312132 + F11*F23*chi33*dAdgrad_chi313132 + F12*F21*chi31*dAdgrad_chi121132 + F12*F21*chi32*dAdgrad_chi122132 + F12*F21*chi33*dAdgrad_chi123132 + F12*F22*chi31*dAdgrad_chi221132 + F12*F22*chi32*dAdgrad_chi222132 + F12*F22*chi33*dAdgrad_chi223132 + F12*F23*chi31*dAdgrad_chi321132 + F12*F23*chi32*dAdgrad_chi322132 + F12*F23*chi33*dAdgrad_chi323132 + F13*F21*chi31*dAdgrad_chi131132 + F13*F21*chi32*dAdgrad_chi132132 + F13*F21*chi33*dAdgrad_chi133132 + F13*F22*chi31*dAdgrad_chi231132 + F13*F22*chi32*dAdgrad_chi232132 + F13*F22*chi33*dAdgrad_chi233132 + F13*F23*chi31*dAdgrad_chi331132 + F13*F23*chi32*dAdgrad_chi332132 + F13*F23*chi33*dAdgrad_chi333132 + _213132;
        dadgrad_chi(13,7) = F11*F21*chi31*dAdgrad_chi111131 + F11*F21*chi32*dAdgrad_chi112131 + F11*F21*chi33*dAdgrad_chi113131 + F11*F22*chi31*dAdgrad_chi211131 + F11*F22*chi32*dAdgrad_chi212131 + F11*F22*chi33*dAdgrad_chi213131 + F11*F23*chi31*dAdgrad_chi311131 + F11*F23*chi32*dAdgrad_chi312131 + F11*F23*chi33*dAdgrad_chi313131 + F12*F21*chi31*dAdgrad_chi121131 + F12*F21*chi32*dAdgrad_chi122131 + F12*F21*chi33*dAdgrad_chi123131 + F12*F22*chi31*dAdgrad_chi221131 + F12*F22*chi32*dAdgrad_chi222131 + F12*F22*chi33*dAdgrad_chi223131 + F12*F23*chi31*dAdgrad_chi321131 + F12*F23*chi32*dAdgrad_chi322131 + F12*F23*chi33*dAdgrad_chi323131 + F13*F21*chi31*dAdgrad_chi131131 + F13*F21*chi32*dAdgrad_chi132131 + F13*F21*chi33*dAdgrad_chi133131 + F13*F22*chi31*dAdgrad_chi231131 + F13*F22*chi32*dAdgrad_chi232131 + F13*F22*chi33*dAdgrad_chi233131 + F13*F23*chi31*dAdgrad_chi331131 + F13*F23*chi32*dAdgrad_chi332131 + F13*F23*chi33*dAdgrad_chi333131 + _213131;
        dadgrad_chi(13,8) = F11*F21*chi31*dAdgrad_chi111121 + F11*F21*chi32*dAdgrad_chi112121 + F11*F21*chi33*dAdgrad_chi113121 + F11*F22*chi31*dAdgrad_chi211121 + F11*F22*chi32*dAdgrad_chi212121 + F11*F22*chi33*dAdgrad_chi213121 + F11*F23*chi31*dAdgrad_chi311121 + F11*F23*chi32*dAdgrad_chi312121 + F11*F23*chi33*dAdgrad_chi313121 + F12*F21*chi31*dAdgrad_chi121121 + F12*F21*chi32*dAdgrad_chi122121 + F12*F21*chi33*dAdgrad_chi123121 + F12*F22*chi31*dAdgrad_chi221121 + F12*F22*chi32*dAdgrad_chi222121 + F12*F22*chi33*dAdgrad_chi223121 + F12*F23*chi31*dAdgrad_chi321121 + F12*F23*chi32*dAdgrad_chi322121 + F12*F23*chi33*dAdgrad_chi323121 + F13*F21*chi31*dAdgrad_chi131121 + F13*F21*chi32*dAdgrad_chi132121 + F13*F21*chi33*dAdgrad_chi133121 + F13*F22*chi31*dAdgrad_chi231121 + F13*F22*chi32*dAdgrad_chi232121 + F13*F22*chi33*dAdgrad_chi233121 + F13*F23*chi31*dAdgrad_chi331121 + F13*F23*chi32*dAdgrad_chi332121 + F13*F23*chi33*dAdgrad_chi333121 + _213121;
        dadgrad_chi(13,9) = F11*F21*chi31*dAdgrad_chi111211 + F11*F21*chi32*dAdgrad_chi112211 + F11*F21*chi33*dAdgrad_chi113211 + F11*F22*chi31*dAdgrad_chi211211 + F11*F22*chi32*dAdgrad_chi212211 + F11*F22*chi33*dAdgrad_chi213211 + F11*F23*chi31*dAdgrad_chi311211 + F11*F23*chi32*dAdgrad_chi312211 + F11*F23*chi33*dAdgrad_chi313211 + F12*F21*chi31*dAdgrad_chi121211 + F12*F21*chi32*dAdgrad_chi122211 + F12*F21*chi33*dAdgrad_chi123211 + F12*F22*chi31*dAdgrad_chi221211 + F12*F22*chi32*dAdgrad_chi222211 + F12*F22*chi33*dAdgrad_chi223211 + F12*F23*chi31*dAdgrad_chi321211 + F12*F23*chi32*dAdgrad_chi322211 + F12*F23*chi33*dAdgrad_chi323211 + F13*F21*chi31*dAdgrad_chi131211 + F13*F21*chi32*dAdgrad_chi132211 + F13*F21*chi33*dAdgrad_chi133211 + F13*F22*chi31*dAdgrad_chi231211 + F13*F22*chi32*dAdgrad_chi232211 + F13*F22*chi33*dAdgrad_chi233211 + F13*F23*chi31*dAdgrad_chi331211 + F13*F23*chi32*dAdgrad_chi332211 + F13*F23*chi33*dAdgrad_chi333211 + _213211;
        dadgrad_chi(13,10) = F11*F21*chi31*dAdgrad_chi111222 + F11*F21*chi32*dAdgrad_chi112222 + F11*F21*chi33*dAdgrad_chi113222 + F11*F22*chi31*dAdgrad_chi211222 + F11*F22*chi32*dAdgrad_chi212222 + F11*F22*chi33*dAdgrad_chi213222 + F11*F23*chi31*dAdgrad_chi311222 + F11*F23*chi32*dAdgrad_chi312222 + F11*F23*chi33*dAdgrad_chi313222 + F12*F21*chi31*dAdgrad_chi121222 + F12*F21*chi32*dAdgrad_chi122222 + F12*F21*chi33*dAdgrad_chi123222 + F12*F22*chi31*dAdgrad_chi221222 + F12*F22*chi32*dAdgrad_chi222222 + F12*F22*chi33*dAdgrad_chi223222 + F12*F23*chi31*dAdgrad_chi321222 + F12*F23*chi32*dAdgrad_chi322222 + F12*F23*chi33*dAdgrad_chi323222 + F13*F21*chi31*dAdgrad_chi131222 + F13*F21*chi32*dAdgrad_chi132222 + F13*F21*chi33*dAdgrad_chi133222 + F13*F22*chi31*dAdgrad_chi231222 + F13*F22*chi32*dAdgrad_chi232222 + F13*F22*chi33*dAdgrad_chi233222 + F13*F23*chi31*dAdgrad_chi331222 + F13*F23*chi32*dAdgrad_chi332222 + F13*F23*chi33*dAdgrad_chi333222 + _213222;
        dadgrad_chi(13,11) = F11*F21*chi31*dAdgrad_chi111233 + F11*F21*chi32*dAdgrad_chi112233 + F11*F21*chi33*dAdgrad_chi113233 + F11*F22*chi31*dAdgrad_chi211233 + F11*F22*chi32*dAdgrad_chi212233 + F11*F22*chi33*dAdgrad_chi213233 + F11*F23*chi31*dAdgrad_chi311233 + F11*F23*chi32*dAdgrad_chi312233 + F11*F23*chi33*dAdgrad_chi313233 + F12*F21*chi31*dAdgrad_chi121233 + F12*F21*chi32*dAdgrad_chi122233 + F12*F21*chi33*dAdgrad_chi123233 + F12*F22*chi31*dAdgrad_chi221233 + F12*F22*chi32*dAdgrad_chi222233 + F12*F22*chi33*dAdgrad_chi223233 + F12*F23*chi31*dAdgrad_chi321233 + F12*F23*chi32*dAdgrad_chi322233 + F12*F23*chi33*dAdgrad_chi323233 + F13*F21*chi31*dAdgrad_chi131233 + F13*F21*chi32*dAdgrad_chi132233 + F13*F21*chi33*dAdgrad_chi133233 + F13*F22*chi31*dAdgrad_chi231233 + F13*F22*chi32*dAdgrad_chi232233 + F13*F22*chi33*dAdgrad_chi233233 + F13*F23*chi31*dAdgrad_chi331233 + F13*F23*chi32*dAdgrad_chi332233 + F13*F23*chi33*dAdgrad_chi333233 + _213233;
        dadgrad_chi(13,12) = F11*F21*chi31*dAdgrad_chi111223 + F11*F21*chi32*dAdgrad_chi112223 + F11*F21*chi33*dAdgrad_chi113223 + F11*F22*chi31*dAdgrad_chi211223 + F11*F22*chi32*dAdgrad_chi212223 + F11*F22*chi33*dAdgrad_chi213223 + F11*F23*chi31*dAdgrad_chi311223 + F11*F23*chi32*dAdgrad_chi312223 + F11*F23*chi33*dAdgrad_chi313223 + F12*F21*chi31*dAdgrad_chi121223 + F12*F21*chi32*dAdgrad_chi122223 + F12*F21*chi33*dAdgrad_chi123223 + F12*F22*chi31*dAdgrad_chi221223 + F12*F22*chi32*dAdgrad_chi222223 + F12*F22*chi33*dAdgrad_chi223223 + F12*F23*chi31*dAdgrad_chi321223 + F12*F23*chi32*dAdgrad_chi322223 + F12*F23*chi33*dAdgrad_chi323223 + F13*F21*chi31*dAdgrad_chi131223 + F13*F21*chi32*dAdgrad_chi132223 + F13*F21*chi33*dAdgrad_chi133223 + F13*F22*chi31*dAdgrad_chi231223 + F13*F22*chi32*dAdgrad_chi232223 + F13*F22*chi33*dAdgrad_chi233223 + F13*F23*chi31*dAdgrad_chi331223 + F13*F23*chi32*dAdgrad_chi332223 + F13*F23*chi33*dAdgrad_chi333223 + _213223;
        dadgrad_chi(13,13) = F11*F21*chi31*dAdgrad_chi111213 + F11*F21*chi32*dAdgrad_chi112213 + F11*F21*chi33*dAdgrad_chi113213 + F11*F22*chi31*dAdgrad_chi211213 + F11*F22*chi32*dAdgrad_chi212213 + F11*F22*chi33*dAdgrad_chi213213 + F11*F23*chi31*dAdgrad_chi311213 + F11*F23*chi32*dAdgrad_chi312213 + F11*F23*chi33*dAdgrad_chi313213 + F12*F21*chi31*dAdgrad_chi121213 + F12*F21*chi32*dAdgrad_chi122213 + F12*F21*chi33*dAdgrad_chi123213 + F12*F22*chi31*dAdgrad_chi221213 + F12*F22*chi32*dAdgrad_chi222213 + F12*F22*chi33*dAdgrad_chi223213 + F12*F23*chi31*dAdgrad_chi321213 + F12*F23*chi32*dAdgrad_chi322213 + F12*F23*chi33*dAdgrad_chi323213 + F13*F21*chi31*dAdgrad_chi131213 + F13*F21*chi32*dAdgrad_chi132213 + F13*F21*chi33*dAdgrad_chi133213 + F13*F22*chi31*dAdgrad_chi231213 + F13*F22*chi32*dAdgrad_chi232213 + F13*F22*chi33*dAdgrad_chi233213 + F13*F23*chi31*dAdgrad_chi331213 + F13*F23*chi32*dAdgrad_chi332213 + F13*F23*chi33*dAdgrad_chi333213 + _213213;
        dadgrad_chi(13,14) = F11*F21*chi31*dAdgrad_chi111212 + F11*F21*chi32*dAdgrad_chi112212 + F11*F21*chi33*dAdgrad_chi113212 + F11*F22*chi31*dAdgrad_chi211212 + F11*F22*chi32*dAdgrad_chi212212 + F11*F22*chi33*dAdgrad_chi213212 + F11*F23*chi31*dAdgrad_chi311212 + F11*F23*chi32*dAdgrad_chi312212 + F11*F23*chi33*dAdgrad_chi313212 + F12*F21*chi31*dAdgrad_chi121212 + F12*F21*chi32*dAdgrad_chi122212 + F12*F21*chi33*dAdgrad_chi123212 + F12*F22*chi31*dAdgrad_chi221212 + F12*F22*chi32*dAdgrad_chi222212 + F12*F22*chi33*dAdgrad_chi223212 + F12*F23*chi31*dAdgrad_chi321212 + F12*F23*chi32*dAdgrad_chi322212 + F12*F23*chi33*dAdgrad_chi323212 + F13*F21*chi31*dAdgrad_chi131212 + F13*F21*chi32*dAdgrad_chi132212 + F13*F21*chi33*dAdgrad_chi133212 + F13*F22*chi31*dAdgrad_chi231212 + F13*F22*chi32*dAdgrad_chi232212 + F13*F22*chi33*dAdgrad_chi233212 + F13*F23*chi31*dAdgrad_chi331212 + F13*F23*chi32*dAdgrad_chi332212 + F13*F23*chi33*dAdgrad_chi333212 + _213212;
        dadgrad_chi(13,15) = F11*F21*chi31*dAdgrad_chi111232 + F11*F21*chi32*dAdgrad_chi112232 + F11*F21*chi33*dAdgrad_chi113232 + F11*F22*chi31*dAdgrad_chi211232 + F11*F22*chi32*dAdgrad_chi212232 + F11*F22*chi33*dAdgrad_chi213232 + F11*F23*chi31*dAdgrad_chi311232 + F11*F23*chi32*dAdgrad_chi312232 + F11*F23*chi33*dAdgrad_chi313232 + F12*F21*chi31*dAdgrad_chi121232 + F12*F21*chi32*dAdgrad_chi122232 + F12*F21*chi33*dAdgrad_chi123232 + F12*F22*chi31*dAdgrad_chi221232 + F12*F22*chi32*dAdgrad_chi222232 + F12*F22*chi33*dAdgrad_chi223232 + F12*F23*chi31*dAdgrad_chi321232 + F12*F23*chi32*dAdgrad_chi322232 + F12*F23*chi33*dAdgrad_chi323232 + F13*F21*chi31*dAdgrad_chi131232 + F13*F21*chi32*dAdgrad_chi132232 + F13*F21*chi33*dAdgrad_chi133232 + F13*F22*chi31*dAdgrad_chi231232 + F13*F22*chi32*dAdgrad_chi232232 + F13*F22*chi33*dAdgrad_chi233232 + F13*F23*chi31*dAdgrad_chi331232 + F13*F23*chi32*dAdgrad_chi332232 + F13*F23*chi33*dAdgrad_chi333232 + _213232;
        dadgrad_chi(13,16) = F11*F21*chi31*dAdgrad_chi111231 + F11*F21*chi32*dAdgrad_chi112231 + F11*F21*chi33*dAdgrad_chi113231 + F11*F22*chi31*dAdgrad_chi211231 + F11*F22*chi32*dAdgrad_chi212231 + F11*F22*chi33*dAdgrad_chi213231 + F11*F23*chi31*dAdgrad_chi311231 + F11*F23*chi32*dAdgrad_chi312231 + F11*F23*chi33*dAdgrad_chi313231 + F12*F21*chi31*dAdgrad_chi121231 + F12*F21*chi32*dAdgrad_chi122231 + F12*F21*chi33*dAdgrad_chi123231 + F12*F22*chi31*dAdgrad_chi221231 + F12*F22*chi32*dAdgrad_chi222231 + F12*F22*chi33*dAdgrad_chi223231 + F12*F23*chi31*dAdgrad_chi321231 + F12*F23*chi32*dAdgrad_chi322231 + F12*F23*chi33*dAdgrad_chi323231 + F13*F21*chi31*dAdgrad_chi131231 + F13*F21*chi32*dAdgrad_chi132231 + F13*F21*chi33*dAdgrad_chi133231 + F13*F22*chi31*dAdgrad_chi231231 + F13*F22*chi32*dAdgrad_chi232231 + F13*F22*chi33*dAdgrad_chi233231 + F13*F23*chi31*dAdgrad_chi331231 + F13*F23*chi32*dAdgrad_chi332231 + F13*F23*chi33*dAdgrad_chi333231 + _213231;
        dadgrad_chi(13,17) = F11*F21*chi31*dAdgrad_chi111221 + F11*F21*chi32*dAdgrad_chi112221 + F11*F21*chi33*dAdgrad_chi113221 + F11*F22*chi31*dAdgrad_chi211221 + F11*F22*chi32*dAdgrad_chi212221 + F11*F22*chi33*dAdgrad_chi213221 + F11*F23*chi31*dAdgrad_chi311221 + F11*F23*chi32*dAdgrad_chi312221 + F11*F23*chi33*dAdgrad_chi313221 + F12*F21*chi31*dAdgrad_chi121221 + F12*F21*chi32*dAdgrad_chi122221 + F12*F21*chi33*dAdgrad_chi123221 + F12*F22*chi31*dAdgrad_chi221221 + F12*F22*chi32*dAdgrad_chi222221 + F12*F22*chi33*dAdgrad_chi223221 + F12*F23*chi31*dAdgrad_chi321221 + F12*F23*chi32*dAdgrad_chi322221 + F12*F23*chi33*dAdgrad_chi323221 + F13*F21*chi31*dAdgrad_chi131221 + F13*F21*chi32*dAdgrad_chi132221 + F13*F21*chi33*dAdgrad_chi133221 + F13*F22*chi31*dAdgrad_chi231221 + F13*F22*chi32*dAdgrad_chi232221 + F13*F22*chi33*dAdgrad_chi233221 + F13*F23*chi31*dAdgrad_chi331221 + F13*F23*chi32*dAdgrad_chi332221 + F13*F23*chi33*dAdgrad_chi333221 + _213221;
        dadgrad_chi(13,18) = F11*F21*chi31*dAdgrad_chi111311 + F11*F21*chi32*dAdgrad_chi112311 + F11*F21*chi33*dAdgrad_chi113311 + F11*F22*chi31*dAdgrad_chi211311 + F11*F22*chi32*dAdgrad_chi212311 + F11*F22*chi33*dAdgrad_chi213311 + F11*F23*chi31*dAdgrad_chi311311 + F11*F23*chi32*dAdgrad_chi312311 + F11*F23*chi33*dAdgrad_chi313311 + F12*F21*chi31*dAdgrad_chi121311 + F12*F21*chi32*dAdgrad_chi122311 + F12*F21*chi33*dAdgrad_chi123311 + F12*F22*chi31*dAdgrad_chi221311 + F12*F22*chi32*dAdgrad_chi222311 + F12*F22*chi33*dAdgrad_chi223311 + F12*F23*chi31*dAdgrad_chi321311 + F12*F23*chi32*dAdgrad_chi322311 + F12*F23*chi33*dAdgrad_chi323311 + F13*F21*chi31*dAdgrad_chi131311 + F13*F21*chi32*dAdgrad_chi132311 + F13*F21*chi33*dAdgrad_chi133311 + F13*F22*chi31*dAdgrad_chi231311 + F13*F22*chi32*dAdgrad_chi232311 + F13*F22*chi33*dAdgrad_chi233311 + F13*F23*chi31*dAdgrad_chi331311 + F13*F23*chi32*dAdgrad_chi332311 + F13*F23*chi33*dAdgrad_chi333311 + _213311;
        dadgrad_chi(13,19) = F11*F21*chi31*dAdgrad_chi111322 + F11*F21*chi32*dAdgrad_chi112322 + F11*F21*chi33*dAdgrad_chi113322 + F11*F22*chi31*dAdgrad_chi211322 + F11*F22*chi32*dAdgrad_chi212322 + F11*F22*chi33*dAdgrad_chi213322 + F11*F23*chi31*dAdgrad_chi311322 + F11*F23*chi32*dAdgrad_chi312322 + F11*F23*chi33*dAdgrad_chi313322 + F12*F21*chi31*dAdgrad_chi121322 + F12*F21*chi32*dAdgrad_chi122322 + F12*F21*chi33*dAdgrad_chi123322 + F12*F22*chi31*dAdgrad_chi221322 + F12*F22*chi32*dAdgrad_chi222322 + F12*F22*chi33*dAdgrad_chi223322 + F12*F23*chi31*dAdgrad_chi321322 + F12*F23*chi32*dAdgrad_chi322322 + F12*F23*chi33*dAdgrad_chi323322 + F13*F21*chi31*dAdgrad_chi131322 + F13*F21*chi32*dAdgrad_chi132322 + F13*F21*chi33*dAdgrad_chi133322 + F13*F22*chi31*dAdgrad_chi231322 + F13*F22*chi32*dAdgrad_chi232322 + F13*F22*chi33*dAdgrad_chi233322 + F13*F23*chi31*dAdgrad_chi331322 + F13*F23*chi32*dAdgrad_chi332322 + F13*F23*chi33*dAdgrad_chi333322 + _213322;
        dadgrad_chi(13,20) = F11*F21*chi31*dAdgrad_chi111333 + F11*F21*chi32*dAdgrad_chi112333 + F11*F21*chi33*dAdgrad_chi113333 + F11*F22*chi31*dAdgrad_chi211333 + F11*F22*chi32*dAdgrad_chi212333 + F11*F22*chi33*dAdgrad_chi213333 + F11*F23*chi31*dAdgrad_chi311333 + F11*F23*chi32*dAdgrad_chi312333 + F11*F23*chi33*dAdgrad_chi313333 + F12*F21*chi31*dAdgrad_chi121333 + F12*F21*chi32*dAdgrad_chi122333 + F12*F21*chi33*dAdgrad_chi123333 + F12*F22*chi31*dAdgrad_chi221333 + F12*F22*chi32*dAdgrad_chi222333 + F12*F22*chi33*dAdgrad_chi223333 + F12*F23*chi31*dAdgrad_chi321333 + F12*F23*chi32*dAdgrad_chi322333 + F12*F23*chi33*dAdgrad_chi323333 + F13*F21*chi31*dAdgrad_chi131333 + F13*F21*chi32*dAdgrad_chi132333 + F13*F21*chi33*dAdgrad_chi133333 + F13*F22*chi31*dAdgrad_chi231333 + F13*F22*chi32*dAdgrad_chi232333 + F13*F22*chi33*dAdgrad_chi233333 + F13*F23*chi31*dAdgrad_chi331333 + F13*F23*chi32*dAdgrad_chi332333 + F13*F23*chi33*dAdgrad_chi333333 + _213333;
        dadgrad_chi(13,21) = F11*F21*chi31*dAdgrad_chi111323 + F11*F21*chi32*dAdgrad_chi112323 + F11*F21*chi33*dAdgrad_chi113323 + F11*F22*chi31*dAdgrad_chi211323 + F11*F22*chi32*dAdgrad_chi212323 + F11*F22*chi33*dAdgrad_chi213323 + F11*F23*chi31*dAdgrad_chi311323 + F11*F23*chi32*dAdgrad_chi312323 + F11*F23*chi33*dAdgrad_chi313323 + F12*F21*chi31*dAdgrad_chi121323 + F12*F21*chi32*dAdgrad_chi122323 + F12*F21*chi33*dAdgrad_chi123323 + F12*F22*chi31*dAdgrad_chi221323 + F12*F22*chi32*dAdgrad_chi222323 + F12*F22*chi33*dAdgrad_chi223323 + F12*F23*chi31*dAdgrad_chi321323 + F12*F23*chi32*dAdgrad_chi322323 + F12*F23*chi33*dAdgrad_chi323323 + F13*F21*chi31*dAdgrad_chi131323 + F13*F21*chi32*dAdgrad_chi132323 + F13*F21*chi33*dAdgrad_chi133323 + F13*F22*chi31*dAdgrad_chi231323 + F13*F22*chi32*dAdgrad_chi232323 + F13*F22*chi33*dAdgrad_chi233323 + F13*F23*chi31*dAdgrad_chi331323 + F13*F23*chi32*dAdgrad_chi332323 + F13*F23*chi33*dAdgrad_chi333323 + _213323;
        dadgrad_chi(13,22) = F11*F21*chi31*dAdgrad_chi111313 + F11*F21*chi32*dAdgrad_chi112313 + F11*F21*chi33*dAdgrad_chi113313 + F11*F22*chi31*dAdgrad_chi211313 + F11*F22*chi32*dAdgrad_chi212313 + F11*F22*chi33*dAdgrad_chi213313 + F11*F23*chi31*dAdgrad_chi311313 + F11*F23*chi32*dAdgrad_chi312313 + F11*F23*chi33*dAdgrad_chi313313 + F12*F21*chi31*dAdgrad_chi121313 + F12*F21*chi32*dAdgrad_chi122313 + F12*F21*chi33*dAdgrad_chi123313 + F12*F22*chi31*dAdgrad_chi221313 + F12*F22*chi32*dAdgrad_chi222313 + F12*F22*chi33*dAdgrad_chi223313 + F12*F23*chi31*dAdgrad_chi321313 + F12*F23*chi32*dAdgrad_chi322313 + F12*F23*chi33*dAdgrad_chi323313 + F13*F21*chi31*dAdgrad_chi131313 + F13*F21*chi32*dAdgrad_chi132313 + F13*F21*chi33*dAdgrad_chi133313 + F13*F22*chi31*dAdgrad_chi231313 + F13*F22*chi32*dAdgrad_chi232313 + F13*F22*chi33*dAdgrad_chi233313 + F13*F23*chi31*dAdgrad_chi331313 + F13*F23*chi32*dAdgrad_chi332313 + F13*F23*chi33*dAdgrad_chi333313 + _213313;
        dadgrad_chi(13,23) = F11*F21*chi31*dAdgrad_chi111312 + F11*F21*chi32*dAdgrad_chi112312 + F11*F21*chi33*dAdgrad_chi113312 + F11*F22*chi31*dAdgrad_chi211312 + F11*F22*chi32*dAdgrad_chi212312 + F11*F22*chi33*dAdgrad_chi213312 + F11*F23*chi31*dAdgrad_chi311312 + F11*F23*chi32*dAdgrad_chi312312 + F11*F23*chi33*dAdgrad_chi313312 + F12*F21*chi31*dAdgrad_chi121312 + F12*F21*chi32*dAdgrad_chi122312 + F12*F21*chi33*dAdgrad_chi123312 + F12*F22*chi31*dAdgrad_chi221312 + F12*F22*chi32*dAdgrad_chi222312 + F12*F22*chi33*dAdgrad_chi223312 + F12*F23*chi31*dAdgrad_chi321312 + F12*F23*chi32*dAdgrad_chi322312 + F12*F23*chi33*dAdgrad_chi323312 + F13*F21*chi31*dAdgrad_chi131312 + F13*F21*chi32*dAdgrad_chi132312 + F13*F21*chi33*dAdgrad_chi133312 + F13*F22*chi31*dAdgrad_chi231312 + F13*F22*chi32*dAdgrad_chi232312 + F13*F22*chi33*dAdgrad_chi233312 + F13*F23*chi31*dAdgrad_chi331312 + F13*F23*chi32*dAdgrad_chi332312 + F13*F23*chi33*dAdgrad_chi333312 + _213312;
        dadgrad_chi(13,24) = F11*F21*chi31*dAdgrad_chi111332 + F11*F21*chi32*dAdgrad_chi112332 + F11*F21*chi33*dAdgrad_chi113332 + F11*F22*chi31*dAdgrad_chi211332 + F11*F22*chi32*dAdgrad_chi212332 + F11*F22*chi33*dAdgrad_chi213332 + F11*F23*chi31*dAdgrad_chi311332 + F11*F23*chi32*dAdgrad_chi312332 + F11*F23*chi33*dAdgrad_chi313332 + F12*F21*chi31*dAdgrad_chi121332 + F12*F21*chi32*dAdgrad_chi122332 + F12*F21*chi33*dAdgrad_chi123332 + F12*F22*chi31*dAdgrad_chi221332 + F12*F22*chi32*dAdgrad_chi222332 + F12*F22*chi33*dAdgrad_chi223332 + F12*F23*chi31*dAdgrad_chi321332 + F12*F23*chi32*dAdgrad_chi322332 + F12*F23*chi33*dAdgrad_chi323332 + F13*F21*chi31*dAdgrad_chi131332 + F13*F21*chi32*dAdgrad_chi132332 + F13*F21*chi33*dAdgrad_chi133332 + F13*F22*chi31*dAdgrad_chi231332 + F13*F22*chi32*dAdgrad_chi232332 + F13*F22*chi33*dAdgrad_chi233332 + F13*F23*chi31*dAdgrad_chi331332 + F13*F23*chi32*dAdgrad_chi332332 + F13*F23*chi33*dAdgrad_chi333332 + _213332;
        dadgrad_chi(13,25) = F11*F21*chi31*dAdgrad_chi111331 + F11*F21*chi32*dAdgrad_chi112331 + F11*F21*chi33*dAdgrad_chi113331 + F11*F22*chi31*dAdgrad_chi211331 + F11*F22*chi32*dAdgrad_chi212331 + F11*F22*chi33*dAdgrad_chi213331 + F11*F23*chi31*dAdgrad_chi311331 + F11*F23*chi32*dAdgrad_chi312331 + F11*F23*chi33*dAdgrad_chi313331 + F12*F21*chi31*dAdgrad_chi121331 + F12*F21*chi32*dAdgrad_chi122331 + F12*F21*chi33*dAdgrad_chi123331 + F12*F22*chi31*dAdgrad_chi221331 + F12*F22*chi32*dAdgrad_chi222331 + F12*F22*chi33*dAdgrad_chi223331 + F12*F23*chi31*dAdgrad_chi321331 + F12*F23*chi32*dAdgrad_chi322331 + F12*F23*chi33*dAdgrad_chi323331 + F13*F21*chi31*dAdgrad_chi131331 + F13*F21*chi32*dAdgrad_chi132331 + F13*F21*chi33*dAdgrad_chi133331 + F13*F22*chi31*dAdgrad_chi231331 + F13*F22*chi32*dAdgrad_chi232331 + F13*F22*chi33*dAdgrad_chi233331 + F13*F23*chi31*dAdgrad_chi331331 + F13*F23*chi32*dAdgrad_chi332331 + F13*F23*chi33*dAdgrad_chi333331 + _213331;
        dadgrad_chi(13,26) = F11*F21*chi31*dAdgrad_chi111321 + F11*F21*chi32*dAdgrad_chi112321 + F11*F21*chi33*dAdgrad_chi113321 + F11*F22*chi31*dAdgrad_chi211321 + F11*F22*chi32*dAdgrad_chi212321 + F11*F22*chi33*dAdgrad_chi213321 + F11*F23*chi31*dAdgrad_chi311321 + F11*F23*chi32*dAdgrad_chi312321 + F11*F23*chi33*dAdgrad_chi313321 + F12*F21*chi31*dAdgrad_chi121321 + F12*F21*chi32*dAdgrad_chi122321 + F12*F21*chi33*dAdgrad_chi123321 + F12*F22*chi31*dAdgrad_chi221321 + F12*F22*chi32*dAdgrad_chi222321 + F12*F22*chi33*dAdgrad_chi223321 + F12*F23*chi31*dAdgrad_chi321321 + F12*F23*chi32*dAdgrad_chi322321 + F12*F23*chi33*dAdgrad_chi323321 + F13*F21*chi31*dAdgrad_chi131321 + F13*F21*chi32*dAdgrad_chi132321 + F13*F21*chi33*dAdgrad_chi133321 + F13*F22*chi31*dAdgrad_chi231321 + F13*F22*chi32*dAdgrad_chi232321 + F13*F22*chi33*dAdgrad_chi233321 + F13*F23*chi31*dAdgrad_chi331321 + F13*F23*chi32*dAdgrad_chi332321 + F13*F23*chi33*dAdgrad_chi333321 + _213321;
        dadgrad_chi(14,0) = F11*F21*chi21*dAdgrad_chi111111 + F11*F21*chi22*dAdgrad_chi112111 + F11*F21*chi23*dAdgrad_chi113111 + F11*F22*chi21*dAdgrad_chi211111 + F11*F22*chi22*dAdgrad_chi212111 + F11*F22*chi23*dAdgrad_chi213111 + F11*F23*chi21*dAdgrad_chi311111 + F11*F23*chi22*dAdgrad_chi312111 + F11*F23*chi23*dAdgrad_chi313111 + F12*F21*chi21*dAdgrad_chi121111 + F12*F21*chi22*dAdgrad_chi122111 + F12*F21*chi23*dAdgrad_chi123111 + F12*F22*chi21*dAdgrad_chi221111 + F12*F22*chi22*dAdgrad_chi222111 + F12*F22*chi23*dAdgrad_chi223111 + F12*F23*chi21*dAdgrad_chi321111 + F12*F23*chi22*dAdgrad_chi322111 + F12*F23*chi23*dAdgrad_chi323111 + F13*F21*chi21*dAdgrad_chi131111 + F13*F21*chi22*dAdgrad_chi132111 + F13*F21*chi23*dAdgrad_chi133111 + F13*F22*chi21*dAdgrad_chi231111 + F13*F22*chi22*dAdgrad_chi232111 + F13*F22*chi23*dAdgrad_chi233111 + F13*F23*chi21*dAdgrad_chi331111 + F13*F23*chi22*dAdgrad_chi332111 + F13*F23*chi23*dAdgrad_chi333111 + _212111;
        dadgrad_chi(14,1) = F11*F21*chi21*dAdgrad_chi111122 + F11*F21*chi22*dAdgrad_chi112122 + F11*F21*chi23*dAdgrad_chi113122 + F11*F22*chi21*dAdgrad_chi211122 + F11*F22*chi22*dAdgrad_chi212122 + F11*F22*chi23*dAdgrad_chi213122 + F11*F23*chi21*dAdgrad_chi311122 + F11*F23*chi22*dAdgrad_chi312122 + F11*F23*chi23*dAdgrad_chi313122 + F12*F21*chi21*dAdgrad_chi121122 + F12*F21*chi22*dAdgrad_chi122122 + F12*F21*chi23*dAdgrad_chi123122 + F12*F22*chi21*dAdgrad_chi221122 + F12*F22*chi22*dAdgrad_chi222122 + F12*F22*chi23*dAdgrad_chi223122 + F12*F23*chi21*dAdgrad_chi321122 + F12*F23*chi22*dAdgrad_chi322122 + F12*F23*chi23*dAdgrad_chi323122 + F13*F21*chi21*dAdgrad_chi131122 + F13*F21*chi22*dAdgrad_chi132122 + F13*F21*chi23*dAdgrad_chi133122 + F13*F22*chi21*dAdgrad_chi231122 + F13*F22*chi22*dAdgrad_chi232122 + F13*F22*chi23*dAdgrad_chi233122 + F13*F23*chi21*dAdgrad_chi331122 + F13*F23*chi22*dAdgrad_chi332122 + F13*F23*chi23*dAdgrad_chi333122 + _212122;
        dadgrad_chi(14,2) = F11*F21*chi21*dAdgrad_chi111133 + F11*F21*chi22*dAdgrad_chi112133 + F11*F21*chi23*dAdgrad_chi113133 + F11*F22*chi21*dAdgrad_chi211133 + F11*F22*chi22*dAdgrad_chi212133 + F11*F22*chi23*dAdgrad_chi213133 + F11*F23*chi21*dAdgrad_chi311133 + F11*F23*chi22*dAdgrad_chi312133 + F11*F23*chi23*dAdgrad_chi313133 + F12*F21*chi21*dAdgrad_chi121133 + F12*F21*chi22*dAdgrad_chi122133 + F12*F21*chi23*dAdgrad_chi123133 + F12*F22*chi21*dAdgrad_chi221133 + F12*F22*chi22*dAdgrad_chi222133 + F12*F22*chi23*dAdgrad_chi223133 + F12*F23*chi21*dAdgrad_chi321133 + F12*F23*chi22*dAdgrad_chi322133 + F12*F23*chi23*dAdgrad_chi323133 + F13*F21*chi21*dAdgrad_chi131133 + F13*F21*chi22*dAdgrad_chi132133 + F13*F21*chi23*dAdgrad_chi133133 + F13*F22*chi21*dAdgrad_chi231133 + F13*F22*chi22*dAdgrad_chi232133 + F13*F22*chi23*dAdgrad_chi233133 + F13*F23*chi21*dAdgrad_chi331133 + F13*F23*chi22*dAdgrad_chi332133 + F13*F23*chi23*dAdgrad_chi333133 + _212133;
        dadgrad_chi(14,3) = F11*F21*chi21*dAdgrad_chi111123 + F11*F21*chi22*dAdgrad_chi112123 + F11*F21*chi23*dAdgrad_chi113123 + F11*F22*chi21*dAdgrad_chi211123 + F11*F22*chi22*dAdgrad_chi212123 + F11*F22*chi23*dAdgrad_chi213123 + F11*F23*chi21*dAdgrad_chi311123 + F11*F23*chi22*dAdgrad_chi312123 + F11*F23*chi23*dAdgrad_chi313123 + F12*F21*chi21*dAdgrad_chi121123 + F12*F21*chi22*dAdgrad_chi122123 + F12*F21*chi23*dAdgrad_chi123123 + F12*F22*chi21*dAdgrad_chi221123 + F12*F22*chi22*dAdgrad_chi222123 + F12*F22*chi23*dAdgrad_chi223123 + F12*F23*chi21*dAdgrad_chi321123 + F12*F23*chi22*dAdgrad_chi322123 + F12*F23*chi23*dAdgrad_chi323123 + F13*F21*chi21*dAdgrad_chi131123 + F13*F21*chi22*dAdgrad_chi132123 + F13*F21*chi23*dAdgrad_chi133123 + F13*F22*chi21*dAdgrad_chi231123 + F13*F22*chi22*dAdgrad_chi232123 + F13*F22*chi23*dAdgrad_chi233123 + F13*F23*chi21*dAdgrad_chi331123 + F13*F23*chi22*dAdgrad_chi332123 + F13*F23*chi23*dAdgrad_chi333123 + _212123;
        dadgrad_chi(14,4) = F11*F21*chi21*dAdgrad_chi111113 + F11*F21*chi22*dAdgrad_chi112113 + F11*F21*chi23*dAdgrad_chi113113 + F11*F22*chi21*dAdgrad_chi211113 + F11*F22*chi22*dAdgrad_chi212113 + F11*F22*chi23*dAdgrad_chi213113 + F11*F23*chi21*dAdgrad_chi311113 + F11*F23*chi22*dAdgrad_chi312113 + F11*F23*chi23*dAdgrad_chi313113 + F12*F21*chi21*dAdgrad_chi121113 + F12*F21*chi22*dAdgrad_chi122113 + F12*F21*chi23*dAdgrad_chi123113 + F12*F22*chi21*dAdgrad_chi221113 + F12*F22*chi22*dAdgrad_chi222113 + F12*F22*chi23*dAdgrad_chi223113 + F12*F23*chi21*dAdgrad_chi321113 + F12*F23*chi22*dAdgrad_chi322113 + F12*F23*chi23*dAdgrad_chi323113 + F13*F21*chi21*dAdgrad_chi131113 + F13*F21*chi22*dAdgrad_chi132113 + F13*F21*chi23*dAdgrad_chi133113 + F13*F22*chi21*dAdgrad_chi231113 + F13*F22*chi22*dAdgrad_chi232113 + F13*F22*chi23*dAdgrad_chi233113 + F13*F23*chi21*dAdgrad_chi331113 + F13*F23*chi22*dAdgrad_chi332113 + F13*F23*chi23*dAdgrad_chi333113 + _212113;
        dadgrad_chi(14,5) = F11*F21*chi21*dAdgrad_chi111112 + F11*F21*chi22*dAdgrad_chi112112 + F11*F21*chi23*dAdgrad_chi113112 + F11*F22*chi21*dAdgrad_chi211112 + F11*F22*chi22*dAdgrad_chi212112 + F11*F22*chi23*dAdgrad_chi213112 + F11*F23*chi21*dAdgrad_chi311112 + F11*F23*chi22*dAdgrad_chi312112 + F11*F23*chi23*dAdgrad_chi313112 + F12*F21*chi21*dAdgrad_chi121112 + F12*F21*chi22*dAdgrad_chi122112 + F12*F21*chi23*dAdgrad_chi123112 + F12*F22*chi21*dAdgrad_chi221112 + F12*F22*chi22*dAdgrad_chi222112 + F12*F22*chi23*dAdgrad_chi223112 + F12*F23*chi21*dAdgrad_chi321112 + F12*F23*chi22*dAdgrad_chi322112 + F12*F23*chi23*dAdgrad_chi323112 + F13*F21*chi21*dAdgrad_chi131112 + F13*F21*chi22*dAdgrad_chi132112 + F13*F21*chi23*dAdgrad_chi133112 + F13*F22*chi21*dAdgrad_chi231112 + F13*F22*chi22*dAdgrad_chi232112 + F13*F22*chi23*dAdgrad_chi233112 + F13*F23*chi21*dAdgrad_chi331112 + F13*F23*chi22*dAdgrad_chi332112 + F13*F23*chi23*dAdgrad_chi333112 + _212112;
        dadgrad_chi(14,6) = F11*F21*chi21*dAdgrad_chi111132 + F11*F21*chi22*dAdgrad_chi112132 + F11*F21*chi23*dAdgrad_chi113132 + F11*F22*chi21*dAdgrad_chi211132 + F11*F22*chi22*dAdgrad_chi212132 + F11*F22*chi23*dAdgrad_chi213132 + F11*F23*chi21*dAdgrad_chi311132 + F11*F23*chi22*dAdgrad_chi312132 + F11*F23*chi23*dAdgrad_chi313132 + F12*F21*chi21*dAdgrad_chi121132 + F12*F21*chi22*dAdgrad_chi122132 + F12*F21*chi23*dAdgrad_chi123132 + F12*F22*chi21*dAdgrad_chi221132 + F12*F22*chi22*dAdgrad_chi222132 + F12*F22*chi23*dAdgrad_chi223132 + F12*F23*chi21*dAdgrad_chi321132 + F12*F23*chi22*dAdgrad_chi322132 + F12*F23*chi23*dAdgrad_chi323132 + F13*F21*chi21*dAdgrad_chi131132 + F13*F21*chi22*dAdgrad_chi132132 + F13*F21*chi23*dAdgrad_chi133132 + F13*F22*chi21*dAdgrad_chi231132 + F13*F22*chi22*dAdgrad_chi232132 + F13*F22*chi23*dAdgrad_chi233132 + F13*F23*chi21*dAdgrad_chi331132 + F13*F23*chi22*dAdgrad_chi332132 + F13*F23*chi23*dAdgrad_chi333132 + _212132;
        dadgrad_chi(14,7) = F11*F21*chi21*dAdgrad_chi111131 + F11*F21*chi22*dAdgrad_chi112131 + F11*F21*chi23*dAdgrad_chi113131 + F11*F22*chi21*dAdgrad_chi211131 + F11*F22*chi22*dAdgrad_chi212131 + F11*F22*chi23*dAdgrad_chi213131 + F11*F23*chi21*dAdgrad_chi311131 + F11*F23*chi22*dAdgrad_chi312131 + F11*F23*chi23*dAdgrad_chi313131 + F12*F21*chi21*dAdgrad_chi121131 + F12*F21*chi22*dAdgrad_chi122131 + F12*F21*chi23*dAdgrad_chi123131 + F12*F22*chi21*dAdgrad_chi221131 + F12*F22*chi22*dAdgrad_chi222131 + F12*F22*chi23*dAdgrad_chi223131 + F12*F23*chi21*dAdgrad_chi321131 + F12*F23*chi22*dAdgrad_chi322131 + F12*F23*chi23*dAdgrad_chi323131 + F13*F21*chi21*dAdgrad_chi131131 + F13*F21*chi22*dAdgrad_chi132131 + F13*F21*chi23*dAdgrad_chi133131 + F13*F22*chi21*dAdgrad_chi231131 + F13*F22*chi22*dAdgrad_chi232131 + F13*F22*chi23*dAdgrad_chi233131 + F13*F23*chi21*dAdgrad_chi331131 + F13*F23*chi22*dAdgrad_chi332131 + F13*F23*chi23*dAdgrad_chi333131 + _212131;
        dadgrad_chi(14,8) = F11*F21*chi21*dAdgrad_chi111121 + F11*F21*chi22*dAdgrad_chi112121 + F11*F21*chi23*dAdgrad_chi113121 + F11*F22*chi21*dAdgrad_chi211121 + F11*F22*chi22*dAdgrad_chi212121 + F11*F22*chi23*dAdgrad_chi213121 + F11*F23*chi21*dAdgrad_chi311121 + F11*F23*chi22*dAdgrad_chi312121 + F11*F23*chi23*dAdgrad_chi313121 + F12*F21*chi21*dAdgrad_chi121121 + F12*F21*chi22*dAdgrad_chi122121 + F12*F21*chi23*dAdgrad_chi123121 + F12*F22*chi21*dAdgrad_chi221121 + F12*F22*chi22*dAdgrad_chi222121 + F12*F22*chi23*dAdgrad_chi223121 + F12*F23*chi21*dAdgrad_chi321121 + F12*F23*chi22*dAdgrad_chi322121 + F12*F23*chi23*dAdgrad_chi323121 + F13*F21*chi21*dAdgrad_chi131121 + F13*F21*chi22*dAdgrad_chi132121 + F13*F21*chi23*dAdgrad_chi133121 + F13*F22*chi21*dAdgrad_chi231121 + F13*F22*chi22*dAdgrad_chi232121 + F13*F22*chi23*dAdgrad_chi233121 + F13*F23*chi21*dAdgrad_chi331121 + F13*F23*chi22*dAdgrad_chi332121 + F13*F23*chi23*dAdgrad_chi333121 + _212121;
        dadgrad_chi(14,9) = F11*F21*chi21*dAdgrad_chi111211 + F11*F21*chi22*dAdgrad_chi112211 + F11*F21*chi23*dAdgrad_chi113211 + F11*F22*chi21*dAdgrad_chi211211 + F11*F22*chi22*dAdgrad_chi212211 + F11*F22*chi23*dAdgrad_chi213211 + F11*F23*chi21*dAdgrad_chi311211 + F11*F23*chi22*dAdgrad_chi312211 + F11*F23*chi23*dAdgrad_chi313211 + F12*F21*chi21*dAdgrad_chi121211 + F12*F21*chi22*dAdgrad_chi122211 + F12*F21*chi23*dAdgrad_chi123211 + F12*F22*chi21*dAdgrad_chi221211 + F12*F22*chi22*dAdgrad_chi222211 + F12*F22*chi23*dAdgrad_chi223211 + F12*F23*chi21*dAdgrad_chi321211 + F12*F23*chi22*dAdgrad_chi322211 + F12*F23*chi23*dAdgrad_chi323211 + F13*F21*chi21*dAdgrad_chi131211 + F13*F21*chi22*dAdgrad_chi132211 + F13*F21*chi23*dAdgrad_chi133211 + F13*F22*chi21*dAdgrad_chi231211 + F13*F22*chi22*dAdgrad_chi232211 + F13*F22*chi23*dAdgrad_chi233211 + F13*F23*chi21*dAdgrad_chi331211 + F13*F23*chi22*dAdgrad_chi332211 + F13*F23*chi23*dAdgrad_chi333211 + _212211;
        dadgrad_chi(14,10) = F11*F21*chi21*dAdgrad_chi111222 + F11*F21*chi22*dAdgrad_chi112222 + F11*F21*chi23*dAdgrad_chi113222 + F11*F22*chi21*dAdgrad_chi211222 + F11*F22*chi22*dAdgrad_chi212222 + F11*F22*chi23*dAdgrad_chi213222 + F11*F23*chi21*dAdgrad_chi311222 + F11*F23*chi22*dAdgrad_chi312222 + F11*F23*chi23*dAdgrad_chi313222 + F12*F21*chi21*dAdgrad_chi121222 + F12*F21*chi22*dAdgrad_chi122222 + F12*F21*chi23*dAdgrad_chi123222 + F12*F22*chi21*dAdgrad_chi221222 + F12*F22*chi22*dAdgrad_chi222222 + F12*F22*chi23*dAdgrad_chi223222 + F12*F23*chi21*dAdgrad_chi321222 + F12*F23*chi22*dAdgrad_chi322222 + F12*F23*chi23*dAdgrad_chi323222 + F13*F21*chi21*dAdgrad_chi131222 + F13*F21*chi22*dAdgrad_chi132222 + F13*F21*chi23*dAdgrad_chi133222 + F13*F22*chi21*dAdgrad_chi231222 + F13*F22*chi22*dAdgrad_chi232222 + F13*F22*chi23*dAdgrad_chi233222 + F13*F23*chi21*dAdgrad_chi331222 + F13*F23*chi22*dAdgrad_chi332222 + F13*F23*chi23*dAdgrad_chi333222 + _212222;
        dadgrad_chi(14,11) = F11*F21*chi21*dAdgrad_chi111233 + F11*F21*chi22*dAdgrad_chi112233 + F11*F21*chi23*dAdgrad_chi113233 + F11*F22*chi21*dAdgrad_chi211233 + F11*F22*chi22*dAdgrad_chi212233 + F11*F22*chi23*dAdgrad_chi213233 + F11*F23*chi21*dAdgrad_chi311233 + F11*F23*chi22*dAdgrad_chi312233 + F11*F23*chi23*dAdgrad_chi313233 + F12*F21*chi21*dAdgrad_chi121233 + F12*F21*chi22*dAdgrad_chi122233 + F12*F21*chi23*dAdgrad_chi123233 + F12*F22*chi21*dAdgrad_chi221233 + F12*F22*chi22*dAdgrad_chi222233 + F12*F22*chi23*dAdgrad_chi223233 + F12*F23*chi21*dAdgrad_chi321233 + F12*F23*chi22*dAdgrad_chi322233 + F12*F23*chi23*dAdgrad_chi323233 + F13*F21*chi21*dAdgrad_chi131233 + F13*F21*chi22*dAdgrad_chi132233 + F13*F21*chi23*dAdgrad_chi133233 + F13*F22*chi21*dAdgrad_chi231233 + F13*F22*chi22*dAdgrad_chi232233 + F13*F22*chi23*dAdgrad_chi233233 + F13*F23*chi21*dAdgrad_chi331233 + F13*F23*chi22*dAdgrad_chi332233 + F13*F23*chi23*dAdgrad_chi333233 + _212233;
        dadgrad_chi(14,12) = F11*F21*chi21*dAdgrad_chi111223 + F11*F21*chi22*dAdgrad_chi112223 + F11*F21*chi23*dAdgrad_chi113223 + F11*F22*chi21*dAdgrad_chi211223 + F11*F22*chi22*dAdgrad_chi212223 + F11*F22*chi23*dAdgrad_chi213223 + F11*F23*chi21*dAdgrad_chi311223 + F11*F23*chi22*dAdgrad_chi312223 + F11*F23*chi23*dAdgrad_chi313223 + F12*F21*chi21*dAdgrad_chi121223 + F12*F21*chi22*dAdgrad_chi122223 + F12*F21*chi23*dAdgrad_chi123223 + F12*F22*chi21*dAdgrad_chi221223 + F12*F22*chi22*dAdgrad_chi222223 + F12*F22*chi23*dAdgrad_chi223223 + F12*F23*chi21*dAdgrad_chi321223 + F12*F23*chi22*dAdgrad_chi322223 + F12*F23*chi23*dAdgrad_chi323223 + F13*F21*chi21*dAdgrad_chi131223 + F13*F21*chi22*dAdgrad_chi132223 + F13*F21*chi23*dAdgrad_chi133223 + F13*F22*chi21*dAdgrad_chi231223 + F13*F22*chi22*dAdgrad_chi232223 + F13*F22*chi23*dAdgrad_chi233223 + F13*F23*chi21*dAdgrad_chi331223 + F13*F23*chi22*dAdgrad_chi332223 + F13*F23*chi23*dAdgrad_chi333223 + _212223;
        dadgrad_chi(14,13) = F11*F21*chi21*dAdgrad_chi111213 + F11*F21*chi22*dAdgrad_chi112213 + F11*F21*chi23*dAdgrad_chi113213 + F11*F22*chi21*dAdgrad_chi211213 + F11*F22*chi22*dAdgrad_chi212213 + F11*F22*chi23*dAdgrad_chi213213 + F11*F23*chi21*dAdgrad_chi311213 + F11*F23*chi22*dAdgrad_chi312213 + F11*F23*chi23*dAdgrad_chi313213 + F12*F21*chi21*dAdgrad_chi121213 + F12*F21*chi22*dAdgrad_chi122213 + F12*F21*chi23*dAdgrad_chi123213 + F12*F22*chi21*dAdgrad_chi221213 + F12*F22*chi22*dAdgrad_chi222213 + F12*F22*chi23*dAdgrad_chi223213 + F12*F23*chi21*dAdgrad_chi321213 + F12*F23*chi22*dAdgrad_chi322213 + F12*F23*chi23*dAdgrad_chi323213 + F13*F21*chi21*dAdgrad_chi131213 + F13*F21*chi22*dAdgrad_chi132213 + F13*F21*chi23*dAdgrad_chi133213 + F13*F22*chi21*dAdgrad_chi231213 + F13*F22*chi22*dAdgrad_chi232213 + F13*F22*chi23*dAdgrad_chi233213 + F13*F23*chi21*dAdgrad_chi331213 + F13*F23*chi22*dAdgrad_chi332213 + F13*F23*chi23*dAdgrad_chi333213 + _212213;
        dadgrad_chi(14,14) = F11*F21*chi21*dAdgrad_chi111212 + F11*F21*chi22*dAdgrad_chi112212 + F11*F21*chi23*dAdgrad_chi113212 + F11*F22*chi21*dAdgrad_chi211212 + F11*F22*chi22*dAdgrad_chi212212 + F11*F22*chi23*dAdgrad_chi213212 + F11*F23*chi21*dAdgrad_chi311212 + F11*F23*chi22*dAdgrad_chi312212 + F11*F23*chi23*dAdgrad_chi313212 + F12*F21*chi21*dAdgrad_chi121212 + F12*F21*chi22*dAdgrad_chi122212 + F12*F21*chi23*dAdgrad_chi123212 + F12*F22*chi21*dAdgrad_chi221212 + F12*F22*chi22*dAdgrad_chi222212 + F12*F22*chi23*dAdgrad_chi223212 + F12*F23*chi21*dAdgrad_chi321212 + F12*F23*chi22*dAdgrad_chi322212 + F12*F23*chi23*dAdgrad_chi323212 + F13*F21*chi21*dAdgrad_chi131212 + F13*F21*chi22*dAdgrad_chi132212 + F13*F21*chi23*dAdgrad_chi133212 + F13*F22*chi21*dAdgrad_chi231212 + F13*F22*chi22*dAdgrad_chi232212 + F13*F22*chi23*dAdgrad_chi233212 + F13*F23*chi21*dAdgrad_chi331212 + F13*F23*chi22*dAdgrad_chi332212 + F13*F23*chi23*dAdgrad_chi333212 + _212212;
        dadgrad_chi(14,15) = F11*F21*chi21*dAdgrad_chi111232 + F11*F21*chi22*dAdgrad_chi112232 + F11*F21*chi23*dAdgrad_chi113232 + F11*F22*chi21*dAdgrad_chi211232 + F11*F22*chi22*dAdgrad_chi212232 + F11*F22*chi23*dAdgrad_chi213232 + F11*F23*chi21*dAdgrad_chi311232 + F11*F23*chi22*dAdgrad_chi312232 + F11*F23*chi23*dAdgrad_chi313232 + F12*F21*chi21*dAdgrad_chi121232 + F12*F21*chi22*dAdgrad_chi122232 + F12*F21*chi23*dAdgrad_chi123232 + F12*F22*chi21*dAdgrad_chi221232 + F12*F22*chi22*dAdgrad_chi222232 + F12*F22*chi23*dAdgrad_chi223232 + F12*F23*chi21*dAdgrad_chi321232 + F12*F23*chi22*dAdgrad_chi322232 + F12*F23*chi23*dAdgrad_chi323232 + F13*F21*chi21*dAdgrad_chi131232 + F13*F21*chi22*dAdgrad_chi132232 + F13*F21*chi23*dAdgrad_chi133232 + F13*F22*chi21*dAdgrad_chi231232 + F13*F22*chi22*dAdgrad_chi232232 + F13*F22*chi23*dAdgrad_chi233232 + F13*F23*chi21*dAdgrad_chi331232 + F13*F23*chi22*dAdgrad_chi332232 + F13*F23*chi23*dAdgrad_chi333232 + _212232;
        dadgrad_chi(14,16) = F11*F21*chi21*dAdgrad_chi111231 + F11*F21*chi22*dAdgrad_chi112231 + F11*F21*chi23*dAdgrad_chi113231 + F11*F22*chi21*dAdgrad_chi211231 + F11*F22*chi22*dAdgrad_chi212231 + F11*F22*chi23*dAdgrad_chi213231 + F11*F23*chi21*dAdgrad_chi311231 + F11*F23*chi22*dAdgrad_chi312231 + F11*F23*chi23*dAdgrad_chi313231 + F12*F21*chi21*dAdgrad_chi121231 + F12*F21*chi22*dAdgrad_chi122231 + F12*F21*chi23*dAdgrad_chi123231 + F12*F22*chi21*dAdgrad_chi221231 + F12*F22*chi22*dAdgrad_chi222231 + F12*F22*chi23*dAdgrad_chi223231 + F12*F23*chi21*dAdgrad_chi321231 + F12*F23*chi22*dAdgrad_chi322231 + F12*F23*chi23*dAdgrad_chi323231 + F13*F21*chi21*dAdgrad_chi131231 + F13*F21*chi22*dAdgrad_chi132231 + F13*F21*chi23*dAdgrad_chi133231 + F13*F22*chi21*dAdgrad_chi231231 + F13*F22*chi22*dAdgrad_chi232231 + F13*F22*chi23*dAdgrad_chi233231 + F13*F23*chi21*dAdgrad_chi331231 + F13*F23*chi22*dAdgrad_chi332231 + F13*F23*chi23*dAdgrad_chi333231 + _212231;
        dadgrad_chi(14,17) = F11*F21*chi21*dAdgrad_chi111221 + F11*F21*chi22*dAdgrad_chi112221 + F11*F21*chi23*dAdgrad_chi113221 + F11*F22*chi21*dAdgrad_chi211221 + F11*F22*chi22*dAdgrad_chi212221 + F11*F22*chi23*dAdgrad_chi213221 + F11*F23*chi21*dAdgrad_chi311221 + F11*F23*chi22*dAdgrad_chi312221 + F11*F23*chi23*dAdgrad_chi313221 + F12*F21*chi21*dAdgrad_chi121221 + F12*F21*chi22*dAdgrad_chi122221 + F12*F21*chi23*dAdgrad_chi123221 + F12*F22*chi21*dAdgrad_chi221221 + F12*F22*chi22*dAdgrad_chi222221 + F12*F22*chi23*dAdgrad_chi223221 + F12*F23*chi21*dAdgrad_chi321221 + F12*F23*chi22*dAdgrad_chi322221 + F12*F23*chi23*dAdgrad_chi323221 + F13*F21*chi21*dAdgrad_chi131221 + F13*F21*chi22*dAdgrad_chi132221 + F13*F21*chi23*dAdgrad_chi133221 + F13*F22*chi21*dAdgrad_chi231221 + F13*F22*chi22*dAdgrad_chi232221 + F13*F22*chi23*dAdgrad_chi233221 + F13*F23*chi21*dAdgrad_chi331221 + F13*F23*chi22*dAdgrad_chi332221 + F13*F23*chi23*dAdgrad_chi333221 + _212221;
        dadgrad_chi(14,18) = F11*F21*chi21*dAdgrad_chi111311 + F11*F21*chi22*dAdgrad_chi112311 + F11*F21*chi23*dAdgrad_chi113311 + F11*F22*chi21*dAdgrad_chi211311 + F11*F22*chi22*dAdgrad_chi212311 + F11*F22*chi23*dAdgrad_chi213311 + F11*F23*chi21*dAdgrad_chi311311 + F11*F23*chi22*dAdgrad_chi312311 + F11*F23*chi23*dAdgrad_chi313311 + F12*F21*chi21*dAdgrad_chi121311 + F12*F21*chi22*dAdgrad_chi122311 + F12*F21*chi23*dAdgrad_chi123311 + F12*F22*chi21*dAdgrad_chi221311 + F12*F22*chi22*dAdgrad_chi222311 + F12*F22*chi23*dAdgrad_chi223311 + F12*F23*chi21*dAdgrad_chi321311 + F12*F23*chi22*dAdgrad_chi322311 + F12*F23*chi23*dAdgrad_chi323311 + F13*F21*chi21*dAdgrad_chi131311 + F13*F21*chi22*dAdgrad_chi132311 + F13*F21*chi23*dAdgrad_chi133311 + F13*F22*chi21*dAdgrad_chi231311 + F13*F22*chi22*dAdgrad_chi232311 + F13*F22*chi23*dAdgrad_chi233311 + F13*F23*chi21*dAdgrad_chi331311 + F13*F23*chi22*dAdgrad_chi332311 + F13*F23*chi23*dAdgrad_chi333311 + _212311;
        dadgrad_chi(14,19) = F11*F21*chi21*dAdgrad_chi111322 + F11*F21*chi22*dAdgrad_chi112322 + F11*F21*chi23*dAdgrad_chi113322 + F11*F22*chi21*dAdgrad_chi211322 + F11*F22*chi22*dAdgrad_chi212322 + F11*F22*chi23*dAdgrad_chi213322 + F11*F23*chi21*dAdgrad_chi311322 + F11*F23*chi22*dAdgrad_chi312322 + F11*F23*chi23*dAdgrad_chi313322 + F12*F21*chi21*dAdgrad_chi121322 + F12*F21*chi22*dAdgrad_chi122322 + F12*F21*chi23*dAdgrad_chi123322 + F12*F22*chi21*dAdgrad_chi221322 + F12*F22*chi22*dAdgrad_chi222322 + F12*F22*chi23*dAdgrad_chi223322 + F12*F23*chi21*dAdgrad_chi321322 + F12*F23*chi22*dAdgrad_chi322322 + F12*F23*chi23*dAdgrad_chi323322 + F13*F21*chi21*dAdgrad_chi131322 + F13*F21*chi22*dAdgrad_chi132322 + F13*F21*chi23*dAdgrad_chi133322 + F13*F22*chi21*dAdgrad_chi231322 + F13*F22*chi22*dAdgrad_chi232322 + F13*F22*chi23*dAdgrad_chi233322 + F13*F23*chi21*dAdgrad_chi331322 + F13*F23*chi22*dAdgrad_chi332322 + F13*F23*chi23*dAdgrad_chi333322 + _212322;
        dadgrad_chi(14,20) = F11*F21*chi21*dAdgrad_chi111333 + F11*F21*chi22*dAdgrad_chi112333 + F11*F21*chi23*dAdgrad_chi113333 + F11*F22*chi21*dAdgrad_chi211333 + F11*F22*chi22*dAdgrad_chi212333 + F11*F22*chi23*dAdgrad_chi213333 + F11*F23*chi21*dAdgrad_chi311333 + F11*F23*chi22*dAdgrad_chi312333 + F11*F23*chi23*dAdgrad_chi313333 + F12*F21*chi21*dAdgrad_chi121333 + F12*F21*chi22*dAdgrad_chi122333 + F12*F21*chi23*dAdgrad_chi123333 + F12*F22*chi21*dAdgrad_chi221333 + F12*F22*chi22*dAdgrad_chi222333 + F12*F22*chi23*dAdgrad_chi223333 + F12*F23*chi21*dAdgrad_chi321333 + F12*F23*chi22*dAdgrad_chi322333 + F12*F23*chi23*dAdgrad_chi323333 + F13*F21*chi21*dAdgrad_chi131333 + F13*F21*chi22*dAdgrad_chi132333 + F13*F21*chi23*dAdgrad_chi133333 + F13*F22*chi21*dAdgrad_chi231333 + F13*F22*chi22*dAdgrad_chi232333 + F13*F22*chi23*dAdgrad_chi233333 + F13*F23*chi21*dAdgrad_chi331333 + F13*F23*chi22*dAdgrad_chi332333 + F13*F23*chi23*dAdgrad_chi333333 + _212333;
        dadgrad_chi(14,21) = F11*F21*chi21*dAdgrad_chi111323 + F11*F21*chi22*dAdgrad_chi112323 + F11*F21*chi23*dAdgrad_chi113323 + F11*F22*chi21*dAdgrad_chi211323 + F11*F22*chi22*dAdgrad_chi212323 + F11*F22*chi23*dAdgrad_chi213323 + F11*F23*chi21*dAdgrad_chi311323 + F11*F23*chi22*dAdgrad_chi312323 + F11*F23*chi23*dAdgrad_chi313323 + F12*F21*chi21*dAdgrad_chi121323 + F12*F21*chi22*dAdgrad_chi122323 + F12*F21*chi23*dAdgrad_chi123323 + F12*F22*chi21*dAdgrad_chi221323 + F12*F22*chi22*dAdgrad_chi222323 + F12*F22*chi23*dAdgrad_chi223323 + F12*F23*chi21*dAdgrad_chi321323 + F12*F23*chi22*dAdgrad_chi322323 + F12*F23*chi23*dAdgrad_chi323323 + F13*F21*chi21*dAdgrad_chi131323 + F13*F21*chi22*dAdgrad_chi132323 + F13*F21*chi23*dAdgrad_chi133323 + F13*F22*chi21*dAdgrad_chi231323 + F13*F22*chi22*dAdgrad_chi232323 + F13*F22*chi23*dAdgrad_chi233323 + F13*F23*chi21*dAdgrad_chi331323 + F13*F23*chi22*dAdgrad_chi332323 + F13*F23*chi23*dAdgrad_chi333323 + _212323;
        dadgrad_chi(14,22) = F11*F21*chi21*dAdgrad_chi111313 + F11*F21*chi22*dAdgrad_chi112313 + F11*F21*chi23*dAdgrad_chi113313 + F11*F22*chi21*dAdgrad_chi211313 + F11*F22*chi22*dAdgrad_chi212313 + F11*F22*chi23*dAdgrad_chi213313 + F11*F23*chi21*dAdgrad_chi311313 + F11*F23*chi22*dAdgrad_chi312313 + F11*F23*chi23*dAdgrad_chi313313 + F12*F21*chi21*dAdgrad_chi121313 + F12*F21*chi22*dAdgrad_chi122313 + F12*F21*chi23*dAdgrad_chi123313 + F12*F22*chi21*dAdgrad_chi221313 + F12*F22*chi22*dAdgrad_chi222313 + F12*F22*chi23*dAdgrad_chi223313 + F12*F23*chi21*dAdgrad_chi321313 + F12*F23*chi22*dAdgrad_chi322313 + F12*F23*chi23*dAdgrad_chi323313 + F13*F21*chi21*dAdgrad_chi131313 + F13*F21*chi22*dAdgrad_chi132313 + F13*F21*chi23*dAdgrad_chi133313 + F13*F22*chi21*dAdgrad_chi231313 + F13*F22*chi22*dAdgrad_chi232313 + F13*F22*chi23*dAdgrad_chi233313 + F13*F23*chi21*dAdgrad_chi331313 + F13*F23*chi22*dAdgrad_chi332313 + F13*F23*chi23*dAdgrad_chi333313 + _212313;
        dadgrad_chi(14,23) = F11*F21*chi21*dAdgrad_chi111312 + F11*F21*chi22*dAdgrad_chi112312 + F11*F21*chi23*dAdgrad_chi113312 + F11*F22*chi21*dAdgrad_chi211312 + F11*F22*chi22*dAdgrad_chi212312 + F11*F22*chi23*dAdgrad_chi213312 + F11*F23*chi21*dAdgrad_chi311312 + F11*F23*chi22*dAdgrad_chi312312 + F11*F23*chi23*dAdgrad_chi313312 + F12*F21*chi21*dAdgrad_chi121312 + F12*F21*chi22*dAdgrad_chi122312 + F12*F21*chi23*dAdgrad_chi123312 + F12*F22*chi21*dAdgrad_chi221312 + F12*F22*chi22*dAdgrad_chi222312 + F12*F22*chi23*dAdgrad_chi223312 + F12*F23*chi21*dAdgrad_chi321312 + F12*F23*chi22*dAdgrad_chi322312 + F12*F23*chi23*dAdgrad_chi323312 + F13*F21*chi21*dAdgrad_chi131312 + F13*F21*chi22*dAdgrad_chi132312 + F13*F21*chi23*dAdgrad_chi133312 + F13*F22*chi21*dAdgrad_chi231312 + F13*F22*chi22*dAdgrad_chi232312 + F13*F22*chi23*dAdgrad_chi233312 + F13*F23*chi21*dAdgrad_chi331312 + F13*F23*chi22*dAdgrad_chi332312 + F13*F23*chi23*dAdgrad_chi333312 + _212312;
        dadgrad_chi(14,24) = F11*F21*chi21*dAdgrad_chi111332 + F11*F21*chi22*dAdgrad_chi112332 + F11*F21*chi23*dAdgrad_chi113332 + F11*F22*chi21*dAdgrad_chi211332 + F11*F22*chi22*dAdgrad_chi212332 + F11*F22*chi23*dAdgrad_chi213332 + F11*F23*chi21*dAdgrad_chi311332 + F11*F23*chi22*dAdgrad_chi312332 + F11*F23*chi23*dAdgrad_chi313332 + F12*F21*chi21*dAdgrad_chi121332 + F12*F21*chi22*dAdgrad_chi122332 + F12*F21*chi23*dAdgrad_chi123332 + F12*F22*chi21*dAdgrad_chi221332 + F12*F22*chi22*dAdgrad_chi222332 + F12*F22*chi23*dAdgrad_chi223332 + F12*F23*chi21*dAdgrad_chi321332 + F12*F23*chi22*dAdgrad_chi322332 + F12*F23*chi23*dAdgrad_chi323332 + F13*F21*chi21*dAdgrad_chi131332 + F13*F21*chi22*dAdgrad_chi132332 + F13*F21*chi23*dAdgrad_chi133332 + F13*F22*chi21*dAdgrad_chi231332 + F13*F22*chi22*dAdgrad_chi232332 + F13*F22*chi23*dAdgrad_chi233332 + F13*F23*chi21*dAdgrad_chi331332 + F13*F23*chi22*dAdgrad_chi332332 + F13*F23*chi23*dAdgrad_chi333332 + _212332;
        dadgrad_chi(14,25) = F11*F21*chi21*dAdgrad_chi111331 + F11*F21*chi22*dAdgrad_chi112331 + F11*F21*chi23*dAdgrad_chi113331 + F11*F22*chi21*dAdgrad_chi211331 + F11*F22*chi22*dAdgrad_chi212331 + F11*F22*chi23*dAdgrad_chi213331 + F11*F23*chi21*dAdgrad_chi311331 + F11*F23*chi22*dAdgrad_chi312331 + F11*F23*chi23*dAdgrad_chi313331 + F12*F21*chi21*dAdgrad_chi121331 + F12*F21*chi22*dAdgrad_chi122331 + F12*F21*chi23*dAdgrad_chi123331 + F12*F22*chi21*dAdgrad_chi221331 + F12*F22*chi22*dAdgrad_chi222331 + F12*F22*chi23*dAdgrad_chi223331 + F12*F23*chi21*dAdgrad_chi321331 + F12*F23*chi22*dAdgrad_chi322331 + F12*F23*chi23*dAdgrad_chi323331 + F13*F21*chi21*dAdgrad_chi131331 + F13*F21*chi22*dAdgrad_chi132331 + F13*F21*chi23*dAdgrad_chi133331 + F13*F22*chi21*dAdgrad_chi231331 + F13*F22*chi22*dAdgrad_chi232331 + F13*F22*chi23*dAdgrad_chi233331 + F13*F23*chi21*dAdgrad_chi331331 + F13*F23*chi22*dAdgrad_chi332331 + F13*F23*chi23*dAdgrad_chi333331 + _212331;
        dadgrad_chi(14,26) = F11*F21*chi21*dAdgrad_chi111321 + F11*F21*chi22*dAdgrad_chi112321 + F11*F21*chi23*dAdgrad_chi113321 + F11*F22*chi21*dAdgrad_chi211321 + F11*F22*chi22*dAdgrad_chi212321 + F11*F22*chi23*dAdgrad_chi213321 + F11*F23*chi21*dAdgrad_chi311321 + F11*F23*chi22*dAdgrad_chi312321 + F11*F23*chi23*dAdgrad_chi313321 + F12*F21*chi21*dAdgrad_chi121321 + F12*F21*chi22*dAdgrad_chi122321 + F12*F21*chi23*dAdgrad_chi123321 + F12*F22*chi21*dAdgrad_chi221321 + F12*F22*chi22*dAdgrad_chi222321 + F12*F22*chi23*dAdgrad_chi223321 + F12*F23*chi21*dAdgrad_chi321321 + F12*F23*chi22*dAdgrad_chi322321 + F12*F23*chi23*dAdgrad_chi323321 + F13*F21*chi21*dAdgrad_chi131321 + F13*F21*chi22*dAdgrad_chi132321 + F13*F21*chi23*dAdgrad_chi133321 + F13*F22*chi21*dAdgrad_chi231321 + F13*F22*chi22*dAdgrad_chi232321 + F13*F22*chi23*dAdgrad_chi233321 + F13*F23*chi21*dAdgrad_chi331321 + F13*F23*chi22*dAdgrad_chi332321 + F13*F23*chi23*dAdgrad_chi333321 + _212321;
        dadgrad_chi(15,0) = F21*F31*chi21*dAdgrad_chi111111 + F21*F31*chi22*dAdgrad_chi112111 + F21*F31*chi23*dAdgrad_chi113111 + F21*F32*chi21*dAdgrad_chi121111 + F21*F32*chi22*dAdgrad_chi122111 + F21*F32*chi23*dAdgrad_chi123111 + F21*F33*chi21*dAdgrad_chi131111 + F21*F33*chi22*dAdgrad_chi132111 + F21*F33*chi23*dAdgrad_chi133111 + F22*F31*chi21*dAdgrad_chi211111 + F22*F31*chi22*dAdgrad_chi212111 + F22*F31*chi23*dAdgrad_chi213111 + F22*F32*chi21*dAdgrad_chi221111 + F22*F32*chi22*dAdgrad_chi222111 + F22*F32*chi23*dAdgrad_chi223111 + F22*F33*chi21*dAdgrad_chi231111 + F22*F33*chi22*dAdgrad_chi232111 + F22*F33*chi23*dAdgrad_chi233111 + F23*F31*chi21*dAdgrad_chi311111 + F23*F31*chi22*dAdgrad_chi312111 + F23*F31*chi23*dAdgrad_chi313111 + F23*F32*chi21*dAdgrad_chi321111 + F23*F32*chi22*dAdgrad_chi322111 + F23*F32*chi23*dAdgrad_chi323111 + F23*F33*chi21*dAdgrad_chi331111 + F23*F33*chi22*dAdgrad_chi332111 + F23*F33*chi23*dAdgrad_chi333111 + _232111;
        dadgrad_chi(15,1) = F21*F31*chi21*dAdgrad_chi111122 + F21*F31*chi22*dAdgrad_chi112122 + F21*F31*chi23*dAdgrad_chi113122 + F21*F32*chi21*dAdgrad_chi121122 + F21*F32*chi22*dAdgrad_chi122122 + F21*F32*chi23*dAdgrad_chi123122 + F21*F33*chi21*dAdgrad_chi131122 + F21*F33*chi22*dAdgrad_chi132122 + F21*F33*chi23*dAdgrad_chi133122 + F22*F31*chi21*dAdgrad_chi211122 + F22*F31*chi22*dAdgrad_chi212122 + F22*F31*chi23*dAdgrad_chi213122 + F22*F32*chi21*dAdgrad_chi221122 + F22*F32*chi22*dAdgrad_chi222122 + F22*F32*chi23*dAdgrad_chi223122 + F22*F33*chi21*dAdgrad_chi231122 + F22*F33*chi22*dAdgrad_chi232122 + F22*F33*chi23*dAdgrad_chi233122 + F23*F31*chi21*dAdgrad_chi311122 + F23*F31*chi22*dAdgrad_chi312122 + F23*F31*chi23*dAdgrad_chi313122 + F23*F32*chi21*dAdgrad_chi321122 + F23*F32*chi22*dAdgrad_chi322122 + F23*F32*chi23*dAdgrad_chi323122 + F23*F33*chi21*dAdgrad_chi331122 + F23*F33*chi22*dAdgrad_chi332122 + F23*F33*chi23*dAdgrad_chi333122 + _232122;
        dadgrad_chi(15,2) = F21*F31*chi21*dAdgrad_chi111133 + F21*F31*chi22*dAdgrad_chi112133 + F21*F31*chi23*dAdgrad_chi113133 + F21*F32*chi21*dAdgrad_chi121133 + F21*F32*chi22*dAdgrad_chi122133 + F21*F32*chi23*dAdgrad_chi123133 + F21*F33*chi21*dAdgrad_chi131133 + F21*F33*chi22*dAdgrad_chi132133 + F21*F33*chi23*dAdgrad_chi133133 + F22*F31*chi21*dAdgrad_chi211133 + F22*F31*chi22*dAdgrad_chi212133 + F22*F31*chi23*dAdgrad_chi213133 + F22*F32*chi21*dAdgrad_chi221133 + F22*F32*chi22*dAdgrad_chi222133 + F22*F32*chi23*dAdgrad_chi223133 + F22*F33*chi21*dAdgrad_chi231133 + F22*F33*chi22*dAdgrad_chi232133 + F22*F33*chi23*dAdgrad_chi233133 + F23*F31*chi21*dAdgrad_chi311133 + F23*F31*chi22*dAdgrad_chi312133 + F23*F31*chi23*dAdgrad_chi313133 + F23*F32*chi21*dAdgrad_chi321133 + F23*F32*chi22*dAdgrad_chi322133 + F23*F32*chi23*dAdgrad_chi323133 + F23*F33*chi21*dAdgrad_chi331133 + F23*F33*chi22*dAdgrad_chi332133 + F23*F33*chi23*dAdgrad_chi333133 + _232133;
        dadgrad_chi(15,3) = F21*F31*chi21*dAdgrad_chi111123 + F21*F31*chi22*dAdgrad_chi112123 + F21*F31*chi23*dAdgrad_chi113123 + F21*F32*chi21*dAdgrad_chi121123 + F21*F32*chi22*dAdgrad_chi122123 + F21*F32*chi23*dAdgrad_chi123123 + F21*F33*chi21*dAdgrad_chi131123 + F21*F33*chi22*dAdgrad_chi132123 + F21*F33*chi23*dAdgrad_chi133123 + F22*F31*chi21*dAdgrad_chi211123 + F22*F31*chi22*dAdgrad_chi212123 + F22*F31*chi23*dAdgrad_chi213123 + F22*F32*chi21*dAdgrad_chi221123 + F22*F32*chi22*dAdgrad_chi222123 + F22*F32*chi23*dAdgrad_chi223123 + F22*F33*chi21*dAdgrad_chi231123 + F22*F33*chi22*dAdgrad_chi232123 + F22*F33*chi23*dAdgrad_chi233123 + F23*F31*chi21*dAdgrad_chi311123 + F23*F31*chi22*dAdgrad_chi312123 + F23*F31*chi23*dAdgrad_chi313123 + F23*F32*chi21*dAdgrad_chi321123 + F23*F32*chi22*dAdgrad_chi322123 + F23*F32*chi23*dAdgrad_chi323123 + F23*F33*chi21*dAdgrad_chi331123 + F23*F33*chi22*dAdgrad_chi332123 + F23*F33*chi23*dAdgrad_chi333123 + _232123;
        dadgrad_chi(15,4) = F21*F31*chi21*dAdgrad_chi111113 + F21*F31*chi22*dAdgrad_chi112113 + F21*F31*chi23*dAdgrad_chi113113 + F21*F32*chi21*dAdgrad_chi121113 + F21*F32*chi22*dAdgrad_chi122113 + F21*F32*chi23*dAdgrad_chi123113 + F21*F33*chi21*dAdgrad_chi131113 + F21*F33*chi22*dAdgrad_chi132113 + F21*F33*chi23*dAdgrad_chi133113 + F22*F31*chi21*dAdgrad_chi211113 + F22*F31*chi22*dAdgrad_chi212113 + F22*F31*chi23*dAdgrad_chi213113 + F22*F32*chi21*dAdgrad_chi221113 + F22*F32*chi22*dAdgrad_chi222113 + F22*F32*chi23*dAdgrad_chi223113 + F22*F33*chi21*dAdgrad_chi231113 + F22*F33*chi22*dAdgrad_chi232113 + F22*F33*chi23*dAdgrad_chi233113 + F23*F31*chi21*dAdgrad_chi311113 + F23*F31*chi22*dAdgrad_chi312113 + F23*F31*chi23*dAdgrad_chi313113 + F23*F32*chi21*dAdgrad_chi321113 + F23*F32*chi22*dAdgrad_chi322113 + F23*F32*chi23*dAdgrad_chi323113 + F23*F33*chi21*dAdgrad_chi331113 + F23*F33*chi22*dAdgrad_chi332113 + F23*F33*chi23*dAdgrad_chi333113 + _232113;
        dadgrad_chi(15,5) = F21*F31*chi21*dAdgrad_chi111112 + F21*F31*chi22*dAdgrad_chi112112 + F21*F31*chi23*dAdgrad_chi113112 + F21*F32*chi21*dAdgrad_chi121112 + F21*F32*chi22*dAdgrad_chi122112 + F21*F32*chi23*dAdgrad_chi123112 + F21*F33*chi21*dAdgrad_chi131112 + F21*F33*chi22*dAdgrad_chi132112 + F21*F33*chi23*dAdgrad_chi133112 + F22*F31*chi21*dAdgrad_chi211112 + F22*F31*chi22*dAdgrad_chi212112 + F22*F31*chi23*dAdgrad_chi213112 + F22*F32*chi21*dAdgrad_chi221112 + F22*F32*chi22*dAdgrad_chi222112 + F22*F32*chi23*dAdgrad_chi223112 + F22*F33*chi21*dAdgrad_chi231112 + F22*F33*chi22*dAdgrad_chi232112 + F22*F33*chi23*dAdgrad_chi233112 + F23*F31*chi21*dAdgrad_chi311112 + F23*F31*chi22*dAdgrad_chi312112 + F23*F31*chi23*dAdgrad_chi313112 + F23*F32*chi21*dAdgrad_chi321112 + F23*F32*chi22*dAdgrad_chi322112 + F23*F32*chi23*dAdgrad_chi323112 + F23*F33*chi21*dAdgrad_chi331112 + F23*F33*chi22*dAdgrad_chi332112 + F23*F33*chi23*dAdgrad_chi333112 + _232112;
        dadgrad_chi(15,6) = F21*F31*chi21*dAdgrad_chi111132 + F21*F31*chi22*dAdgrad_chi112132 + F21*F31*chi23*dAdgrad_chi113132 + F21*F32*chi21*dAdgrad_chi121132 + F21*F32*chi22*dAdgrad_chi122132 + F21*F32*chi23*dAdgrad_chi123132 + F21*F33*chi21*dAdgrad_chi131132 + F21*F33*chi22*dAdgrad_chi132132 + F21*F33*chi23*dAdgrad_chi133132 + F22*F31*chi21*dAdgrad_chi211132 + F22*F31*chi22*dAdgrad_chi212132 + F22*F31*chi23*dAdgrad_chi213132 + F22*F32*chi21*dAdgrad_chi221132 + F22*F32*chi22*dAdgrad_chi222132 + F22*F32*chi23*dAdgrad_chi223132 + F22*F33*chi21*dAdgrad_chi231132 + F22*F33*chi22*dAdgrad_chi232132 + F22*F33*chi23*dAdgrad_chi233132 + F23*F31*chi21*dAdgrad_chi311132 + F23*F31*chi22*dAdgrad_chi312132 + F23*F31*chi23*dAdgrad_chi313132 + F23*F32*chi21*dAdgrad_chi321132 + F23*F32*chi22*dAdgrad_chi322132 + F23*F32*chi23*dAdgrad_chi323132 + F23*F33*chi21*dAdgrad_chi331132 + F23*F33*chi22*dAdgrad_chi332132 + F23*F33*chi23*dAdgrad_chi333132 + _232132;
        dadgrad_chi(15,7) = F21*F31*chi21*dAdgrad_chi111131 + F21*F31*chi22*dAdgrad_chi112131 + F21*F31*chi23*dAdgrad_chi113131 + F21*F32*chi21*dAdgrad_chi121131 + F21*F32*chi22*dAdgrad_chi122131 + F21*F32*chi23*dAdgrad_chi123131 + F21*F33*chi21*dAdgrad_chi131131 + F21*F33*chi22*dAdgrad_chi132131 + F21*F33*chi23*dAdgrad_chi133131 + F22*F31*chi21*dAdgrad_chi211131 + F22*F31*chi22*dAdgrad_chi212131 + F22*F31*chi23*dAdgrad_chi213131 + F22*F32*chi21*dAdgrad_chi221131 + F22*F32*chi22*dAdgrad_chi222131 + F22*F32*chi23*dAdgrad_chi223131 + F22*F33*chi21*dAdgrad_chi231131 + F22*F33*chi22*dAdgrad_chi232131 + F22*F33*chi23*dAdgrad_chi233131 + F23*F31*chi21*dAdgrad_chi311131 + F23*F31*chi22*dAdgrad_chi312131 + F23*F31*chi23*dAdgrad_chi313131 + F23*F32*chi21*dAdgrad_chi321131 + F23*F32*chi22*dAdgrad_chi322131 + F23*F32*chi23*dAdgrad_chi323131 + F23*F33*chi21*dAdgrad_chi331131 + F23*F33*chi22*dAdgrad_chi332131 + F23*F33*chi23*dAdgrad_chi333131 + _232131;
        dadgrad_chi(15,8) = F21*F31*chi21*dAdgrad_chi111121 + F21*F31*chi22*dAdgrad_chi112121 + F21*F31*chi23*dAdgrad_chi113121 + F21*F32*chi21*dAdgrad_chi121121 + F21*F32*chi22*dAdgrad_chi122121 + F21*F32*chi23*dAdgrad_chi123121 + F21*F33*chi21*dAdgrad_chi131121 + F21*F33*chi22*dAdgrad_chi132121 + F21*F33*chi23*dAdgrad_chi133121 + F22*F31*chi21*dAdgrad_chi211121 + F22*F31*chi22*dAdgrad_chi212121 + F22*F31*chi23*dAdgrad_chi213121 + F22*F32*chi21*dAdgrad_chi221121 + F22*F32*chi22*dAdgrad_chi222121 + F22*F32*chi23*dAdgrad_chi223121 + F22*F33*chi21*dAdgrad_chi231121 + F22*F33*chi22*dAdgrad_chi232121 + F22*F33*chi23*dAdgrad_chi233121 + F23*F31*chi21*dAdgrad_chi311121 + F23*F31*chi22*dAdgrad_chi312121 + F23*F31*chi23*dAdgrad_chi313121 + F23*F32*chi21*dAdgrad_chi321121 + F23*F32*chi22*dAdgrad_chi322121 + F23*F32*chi23*dAdgrad_chi323121 + F23*F33*chi21*dAdgrad_chi331121 + F23*F33*chi22*dAdgrad_chi332121 + F23*F33*chi23*dAdgrad_chi333121 + _232121;
        dadgrad_chi(15,9) = F21*F31*chi21*dAdgrad_chi111211 + F21*F31*chi22*dAdgrad_chi112211 + F21*F31*chi23*dAdgrad_chi113211 + F21*F32*chi21*dAdgrad_chi121211 + F21*F32*chi22*dAdgrad_chi122211 + F21*F32*chi23*dAdgrad_chi123211 + F21*F33*chi21*dAdgrad_chi131211 + F21*F33*chi22*dAdgrad_chi132211 + F21*F33*chi23*dAdgrad_chi133211 + F22*F31*chi21*dAdgrad_chi211211 + F22*F31*chi22*dAdgrad_chi212211 + F22*F31*chi23*dAdgrad_chi213211 + F22*F32*chi21*dAdgrad_chi221211 + F22*F32*chi22*dAdgrad_chi222211 + F22*F32*chi23*dAdgrad_chi223211 + F22*F33*chi21*dAdgrad_chi231211 + F22*F33*chi22*dAdgrad_chi232211 + F22*F33*chi23*dAdgrad_chi233211 + F23*F31*chi21*dAdgrad_chi311211 + F23*F31*chi22*dAdgrad_chi312211 + F23*F31*chi23*dAdgrad_chi313211 + F23*F32*chi21*dAdgrad_chi321211 + F23*F32*chi22*dAdgrad_chi322211 + F23*F32*chi23*dAdgrad_chi323211 + F23*F33*chi21*dAdgrad_chi331211 + F23*F33*chi22*dAdgrad_chi332211 + F23*F33*chi23*dAdgrad_chi333211 + _232211;
        dadgrad_chi(15,10) = F21*F31*chi21*dAdgrad_chi111222 + F21*F31*chi22*dAdgrad_chi112222 + F21*F31*chi23*dAdgrad_chi113222 + F21*F32*chi21*dAdgrad_chi121222 + F21*F32*chi22*dAdgrad_chi122222 + F21*F32*chi23*dAdgrad_chi123222 + F21*F33*chi21*dAdgrad_chi131222 + F21*F33*chi22*dAdgrad_chi132222 + F21*F33*chi23*dAdgrad_chi133222 + F22*F31*chi21*dAdgrad_chi211222 + F22*F31*chi22*dAdgrad_chi212222 + F22*F31*chi23*dAdgrad_chi213222 + F22*F32*chi21*dAdgrad_chi221222 + F22*F32*chi22*dAdgrad_chi222222 + F22*F32*chi23*dAdgrad_chi223222 + F22*F33*chi21*dAdgrad_chi231222 + F22*F33*chi22*dAdgrad_chi232222 + F22*F33*chi23*dAdgrad_chi233222 + F23*F31*chi21*dAdgrad_chi311222 + F23*F31*chi22*dAdgrad_chi312222 + F23*F31*chi23*dAdgrad_chi313222 + F23*F32*chi21*dAdgrad_chi321222 + F23*F32*chi22*dAdgrad_chi322222 + F23*F32*chi23*dAdgrad_chi323222 + F23*F33*chi21*dAdgrad_chi331222 + F23*F33*chi22*dAdgrad_chi332222 + F23*F33*chi23*dAdgrad_chi333222 + _232222;
        dadgrad_chi(15,11) = F21*F31*chi21*dAdgrad_chi111233 + F21*F31*chi22*dAdgrad_chi112233 + F21*F31*chi23*dAdgrad_chi113233 + F21*F32*chi21*dAdgrad_chi121233 + F21*F32*chi22*dAdgrad_chi122233 + F21*F32*chi23*dAdgrad_chi123233 + F21*F33*chi21*dAdgrad_chi131233 + F21*F33*chi22*dAdgrad_chi132233 + F21*F33*chi23*dAdgrad_chi133233 + F22*F31*chi21*dAdgrad_chi211233 + F22*F31*chi22*dAdgrad_chi212233 + F22*F31*chi23*dAdgrad_chi213233 + F22*F32*chi21*dAdgrad_chi221233 + F22*F32*chi22*dAdgrad_chi222233 + F22*F32*chi23*dAdgrad_chi223233 + F22*F33*chi21*dAdgrad_chi231233 + F22*F33*chi22*dAdgrad_chi232233 + F22*F33*chi23*dAdgrad_chi233233 + F23*F31*chi21*dAdgrad_chi311233 + F23*F31*chi22*dAdgrad_chi312233 + F23*F31*chi23*dAdgrad_chi313233 + F23*F32*chi21*dAdgrad_chi321233 + F23*F32*chi22*dAdgrad_chi322233 + F23*F32*chi23*dAdgrad_chi323233 + F23*F33*chi21*dAdgrad_chi331233 + F23*F33*chi22*dAdgrad_chi332233 + F23*F33*chi23*dAdgrad_chi333233 + _232233;
        dadgrad_chi(15,12) = F21*F31*chi21*dAdgrad_chi111223 + F21*F31*chi22*dAdgrad_chi112223 + F21*F31*chi23*dAdgrad_chi113223 + F21*F32*chi21*dAdgrad_chi121223 + F21*F32*chi22*dAdgrad_chi122223 + F21*F32*chi23*dAdgrad_chi123223 + F21*F33*chi21*dAdgrad_chi131223 + F21*F33*chi22*dAdgrad_chi132223 + F21*F33*chi23*dAdgrad_chi133223 + F22*F31*chi21*dAdgrad_chi211223 + F22*F31*chi22*dAdgrad_chi212223 + F22*F31*chi23*dAdgrad_chi213223 + F22*F32*chi21*dAdgrad_chi221223 + F22*F32*chi22*dAdgrad_chi222223 + F22*F32*chi23*dAdgrad_chi223223 + F22*F33*chi21*dAdgrad_chi231223 + F22*F33*chi22*dAdgrad_chi232223 + F22*F33*chi23*dAdgrad_chi233223 + F23*F31*chi21*dAdgrad_chi311223 + F23*F31*chi22*dAdgrad_chi312223 + F23*F31*chi23*dAdgrad_chi313223 + F23*F32*chi21*dAdgrad_chi321223 + F23*F32*chi22*dAdgrad_chi322223 + F23*F32*chi23*dAdgrad_chi323223 + F23*F33*chi21*dAdgrad_chi331223 + F23*F33*chi22*dAdgrad_chi332223 + F23*F33*chi23*dAdgrad_chi333223 + _232223;
        dadgrad_chi(15,13) = F21*F31*chi21*dAdgrad_chi111213 + F21*F31*chi22*dAdgrad_chi112213 + F21*F31*chi23*dAdgrad_chi113213 + F21*F32*chi21*dAdgrad_chi121213 + F21*F32*chi22*dAdgrad_chi122213 + F21*F32*chi23*dAdgrad_chi123213 + F21*F33*chi21*dAdgrad_chi131213 + F21*F33*chi22*dAdgrad_chi132213 + F21*F33*chi23*dAdgrad_chi133213 + F22*F31*chi21*dAdgrad_chi211213 + F22*F31*chi22*dAdgrad_chi212213 + F22*F31*chi23*dAdgrad_chi213213 + F22*F32*chi21*dAdgrad_chi221213 + F22*F32*chi22*dAdgrad_chi222213 + F22*F32*chi23*dAdgrad_chi223213 + F22*F33*chi21*dAdgrad_chi231213 + F22*F33*chi22*dAdgrad_chi232213 + F22*F33*chi23*dAdgrad_chi233213 + F23*F31*chi21*dAdgrad_chi311213 + F23*F31*chi22*dAdgrad_chi312213 + F23*F31*chi23*dAdgrad_chi313213 + F23*F32*chi21*dAdgrad_chi321213 + F23*F32*chi22*dAdgrad_chi322213 + F23*F32*chi23*dAdgrad_chi323213 + F23*F33*chi21*dAdgrad_chi331213 + F23*F33*chi22*dAdgrad_chi332213 + F23*F33*chi23*dAdgrad_chi333213 + _232213;
        dadgrad_chi(15,14) = F21*F31*chi21*dAdgrad_chi111212 + F21*F31*chi22*dAdgrad_chi112212 + F21*F31*chi23*dAdgrad_chi113212 + F21*F32*chi21*dAdgrad_chi121212 + F21*F32*chi22*dAdgrad_chi122212 + F21*F32*chi23*dAdgrad_chi123212 + F21*F33*chi21*dAdgrad_chi131212 + F21*F33*chi22*dAdgrad_chi132212 + F21*F33*chi23*dAdgrad_chi133212 + F22*F31*chi21*dAdgrad_chi211212 + F22*F31*chi22*dAdgrad_chi212212 + F22*F31*chi23*dAdgrad_chi213212 + F22*F32*chi21*dAdgrad_chi221212 + F22*F32*chi22*dAdgrad_chi222212 + F22*F32*chi23*dAdgrad_chi223212 + F22*F33*chi21*dAdgrad_chi231212 + F22*F33*chi22*dAdgrad_chi232212 + F22*F33*chi23*dAdgrad_chi233212 + F23*F31*chi21*dAdgrad_chi311212 + F23*F31*chi22*dAdgrad_chi312212 + F23*F31*chi23*dAdgrad_chi313212 + F23*F32*chi21*dAdgrad_chi321212 + F23*F32*chi22*dAdgrad_chi322212 + F23*F32*chi23*dAdgrad_chi323212 + F23*F33*chi21*dAdgrad_chi331212 + F23*F33*chi22*dAdgrad_chi332212 + F23*F33*chi23*dAdgrad_chi333212 + _232212;
        dadgrad_chi(15,15) = F21*F31*chi21*dAdgrad_chi111232 + F21*F31*chi22*dAdgrad_chi112232 + F21*F31*chi23*dAdgrad_chi113232 + F21*F32*chi21*dAdgrad_chi121232 + F21*F32*chi22*dAdgrad_chi122232 + F21*F32*chi23*dAdgrad_chi123232 + F21*F33*chi21*dAdgrad_chi131232 + F21*F33*chi22*dAdgrad_chi132232 + F21*F33*chi23*dAdgrad_chi133232 + F22*F31*chi21*dAdgrad_chi211232 + F22*F31*chi22*dAdgrad_chi212232 + F22*F31*chi23*dAdgrad_chi213232 + F22*F32*chi21*dAdgrad_chi221232 + F22*F32*chi22*dAdgrad_chi222232 + F22*F32*chi23*dAdgrad_chi223232 + F22*F33*chi21*dAdgrad_chi231232 + F22*F33*chi22*dAdgrad_chi232232 + F22*F33*chi23*dAdgrad_chi233232 + F23*F31*chi21*dAdgrad_chi311232 + F23*F31*chi22*dAdgrad_chi312232 + F23*F31*chi23*dAdgrad_chi313232 + F23*F32*chi21*dAdgrad_chi321232 + F23*F32*chi22*dAdgrad_chi322232 + F23*F32*chi23*dAdgrad_chi323232 + F23*F33*chi21*dAdgrad_chi331232 + F23*F33*chi22*dAdgrad_chi332232 + F23*F33*chi23*dAdgrad_chi333232 + _232232;
        dadgrad_chi(15,16) = F21*F31*chi21*dAdgrad_chi111231 + F21*F31*chi22*dAdgrad_chi112231 + F21*F31*chi23*dAdgrad_chi113231 + F21*F32*chi21*dAdgrad_chi121231 + F21*F32*chi22*dAdgrad_chi122231 + F21*F32*chi23*dAdgrad_chi123231 + F21*F33*chi21*dAdgrad_chi131231 + F21*F33*chi22*dAdgrad_chi132231 + F21*F33*chi23*dAdgrad_chi133231 + F22*F31*chi21*dAdgrad_chi211231 + F22*F31*chi22*dAdgrad_chi212231 + F22*F31*chi23*dAdgrad_chi213231 + F22*F32*chi21*dAdgrad_chi221231 + F22*F32*chi22*dAdgrad_chi222231 + F22*F32*chi23*dAdgrad_chi223231 + F22*F33*chi21*dAdgrad_chi231231 + F22*F33*chi22*dAdgrad_chi232231 + F22*F33*chi23*dAdgrad_chi233231 + F23*F31*chi21*dAdgrad_chi311231 + F23*F31*chi22*dAdgrad_chi312231 + F23*F31*chi23*dAdgrad_chi313231 + F23*F32*chi21*dAdgrad_chi321231 + F23*F32*chi22*dAdgrad_chi322231 + F23*F32*chi23*dAdgrad_chi323231 + F23*F33*chi21*dAdgrad_chi331231 + F23*F33*chi22*dAdgrad_chi332231 + F23*F33*chi23*dAdgrad_chi333231 + _232231;
        dadgrad_chi(15,17) = F21*F31*chi21*dAdgrad_chi111221 + F21*F31*chi22*dAdgrad_chi112221 + F21*F31*chi23*dAdgrad_chi113221 + F21*F32*chi21*dAdgrad_chi121221 + F21*F32*chi22*dAdgrad_chi122221 + F21*F32*chi23*dAdgrad_chi123221 + F21*F33*chi21*dAdgrad_chi131221 + F21*F33*chi22*dAdgrad_chi132221 + F21*F33*chi23*dAdgrad_chi133221 + F22*F31*chi21*dAdgrad_chi211221 + F22*F31*chi22*dAdgrad_chi212221 + F22*F31*chi23*dAdgrad_chi213221 + F22*F32*chi21*dAdgrad_chi221221 + F22*F32*chi22*dAdgrad_chi222221 + F22*F32*chi23*dAdgrad_chi223221 + F22*F33*chi21*dAdgrad_chi231221 + F22*F33*chi22*dAdgrad_chi232221 + F22*F33*chi23*dAdgrad_chi233221 + F23*F31*chi21*dAdgrad_chi311221 + F23*F31*chi22*dAdgrad_chi312221 + F23*F31*chi23*dAdgrad_chi313221 + F23*F32*chi21*dAdgrad_chi321221 + F23*F32*chi22*dAdgrad_chi322221 + F23*F32*chi23*dAdgrad_chi323221 + F23*F33*chi21*dAdgrad_chi331221 + F23*F33*chi22*dAdgrad_chi332221 + F23*F33*chi23*dAdgrad_chi333221 + _232221;
        dadgrad_chi(15,18) = F21*F31*chi21*dAdgrad_chi111311 + F21*F31*chi22*dAdgrad_chi112311 + F21*F31*chi23*dAdgrad_chi113311 + F21*F32*chi21*dAdgrad_chi121311 + F21*F32*chi22*dAdgrad_chi122311 + F21*F32*chi23*dAdgrad_chi123311 + F21*F33*chi21*dAdgrad_chi131311 + F21*F33*chi22*dAdgrad_chi132311 + F21*F33*chi23*dAdgrad_chi133311 + F22*F31*chi21*dAdgrad_chi211311 + F22*F31*chi22*dAdgrad_chi212311 + F22*F31*chi23*dAdgrad_chi213311 + F22*F32*chi21*dAdgrad_chi221311 + F22*F32*chi22*dAdgrad_chi222311 + F22*F32*chi23*dAdgrad_chi223311 + F22*F33*chi21*dAdgrad_chi231311 + F22*F33*chi22*dAdgrad_chi232311 + F22*F33*chi23*dAdgrad_chi233311 + F23*F31*chi21*dAdgrad_chi311311 + F23*F31*chi22*dAdgrad_chi312311 + F23*F31*chi23*dAdgrad_chi313311 + F23*F32*chi21*dAdgrad_chi321311 + F23*F32*chi22*dAdgrad_chi322311 + F23*F32*chi23*dAdgrad_chi323311 + F23*F33*chi21*dAdgrad_chi331311 + F23*F33*chi22*dAdgrad_chi332311 + F23*F33*chi23*dAdgrad_chi333311 + _232311;
        dadgrad_chi(15,19) = F21*F31*chi21*dAdgrad_chi111322 + F21*F31*chi22*dAdgrad_chi112322 + F21*F31*chi23*dAdgrad_chi113322 + F21*F32*chi21*dAdgrad_chi121322 + F21*F32*chi22*dAdgrad_chi122322 + F21*F32*chi23*dAdgrad_chi123322 + F21*F33*chi21*dAdgrad_chi131322 + F21*F33*chi22*dAdgrad_chi132322 + F21*F33*chi23*dAdgrad_chi133322 + F22*F31*chi21*dAdgrad_chi211322 + F22*F31*chi22*dAdgrad_chi212322 + F22*F31*chi23*dAdgrad_chi213322 + F22*F32*chi21*dAdgrad_chi221322 + F22*F32*chi22*dAdgrad_chi222322 + F22*F32*chi23*dAdgrad_chi223322 + F22*F33*chi21*dAdgrad_chi231322 + F22*F33*chi22*dAdgrad_chi232322 + F22*F33*chi23*dAdgrad_chi233322 + F23*F31*chi21*dAdgrad_chi311322 + F23*F31*chi22*dAdgrad_chi312322 + F23*F31*chi23*dAdgrad_chi313322 + F23*F32*chi21*dAdgrad_chi321322 + F23*F32*chi22*dAdgrad_chi322322 + F23*F32*chi23*dAdgrad_chi323322 + F23*F33*chi21*dAdgrad_chi331322 + F23*F33*chi22*dAdgrad_chi332322 + F23*F33*chi23*dAdgrad_chi333322 + _232322;
        dadgrad_chi(15,20) = F21*F31*chi21*dAdgrad_chi111333 + F21*F31*chi22*dAdgrad_chi112333 + F21*F31*chi23*dAdgrad_chi113333 + F21*F32*chi21*dAdgrad_chi121333 + F21*F32*chi22*dAdgrad_chi122333 + F21*F32*chi23*dAdgrad_chi123333 + F21*F33*chi21*dAdgrad_chi131333 + F21*F33*chi22*dAdgrad_chi132333 + F21*F33*chi23*dAdgrad_chi133333 + F22*F31*chi21*dAdgrad_chi211333 + F22*F31*chi22*dAdgrad_chi212333 + F22*F31*chi23*dAdgrad_chi213333 + F22*F32*chi21*dAdgrad_chi221333 + F22*F32*chi22*dAdgrad_chi222333 + F22*F32*chi23*dAdgrad_chi223333 + F22*F33*chi21*dAdgrad_chi231333 + F22*F33*chi22*dAdgrad_chi232333 + F22*F33*chi23*dAdgrad_chi233333 + F23*F31*chi21*dAdgrad_chi311333 + F23*F31*chi22*dAdgrad_chi312333 + F23*F31*chi23*dAdgrad_chi313333 + F23*F32*chi21*dAdgrad_chi321333 + F23*F32*chi22*dAdgrad_chi322333 + F23*F32*chi23*dAdgrad_chi323333 + F23*F33*chi21*dAdgrad_chi331333 + F23*F33*chi22*dAdgrad_chi332333 + F23*F33*chi23*dAdgrad_chi333333 + _232333;
        dadgrad_chi(15,21) = F21*F31*chi21*dAdgrad_chi111323 + F21*F31*chi22*dAdgrad_chi112323 + F21*F31*chi23*dAdgrad_chi113323 + F21*F32*chi21*dAdgrad_chi121323 + F21*F32*chi22*dAdgrad_chi122323 + F21*F32*chi23*dAdgrad_chi123323 + F21*F33*chi21*dAdgrad_chi131323 + F21*F33*chi22*dAdgrad_chi132323 + F21*F33*chi23*dAdgrad_chi133323 + F22*F31*chi21*dAdgrad_chi211323 + F22*F31*chi22*dAdgrad_chi212323 + F22*F31*chi23*dAdgrad_chi213323 + F22*F32*chi21*dAdgrad_chi221323 + F22*F32*chi22*dAdgrad_chi222323 + F22*F32*chi23*dAdgrad_chi223323 + F22*F33*chi21*dAdgrad_chi231323 + F22*F33*chi22*dAdgrad_chi232323 + F22*F33*chi23*dAdgrad_chi233323 + F23*F31*chi21*dAdgrad_chi311323 + F23*F31*chi22*dAdgrad_chi312323 + F23*F31*chi23*dAdgrad_chi313323 + F23*F32*chi21*dAdgrad_chi321323 + F23*F32*chi22*dAdgrad_chi322323 + F23*F32*chi23*dAdgrad_chi323323 + F23*F33*chi21*dAdgrad_chi331323 + F23*F33*chi22*dAdgrad_chi332323 + F23*F33*chi23*dAdgrad_chi333323 + _232323;
        dadgrad_chi(15,22) = F21*F31*chi21*dAdgrad_chi111313 + F21*F31*chi22*dAdgrad_chi112313 + F21*F31*chi23*dAdgrad_chi113313 + F21*F32*chi21*dAdgrad_chi121313 + F21*F32*chi22*dAdgrad_chi122313 + F21*F32*chi23*dAdgrad_chi123313 + F21*F33*chi21*dAdgrad_chi131313 + F21*F33*chi22*dAdgrad_chi132313 + F21*F33*chi23*dAdgrad_chi133313 + F22*F31*chi21*dAdgrad_chi211313 + F22*F31*chi22*dAdgrad_chi212313 + F22*F31*chi23*dAdgrad_chi213313 + F22*F32*chi21*dAdgrad_chi221313 + F22*F32*chi22*dAdgrad_chi222313 + F22*F32*chi23*dAdgrad_chi223313 + F22*F33*chi21*dAdgrad_chi231313 + F22*F33*chi22*dAdgrad_chi232313 + F22*F33*chi23*dAdgrad_chi233313 + F23*F31*chi21*dAdgrad_chi311313 + F23*F31*chi22*dAdgrad_chi312313 + F23*F31*chi23*dAdgrad_chi313313 + F23*F32*chi21*dAdgrad_chi321313 + F23*F32*chi22*dAdgrad_chi322313 + F23*F32*chi23*dAdgrad_chi323313 + F23*F33*chi21*dAdgrad_chi331313 + F23*F33*chi22*dAdgrad_chi332313 + F23*F33*chi23*dAdgrad_chi333313 + _232313;
        dadgrad_chi(15,23) = F21*F31*chi21*dAdgrad_chi111312 + F21*F31*chi22*dAdgrad_chi112312 + F21*F31*chi23*dAdgrad_chi113312 + F21*F32*chi21*dAdgrad_chi121312 + F21*F32*chi22*dAdgrad_chi122312 + F21*F32*chi23*dAdgrad_chi123312 + F21*F33*chi21*dAdgrad_chi131312 + F21*F33*chi22*dAdgrad_chi132312 + F21*F33*chi23*dAdgrad_chi133312 + F22*F31*chi21*dAdgrad_chi211312 + F22*F31*chi22*dAdgrad_chi212312 + F22*F31*chi23*dAdgrad_chi213312 + F22*F32*chi21*dAdgrad_chi221312 + F22*F32*chi22*dAdgrad_chi222312 + F22*F32*chi23*dAdgrad_chi223312 + F22*F33*chi21*dAdgrad_chi231312 + F22*F33*chi22*dAdgrad_chi232312 + F22*F33*chi23*dAdgrad_chi233312 + F23*F31*chi21*dAdgrad_chi311312 + F23*F31*chi22*dAdgrad_chi312312 + F23*F31*chi23*dAdgrad_chi313312 + F23*F32*chi21*dAdgrad_chi321312 + F23*F32*chi22*dAdgrad_chi322312 + F23*F32*chi23*dAdgrad_chi323312 + F23*F33*chi21*dAdgrad_chi331312 + F23*F33*chi22*dAdgrad_chi332312 + F23*F33*chi23*dAdgrad_chi333312 + _232312;
        dadgrad_chi(15,24) = F21*F31*chi21*dAdgrad_chi111332 + F21*F31*chi22*dAdgrad_chi112332 + F21*F31*chi23*dAdgrad_chi113332 + F21*F32*chi21*dAdgrad_chi121332 + F21*F32*chi22*dAdgrad_chi122332 + F21*F32*chi23*dAdgrad_chi123332 + F21*F33*chi21*dAdgrad_chi131332 + F21*F33*chi22*dAdgrad_chi132332 + F21*F33*chi23*dAdgrad_chi133332 + F22*F31*chi21*dAdgrad_chi211332 + F22*F31*chi22*dAdgrad_chi212332 + F22*F31*chi23*dAdgrad_chi213332 + F22*F32*chi21*dAdgrad_chi221332 + F22*F32*chi22*dAdgrad_chi222332 + F22*F32*chi23*dAdgrad_chi223332 + F22*F33*chi21*dAdgrad_chi231332 + F22*F33*chi22*dAdgrad_chi232332 + F22*F33*chi23*dAdgrad_chi233332 + F23*F31*chi21*dAdgrad_chi311332 + F23*F31*chi22*dAdgrad_chi312332 + F23*F31*chi23*dAdgrad_chi313332 + F23*F32*chi21*dAdgrad_chi321332 + F23*F32*chi22*dAdgrad_chi322332 + F23*F32*chi23*dAdgrad_chi323332 + F23*F33*chi21*dAdgrad_chi331332 + F23*F33*chi22*dAdgrad_chi332332 + F23*F33*chi23*dAdgrad_chi333332 + _232332;
        dadgrad_chi(15,25) = F21*F31*chi21*dAdgrad_chi111331 + F21*F31*chi22*dAdgrad_chi112331 + F21*F31*chi23*dAdgrad_chi113331 + F21*F32*chi21*dAdgrad_chi121331 + F21*F32*chi22*dAdgrad_chi122331 + F21*F32*chi23*dAdgrad_chi123331 + F21*F33*chi21*dAdgrad_chi131331 + F21*F33*chi22*dAdgrad_chi132331 + F21*F33*chi23*dAdgrad_chi133331 + F22*F31*chi21*dAdgrad_chi211331 + F22*F31*chi22*dAdgrad_chi212331 + F22*F31*chi23*dAdgrad_chi213331 + F22*F32*chi21*dAdgrad_chi221331 + F22*F32*chi22*dAdgrad_chi222331 + F22*F32*chi23*dAdgrad_chi223331 + F22*F33*chi21*dAdgrad_chi231331 + F22*F33*chi22*dAdgrad_chi232331 + F22*F33*chi23*dAdgrad_chi233331 + F23*F31*chi21*dAdgrad_chi311331 + F23*F31*chi22*dAdgrad_chi312331 + F23*F31*chi23*dAdgrad_chi313331 + F23*F32*chi21*dAdgrad_chi321331 + F23*F32*chi22*dAdgrad_chi322331 + F23*F32*chi23*dAdgrad_chi323331 + F23*F33*chi21*dAdgrad_chi331331 + F23*F33*chi22*dAdgrad_chi332331 + F23*F33*chi23*dAdgrad_chi333331 + _232331;
        dadgrad_chi(15,26) = F21*F31*chi21*dAdgrad_chi111321 + F21*F31*chi22*dAdgrad_chi112321 + F21*F31*chi23*dAdgrad_chi113321 + F21*F32*chi21*dAdgrad_chi121321 + F21*F32*chi22*dAdgrad_chi122321 + F21*F32*chi23*dAdgrad_chi123321 + F21*F33*chi21*dAdgrad_chi131321 + F21*F33*chi22*dAdgrad_chi132321 + F21*F33*chi23*dAdgrad_chi133321 + F22*F31*chi21*dAdgrad_chi211321 + F22*F31*chi22*dAdgrad_chi212321 + F22*F31*chi23*dAdgrad_chi213321 + F22*F32*chi21*dAdgrad_chi221321 + F22*F32*chi22*dAdgrad_chi222321 + F22*F32*chi23*dAdgrad_chi223321 + F22*F33*chi21*dAdgrad_chi231321 + F22*F33*chi22*dAdgrad_chi232321 + F22*F33*chi23*dAdgrad_chi233321 + F23*F31*chi21*dAdgrad_chi311321 + F23*F31*chi22*dAdgrad_chi312321 + F23*F31*chi23*dAdgrad_chi313321 + F23*F32*chi21*dAdgrad_chi321321 + F23*F32*chi22*dAdgrad_chi322321 + F23*F32*chi23*dAdgrad_chi323321 + F23*F33*chi21*dAdgrad_chi331321 + F23*F33*chi22*dAdgrad_chi332321 + F23*F33*chi23*dAdgrad_chi333321 + _232321;
        dadgrad_chi(16,0) = F21*F31*chi11*dAdgrad_chi111111 + F21*F31*chi12*dAdgrad_chi112111 + F21*F31*chi13*dAdgrad_chi113111 + F21*F32*chi11*dAdgrad_chi121111 + F21*F32*chi12*dAdgrad_chi122111 + F21*F32*chi13*dAdgrad_chi123111 + F21*F33*chi11*dAdgrad_chi131111 + F21*F33*chi12*dAdgrad_chi132111 + F21*F33*chi13*dAdgrad_chi133111 + F22*F31*chi11*dAdgrad_chi211111 + F22*F31*chi12*dAdgrad_chi212111 + F22*F31*chi13*dAdgrad_chi213111 + F22*F32*chi11*dAdgrad_chi221111 + F22*F32*chi12*dAdgrad_chi222111 + F22*F32*chi13*dAdgrad_chi223111 + F22*F33*chi11*dAdgrad_chi231111 + F22*F33*chi12*dAdgrad_chi232111 + F22*F33*chi13*dAdgrad_chi233111 + F23*F31*chi11*dAdgrad_chi311111 + F23*F31*chi12*dAdgrad_chi312111 + F23*F31*chi13*dAdgrad_chi313111 + F23*F32*chi11*dAdgrad_chi321111 + F23*F32*chi12*dAdgrad_chi322111 + F23*F32*chi13*dAdgrad_chi323111 + F23*F33*chi11*dAdgrad_chi331111 + F23*F33*chi12*dAdgrad_chi332111 + F23*F33*chi13*dAdgrad_chi333111 + _231111;
        dadgrad_chi(16,1) = F21*F31*chi11*dAdgrad_chi111122 + F21*F31*chi12*dAdgrad_chi112122 + F21*F31*chi13*dAdgrad_chi113122 + F21*F32*chi11*dAdgrad_chi121122 + F21*F32*chi12*dAdgrad_chi122122 + F21*F32*chi13*dAdgrad_chi123122 + F21*F33*chi11*dAdgrad_chi131122 + F21*F33*chi12*dAdgrad_chi132122 + F21*F33*chi13*dAdgrad_chi133122 + F22*F31*chi11*dAdgrad_chi211122 + F22*F31*chi12*dAdgrad_chi212122 + F22*F31*chi13*dAdgrad_chi213122 + F22*F32*chi11*dAdgrad_chi221122 + F22*F32*chi12*dAdgrad_chi222122 + F22*F32*chi13*dAdgrad_chi223122 + F22*F33*chi11*dAdgrad_chi231122 + F22*F33*chi12*dAdgrad_chi232122 + F22*F33*chi13*dAdgrad_chi233122 + F23*F31*chi11*dAdgrad_chi311122 + F23*F31*chi12*dAdgrad_chi312122 + F23*F31*chi13*dAdgrad_chi313122 + F23*F32*chi11*dAdgrad_chi321122 + F23*F32*chi12*dAdgrad_chi322122 + F23*F32*chi13*dAdgrad_chi323122 + F23*F33*chi11*dAdgrad_chi331122 + F23*F33*chi12*dAdgrad_chi332122 + F23*F33*chi13*dAdgrad_chi333122 + _231122;
        dadgrad_chi(16,2) = F21*F31*chi11*dAdgrad_chi111133 + F21*F31*chi12*dAdgrad_chi112133 + F21*F31*chi13*dAdgrad_chi113133 + F21*F32*chi11*dAdgrad_chi121133 + F21*F32*chi12*dAdgrad_chi122133 + F21*F32*chi13*dAdgrad_chi123133 + F21*F33*chi11*dAdgrad_chi131133 + F21*F33*chi12*dAdgrad_chi132133 + F21*F33*chi13*dAdgrad_chi133133 + F22*F31*chi11*dAdgrad_chi211133 + F22*F31*chi12*dAdgrad_chi212133 + F22*F31*chi13*dAdgrad_chi213133 + F22*F32*chi11*dAdgrad_chi221133 + F22*F32*chi12*dAdgrad_chi222133 + F22*F32*chi13*dAdgrad_chi223133 + F22*F33*chi11*dAdgrad_chi231133 + F22*F33*chi12*dAdgrad_chi232133 + F22*F33*chi13*dAdgrad_chi233133 + F23*F31*chi11*dAdgrad_chi311133 + F23*F31*chi12*dAdgrad_chi312133 + F23*F31*chi13*dAdgrad_chi313133 + F23*F32*chi11*dAdgrad_chi321133 + F23*F32*chi12*dAdgrad_chi322133 + F23*F32*chi13*dAdgrad_chi323133 + F23*F33*chi11*dAdgrad_chi331133 + F23*F33*chi12*dAdgrad_chi332133 + F23*F33*chi13*dAdgrad_chi333133 + _231133;
        dadgrad_chi(16,3) = F21*F31*chi11*dAdgrad_chi111123 + F21*F31*chi12*dAdgrad_chi112123 + F21*F31*chi13*dAdgrad_chi113123 + F21*F32*chi11*dAdgrad_chi121123 + F21*F32*chi12*dAdgrad_chi122123 + F21*F32*chi13*dAdgrad_chi123123 + F21*F33*chi11*dAdgrad_chi131123 + F21*F33*chi12*dAdgrad_chi132123 + F21*F33*chi13*dAdgrad_chi133123 + F22*F31*chi11*dAdgrad_chi211123 + F22*F31*chi12*dAdgrad_chi212123 + F22*F31*chi13*dAdgrad_chi213123 + F22*F32*chi11*dAdgrad_chi221123 + F22*F32*chi12*dAdgrad_chi222123 + F22*F32*chi13*dAdgrad_chi223123 + F22*F33*chi11*dAdgrad_chi231123 + F22*F33*chi12*dAdgrad_chi232123 + F22*F33*chi13*dAdgrad_chi233123 + F23*F31*chi11*dAdgrad_chi311123 + F23*F31*chi12*dAdgrad_chi312123 + F23*F31*chi13*dAdgrad_chi313123 + F23*F32*chi11*dAdgrad_chi321123 + F23*F32*chi12*dAdgrad_chi322123 + F23*F32*chi13*dAdgrad_chi323123 + F23*F33*chi11*dAdgrad_chi331123 + F23*F33*chi12*dAdgrad_chi332123 + F23*F33*chi13*dAdgrad_chi333123 + _231123;
        dadgrad_chi(16,4) = F21*F31*chi11*dAdgrad_chi111113 + F21*F31*chi12*dAdgrad_chi112113 + F21*F31*chi13*dAdgrad_chi113113 + F21*F32*chi11*dAdgrad_chi121113 + F21*F32*chi12*dAdgrad_chi122113 + F21*F32*chi13*dAdgrad_chi123113 + F21*F33*chi11*dAdgrad_chi131113 + F21*F33*chi12*dAdgrad_chi132113 + F21*F33*chi13*dAdgrad_chi133113 + F22*F31*chi11*dAdgrad_chi211113 + F22*F31*chi12*dAdgrad_chi212113 + F22*F31*chi13*dAdgrad_chi213113 + F22*F32*chi11*dAdgrad_chi221113 + F22*F32*chi12*dAdgrad_chi222113 + F22*F32*chi13*dAdgrad_chi223113 + F22*F33*chi11*dAdgrad_chi231113 + F22*F33*chi12*dAdgrad_chi232113 + F22*F33*chi13*dAdgrad_chi233113 + F23*F31*chi11*dAdgrad_chi311113 + F23*F31*chi12*dAdgrad_chi312113 + F23*F31*chi13*dAdgrad_chi313113 + F23*F32*chi11*dAdgrad_chi321113 + F23*F32*chi12*dAdgrad_chi322113 + F23*F32*chi13*dAdgrad_chi323113 + F23*F33*chi11*dAdgrad_chi331113 + F23*F33*chi12*dAdgrad_chi332113 + F23*F33*chi13*dAdgrad_chi333113 + _231113;
        dadgrad_chi(16,5) = F21*F31*chi11*dAdgrad_chi111112 + F21*F31*chi12*dAdgrad_chi112112 + F21*F31*chi13*dAdgrad_chi113112 + F21*F32*chi11*dAdgrad_chi121112 + F21*F32*chi12*dAdgrad_chi122112 + F21*F32*chi13*dAdgrad_chi123112 + F21*F33*chi11*dAdgrad_chi131112 + F21*F33*chi12*dAdgrad_chi132112 + F21*F33*chi13*dAdgrad_chi133112 + F22*F31*chi11*dAdgrad_chi211112 + F22*F31*chi12*dAdgrad_chi212112 + F22*F31*chi13*dAdgrad_chi213112 + F22*F32*chi11*dAdgrad_chi221112 + F22*F32*chi12*dAdgrad_chi222112 + F22*F32*chi13*dAdgrad_chi223112 + F22*F33*chi11*dAdgrad_chi231112 + F22*F33*chi12*dAdgrad_chi232112 + F22*F33*chi13*dAdgrad_chi233112 + F23*F31*chi11*dAdgrad_chi311112 + F23*F31*chi12*dAdgrad_chi312112 + F23*F31*chi13*dAdgrad_chi313112 + F23*F32*chi11*dAdgrad_chi321112 + F23*F32*chi12*dAdgrad_chi322112 + F23*F32*chi13*dAdgrad_chi323112 + F23*F33*chi11*dAdgrad_chi331112 + F23*F33*chi12*dAdgrad_chi332112 + F23*F33*chi13*dAdgrad_chi333112 + _231112;
        dadgrad_chi(16,6) = F21*F31*chi11*dAdgrad_chi111132 + F21*F31*chi12*dAdgrad_chi112132 + F21*F31*chi13*dAdgrad_chi113132 + F21*F32*chi11*dAdgrad_chi121132 + F21*F32*chi12*dAdgrad_chi122132 + F21*F32*chi13*dAdgrad_chi123132 + F21*F33*chi11*dAdgrad_chi131132 + F21*F33*chi12*dAdgrad_chi132132 + F21*F33*chi13*dAdgrad_chi133132 + F22*F31*chi11*dAdgrad_chi211132 + F22*F31*chi12*dAdgrad_chi212132 + F22*F31*chi13*dAdgrad_chi213132 + F22*F32*chi11*dAdgrad_chi221132 + F22*F32*chi12*dAdgrad_chi222132 + F22*F32*chi13*dAdgrad_chi223132 + F22*F33*chi11*dAdgrad_chi231132 + F22*F33*chi12*dAdgrad_chi232132 + F22*F33*chi13*dAdgrad_chi233132 + F23*F31*chi11*dAdgrad_chi311132 + F23*F31*chi12*dAdgrad_chi312132 + F23*F31*chi13*dAdgrad_chi313132 + F23*F32*chi11*dAdgrad_chi321132 + F23*F32*chi12*dAdgrad_chi322132 + F23*F32*chi13*dAdgrad_chi323132 + F23*F33*chi11*dAdgrad_chi331132 + F23*F33*chi12*dAdgrad_chi332132 + F23*F33*chi13*dAdgrad_chi333132 + _231132;
        dadgrad_chi(16,7) = F21*F31*chi11*dAdgrad_chi111131 + F21*F31*chi12*dAdgrad_chi112131 + F21*F31*chi13*dAdgrad_chi113131 + F21*F32*chi11*dAdgrad_chi121131 + F21*F32*chi12*dAdgrad_chi122131 + F21*F32*chi13*dAdgrad_chi123131 + F21*F33*chi11*dAdgrad_chi131131 + F21*F33*chi12*dAdgrad_chi132131 + F21*F33*chi13*dAdgrad_chi133131 + F22*F31*chi11*dAdgrad_chi211131 + F22*F31*chi12*dAdgrad_chi212131 + F22*F31*chi13*dAdgrad_chi213131 + F22*F32*chi11*dAdgrad_chi221131 + F22*F32*chi12*dAdgrad_chi222131 + F22*F32*chi13*dAdgrad_chi223131 + F22*F33*chi11*dAdgrad_chi231131 + F22*F33*chi12*dAdgrad_chi232131 + F22*F33*chi13*dAdgrad_chi233131 + F23*F31*chi11*dAdgrad_chi311131 + F23*F31*chi12*dAdgrad_chi312131 + F23*F31*chi13*dAdgrad_chi313131 + F23*F32*chi11*dAdgrad_chi321131 + F23*F32*chi12*dAdgrad_chi322131 + F23*F32*chi13*dAdgrad_chi323131 + F23*F33*chi11*dAdgrad_chi331131 + F23*F33*chi12*dAdgrad_chi332131 + F23*F33*chi13*dAdgrad_chi333131 + _231131;
        dadgrad_chi(16,8) = F21*F31*chi11*dAdgrad_chi111121 + F21*F31*chi12*dAdgrad_chi112121 + F21*F31*chi13*dAdgrad_chi113121 + F21*F32*chi11*dAdgrad_chi121121 + F21*F32*chi12*dAdgrad_chi122121 + F21*F32*chi13*dAdgrad_chi123121 + F21*F33*chi11*dAdgrad_chi131121 + F21*F33*chi12*dAdgrad_chi132121 + F21*F33*chi13*dAdgrad_chi133121 + F22*F31*chi11*dAdgrad_chi211121 + F22*F31*chi12*dAdgrad_chi212121 + F22*F31*chi13*dAdgrad_chi213121 + F22*F32*chi11*dAdgrad_chi221121 + F22*F32*chi12*dAdgrad_chi222121 + F22*F32*chi13*dAdgrad_chi223121 + F22*F33*chi11*dAdgrad_chi231121 + F22*F33*chi12*dAdgrad_chi232121 + F22*F33*chi13*dAdgrad_chi233121 + F23*F31*chi11*dAdgrad_chi311121 + F23*F31*chi12*dAdgrad_chi312121 + F23*F31*chi13*dAdgrad_chi313121 + F23*F32*chi11*dAdgrad_chi321121 + F23*F32*chi12*dAdgrad_chi322121 + F23*F32*chi13*dAdgrad_chi323121 + F23*F33*chi11*dAdgrad_chi331121 + F23*F33*chi12*dAdgrad_chi332121 + F23*F33*chi13*dAdgrad_chi333121 + _231121;
        dadgrad_chi(16,9) = F21*F31*chi11*dAdgrad_chi111211 + F21*F31*chi12*dAdgrad_chi112211 + F21*F31*chi13*dAdgrad_chi113211 + F21*F32*chi11*dAdgrad_chi121211 + F21*F32*chi12*dAdgrad_chi122211 + F21*F32*chi13*dAdgrad_chi123211 + F21*F33*chi11*dAdgrad_chi131211 + F21*F33*chi12*dAdgrad_chi132211 + F21*F33*chi13*dAdgrad_chi133211 + F22*F31*chi11*dAdgrad_chi211211 + F22*F31*chi12*dAdgrad_chi212211 + F22*F31*chi13*dAdgrad_chi213211 + F22*F32*chi11*dAdgrad_chi221211 + F22*F32*chi12*dAdgrad_chi222211 + F22*F32*chi13*dAdgrad_chi223211 + F22*F33*chi11*dAdgrad_chi231211 + F22*F33*chi12*dAdgrad_chi232211 + F22*F33*chi13*dAdgrad_chi233211 + F23*F31*chi11*dAdgrad_chi311211 + F23*F31*chi12*dAdgrad_chi312211 + F23*F31*chi13*dAdgrad_chi313211 + F23*F32*chi11*dAdgrad_chi321211 + F23*F32*chi12*dAdgrad_chi322211 + F23*F32*chi13*dAdgrad_chi323211 + F23*F33*chi11*dAdgrad_chi331211 + F23*F33*chi12*dAdgrad_chi332211 + F23*F33*chi13*dAdgrad_chi333211 + _231211;
        dadgrad_chi(16,10) = F21*F31*chi11*dAdgrad_chi111222 + F21*F31*chi12*dAdgrad_chi112222 + F21*F31*chi13*dAdgrad_chi113222 + F21*F32*chi11*dAdgrad_chi121222 + F21*F32*chi12*dAdgrad_chi122222 + F21*F32*chi13*dAdgrad_chi123222 + F21*F33*chi11*dAdgrad_chi131222 + F21*F33*chi12*dAdgrad_chi132222 + F21*F33*chi13*dAdgrad_chi133222 + F22*F31*chi11*dAdgrad_chi211222 + F22*F31*chi12*dAdgrad_chi212222 + F22*F31*chi13*dAdgrad_chi213222 + F22*F32*chi11*dAdgrad_chi221222 + F22*F32*chi12*dAdgrad_chi222222 + F22*F32*chi13*dAdgrad_chi223222 + F22*F33*chi11*dAdgrad_chi231222 + F22*F33*chi12*dAdgrad_chi232222 + F22*F33*chi13*dAdgrad_chi233222 + F23*F31*chi11*dAdgrad_chi311222 + F23*F31*chi12*dAdgrad_chi312222 + F23*F31*chi13*dAdgrad_chi313222 + F23*F32*chi11*dAdgrad_chi321222 + F23*F32*chi12*dAdgrad_chi322222 + F23*F32*chi13*dAdgrad_chi323222 + F23*F33*chi11*dAdgrad_chi331222 + F23*F33*chi12*dAdgrad_chi332222 + F23*F33*chi13*dAdgrad_chi333222 + _231222;
        dadgrad_chi(16,11) = F21*F31*chi11*dAdgrad_chi111233 + F21*F31*chi12*dAdgrad_chi112233 + F21*F31*chi13*dAdgrad_chi113233 + F21*F32*chi11*dAdgrad_chi121233 + F21*F32*chi12*dAdgrad_chi122233 + F21*F32*chi13*dAdgrad_chi123233 + F21*F33*chi11*dAdgrad_chi131233 + F21*F33*chi12*dAdgrad_chi132233 + F21*F33*chi13*dAdgrad_chi133233 + F22*F31*chi11*dAdgrad_chi211233 + F22*F31*chi12*dAdgrad_chi212233 + F22*F31*chi13*dAdgrad_chi213233 + F22*F32*chi11*dAdgrad_chi221233 + F22*F32*chi12*dAdgrad_chi222233 + F22*F32*chi13*dAdgrad_chi223233 + F22*F33*chi11*dAdgrad_chi231233 + F22*F33*chi12*dAdgrad_chi232233 + F22*F33*chi13*dAdgrad_chi233233 + F23*F31*chi11*dAdgrad_chi311233 + F23*F31*chi12*dAdgrad_chi312233 + F23*F31*chi13*dAdgrad_chi313233 + F23*F32*chi11*dAdgrad_chi321233 + F23*F32*chi12*dAdgrad_chi322233 + F23*F32*chi13*dAdgrad_chi323233 + F23*F33*chi11*dAdgrad_chi331233 + F23*F33*chi12*dAdgrad_chi332233 + F23*F33*chi13*dAdgrad_chi333233 + _231233;
        dadgrad_chi(16,12) = F21*F31*chi11*dAdgrad_chi111223 + F21*F31*chi12*dAdgrad_chi112223 + F21*F31*chi13*dAdgrad_chi113223 + F21*F32*chi11*dAdgrad_chi121223 + F21*F32*chi12*dAdgrad_chi122223 + F21*F32*chi13*dAdgrad_chi123223 + F21*F33*chi11*dAdgrad_chi131223 + F21*F33*chi12*dAdgrad_chi132223 + F21*F33*chi13*dAdgrad_chi133223 + F22*F31*chi11*dAdgrad_chi211223 + F22*F31*chi12*dAdgrad_chi212223 + F22*F31*chi13*dAdgrad_chi213223 + F22*F32*chi11*dAdgrad_chi221223 + F22*F32*chi12*dAdgrad_chi222223 + F22*F32*chi13*dAdgrad_chi223223 + F22*F33*chi11*dAdgrad_chi231223 + F22*F33*chi12*dAdgrad_chi232223 + F22*F33*chi13*dAdgrad_chi233223 + F23*F31*chi11*dAdgrad_chi311223 + F23*F31*chi12*dAdgrad_chi312223 + F23*F31*chi13*dAdgrad_chi313223 + F23*F32*chi11*dAdgrad_chi321223 + F23*F32*chi12*dAdgrad_chi322223 + F23*F32*chi13*dAdgrad_chi323223 + F23*F33*chi11*dAdgrad_chi331223 + F23*F33*chi12*dAdgrad_chi332223 + F23*F33*chi13*dAdgrad_chi333223 + _231223;
        dadgrad_chi(16,13) = F21*F31*chi11*dAdgrad_chi111213 + F21*F31*chi12*dAdgrad_chi112213 + F21*F31*chi13*dAdgrad_chi113213 + F21*F32*chi11*dAdgrad_chi121213 + F21*F32*chi12*dAdgrad_chi122213 + F21*F32*chi13*dAdgrad_chi123213 + F21*F33*chi11*dAdgrad_chi131213 + F21*F33*chi12*dAdgrad_chi132213 + F21*F33*chi13*dAdgrad_chi133213 + F22*F31*chi11*dAdgrad_chi211213 + F22*F31*chi12*dAdgrad_chi212213 + F22*F31*chi13*dAdgrad_chi213213 + F22*F32*chi11*dAdgrad_chi221213 + F22*F32*chi12*dAdgrad_chi222213 + F22*F32*chi13*dAdgrad_chi223213 + F22*F33*chi11*dAdgrad_chi231213 + F22*F33*chi12*dAdgrad_chi232213 + F22*F33*chi13*dAdgrad_chi233213 + F23*F31*chi11*dAdgrad_chi311213 + F23*F31*chi12*dAdgrad_chi312213 + F23*F31*chi13*dAdgrad_chi313213 + F23*F32*chi11*dAdgrad_chi321213 + F23*F32*chi12*dAdgrad_chi322213 + F23*F32*chi13*dAdgrad_chi323213 + F23*F33*chi11*dAdgrad_chi331213 + F23*F33*chi12*dAdgrad_chi332213 + F23*F33*chi13*dAdgrad_chi333213 + _231213;
        dadgrad_chi(16,14) = F21*F31*chi11*dAdgrad_chi111212 + F21*F31*chi12*dAdgrad_chi112212 + F21*F31*chi13*dAdgrad_chi113212 + F21*F32*chi11*dAdgrad_chi121212 + F21*F32*chi12*dAdgrad_chi122212 + F21*F32*chi13*dAdgrad_chi123212 + F21*F33*chi11*dAdgrad_chi131212 + F21*F33*chi12*dAdgrad_chi132212 + F21*F33*chi13*dAdgrad_chi133212 + F22*F31*chi11*dAdgrad_chi211212 + F22*F31*chi12*dAdgrad_chi212212 + F22*F31*chi13*dAdgrad_chi213212 + F22*F32*chi11*dAdgrad_chi221212 + F22*F32*chi12*dAdgrad_chi222212 + F22*F32*chi13*dAdgrad_chi223212 + F22*F33*chi11*dAdgrad_chi231212 + F22*F33*chi12*dAdgrad_chi232212 + F22*F33*chi13*dAdgrad_chi233212 + F23*F31*chi11*dAdgrad_chi311212 + F23*F31*chi12*dAdgrad_chi312212 + F23*F31*chi13*dAdgrad_chi313212 + F23*F32*chi11*dAdgrad_chi321212 + F23*F32*chi12*dAdgrad_chi322212 + F23*F32*chi13*dAdgrad_chi323212 + F23*F33*chi11*dAdgrad_chi331212 + F23*F33*chi12*dAdgrad_chi332212 + F23*F33*chi13*dAdgrad_chi333212 + _231212;
        dadgrad_chi(16,15) = F21*F31*chi11*dAdgrad_chi111232 + F21*F31*chi12*dAdgrad_chi112232 + F21*F31*chi13*dAdgrad_chi113232 + F21*F32*chi11*dAdgrad_chi121232 + F21*F32*chi12*dAdgrad_chi122232 + F21*F32*chi13*dAdgrad_chi123232 + F21*F33*chi11*dAdgrad_chi131232 + F21*F33*chi12*dAdgrad_chi132232 + F21*F33*chi13*dAdgrad_chi133232 + F22*F31*chi11*dAdgrad_chi211232 + F22*F31*chi12*dAdgrad_chi212232 + F22*F31*chi13*dAdgrad_chi213232 + F22*F32*chi11*dAdgrad_chi221232 + F22*F32*chi12*dAdgrad_chi222232 + F22*F32*chi13*dAdgrad_chi223232 + F22*F33*chi11*dAdgrad_chi231232 + F22*F33*chi12*dAdgrad_chi232232 + F22*F33*chi13*dAdgrad_chi233232 + F23*F31*chi11*dAdgrad_chi311232 + F23*F31*chi12*dAdgrad_chi312232 + F23*F31*chi13*dAdgrad_chi313232 + F23*F32*chi11*dAdgrad_chi321232 + F23*F32*chi12*dAdgrad_chi322232 + F23*F32*chi13*dAdgrad_chi323232 + F23*F33*chi11*dAdgrad_chi331232 + F23*F33*chi12*dAdgrad_chi332232 + F23*F33*chi13*dAdgrad_chi333232 + _231232;
        dadgrad_chi(16,16) = F21*F31*chi11*dAdgrad_chi111231 + F21*F31*chi12*dAdgrad_chi112231 + F21*F31*chi13*dAdgrad_chi113231 + F21*F32*chi11*dAdgrad_chi121231 + F21*F32*chi12*dAdgrad_chi122231 + F21*F32*chi13*dAdgrad_chi123231 + F21*F33*chi11*dAdgrad_chi131231 + F21*F33*chi12*dAdgrad_chi132231 + F21*F33*chi13*dAdgrad_chi133231 + F22*F31*chi11*dAdgrad_chi211231 + F22*F31*chi12*dAdgrad_chi212231 + F22*F31*chi13*dAdgrad_chi213231 + F22*F32*chi11*dAdgrad_chi221231 + F22*F32*chi12*dAdgrad_chi222231 + F22*F32*chi13*dAdgrad_chi223231 + F22*F33*chi11*dAdgrad_chi231231 + F22*F33*chi12*dAdgrad_chi232231 + F22*F33*chi13*dAdgrad_chi233231 + F23*F31*chi11*dAdgrad_chi311231 + F23*F31*chi12*dAdgrad_chi312231 + F23*F31*chi13*dAdgrad_chi313231 + F23*F32*chi11*dAdgrad_chi321231 + F23*F32*chi12*dAdgrad_chi322231 + F23*F32*chi13*dAdgrad_chi323231 + F23*F33*chi11*dAdgrad_chi331231 + F23*F33*chi12*dAdgrad_chi332231 + F23*F33*chi13*dAdgrad_chi333231 + _231231;
        dadgrad_chi(16,17) = F21*F31*chi11*dAdgrad_chi111221 + F21*F31*chi12*dAdgrad_chi112221 + F21*F31*chi13*dAdgrad_chi113221 + F21*F32*chi11*dAdgrad_chi121221 + F21*F32*chi12*dAdgrad_chi122221 + F21*F32*chi13*dAdgrad_chi123221 + F21*F33*chi11*dAdgrad_chi131221 + F21*F33*chi12*dAdgrad_chi132221 + F21*F33*chi13*dAdgrad_chi133221 + F22*F31*chi11*dAdgrad_chi211221 + F22*F31*chi12*dAdgrad_chi212221 + F22*F31*chi13*dAdgrad_chi213221 + F22*F32*chi11*dAdgrad_chi221221 + F22*F32*chi12*dAdgrad_chi222221 + F22*F32*chi13*dAdgrad_chi223221 + F22*F33*chi11*dAdgrad_chi231221 + F22*F33*chi12*dAdgrad_chi232221 + F22*F33*chi13*dAdgrad_chi233221 + F23*F31*chi11*dAdgrad_chi311221 + F23*F31*chi12*dAdgrad_chi312221 + F23*F31*chi13*dAdgrad_chi313221 + F23*F32*chi11*dAdgrad_chi321221 + F23*F32*chi12*dAdgrad_chi322221 + F23*F32*chi13*dAdgrad_chi323221 + F23*F33*chi11*dAdgrad_chi331221 + F23*F33*chi12*dAdgrad_chi332221 + F23*F33*chi13*dAdgrad_chi333221 + _231221;
        dadgrad_chi(16,18) = F21*F31*chi11*dAdgrad_chi111311 + F21*F31*chi12*dAdgrad_chi112311 + F21*F31*chi13*dAdgrad_chi113311 + F21*F32*chi11*dAdgrad_chi121311 + F21*F32*chi12*dAdgrad_chi122311 + F21*F32*chi13*dAdgrad_chi123311 + F21*F33*chi11*dAdgrad_chi131311 + F21*F33*chi12*dAdgrad_chi132311 + F21*F33*chi13*dAdgrad_chi133311 + F22*F31*chi11*dAdgrad_chi211311 + F22*F31*chi12*dAdgrad_chi212311 + F22*F31*chi13*dAdgrad_chi213311 + F22*F32*chi11*dAdgrad_chi221311 + F22*F32*chi12*dAdgrad_chi222311 + F22*F32*chi13*dAdgrad_chi223311 + F22*F33*chi11*dAdgrad_chi231311 + F22*F33*chi12*dAdgrad_chi232311 + F22*F33*chi13*dAdgrad_chi233311 + F23*F31*chi11*dAdgrad_chi311311 + F23*F31*chi12*dAdgrad_chi312311 + F23*F31*chi13*dAdgrad_chi313311 + F23*F32*chi11*dAdgrad_chi321311 + F23*F32*chi12*dAdgrad_chi322311 + F23*F32*chi13*dAdgrad_chi323311 + F23*F33*chi11*dAdgrad_chi331311 + F23*F33*chi12*dAdgrad_chi332311 + F23*F33*chi13*dAdgrad_chi333311 + _231311;
        dadgrad_chi(16,19) = F21*F31*chi11*dAdgrad_chi111322 + F21*F31*chi12*dAdgrad_chi112322 + F21*F31*chi13*dAdgrad_chi113322 + F21*F32*chi11*dAdgrad_chi121322 + F21*F32*chi12*dAdgrad_chi122322 + F21*F32*chi13*dAdgrad_chi123322 + F21*F33*chi11*dAdgrad_chi131322 + F21*F33*chi12*dAdgrad_chi132322 + F21*F33*chi13*dAdgrad_chi133322 + F22*F31*chi11*dAdgrad_chi211322 + F22*F31*chi12*dAdgrad_chi212322 + F22*F31*chi13*dAdgrad_chi213322 + F22*F32*chi11*dAdgrad_chi221322 + F22*F32*chi12*dAdgrad_chi222322 + F22*F32*chi13*dAdgrad_chi223322 + F22*F33*chi11*dAdgrad_chi231322 + F22*F33*chi12*dAdgrad_chi232322 + F22*F33*chi13*dAdgrad_chi233322 + F23*F31*chi11*dAdgrad_chi311322 + F23*F31*chi12*dAdgrad_chi312322 + F23*F31*chi13*dAdgrad_chi313322 + F23*F32*chi11*dAdgrad_chi321322 + F23*F32*chi12*dAdgrad_chi322322 + F23*F32*chi13*dAdgrad_chi323322 + F23*F33*chi11*dAdgrad_chi331322 + F23*F33*chi12*dAdgrad_chi332322 + F23*F33*chi13*dAdgrad_chi333322 + _231322;
        dadgrad_chi(16,20) = F21*F31*chi11*dAdgrad_chi111333 + F21*F31*chi12*dAdgrad_chi112333 + F21*F31*chi13*dAdgrad_chi113333 + F21*F32*chi11*dAdgrad_chi121333 + F21*F32*chi12*dAdgrad_chi122333 + F21*F32*chi13*dAdgrad_chi123333 + F21*F33*chi11*dAdgrad_chi131333 + F21*F33*chi12*dAdgrad_chi132333 + F21*F33*chi13*dAdgrad_chi133333 + F22*F31*chi11*dAdgrad_chi211333 + F22*F31*chi12*dAdgrad_chi212333 + F22*F31*chi13*dAdgrad_chi213333 + F22*F32*chi11*dAdgrad_chi221333 + F22*F32*chi12*dAdgrad_chi222333 + F22*F32*chi13*dAdgrad_chi223333 + F22*F33*chi11*dAdgrad_chi231333 + F22*F33*chi12*dAdgrad_chi232333 + F22*F33*chi13*dAdgrad_chi233333 + F23*F31*chi11*dAdgrad_chi311333 + F23*F31*chi12*dAdgrad_chi312333 + F23*F31*chi13*dAdgrad_chi313333 + F23*F32*chi11*dAdgrad_chi321333 + F23*F32*chi12*dAdgrad_chi322333 + F23*F32*chi13*dAdgrad_chi323333 + F23*F33*chi11*dAdgrad_chi331333 + F23*F33*chi12*dAdgrad_chi332333 + F23*F33*chi13*dAdgrad_chi333333 + _231333;
        dadgrad_chi(16,21) = F21*F31*chi11*dAdgrad_chi111323 + F21*F31*chi12*dAdgrad_chi112323 + F21*F31*chi13*dAdgrad_chi113323 + F21*F32*chi11*dAdgrad_chi121323 + F21*F32*chi12*dAdgrad_chi122323 + F21*F32*chi13*dAdgrad_chi123323 + F21*F33*chi11*dAdgrad_chi131323 + F21*F33*chi12*dAdgrad_chi132323 + F21*F33*chi13*dAdgrad_chi133323 + F22*F31*chi11*dAdgrad_chi211323 + F22*F31*chi12*dAdgrad_chi212323 + F22*F31*chi13*dAdgrad_chi213323 + F22*F32*chi11*dAdgrad_chi221323 + F22*F32*chi12*dAdgrad_chi222323 + F22*F32*chi13*dAdgrad_chi223323 + F22*F33*chi11*dAdgrad_chi231323 + F22*F33*chi12*dAdgrad_chi232323 + F22*F33*chi13*dAdgrad_chi233323 + F23*F31*chi11*dAdgrad_chi311323 + F23*F31*chi12*dAdgrad_chi312323 + F23*F31*chi13*dAdgrad_chi313323 + F23*F32*chi11*dAdgrad_chi321323 + F23*F32*chi12*dAdgrad_chi322323 + F23*F32*chi13*dAdgrad_chi323323 + F23*F33*chi11*dAdgrad_chi331323 + F23*F33*chi12*dAdgrad_chi332323 + F23*F33*chi13*dAdgrad_chi333323 + _231323;
        dadgrad_chi(16,22) = F21*F31*chi11*dAdgrad_chi111313 + F21*F31*chi12*dAdgrad_chi112313 + F21*F31*chi13*dAdgrad_chi113313 + F21*F32*chi11*dAdgrad_chi121313 + F21*F32*chi12*dAdgrad_chi122313 + F21*F32*chi13*dAdgrad_chi123313 + F21*F33*chi11*dAdgrad_chi131313 + F21*F33*chi12*dAdgrad_chi132313 + F21*F33*chi13*dAdgrad_chi133313 + F22*F31*chi11*dAdgrad_chi211313 + F22*F31*chi12*dAdgrad_chi212313 + F22*F31*chi13*dAdgrad_chi213313 + F22*F32*chi11*dAdgrad_chi221313 + F22*F32*chi12*dAdgrad_chi222313 + F22*F32*chi13*dAdgrad_chi223313 + F22*F33*chi11*dAdgrad_chi231313 + F22*F33*chi12*dAdgrad_chi232313 + F22*F33*chi13*dAdgrad_chi233313 + F23*F31*chi11*dAdgrad_chi311313 + F23*F31*chi12*dAdgrad_chi312313 + F23*F31*chi13*dAdgrad_chi313313 + F23*F32*chi11*dAdgrad_chi321313 + F23*F32*chi12*dAdgrad_chi322313 + F23*F32*chi13*dAdgrad_chi323313 + F23*F33*chi11*dAdgrad_chi331313 + F23*F33*chi12*dAdgrad_chi332313 + F23*F33*chi13*dAdgrad_chi333313 + _231313;
        dadgrad_chi(16,23) = F21*F31*chi11*dAdgrad_chi111312 + F21*F31*chi12*dAdgrad_chi112312 + F21*F31*chi13*dAdgrad_chi113312 + F21*F32*chi11*dAdgrad_chi121312 + F21*F32*chi12*dAdgrad_chi122312 + F21*F32*chi13*dAdgrad_chi123312 + F21*F33*chi11*dAdgrad_chi131312 + F21*F33*chi12*dAdgrad_chi132312 + F21*F33*chi13*dAdgrad_chi133312 + F22*F31*chi11*dAdgrad_chi211312 + F22*F31*chi12*dAdgrad_chi212312 + F22*F31*chi13*dAdgrad_chi213312 + F22*F32*chi11*dAdgrad_chi221312 + F22*F32*chi12*dAdgrad_chi222312 + F22*F32*chi13*dAdgrad_chi223312 + F22*F33*chi11*dAdgrad_chi231312 + F22*F33*chi12*dAdgrad_chi232312 + F22*F33*chi13*dAdgrad_chi233312 + F23*F31*chi11*dAdgrad_chi311312 + F23*F31*chi12*dAdgrad_chi312312 + F23*F31*chi13*dAdgrad_chi313312 + F23*F32*chi11*dAdgrad_chi321312 + F23*F32*chi12*dAdgrad_chi322312 + F23*F32*chi13*dAdgrad_chi323312 + F23*F33*chi11*dAdgrad_chi331312 + F23*F33*chi12*dAdgrad_chi332312 + F23*F33*chi13*dAdgrad_chi333312 + _231312;
        dadgrad_chi(16,24) = F21*F31*chi11*dAdgrad_chi111332 + F21*F31*chi12*dAdgrad_chi112332 + F21*F31*chi13*dAdgrad_chi113332 + F21*F32*chi11*dAdgrad_chi121332 + F21*F32*chi12*dAdgrad_chi122332 + F21*F32*chi13*dAdgrad_chi123332 + F21*F33*chi11*dAdgrad_chi131332 + F21*F33*chi12*dAdgrad_chi132332 + F21*F33*chi13*dAdgrad_chi133332 + F22*F31*chi11*dAdgrad_chi211332 + F22*F31*chi12*dAdgrad_chi212332 + F22*F31*chi13*dAdgrad_chi213332 + F22*F32*chi11*dAdgrad_chi221332 + F22*F32*chi12*dAdgrad_chi222332 + F22*F32*chi13*dAdgrad_chi223332 + F22*F33*chi11*dAdgrad_chi231332 + F22*F33*chi12*dAdgrad_chi232332 + F22*F33*chi13*dAdgrad_chi233332 + F23*F31*chi11*dAdgrad_chi311332 + F23*F31*chi12*dAdgrad_chi312332 + F23*F31*chi13*dAdgrad_chi313332 + F23*F32*chi11*dAdgrad_chi321332 + F23*F32*chi12*dAdgrad_chi322332 + F23*F32*chi13*dAdgrad_chi323332 + F23*F33*chi11*dAdgrad_chi331332 + F23*F33*chi12*dAdgrad_chi332332 + F23*F33*chi13*dAdgrad_chi333332 + _231332;
        dadgrad_chi(16,25) = F21*F31*chi11*dAdgrad_chi111331 + F21*F31*chi12*dAdgrad_chi112331 + F21*F31*chi13*dAdgrad_chi113331 + F21*F32*chi11*dAdgrad_chi121331 + F21*F32*chi12*dAdgrad_chi122331 + F21*F32*chi13*dAdgrad_chi123331 + F21*F33*chi11*dAdgrad_chi131331 + F21*F33*chi12*dAdgrad_chi132331 + F21*F33*chi13*dAdgrad_chi133331 + F22*F31*chi11*dAdgrad_chi211331 + F22*F31*chi12*dAdgrad_chi212331 + F22*F31*chi13*dAdgrad_chi213331 + F22*F32*chi11*dAdgrad_chi221331 + F22*F32*chi12*dAdgrad_chi222331 + F22*F32*chi13*dAdgrad_chi223331 + F22*F33*chi11*dAdgrad_chi231331 + F22*F33*chi12*dAdgrad_chi232331 + F22*F33*chi13*dAdgrad_chi233331 + F23*F31*chi11*dAdgrad_chi311331 + F23*F31*chi12*dAdgrad_chi312331 + F23*F31*chi13*dAdgrad_chi313331 + F23*F32*chi11*dAdgrad_chi321331 + F23*F32*chi12*dAdgrad_chi322331 + F23*F32*chi13*dAdgrad_chi323331 + F23*F33*chi11*dAdgrad_chi331331 + F23*F33*chi12*dAdgrad_chi332331 + F23*F33*chi13*dAdgrad_chi333331 + _231331;
        dadgrad_chi(16,26) = F21*F31*chi11*dAdgrad_chi111321 + F21*F31*chi12*dAdgrad_chi112321 + F21*F31*chi13*dAdgrad_chi113321 + F21*F32*chi11*dAdgrad_chi121321 + F21*F32*chi12*dAdgrad_chi122321 + F21*F32*chi13*dAdgrad_chi123321 + F21*F33*chi11*dAdgrad_chi131321 + F21*F33*chi12*dAdgrad_chi132321 + F21*F33*chi13*dAdgrad_chi133321 + F22*F31*chi11*dAdgrad_chi211321 + F22*F31*chi12*dAdgrad_chi212321 + F22*F31*chi13*dAdgrad_chi213321 + F22*F32*chi11*dAdgrad_chi221321 + F22*F32*chi12*dAdgrad_chi222321 + F22*F32*chi13*dAdgrad_chi223321 + F22*F33*chi11*dAdgrad_chi231321 + F22*F33*chi12*dAdgrad_chi232321 + F22*F33*chi13*dAdgrad_chi233321 + F23*F31*chi11*dAdgrad_chi311321 + F23*F31*chi12*dAdgrad_chi312321 + F23*F31*chi13*dAdgrad_chi313321 + F23*F32*chi11*dAdgrad_chi321321 + F23*F32*chi12*dAdgrad_chi322321 + F23*F32*chi13*dAdgrad_chi323321 + F23*F33*chi11*dAdgrad_chi331321 + F23*F33*chi12*dAdgrad_chi332321 + F23*F33*chi13*dAdgrad_chi333321 + _231321;
        dadgrad_chi(17,0) = F21*F21*chi11*dAdgrad_chi111111 + F21*F21*chi12*dAdgrad_chi112111 + F21*F21*chi13*dAdgrad_chi113111 + F21*F22*chi11*dAdgrad_chi121111 + F21*F22*chi11*dAdgrad_chi211111 + F21*F22*chi12*dAdgrad_chi122111 + F21*F22*chi12*dAdgrad_chi212111 + F21*F22*chi13*dAdgrad_chi123111 + F21*F22*chi13*dAdgrad_chi213111 + F21*F23*chi11*dAdgrad_chi131111 + F21*F23*chi11*dAdgrad_chi311111 + F21*F23*chi12*dAdgrad_chi132111 + F21*F23*chi12*dAdgrad_chi312111 + F21*F23*chi13*dAdgrad_chi133111 + F21*F23*chi13*dAdgrad_chi313111 + F22*F22*chi11*dAdgrad_chi221111 + F22*F22*chi12*dAdgrad_chi222111 + F22*F22*chi13*dAdgrad_chi223111 + F22*F23*chi11*dAdgrad_chi231111 + F22*F23*chi11*dAdgrad_chi321111 + F22*F23*chi12*dAdgrad_chi232111 + F22*F23*chi12*dAdgrad_chi322111 + F22*F23*chi13*dAdgrad_chi233111 + F22*F23*chi13*dAdgrad_chi323111 + F23*F23*chi11*dAdgrad_chi331111 + F23*F23*chi12*dAdgrad_chi332111 + F23*F23*chi13*dAdgrad_chi333111 + _221111;
        dadgrad_chi(17,1) = F21*F21*chi11*dAdgrad_chi111122 + F21*F21*chi12*dAdgrad_chi112122 + F21*F21*chi13*dAdgrad_chi113122 + F21*F22*chi11*dAdgrad_chi121122 + F21*F22*chi11*dAdgrad_chi211122 + F21*F22*chi12*dAdgrad_chi122122 + F21*F22*chi12*dAdgrad_chi212122 + F21*F22*chi13*dAdgrad_chi123122 + F21*F22*chi13*dAdgrad_chi213122 + F21*F23*chi11*dAdgrad_chi131122 + F21*F23*chi11*dAdgrad_chi311122 + F21*F23*chi12*dAdgrad_chi132122 + F21*F23*chi12*dAdgrad_chi312122 + F21*F23*chi13*dAdgrad_chi133122 + F21*F23*chi13*dAdgrad_chi313122 + F22*F22*chi11*dAdgrad_chi221122 + F22*F22*chi12*dAdgrad_chi222122 + F22*F22*chi13*dAdgrad_chi223122 + F22*F23*chi11*dAdgrad_chi231122 + F22*F23*chi11*dAdgrad_chi321122 + F22*F23*chi12*dAdgrad_chi232122 + F22*F23*chi12*dAdgrad_chi322122 + F22*F23*chi13*dAdgrad_chi233122 + F22*F23*chi13*dAdgrad_chi323122 + F23*F23*chi11*dAdgrad_chi331122 + F23*F23*chi12*dAdgrad_chi332122 + F23*F23*chi13*dAdgrad_chi333122 + _221122;
        dadgrad_chi(17,2) = F21*F21*chi11*dAdgrad_chi111133 + F21*F21*chi12*dAdgrad_chi112133 + F21*F21*chi13*dAdgrad_chi113133 + F21*F22*chi11*dAdgrad_chi121133 + F21*F22*chi11*dAdgrad_chi211133 + F21*F22*chi12*dAdgrad_chi122133 + F21*F22*chi12*dAdgrad_chi212133 + F21*F22*chi13*dAdgrad_chi123133 + F21*F22*chi13*dAdgrad_chi213133 + F21*F23*chi11*dAdgrad_chi131133 + F21*F23*chi11*dAdgrad_chi311133 + F21*F23*chi12*dAdgrad_chi132133 + F21*F23*chi12*dAdgrad_chi312133 + F21*F23*chi13*dAdgrad_chi133133 + F21*F23*chi13*dAdgrad_chi313133 + F22*F22*chi11*dAdgrad_chi221133 + F22*F22*chi12*dAdgrad_chi222133 + F22*F22*chi13*dAdgrad_chi223133 + F22*F23*chi11*dAdgrad_chi231133 + F22*F23*chi11*dAdgrad_chi321133 + F22*F23*chi12*dAdgrad_chi232133 + F22*F23*chi12*dAdgrad_chi322133 + F22*F23*chi13*dAdgrad_chi233133 + F22*F23*chi13*dAdgrad_chi323133 + F23*F23*chi11*dAdgrad_chi331133 + F23*F23*chi12*dAdgrad_chi332133 + F23*F23*chi13*dAdgrad_chi333133 + _221133;
        dadgrad_chi(17,3) = F21*F21*chi11*dAdgrad_chi111123 + F21*F21*chi12*dAdgrad_chi112123 + F21*F21*chi13*dAdgrad_chi113123 + F21*F22*chi11*dAdgrad_chi121123 + F21*F22*chi11*dAdgrad_chi211123 + F21*F22*chi12*dAdgrad_chi122123 + F21*F22*chi12*dAdgrad_chi212123 + F21*F22*chi13*dAdgrad_chi123123 + F21*F22*chi13*dAdgrad_chi213123 + F21*F23*chi11*dAdgrad_chi131123 + F21*F23*chi11*dAdgrad_chi311123 + F21*F23*chi12*dAdgrad_chi132123 + F21*F23*chi12*dAdgrad_chi312123 + F21*F23*chi13*dAdgrad_chi133123 + F21*F23*chi13*dAdgrad_chi313123 + F22*F22*chi11*dAdgrad_chi221123 + F22*F22*chi12*dAdgrad_chi222123 + F22*F22*chi13*dAdgrad_chi223123 + F22*F23*chi11*dAdgrad_chi231123 + F22*F23*chi11*dAdgrad_chi321123 + F22*F23*chi12*dAdgrad_chi232123 + F22*F23*chi12*dAdgrad_chi322123 + F22*F23*chi13*dAdgrad_chi233123 + F22*F23*chi13*dAdgrad_chi323123 + F23*F23*chi11*dAdgrad_chi331123 + F23*F23*chi12*dAdgrad_chi332123 + F23*F23*chi13*dAdgrad_chi333123 + _221123;
        dadgrad_chi(17,4) = F21*F21*chi11*dAdgrad_chi111113 + F21*F21*chi12*dAdgrad_chi112113 + F21*F21*chi13*dAdgrad_chi113113 + F21*F22*chi11*dAdgrad_chi121113 + F21*F22*chi11*dAdgrad_chi211113 + F21*F22*chi12*dAdgrad_chi122113 + F21*F22*chi12*dAdgrad_chi212113 + F21*F22*chi13*dAdgrad_chi123113 + F21*F22*chi13*dAdgrad_chi213113 + F21*F23*chi11*dAdgrad_chi131113 + F21*F23*chi11*dAdgrad_chi311113 + F21*F23*chi12*dAdgrad_chi132113 + F21*F23*chi12*dAdgrad_chi312113 + F21*F23*chi13*dAdgrad_chi133113 + F21*F23*chi13*dAdgrad_chi313113 + F22*F22*chi11*dAdgrad_chi221113 + F22*F22*chi12*dAdgrad_chi222113 + F22*F22*chi13*dAdgrad_chi223113 + F22*F23*chi11*dAdgrad_chi231113 + F22*F23*chi11*dAdgrad_chi321113 + F22*F23*chi12*dAdgrad_chi232113 + F22*F23*chi12*dAdgrad_chi322113 + F22*F23*chi13*dAdgrad_chi233113 + F22*F23*chi13*dAdgrad_chi323113 + F23*F23*chi11*dAdgrad_chi331113 + F23*F23*chi12*dAdgrad_chi332113 + F23*F23*chi13*dAdgrad_chi333113 + _221113;
        dadgrad_chi(17,5) = F21*F21*chi11*dAdgrad_chi111112 + F21*F21*chi12*dAdgrad_chi112112 + F21*F21*chi13*dAdgrad_chi113112 + F21*F22*chi11*dAdgrad_chi121112 + F21*F22*chi11*dAdgrad_chi211112 + F21*F22*chi12*dAdgrad_chi122112 + F21*F22*chi12*dAdgrad_chi212112 + F21*F22*chi13*dAdgrad_chi123112 + F21*F22*chi13*dAdgrad_chi213112 + F21*F23*chi11*dAdgrad_chi131112 + F21*F23*chi11*dAdgrad_chi311112 + F21*F23*chi12*dAdgrad_chi132112 + F21*F23*chi12*dAdgrad_chi312112 + F21*F23*chi13*dAdgrad_chi133112 + F21*F23*chi13*dAdgrad_chi313112 + F22*F22*chi11*dAdgrad_chi221112 + F22*F22*chi12*dAdgrad_chi222112 + F22*F22*chi13*dAdgrad_chi223112 + F22*F23*chi11*dAdgrad_chi231112 + F22*F23*chi11*dAdgrad_chi321112 + F22*F23*chi12*dAdgrad_chi232112 + F22*F23*chi12*dAdgrad_chi322112 + F22*F23*chi13*dAdgrad_chi233112 + F22*F23*chi13*dAdgrad_chi323112 + F23*F23*chi11*dAdgrad_chi331112 + F23*F23*chi12*dAdgrad_chi332112 + F23*F23*chi13*dAdgrad_chi333112 + _221112;
        dadgrad_chi(17,6) = F21*F21*chi11*dAdgrad_chi111132 + F21*F21*chi12*dAdgrad_chi112132 + F21*F21*chi13*dAdgrad_chi113132 + F21*F22*chi11*dAdgrad_chi121132 + F21*F22*chi11*dAdgrad_chi211132 + F21*F22*chi12*dAdgrad_chi122132 + F21*F22*chi12*dAdgrad_chi212132 + F21*F22*chi13*dAdgrad_chi123132 + F21*F22*chi13*dAdgrad_chi213132 + F21*F23*chi11*dAdgrad_chi131132 + F21*F23*chi11*dAdgrad_chi311132 + F21*F23*chi12*dAdgrad_chi132132 + F21*F23*chi12*dAdgrad_chi312132 + F21*F23*chi13*dAdgrad_chi133132 + F21*F23*chi13*dAdgrad_chi313132 + F22*F22*chi11*dAdgrad_chi221132 + F22*F22*chi12*dAdgrad_chi222132 + F22*F22*chi13*dAdgrad_chi223132 + F22*F23*chi11*dAdgrad_chi231132 + F22*F23*chi11*dAdgrad_chi321132 + F22*F23*chi12*dAdgrad_chi232132 + F22*F23*chi12*dAdgrad_chi322132 + F22*F23*chi13*dAdgrad_chi233132 + F22*F23*chi13*dAdgrad_chi323132 + F23*F23*chi11*dAdgrad_chi331132 + F23*F23*chi12*dAdgrad_chi332132 + F23*F23*chi13*dAdgrad_chi333132 + _221132;
        dadgrad_chi(17,7) = F21*F21*chi11*dAdgrad_chi111131 + F21*F21*chi12*dAdgrad_chi112131 + F21*F21*chi13*dAdgrad_chi113131 + F21*F22*chi11*dAdgrad_chi121131 + F21*F22*chi11*dAdgrad_chi211131 + F21*F22*chi12*dAdgrad_chi122131 + F21*F22*chi12*dAdgrad_chi212131 + F21*F22*chi13*dAdgrad_chi123131 + F21*F22*chi13*dAdgrad_chi213131 + F21*F23*chi11*dAdgrad_chi131131 + F21*F23*chi11*dAdgrad_chi311131 + F21*F23*chi12*dAdgrad_chi132131 + F21*F23*chi12*dAdgrad_chi312131 + F21*F23*chi13*dAdgrad_chi133131 + F21*F23*chi13*dAdgrad_chi313131 + F22*F22*chi11*dAdgrad_chi221131 + F22*F22*chi12*dAdgrad_chi222131 + F22*F22*chi13*dAdgrad_chi223131 + F22*F23*chi11*dAdgrad_chi231131 + F22*F23*chi11*dAdgrad_chi321131 + F22*F23*chi12*dAdgrad_chi232131 + F22*F23*chi12*dAdgrad_chi322131 + F22*F23*chi13*dAdgrad_chi233131 + F22*F23*chi13*dAdgrad_chi323131 + F23*F23*chi11*dAdgrad_chi331131 + F23*F23*chi12*dAdgrad_chi332131 + F23*F23*chi13*dAdgrad_chi333131 + _221131;
        dadgrad_chi(17,8) = F21*F21*chi11*dAdgrad_chi111121 + F21*F21*chi12*dAdgrad_chi112121 + F21*F21*chi13*dAdgrad_chi113121 + F21*F22*chi11*dAdgrad_chi121121 + F21*F22*chi11*dAdgrad_chi211121 + F21*F22*chi12*dAdgrad_chi122121 + F21*F22*chi12*dAdgrad_chi212121 + F21*F22*chi13*dAdgrad_chi123121 + F21*F22*chi13*dAdgrad_chi213121 + F21*F23*chi11*dAdgrad_chi131121 + F21*F23*chi11*dAdgrad_chi311121 + F21*F23*chi12*dAdgrad_chi132121 + F21*F23*chi12*dAdgrad_chi312121 + F21*F23*chi13*dAdgrad_chi133121 + F21*F23*chi13*dAdgrad_chi313121 + F22*F22*chi11*dAdgrad_chi221121 + F22*F22*chi12*dAdgrad_chi222121 + F22*F22*chi13*dAdgrad_chi223121 + F22*F23*chi11*dAdgrad_chi231121 + F22*F23*chi11*dAdgrad_chi321121 + F22*F23*chi12*dAdgrad_chi232121 + F22*F23*chi12*dAdgrad_chi322121 + F22*F23*chi13*dAdgrad_chi233121 + F22*F23*chi13*dAdgrad_chi323121 + F23*F23*chi11*dAdgrad_chi331121 + F23*F23*chi12*dAdgrad_chi332121 + F23*F23*chi13*dAdgrad_chi333121 + _221121;
        dadgrad_chi(17,9) = F21*F21*chi11*dAdgrad_chi111211 + F21*F21*chi12*dAdgrad_chi112211 + F21*F21*chi13*dAdgrad_chi113211 + F21*F22*chi11*dAdgrad_chi121211 + F21*F22*chi11*dAdgrad_chi211211 + F21*F22*chi12*dAdgrad_chi122211 + F21*F22*chi12*dAdgrad_chi212211 + F21*F22*chi13*dAdgrad_chi123211 + F21*F22*chi13*dAdgrad_chi213211 + F21*F23*chi11*dAdgrad_chi131211 + F21*F23*chi11*dAdgrad_chi311211 + F21*F23*chi12*dAdgrad_chi132211 + F21*F23*chi12*dAdgrad_chi312211 + F21*F23*chi13*dAdgrad_chi133211 + F21*F23*chi13*dAdgrad_chi313211 + F22*F22*chi11*dAdgrad_chi221211 + F22*F22*chi12*dAdgrad_chi222211 + F22*F22*chi13*dAdgrad_chi223211 + F22*F23*chi11*dAdgrad_chi231211 + F22*F23*chi11*dAdgrad_chi321211 + F22*F23*chi12*dAdgrad_chi232211 + F22*F23*chi12*dAdgrad_chi322211 + F22*F23*chi13*dAdgrad_chi233211 + F22*F23*chi13*dAdgrad_chi323211 + F23*F23*chi11*dAdgrad_chi331211 + F23*F23*chi12*dAdgrad_chi332211 + F23*F23*chi13*dAdgrad_chi333211 + _221211;
        dadgrad_chi(17,10) = F21*F21*chi11*dAdgrad_chi111222 + F21*F21*chi12*dAdgrad_chi112222 + F21*F21*chi13*dAdgrad_chi113222 + F21*F22*chi11*dAdgrad_chi121222 + F21*F22*chi11*dAdgrad_chi211222 + F21*F22*chi12*dAdgrad_chi122222 + F21*F22*chi12*dAdgrad_chi212222 + F21*F22*chi13*dAdgrad_chi123222 + F21*F22*chi13*dAdgrad_chi213222 + F21*F23*chi11*dAdgrad_chi131222 + F21*F23*chi11*dAdgrad_chi311222 + F21*F23*chi12*dAdgrad_chi132222 + F21*F23*chi12*dAdgrad_chi312222 + F21*F23*chi13*dAdgrad_chi133222 + F21*F23*chi13*dAdgrad_chi313222 + F22*F22*chi11*dAdgrad_chi221222 + F22*F22*chi12*dAdgrad_chi222222 + F22*F22*chi13*dAdgrad_chi223222 + F22*F23*chi11*dAdgrad_chi231222 + F22*F23*chi11*dAdgrad_chi321222 + F22*F23*chi12*dAdgrad_chi232222 + F22*F23*chi12*dAdgrad_chi322222 + F22*F23*chi13*dAdgrad_chi233222 + F22*F23*chi13*dAdgrad_chi323222 + F23*F23*chi11*dAdgrad_chi331222 + F23*F23*chi12*dAdgrad_chi332222 + F23*F23*chi13*dAdgrad_chi333222 + _221222;
        dadgrad_chi(17,11) = F21*F21*chi11*dAdgrad_chi111233 + F21*F21*chi12*dAdgrad_chi112233 + F21*F21*chi13*dAdgrad_chi113233 + F21*F22*chi11*dAdgrad_chi121233 + F21*F22*chi11*dAdgrad_chi211233 + F21*F22*chi12*dAdgrad_chi122233 + F21*F22*chi12*dAdgrad_chi212233 + F21*F22*chi13*dAdgrad_chi123233 + F21*F22*chi13*dAdgrad_chi213233 + F21*F23*chi11*dAdgrad_chi131233 + F21*F23*chi11*dAdgrad_chi311233 + F21*F23*chi12*dAdgrad_chi132233 + F21*F23*chi12*dAdgrad_chi312233 + F21*F23*chi13*dAdgrad_chi133233 + F21*F23*chi13*dAdgrad_chi313233 + F22*F22*chi11*dAdgrad_chi221233 + F22*F22*chi12*dAdgrad_chi222233 + F22*F22*chi13*dAdgrad_chi223233 + F22*F23*chi11*dAdgrad_chi231233 + F22*F23*chi11*dAdgrad_chi321233 + F22*F23*chi12*dAdgrad_chi232233 + F22*F23*chi12*dAdgrad_chi322233 + F22*F23*chi13*dAdgrad_chi233233 + F22*F23*chi13*dAdgrad_chi323233 + F23*F23*chi11*dAdgrad_chi331233 + F23*F23*chi12*dAdgrad_chi332233 + F23*F23*chi13*dAdgrad_chi333233 + _221233;
        dadgrad_chi(17,12) = F21*F21*chi11*dAdgrad_chi111223 + F21*F21*chi12*dAdgrad_chi112223 + F21*F21*chi13*dAdgrad_chi113223 + F21*F22*chi11*dAdgrad_chi121223 + F21*F22*chi11*dAdgrad_chi211223 + F21*F22*chi12*dAdgrad_chi122223 + F21*F22*chi12*dAdgrad_chi212223 + F21*F22*chi13*dAdgrad_chi123223 + F21*F22*chi13*dAdgrad_chi213223 + F21*F23*chi11*dAdgrad_chi131223 + F21*F23*chi11*dAdgrad_chi311223 + F21*F23*chi12*dAdgrad_chi132223 + F21*F23*chi12*dAdgrad_chi312223 + F21*F23*chi13*dAdgrad_chi133223 + F21*F23*chi13*dAdgrad_chi313223 + F22*F22*chi11*dAdgrad_chi221223 + F22*F22*chi12*dAdgrad_chi222223 + F22*F22*chi13*dAdgrad_chi223223 + F22*F23*chi11*dAdgrad_chi231223 + F22*F23*chi11*dAdgrad_chi321223 + F22*F23*chi12*dAdgrad_chi232223 + F22*F23*chi12*dAdgrad_chi322223 + F22*F23*chi13*dAdgrad_chi233223 + F22*F23*chi13*dAdgrad_chi323223 + F23*F23*chi11*dAdgrad_chi331223 + F23*F23*chi12*dAdgrad_chi332223 + F23*F23*chi13*dAdgrad_chi333223 + _221223;
        dadgrad_chi(17,13) = F21*F21*chi11*dAdgrad_chi111213 + F21*F21*chi12*dAdgrad_chi112213 + F21*F21*chi13*dAdgrad_chi113213 + F21*F22*chi11*dAdgrad_chi121213 + F21*F22*chi11*dAdgrad_chi211213 + F21*F22*chi12*dAdgrad_chi122213 + F21*F22*chi12*dAdgrad_chi212213 + F21*F22*chi13*dAdgrad_chi123213 + F21*F22*chi13*dAdgrad_chi213213 + F21*F23*chi11*dAdgrad_chi131213 + F21*F23*chi11*dAdgrad_chi311213 + F21*F23*chi12*dAdgrad_chi132213 + F21*F23*chi12*dAdgrad_chi312213 + F21*F23*chi13*dAdgrad_chi133213 + F21*F23*chi13*dAdgrad_chi313213 + F22*F22*chi11*dAdgrad_chi221213 + F22*F22*chi12*dAdgrad_chi222213 + F22*F22*chi13*dAdgrad_chi223213 + F22*F23*chi11*dAdgrad_chi231213 + F22*F23*chi11*dAdgrad_chi321213 + F22*F23*chi12*dAdgrad_chi232213 + F22*F23*chi12*dAdgrad_chi322213 + F22*F23*chi13*dAdgrad_chi233213 + F22*F23*chi13*dAdgrad_chi323213 + F23*F23*chi11*dAdgrad_chi331213 + F23*F23*chi12*dAdgrad_chi332213 + F23*F23*chi13*dAdgrad_chi333213 + _221213;
        dadgrad_chi(17,14) = F21*F21*chi11*dAdgrad_chi111212 + F21*F21*chi12*dAdgrad_chi112212 + F21*F21*chi13*dAdgrad_chi113212 + F21*F22*chi11*dAdgrad_chi121212 + F21*F22*chi11*dAdgrad_chi211212 + F21*F22*chi12*dAdgrad_chi122212 + F21*F22*chi12*dAdgrad_chi212212 + F21*F22*chi13*dAdgrad_chi123212 + F21*F22*chi13*dAdgrad_chi213212 + F21*F23*chi11*dAdgrad_chi131212 + F21*F23*chi11*dAdgrad_chi311212 + F21*F23*chi12*dAdgrad_chi132212 + F21*F23*chi12*dAdgrad_chi312212 + F21*F23*chi13*dAdgrad_chi133212 + F21*F23*chi13*dAdgrad_chi313212 + F22*F22*chi11*dAdgrad_chi221212 + F22*F22*chi12*dAdgrad_chi222212 + F22*F22*chi13*dAdgrad_chi223212 + F22*F23*chi11*dAdgrad_chi231212 + F22*F23*chi11*dAdgrad_chi321212 + F22*F23*chi12*dAdgrad_chi232212 + F22*F23*chi12*dAdgrad_chi322212 + F22*F23*chi13*dAdgrad_chi233212 + F22*F23*chi13*dAdgrad_chi323212 + F23*F23*chi11*dAdgrad_chi331212 + F23*F23*chi12*dAdgrad_chi332212 + F23*F23*chi13*dAdgrad_chi333212 + _221212;
        dadgrad_chi(17,15) = F21*F21*chi11*dAdgrad_chi111232 + F21*F21*chi12*dAdgrad_chi112232 + F21*F21*chi13*dAdgrad_chi113232 + F21*F22*chi11*dAdgrad_chi121232 + F21*F22*chi11*dAdgrad_chi211232 + F21*F22*chi12*dAdgrad_chi122232 + F21*F22*chi12*dAdgrad_chi212232 + F21*F22*chi13*dAdgrad_chi123232 + F21*F22*chi13*dAdgrad_chi213232 + F21*F23*chi11*dAdgrad_chi131232 + F21*F23*chi11*dAdgrad_chi311232 + F21*F23*chi12*dAdgrad_chi132232 + F21*F23*chi12*dAdgrad_chi312232 + F21*F23*chi13*dAdgrad_chi133232 + F21*F23*chi13*dAdgrad_chi313232 + F22*F22*chi11*dAdgrad_chi221232 + F22*F22*chi12*dAdgrad_chi222232 + F22*F22*chi13*dAdgrad_chi223232 + F22*F23*chi11*dAdgrad_chi231232 + F22*F23*chi11*dAdgrad_chi321232 + F22*F23*chi12*dAdgrad_chi232232 + F22*F23*chi12*dAdgrad_chi322232 + F22*F23*chi13*dAdgrad_chi233232 + F22*F23*chi13*dAdgrad_chi323232 + F23*F23*chi11*dAdgrad_chi331232 + F23*F23*chi12*dAdgrad_chi332232 + F23*F23*chi13*dAdgrad_chi333232 + _221232;
        dadgrad_chi(17,16) = F21*F21*chi11*dAdgrad_chi111231 + F21*F21*chi12*dAdgrad_chi112231 + F21*F21*chi13*dAdgrad_chi113231 + F21*F22*chi11*dAdgrad_chi121231 + F21*F22*chi11*dAdgrad_chi211231 + F21*F22*chi12*dAdgrad_chi122231 + F21*F22*chi12*dAdgrad_chi212231 + F21*F22*chi13*dAdgrad_chi123231 + F21*F22*chi13*dAdgrad_chi213231 + F21*F23*chi11*dAdgrad_chi131231 + F21*F23*chi11*dAdgrad_chi311231 + F21*F23*chi12*dAdgrad_chi132231 + F21*F23*chi12*dAdgrad_chi312231 + F21*F23*chi13*dAdgrad_chi133231 + F21*F23*chi13*dAdgrad_chi313231 + F22*F22*chi11*dAdgrad_chi221231 + F22*F22*chi12*dAdgrad_chi222231 + F22*F22*chi13*dAdgrad_chi223231 + F22*F23*chi11*dAdgrad_chi231231 + F22*F23*chi11*dAdgrad_chi321231 + F22*F23*chi12*dAdgrad_chi232231 + F22*F23*chi12*dAdgrad_chi322231 + F22*F23*chi13*dAdgrad_chi233231 + F22*F23*chi13*dAdgrad_chi323231 + F23*F23*chi11*dAdgrad_chi331231 + F23*F23*chi12*dAdgrad_chi332231 + F23*F23*chi13*dAdgrad_chi333231 + _221231;
        dadgrad_chi(17,17) = F21*F21*chi11*dAdgrad_chi111221 + F21*F21*chi12*dAdgrad_chi112221 + F21*F21*chi13*dAdgrad_chi113221 + F21*F22*chi11*dAdgrad_chi121221 + F21*F22*chi11*dAdgrad_chi211221 + F21*F22*chi12*dAdgrad_chi122221 + F21*F22*chi12*dAdgrad_chi212221 + F21*F22*chi13*dAdgrad_chi123221 + F21*F22*chi13*dAdgrad_chi213221 + F21*F23*chi11*dAdgrad_chi131221 + F21*F23*chi11*dAdgrad_chi311221 + F21*F23*chi12*dAdgrad_chi132221 + F21*F23*chi12*dAdgrad_chi312221 + F21*F23*chi13*dAdgrad_chi133221 + F21*F23*chi13*dAdgrad_chi313221 + F22*F22*chi11*dAdgrad_chi221221 + F22*F22*chi12*dAdgrad_chi222221 + F22*F22*chi13*dAdgrad_chi223221 + F22*F23*chi11*dAdgrad_chi231221 + F22*F23*chi11*dAdgrad_chi321221 + F22*F23*chi12*dAdgrad_chi232221 + F22*F23*chi12*dAdgrad_chi322221 + F22*F23*chi13*dAdgrad_chi233221 + F22*F23*chi13*dAdgrad_chi323221 + F23*F23*chi11*dAdgrad_chi331221 + F23*F23*chi12*dAdgrad_chi332221 + F23*F23*chi13*dAdgrad_chi333221 + _221221;
        dadgrad_chi(17,18) = F21*F21*chi11*dAdgrad_chi111311 + F21*F21*chi12*dAdgrad_chi112311 + F21*F21*chi13*dAdgrad_chi113311 + F21*F22*chi11*dAdgrad_chi121311 + F21*F22*chi11*dAdgrad_chi211311 + F21*F22*chi12*dAdgrad_chi122311 + F21*F22*chi12*dAdgrad_chi212311 + F21*F22*chi13*dAdgrad_chi123311 + F21*F22*chi13*dAdgrad_chi213311 + F21*F23*chi11*dAdgrad_chi131311 + F21*F23*chi11*dAdgrad_chi311311 + F21*F23*chi12*dAdgrad_chi132311 + F21*F23*chi12*dAdgrad_chi312311 + F21*F23*chi13*dAdgrad_chi133311 + F21*F23*chi13*dAdgrad_chi313311 + F22*F22*chi11*dAdgrad_chi221311 + F22*F22*chi12*dAdgrad_chi222311 + F22*F22*chi13*dAdgrad_chi223311 + F22*F23*chi11*dAdgrad_chi231311 + F22*F23*chi11*dAdgrad_chi321311 + F22*F23*chi12*dAdgrad_chi232311 + F22*F23*chi12*dAdgrad_chi322311 + F22*F23*chi13*dAdgrad_chi233311 + F22*F23*chi13*dAdgrad_chi323311 + F23*F23*chi11*dAdgrad_chi331311 + F23*F23*chi12*dAdgrad_chi332311 + F23*F23*chi13*dAdgrad_chi333311 + _221311;
        dadgrad_chi(17,19) = F21*F21*chi11*dAdgrad_chi111322 + F21*F21*chi12*dAdgrad_chi112322 + F21*F21*chi13*dAdgrad_chi113322 + F21*F22*chi11*dAdgrad_chi121322 + F21*F22*chi11*dAdgrad_chi211322 + F21*F22*chi12*dAdgrad_chi122322 + F21*F22*chi12*dAdgrad_chi212322 + F21*F22*chi13*dAdgrad_chi123322 + F21*F22*chi13*dAdgrad_chi213322 + F21*F23*chi11*dAdgrad_chi131322 + F21*F23*chi11*dAdgrad_chi311322 + F21*F23*chi12*dAdgrad_chi132322 + F21*F23*chi12*dAdgrad_chi312322 + F21*F23*chi13*dAdgrad_chi133322 + F21*F23*chi13*dAdgrad_chi313322 + F22*F22*chi11*dAdgrad_chi221322 + F22*F22*chi12*dAdgrad_chi222322 + F22*F22*chi13*dAdgrad_chi223322 + F22*F23*chi11*dAdgrad_chi231322 + F22*F23*chi11*dAdgrad_chi321322 + F22*F23*chi12*dAdgrad_chi232322 + F22*F23*chi12*dAdgrad_chi322322 + F22*F23*chi13*dAdgrad_chi233322 + F22*F23*chi13*dAdgrad_chi323322 + F23*F23*chi11*dAdgrad_chi331322 + F23*F23*chi12*dAdgrad_chi332322 + F23*F23*chi13*dAdgrad_chi333322 + _221322;
        dadgrad_chi(17,20) = F21*F21*chi11*dAdgrad_chi111333 + F21*F21*chi12*dAdgrad_chi112333 + F21*F21*chi13*dAdgrad_chi113333 + F21*F22*chi11*dAdgrad_chi121333 + F21*F22*chi11*dAdgrad_chi211333 + F21*F22*chi12*dAdgrad_chi122333 + F21*F22*chi12*dAdgrad_chi212333 + F21*F22*chi13*dAdgrad_chi123333 + F21*F22*chi13*dAdgrad_chi213333 + F21*F23*chi11*dAdgrad_chi131333 + F21*F23*chi11*dAdgrad_chi311333 + F21*F23*chi12*dAdgrad_chi132333 + F21*F23*chi12*dAdgrad_chi312333 + F21*F23*chi13*dAdgrad_chi133333 + F21*F23*chi13*dAdgrad_chi313333 + F22*F22*chi11*dAdgrad_chi221333 + F22*F22*chi12*dAdgrad_chi222333 + F22*F22*chi13*dAdgrad_chi223333 + F22*F23*chi11*dAdgrad_chi231333 + F22*F23*chi11*dAdgrad_chi321333 + F22*F23*chi12*dAdgrad_chi232333 + F22*F23*chi12*dAdgrad_chi322333 + F22*F23*chi13*dAdgrad_chi233333 + F22*F23*chi13*dAdgrad_chi323333 + F23*F23*chi11*dAdgrad_chi331333 + F23*F23*chi12*dAdgrad_chi332333 + F23*F23*chi13*dAdgrad_chi333333 + _221333;
        dadgrad_chi(17,21) = F21*F21*chi11*dAdgrad_chi111323 + F21*F21*chi12*dAdgrad_chi112323 + F21*F21*chi13*dAdgrad_chi113323 + F21*F22*chi11*dAdgrad_chi121323 + F21*F22*chi11*dAdgrad_chi211323 + F21*F22*chi12*dAdgrad_chi122323 + F21*F22*chi12*dAdgrad_chi212323 + F21*F22*chi13*dAdgrad_chi123323 + F21*F22*chi13*dAdgrad_chi213323 + F21*F23*chi11*dAdgrad_chi131323 + F21*F23*chi11*dAdgrad_chi311323 + F21*F23*chi12*dAdgrad_chi132323 + F21*F23*chi12*dAdgrad_chi312323 + F21*F23*chi13*dAdgrad_chi133323 + F21*F23*chi13*dAdgrad_chi313323 + F22*F22*chi11*dAdgrad_chi221323 + F22*F22*chi12*dAdgrad_chi222323 + F22*F22*chi13*dAdgrad_chi223323 + F22*F23*chi11*dAdgrad_chi231323 + F22*F23*chi11*dAdgrad_chi321323 + F22*F23*chi12*dAdgrad_chi232323 + F22*F23*chi12*dAdgrad_chi322323 + F22*F23*chi13*dAdgrad_chi233323 + F22*F23*chi13*dAdgrad_chi323323 + F23*F23*chi11*dAdgrad_chi331323 + F23*F23*chi12*dAdgrad_chi332323 + F23*F23*chi13*dAdgrad_chi333323 + _221323;
        dadgrad_chi(17,22) = F21*F21*chi11*dAdgrad_chi111313 + F21*F21*chi12*dAdgrad_chi112313 + F21*F21*chi13*dAdgrad_chi113313 + F21*F22*chi11*dAdgrad_chi121313 + F21*F22*chi11*dAdgrad_chi211313 + F21*F22*chi12*dAdgrad_chi122313 + F21*F22*chi12*dAdgrad_chi212313 + F21*F22*chi13*dAdgrad_chi123313 + F21*F22*chi13*dAdgrad_chi213313 + F21*F23*chi11*dAdgrad_chi131313 + F21*F23*chi11*dAdgrad_chi311313 + F21*F23*chi12*dAdgrad_chi132313 + F21*F23*chi12*dAdgrad_chi312313 + F21*F23*chi13*dAdgrad_chi133313 + F21*F23*chi13*dAdgrad_chi313313 + F22*F22*chi11*dAdgrad_chi221313 + F22*F22*chi12*dAdgrad_chi222313 + F22*F22*chi13*dAdgrad_chi223313 + F22*F23*chi11*dAdgrad_chi231313 + F22*F23*chi11*dAdgrad_chi321313 + F22*F23*chi12*dAdgrad_chi232313 + F22*F23*chi12*dAdgrad_chi322313 + F22*F23*chi13*dAdgrad_chi233313 + F22*F23*chi13*dAdgrad_chi323313 + F23*F23*chi11*dAdgrad_chi331313 + F23*F23*chi12*dAdgrad_chi332313 + F23*F23*chi13*dAdgrad_chi333313 + _221313;
        dadgrad_chi(17,23) = F21*F21*chi11*dAdgrad_chi111312 + F21*F21*chi12*dAdgrad_chi112312 + F21*F21*chi13*dAdgrad_chi113312 + F21*F22*chi11*dAdgrad_chi121312 + F21*F22*chi11*dAdgrad_chi211312 + F21*F22*chi12*dAdgrad_chi122312 + F21*F22*chi12*dAdgrad_chi212312 + F21*F22*chi13*dAdgrad_chi123312 + F21*F22*chi13*dAdgrad_chi213312 + F21*F23*chi11*dAdgrad_chi131312 + F21*F23*chi11*dAdgrad_chi311312 + F21*F23*chi12*dAdgrad_chi132312 + F21*F23*chi12*dAdgrad_chi312312 + F21*F23*chi13*dAdgrad_chi133312 + F21*F23*chi13*dAdgrad_chi313312 + F22*F22*chi11*dAdgrad_chi221312 + F22*F22*chi12*dAdgrad_chi222312 + F22*F22*chi13*dAdgrad_chi223312 + F22*F23*chi11*dAdgrad_chi231312 + F22*F23*chi11*dAdgrad_chi321312 + F22*F23*chi12*dAdgrad_chi232312 + F22*F23*chi12*dAdgrad_chi322312 + F22*F23*chi13*dAdgrad_chi233312 + F22*F23*chi13*dAdgrad_chi323312 + F23*F23*chi11*dAdgrad_chi331312 + F23*F23*chi12*dAdgrad_chi332312 + F23*F23*chi13*dAdgrad_chi333312 + _221312;
        dadgrad_chi(17,24) = F21*F21*chi11*dAdgrad_chi111332 + F21*F21*chi12*dAdgrad_chi112332 + F21*F21*chi13*dAdgrad_chi113332 + F21*F22*chi11*dAdgrad_chi121332 + F21*F22*chi11*dAdgrad_chi211332 + F21*F22*chi12*dAdgrad_chi122332 + F21*F22*chi12*dAdgrad_chi212332 + F21*F22*chi13*dAdgrad_chi123332 + F21*F22*chi13*dAdgrad_chi213332 + F21*F23*chi11*dAdgrad_chi131332 + F21*F23*chi11*dAdgrad_chi311332 + F21*F23*chi12*dAdgrad_chi132332 + F21*F23*chi12*dAdgrad_chi312332 + F21*F23*chi13*dAdgrad_chi133332 + F21*F23*chi13*dAdgrad_chi313332 + F22*F22*chi11*dAdgrad_chi221332 + F22*F22*chi12*dAdgrad_chi222332 + F22*F22*chi13*dAdgrad_chi223332 + F22*F23*chi11*dAdgrad_chi231332 + F22*F23*chi11*dAdgrad_chi321332 + F22*F23*chi12*dAdgrad_chi232332 + F22*F23*chi12*dAdgrad_chi322332 + F22*F23*chi13*dAdgrad_chi233332 + F22*F23*chi13*dAdgrad_chi323332 + F23*F23*chi11*dAdgrad_chi331332 + F23*F23*chi12*dAdgrad_chi332332 + F23*F23*chi13*dAdgrad_chi333332 + _221332;
        dadgrad_chi(17,25) = F21*F21*chi11*dAdgrad_chi111331 + F21*F21*chi12*dAdgrad_chi112331 + F21*F21*chi13*dAdgrad_chi113331 + F21*F22*chi11*dAdgrad_chi121331 + F21*F22*chi11*dAdgrad_chi211331 + F21*F22*chi12*dAdgrad_chi122331 + F21*F22*chi12*dAdgrad_chi212331 + F21*F22*chi13*dAdgrad_chi123331 + F21*F22*chi13*dAdgrad_chi213331 + F21*F23*chi11*dAdgrad_chi131331 + F21*F23*chi11*dAdgrad_chi311331 + F21*F23*chi12*dAdgrad_chi132331 + F21*F23*chi12*dAdgrad_chi312331 + F21*F23*chi13*dAdgrad_chi133331 + F21*F23*chi13*dAdgrad_chi313331 + F22*F22*chi11*dAdgrad_chi221331 + F22*F22*chi12*dAdgrad_chi222331 + F22*F22*chi13*dAdgrad_chi223331 + F22*F23*chi11*dAdgrad_chi231331 + F22*F23*chi11*dAdgrad_chi321331 + F22*F23*chi12*dAdgrad_chi232331 + F22*F23*chi12*dAdgrad_chi322331 + F22*F23*chi13*dAdgrad_chi233331 + F22*F23*chi13*dAdgrad_chi323331 + F23*F23*chi11*dAdgrad_chi331331 + F23*F23*chi12*dAdgrad_chi332331 + F23*F23*chi13*dAdgrad_chi333331 + _221331;
        dadgrad_chi(17,26) = F21*F21*chi11*dAdgrad_chi111321 + F21*F21*chi12*dAdgrad_chi112321 + F21*F21*chi13*dAdgrad_chi113321 + F21*F22*chi11*dAdgrad_chi121321 + F21*F22*chi11*dAdgrad_chi211321 + F21*F22*chi12*dAdgrad_chi122321 + F21*F22*chi12*dAdgrad_chi212321 + F21*F22*chi13*dAdgrad_chi123321 + F21*F22*chi13*dAdgrad_chi213321 + F21*F23*chi11*dAdgrad_chi131321 + F21*F23*chi11*dAdgrad_chi311321 + F21*F23*chi12*dAdgrad_chi132321 + F21*F23*chi12*dAdgrad_chi312321 + F21*F23*chi13*dAdgrad_chi133321 + F21*F23*chi13*dAdgrad_chi313321 + F22*F22*chi11*dAdgrad_chi221321 + F22*F22*chi12*dAdgrad_chi222321 + F22*F22*chi13*dAdgrad_chi223321 + F22*F23*chi11*dAdgrad_chi231321 + F22*F23*chi11*dAdgrad_chi321321 + F22*F23*chi12*dAdgrad_chi232321 + F22*F23*chi12*dAdgrad_chi322321 + F22*F23*chi13*dAdgrad_chi233321 + F22*F23*chi13*dAdgrad_chi323321 + F23*F23*chi11*dAdgrad_chi331321 + F23*F23*chi12*dAdgrad_chi332321 + F23*F23*chi13*dAdgrad_chi333321 + _221321;
        dadgrad_chi(18,0) = F11*F31*chi11*dAdgrad_chi111111 + F11*F31*chi12*dAdgrad_chi112111 + F11*F31*chi13*dAdgrad_chi113111 + F11*F32*chi11*dAdgrad_chi211111 + F11*F32*chi12*dAdgrad_chi212111 + F11*F32*chi13*dAdgrad_chi213111 + F11*F33*chi11*dAdgrad_chi311111 + F11*F33*chi12*dAdgrad_chi312111 + F11*F33*chi13*dAdgrad_chi313111 + F12*F31*chi11*dAdgrad_chi121111 + F12*F31*chi12*dAdgrad_chi122111 + F12*F31*chi13*dAdgrad_chi123111 + F12*F32*chi11*dAdgrad_chi221111 + F12*F32*chi12*dAdgrad_chi222111 + F12*F32*chi13*dAdgrad_chi223111 + F12*F33*chi11*dAdgrad_chi321111 + F12*F33*chi12*dAdgrad_chi322111 + F12*F33*chi13*dAdgrad_chi323111 + F13*F31*chi11*dAdgrad_chi131111 + F13*F31*chi12*dAdgrad_chi132111 + F13*F31*chi13*dAdgrad_chi133111 + F13*F32*chi11*dAdgrad_chi231111 + F13*F32*chi12*dAdgrad_chi232111 + F13*F32*chi13*dAdgrad_chi233111 + F13*F33*chi11*dAdgrad_chi331111 + F13*F33*chi12*dAdgrad_chi332111 + F13*F33*chi13*dAdgrad_chi333111 + _311111;
        dadgrad_chi(18,1) = F11*F31*chi11*dAdgrad_chi111122 + F11*F31*chi12*dAdgrad_chi112122 + F11*F31*chi13*dAdgrad_chi113122 + F11*F32*chi11*dAdgrad_chi211122 + F11*F32*chi12*dAdgrad_chi212122 + F11*F32*chi13*dAdgrad_chi213122 + F11*F33*chi11*dAdgrad_chi311122 + F11*F33*chi12*dAdgrad_chi312122 + F11*F33*chi13*dAdgrad_chi313122 + F12*F31*chi11*dAdgrad_chi121122 + F12*F31*chi12*dAdgrad_chi122122 + F12*F31*chi13*dAdgrad_chi123122 + F12*F32*chi11*dAdgrad_chi221122 + F12*F32*chi12*dAdgrad_chi222122 + F12*F32*chi13*dAdgrad_chi223122 + F12*F33*chi11*dAdgrad_chi321122 + F12*F33*chi12*dAdgrad_chi322122 + F12*F33*chi13*dAdgrad_chi323122 + F13*F31*chi11*dAdgrad_chi131122 + F13*F31*chi12*dAdgrad_chi132122 + F13*F31*chi13*dAdgrad_chi133122 + F13*F32*chi11*dAdgrad_chi231122 + F13*F32*chi12*dAdgrad_chi232122 + F13*F32*chi13*dAdgrad_chi233122 + F13*F33*chi11*dAdgrad_chi331122 + F13*F33*chi12*dAdgrad_chi332122 + F13*F33*chi13*dAdgrad_chi333122 + _311122;
        dadgrad_chi(18,2) = F11*F31*chi11*dAdgrad_chi111133 + F11*F31*chi12*dAdgrad_chi112133 + F11*F31*chi13*dAdgrad_chi113133 + F11*F32*chi11*dAdgrad_chi211133 + F11*F32*chi12*dAdgrad_chi212133 + F11*F32*chi13*dAdgrad_chi213133 + F11*F33*chi11*dAdgrad_chi311133 + F11*F33*chi12*dAdgrad_chi312133 + F11*F33*chi13*dAdgrad_chi313133 + F12*F31*chi11*dAdgrad_chi121133 + F12*F31*chi12*dAdgrad_chi122133 + F12*F31*chi13*dAdgrad_chi123133 + F12*F32*chi11*dAdgrad_chi221133 + F12*F32*chi12*dAdgrad_chi222133 + F12*F32*chi13*dAdgrad_chi223133 + F12*F33*chi11*dAdgrad_chi321133 + F12*F33*chi12*dAdgrad_chi322133 + F12*F33*chi13*dAdgrad_chi323133 + F13*F31*chi11*dAdgrad_chi131133 + F13*F31*chi12*dAdgrad_chi132133 + F13*F31*chi13*dAdgrad_chi133133 + F13*F32*chi11*dAdgrad_chi231133 + F13*F32*chi12*dAdgrad_chi232133 + F13*F32*chi13*dAdgrad_chi233133 + F13*F33*chi11*dAdgrad_chi331133 + F13*F33*chi12*dAdgrad_chi332133 + F13*F33*chi13*dAdgrad_chi333133 + _311133;
        dadgrad_chi(18,3) = F11*F31*chi11*dAdgrad_chi111123 + F11*F31*chi12*dAdgrad_chi112123 + F11*F31*chi13*dAdgrad_chi113123 + F11*F32*chi11*dAdgrad_chi211123 + F11*F32*chi12*dAdgrad_chi212123 + F11*F32*chi13*dAdgrad_chi213123 + F11*F33*chi11*dAdgrad_chi311123 + F11*F33*chi12*dAdgrad_chi312123 + F11*F33*chi13*dAdgrad_chi313123 + F12*F31*chi11*dAdgrad_chi121123 + F12*F31*chi12*dAdgrad_chi122123 + F12*F31*chi13*dAdgrad_chi123123 + F12*F32*chi11*dAdgrad_chi221123 + F12*F32*chi12*dAdgrad_chi222123 + F12*F32*chi13*dAdgrad_chi223123 + F12*F33*chi11*dAdgrad_chi321123 + F12*F33*chi12*dAdgrad_chi322123 + F12*F33*chi13*dAdgrad_chi323123 + F13*F31*chi11*dAdgrad_chi131123 + F13*F31*chi12*dAdgrad_chi132123 + F13*F31*chi13*dAdgrad_chi133123 + F13*F32*chi11*dAdgrad_chi231123 + F13*F32*chi12*dAdgrad_chi232123 + F13*F32*chi13*dAdgrad_chi233123 + F13*F33*chi11*dAdgrad_chi331123 + F13*F33*chi12*dAdgrad_chi332123 + F13*F33*chi13*dAdgrad_chi333123 + _311123;
        dadgrad_chi(18,4) = F11*F31*chi11*dAdgrad_chi111113 + F11*F31*chi12*dAdgrad_chi112113 + F11*F31*chi13*dAdgrad_chi113113 + F11*F32*chi11*dAdgrad_chi211113 + F11*F32*chi12*dAdgrad_chi212113 + F11*F32*chi13*dAdgrad_chi213113 + F11*F33*chi11*dAdgrad_chi311113 + F11*F33*chi12*dAdgrad_chi312113 + F11*F33*chi13*dAdgrad_chi313113 + F12*F31*chi11*dAdgrad_chi121113 + F12*F31*chi12*dAdgrad_chi122113 + F12*F31*chi13*dAdgrad_chi123113 + F12*F32*chi11*dAdgrad_chi221113 + F12*F32*chi12*dAdgrad_chi222113 + F12*F32*chi13*dAdgrad_chi223113 + F12*F33*chi11*dAdgrad_chi321113 + F12*F33*chi12*dAdgrad_chi322113 + F12*F33*chi13*dAdgrad_chi323113 + F13*F31*chi11*dAdgrad_chi131113 + F13*F31*chi12*dAdgrad_chi132113 + F13*F31*chi13*dAdgrad_chi133113 + F13*F32*chi11*dAdgrad_chi231113 + F13*F32*chi12*dAdgrad_chi232113 + F13*F32*chi13*dAdgrad_chi233113 + F13*F33*chi11*dAdgrad_chi331113 + F13*F33*chi12*dAdgrad_chi332113 + F13*F33*chi13*dAdgrad_chi333113 + _311113;
        dadgrad_chi(18,5) = F11*F31*chi11*dAdgrad_chi111112 + F11*F31*chi12*dAdgrad_chi112112 + F11*F31*chi13*dAdgrad_chi113112 + F11*F32*chi11*dAdgrad_chi211112 + F11*F32*chi12*dAdgrad_chi212112 + F11*F32*chi13*dAdgrad_chi213112 + F11*F33*chi11*dAdgrad_chi311112 + F11*F33*chi12*dAdgrad_chi312112 + F11*F33*chi13*dAdgrad_chi313112 + F12*F31*chi11*dAdgrad_chi121112 + F12*F31*chi12*dAdgrad_chi122112 + F12*F31*chi13*dAdgrad_chi123112 + F12*F32*chi11*dAdgrad_chi221112 + F12*F32*chi12*dAdgrad_chi222112 + F12*F32*chi13*dAdgrad_chi223112 + F12*F33*chi11*dAdgrad_chi321112 + F12*F33*chi12*dAdgrad_chi322112 + F12*F33*chi13*dAdgrad_chi323112 + F13*F31*chi11*dAdgrad_chi131112 + F13*F31*chi12*dAdgrad_chi132112 + F13*F31*chi13*dAdgrad_chi133112 + F13*F32*chi11*dAdgrad_chi231112 + F13*F32*chi12*dAdgrad_chi232112 + F13*F32*chi13*dAdgrad_chi233112 + F13*F33*chi11*dAdgrad_chi331112 + F13*F33*chi12*dAdgrad_chi332112 + F13*F33*chi13*dAdgrad_chi333112 + _311112;
        dadgrad_chi(18,6) = F11*F31*chi11*dAdgrad_chi111132 + F11*F31*chi12*dAdgrad_chi112132 + F11*F31*chi13*dAdgrad_chi113132 + F11*F32*chi11*dAdgrad_chi211132 + F11*F32*chi12*dAdgrad_chi212132 + F11*F32*chi13*dAdgrad_chi213132 + F11*F33*chi11*dAdgrad_chi311132 + F11*F33*chi12*dAdgrad_chi312132 + F11*F33*chi13*dAdgrad_chi313132 + F12*F31*chi11*dAdgrad_chi121132 + F12*F31*chi12*dAdgrad_chi122132 + F12*F31*chi13*dAdgrad_chi123132 + F12*F32*chi11*dAdgrad_chi221132 + F12*F32*chi12*dAdgrad_chi222132 + F12*F32*chi13*dAdgrad_chi223132 + F12*F33*chi11*dAdgrad_chi321132 + F12*F33*chi12*dAdgrad_chi322132 + F12*F33*chi13*dAdgrad_chi323132 + F13*F31*chi11*dAdgrad_chi131132 + F13*F31*chi12*dAdgrad_chi132132 + F13*F31*chi13*dAdgrad_chi133132 + F13*F32*chi11*dAdgrad_chi231132 + F13*F32*chi12*dAdgrad_chi232132 + F13*F32*chi13*dAdgrad_chi233132 + F13*F33*chi11*dAdgrad_chi331132 + F13*F33*chi12*dAdgrad_chi332132 + F13*F33*chi13*dAdgrad_chi333132 + _311132;
        dadgrad_chi(18,7) = F11*F31*chi11*dAdgrad_chi111131 + F11*F31*chi12*dAdgrad_chi112131 + F11*F31*chi13*dAdgrad_chi113131 + F11*F32*chi11*dAdgrad_chi211131 + F11*F32*chi12*dAdgrad_chi212131 + F11*F32*chi13*dAdgrad_chi213131 + F11*F33*chi11*dAdgrad_chi311131 + F11*F33*chi12*dAdgrad_chi312131 + F11*F33*chi13*dAdgrad_chi313131 + F12*F31*chi11*dAdgrad_chi121131 + F12*F31*chi12*dAdgrad_chi122131 + F12*F31*chi13*dAdgrad_chi123131 + F12*F32*chi11*dAdgrad_chi221131 + F12*F32*chi12*dAdgrad_chi222131 + F12*F32*chi13*dAdgrad_chi223131 + F12*F33*chi11*dAdgrad_chi321131 + F12*F33*chi12*dAdgrad_chi322131 + F12*F33*chi13*dAdgrad_chi323131 + F13*F31*chi11*dAdgrad_chi131131 + F13*F31*chi12*dAdgrad_chi132131 + F13*F31*chi13*dAdgrad_chi133131 + F13*F32*chi11*dAdgrad_chi231131 + F13*F32*chi12*dAdgrad_chi232131 + F13*F32*chi13*dAdgrad_chi233131 + F13*F33*chi11*dAdgrad_chi331131 + F13*F33*chi12*dAdgrad_chi332131 + F13*F33*chi13*dAdgrad_chi333131 + _311131;
        dadgrad_chi(18,8) = F11*F31*chi11*dAdgrad_chi111121 + F11*F31*chi12*dAdgrad_chi112121 + F11*F31*chi13*dAdgrad_chi113121 + F11*F32*chi11*dAdgrad_chi211121 + F11*F32*chi12*dAdgrad_chi212121 + F11*F32*chi13*dAdgrad_chi213121 + F11*F33*chi11*dAdgrad_chi311121 + F11*F33*chi12*dAdgrad_chi312121 + F11*F33*chi13*dAdgrad_chi313121 + F12*F31*chi11*dAdgrad_chi121121 + F12*F31*chi12*dAdgrad_chi122121 + F12*F31*chi13*dAdgrad_chi123121 + F12*F32*chi11*dAdgrad_chi221121 + F12*F32*chi12*dAdgrad_chi222121 + F12*F32*chi13*dAdgrad_chi223121 + F12*F33*chi11*dAdgrad_chi321121 + F12*F33*chi12*dAdgrad_chi322121 + F12*F33*chi13*dAdgrad_chi323121 + F13*F31*chi11*dAdgrad_chi131121 + F13*F31*chi12*dAdgrad_chi132121 + F13*F31*chi13*dAdgrad_chi133121 + F13*F32*chi11*dAdgrad_chi231121 + F13*F32*chi12*dAdgrad_chi232121 + F13*F32*chi13*dAdgrad_chi233121 + F13*F33*chi11*dAdgrad_chi331121 + F13*F33*chi12*dAdgrad_chi332121 + F13*F33*chi13*dAdgrad_chi333121 + _311121;
        dadgrad_chi(18,9) = F11*F31*chi11*dAdgrad_chi111211 + F11*F31*chi12*dAdgrad_chi112211 + F11*F31*chi13*dAdgrad_chi113211 + F11*F32*chi11*dAdgrad_chi211211 + F11*F32*chi12*dAdgrad_chi212211 + F11*F32*chi13*dAdgrad_chi213211 + F11*F33*chi11*dAdgrad_chi311211 + F11*F33*chi12*dAdgrad_chi312211 + F11*F33*chi13*dAdgrad_chi313211 + F12*F31*chi11*dAdgrad_chi121211 + F12*F31*chi12*dAdgrad_chi122211 + F12*F31*chi13*dAdgrad_chi123211 + F12*F32*chi11*dAdgrad_chi221211 + F12*F32*chi12*dAdgrad_chi222211 + F12*F32*chi13*dAdgrad_chi223211 + F12*F33*chi11*dAdgrad_chi321211 + F12*F33*chi12*dAdgrad_chi322211 + F12*F33*chi13*dAdgrad_chi323211 + F13*F31*chi11*dAdgrad_chi131211 + F13*F31*chi12*dAdgrad_chi132211 + F13*F31*chi13*dAdgrad_chi133211 + F13*F32*chi11*dAdgrad_chi231211 + F13*F32*chi12*dAdgrad_chi232211 + F13*F32*chi13*dAdgrad_chi233211 + F13*F33*chi11*dAdgrad_chi331211 + F13*F33*chi12*dAdgrad_chi332211 + F13*F33*chi13*dAdgrad_chi333211 + _311211;
        dadgrad_chi(18,10) = F11*F31*chi11*dAdgrad_chi111222 + F11*F31*chi12*dAdgrad_chi112222 + F11*F31*chi13*dAdgrad_chi113222 + F11*F32*chi11*dAdgrad_chi211222 + F11*F32*chi12*dAdgrad_chi212222 + F11*F32*chi13*dAdgrad_chi213222 + F11*F33*chi11*dAdgrad_chi311222 + F11*F33*chi12*dAdgrad_chi312222 + F11*F33*chi13*dAdgrad_chi313222 + F12*F31*chi11*dAdgrad_chi121222 + F12*F31*chi12*dAdgrad_chi122222 + F12*F31*chi13*dAdgrad_chi123222 + F12*F32*chi11*dAdgrad_chi221222 + F12*F32*chi12*dAdgrad_chi222222 + F12*F32*chi13*dAdgrad_chi223222 + F12*F33*chi11*dAdgrad_chi321222 + F12*F33*chi12*dAdgrad_chi322222 + F12*F33*chi13*dAdgrad_chi323222 + F13*F31*chi11*dAdgrad_chi131222 + F13*F31*chi12*dAdgrad_chi132222 + F13*F31*chi13*dAdgrad_chi133222 + F13*F32*chi11*dAdgrad_chi231222 + F13*F32*chi12*dAdgrad_chi232222 + F13*F32*chi13*dAdgrad_chi233222 + F13*F33*chi11*dAdgrad_chi331222 + F13*F33*chi12*dAdgrad_chi332222 + F13*F33*chi13*dAdgrad_chi333222 + _311222;
        dadgrad_chi(18,11) = F11*F31*chi11*dAdgrad_chi111233 + F11*F31*chi12*dAdgrad_chi112233 + F11*F31*chi13*dAdgrad_chi113233 + F11*F32*chi11*dAdgrad_chi211233 + F11*F32*chi12*dAdgrad_chi212233 + F11*F32*chi13*dAdgrad_chi213233 + F11*F33*chi11*dAdgrad_chi311233 + F11*F33*chi12*dAdgrad_chi312233 + F11*F33*chi13*dAdgrad_chi313233 + F12*F31*chi11*dAdgrad_chi121233 + F12*F31*chi12*dAdgrad_chi122233 + F12*F31*chi13*dAdgrad_chi123233 + F12*F32*chi11*dAdgrad_chi221233 + F12*F32*chi12*dAdgrad_chi222233 + F12*F32*chi13*dAdgrad_chi223233 + F12*F33*chi11*dAdgrad_chi321233 + F12*F33*chi12*dAdgrad_chi322233 + F12*F33*chi13*dAdgrad_chi323233 + F13*F31*chi11*dAdgrad_chi131233 + F13*F31*chi12*dAdgrad_chi132233 + F13*F31*chi13*dAdgrad_chi133233 + F13*F32*chi11*dAdgrad_chi231233 + F13*F32*chi12*dAdgrad_chi232233 + F13*F32*chi13*dAdgrad_chi233233 + F13*F33*chi11*dAdgrad_chi331233 + F13*F33*chi12*dAdgrad_chi332233 + F13*F33*chi13*dAdgrad_chi333233 + _311233;
        dadgrad_chi(18,12) = F11*F31*chi11*dAdgrad_chi111223 + F11*F31*chi12*dAdgrad_chi112223 + F11*F31*chi13*dAdgrad_chi113223 + F11*F32*chi11*dAdgrad_chi211223 + F11*F32*chi12*dAdgrad_chi212223 + F11*F32*chi13*dAdgrad_chi213223 + F11*F33*chi11*dAdgrad_chi311223 + F11*F33*chi12*dAdgrad_chi312223 + F11*F33*chi13*dAdgrad_chi313223 + F12*F31*chi11*dAdgrad_chi121223 + F12*F31*chi12*dAdgrad_chi122223 + F12*F31*chi13*dAdgrad_chi123223 + F12*F32*chi11*dAdgrad_chi221223 + F12*F32*chi12*dAdgrad_chi222223 + F12*F32*chi13*dAdgrad_chi223223 + F12*F33*chi11*dAdgrad_chi321223 + F12*F33*chi12*dAdgrad_chi322223 + F12*F33*chi13*dAdgrad_chi323223 + F13*F31*chi11*dAdgrad_chi131223 + F13*F31*chi12*dAdgrad_chi132223 + F13*F31*chi13*dAdgrad_chi133223 + F13*F32*chi11*dAdgrad_chi231223 + F13*F32*chi12*dAdgrad_chi232223 + F13*F32*chi13*dAdgrad_chi233223 + F13*F33*chi11*dAdgrad_chi331223 + F13*F33*chi12*dAdgrad_chi332223 + F13*F33*chi13*dAdgrad_chi333223 + _311223;
        dadgrad_chi(18,13) = F11*F31*chi11*dAdgrad_chi111213 + F11*F31*chi12*dAdgrad_chi112213 + F11*F31*chi13*dAdgrad_chi113213 + F11*F32*chi11*dAdgrad_chi211213 + F11*F32*chi12*dAdgrad_chi212213 + F11*F32*chi13*dAdgrad_chi213213 + F11*F33*chi11*dAdgrad_chi311213 + F11*F33*chi12*dAdgrad_chi312213 + F11*F33*chi13*dAdgrad_chi313213 + F12*F31*chi11*dAdgrad_chi121213 + F12*F31*chi12*dAdgrad_chi122213 + F12*F31*chi13*dAdgrad_chi123213 + F12*F32*chi11*dAdgrad_chi221213 + F12*F32*chi12*dAdgrad_chi222213 + F12*F32*chi13*dAdgrad_chi223213 + F12*F33*chi11*dAdgrad_chi321213 + F12*F33*chi12*dAdgrad_chi322213 + F12*F33*chi13*dAdgrad_chi323213 + F13*F31*chi11*dAdgrad_chi131213 + F13*F31*chi12*dAdgrad_chi132213 + F13*F31*chi13*dAdgrad_chi133213 + F13*F32*chi11*dAdgrad_chi231213 + F13*F32*chi12*dAdgrad_chi232213 + F13*F32*chi13*dAdgrad_chi233213 + F13*F33*chi11*dAdgrad_chi331213 + F13*F33*chi12*dAdgrad_chi332213 + F13*F33*chi13*dAdgrad_chi333213 + _311213;
        dadgrad_chi(18,14) = F11*F31*chi11*dAdgrad_chi111212 + F11*F31*chi12*dAdgrad_chi112212 + F11*F31*chi13*dAdgrad_chi113212 + F11*F32*chi11*dAdgrad_chi211212 + F11*F32*chi12*dAdgrad_chi212212 + F11*F32*chi13*dAdgrad_chi213212 + F11*F33*chi11*dAdgrad_chi311212 + F11*F33*chi12*dAdgrad_chi312212 + F11*F33*chi13*dAdgrad_chi313212 + F12*F31*chi11*dAdgrad_chi121212 + F12*F31*chi12*dAdgrad_chi122212 + F12*F31*chi13*dAdgrad_chi123212 + F12*F32*chi11*dAdgrad_chi221212 + F12*F32*chi12*dAdgrad_chi222212 + F12*F32*chi13*dAdgrad_chi223212 + F12*F33*chi11*dAdgrad_chi321212 + F12*F33*chi12*dAdgrad_chi322212 + F12*F33*chi13*dAdgrad_chi323212 + F13*F31*chi11*dAdgrad_chi131212 + F13*F31*chi12*dAdgrad_chi132212 + F13*F31*chi13*dAdgrad_chi133212 + F13*F32*chi11*dAdgrad_chi231212 + F13*F32*chi12*dAdgrad_chi232212 + F13*F32*chi13*dAdgrad_chi233212 + F13*F33*chi11*dAdgrad_chi331212 + F13*F33*chi12*dAdgrad_chi332212 + F13*F33*chi13*dAdgrad_chi333212 + _311212;
        dadgrad_chi(18,15) = F11*F31*chi11*dAdgrad_chi111232 + F11*F31*chi12*dAdgrad_chi112232 + F11*F31*chi13*dAdgrad_chi113232 + F11*F32*chi11*dAdgrad_chi211232 + F11*F32*chi12*dAdgrad_chi212232 + F11*F32*chi13*dAdgrad_chi213232 + F11*F33*chi11*dAdgrad_chi311232 + F11*F33*chi12*dAdgrad_chi312232 + F11*F33*chi13*dAdgrad_chi313232 + F12*F31*chi11*dAdgrad_chi121232 + F12*F31*chi12*dAdgrad_chi122232 + F12*F31*chi13*dAdgrad_chi123232 + F12*F32*chi11*dAdgrad_chi221232 + F12*F32*chi12*dAdgrad_chi222232 + F12*F32*chi13*dAdgrad_chi223232 + F12*F33*chi11*dAdgrad_chi321232 + F12*F33*chi12*dAdgrad_chi322232 + F12*F33*chi13*dAdgrad_chi323232 + F13*F31*chi11*dAdgrad_chi131232 + F13*F31*chi12*dAdgrad_chi132232 + F13*F31*chi13*dAdgrad_chi133232 + F13*F32*chi11*dAdgrad_chi231232 + F13*F32*chi12*dAdgrad_chi232232 + F13*F32*chi13*dAdgrad_chi233232 + F13*F33*chi11*dAdgrad_chi331232 + F13*F33*chi12*dAdgrad_chi332232 + F13*F33*chi13*dAdgrad_chi333232 + _311232;
        dadgrad_chi(18,16) = F11*F31*chi11*dAdgrad_chi111231 + F11*F31*chi12*dAdgrad_chi112231 + F11*F31*chi13*dAdgrad_chi113231 + F11*F32*chi11*dAdgrad_chi211231 + F11*F32*chi12*dAdgrad_chi212231 + F11*F32*chi13*dAdgrad_chi213231 + F11*F33*chi11*dAdgrad_chi311231 + F11*F33*chi12*dAdgrad_chi312231 + F11*F33*chi13*dAdgrad_chi313231 + F12*F31*chi11*dAdgrad_chi121231 + F12*F31*chi12*dAdgrad_chi122231 + F12*F31*chi13*dAdgrad_chi123231 + F12*F32*chi11*dAdgrad_chi221231 + F12*F32*chi12*dAdgrad_chi222231 + F12*F32*chi13*dAdgrad_chi223231 + F12*F33*chi11*dAdgrad_chi321231 + F12*F33*chi12*dAdgrad_chi322231 + F12*F33*chi13*dAdgrad_chi323231 + F13*F31*chi11*dAdgrad_chi131231 + F13*F31*chi12*dAdgrad_chi132231 + F13*F31*chi13*dAdgrad_chi133231 + F13*F32*chi11*dAdgrad_chi231231 + F13*F32*chi12*dAdgrad_chi232231 + F13*F32*chi13*dAdgrad_chi233231 + F13*F33*chi11*dAdgrad_chi331231 + F13*F33*chi12*dAdgrad_chi332231 + F13*F33*chi13*dAdgrad_chi333231 + _311231;
        dadgrad_chi(18,17) = F11*F31*chi11*dAdgrad_chi111221 + F11*F31*chi12*dAdgrad_chi112221 + F11*F31*chi13*dAdgrad_chi113221 + F11*F32*chi11*dAdgrad_chi211221 + F11*F32*chi12*dAdgrad_chi212221 + F11*F32*chi13*dAdgrad_chi213221 + F11*F33*chi11*dAdgrad_chi311221 + F11*F33*chi12*dAdgrad_chi312221 + F11*F33*chi13*dAdgrad_chi313221 + F12*F31*chi11*dAdgrad_chi121221 + F12*F31*chi12*dAdgrad_chi122221 + F12*F31*chi13*dAdgrad_chi123221 + F12*F32*chi11*dAdgrad_chi221221 + F12*F32*chi12*dAdgrad_chi222221 + F12*F32*chi13*dAdgrad_chi223221 + F12*F33*chi11*dAdgrad_chi321221 + F12*F33*chi12*dAdgrad_chi322221 + F12*F33*chi13*dAdgrad_chi323221 + F13*F31*chi11*dAdgrad_chi131221 + F13*F31*chi12*dAdgrad_chi132221 + F13*F31*chi13*dAdgrad_chi133221 + F13*F32*chi11*dAdgrad_chi231221 + F13*F32*chi12*dAdgrad_chi232221 + F13*F32*chi13*dAdgrad_chi233221 + F13*F33*chi11*dAdgrad_chi331221 + F13*F33*chi12*dAdgrad_chi332221 + F13*F33*chi13*dAdgrad_chi333221 + _311221;
        dadgrad_chi(18,18) = F11*F31*chi11*dAdgrad_chi111311 + F11*F31*chi12*dAdgrad_chi112311 + F11*F31*chi13*dAdgrad_chi113311 + F11*F32*chi11*dAdgrad_chi211311 + F11*F32*chi12*dAdgrad_chi212311 + F11*F32*chi13*dAdgrad_chi213311 + F11*F33*chi11*dAdgrad_chi311311 + F11*F33*chi12*dAdgrad_chi312311 + F11*F33*chi13*dAdgrad_chi313311 + F12*F31*chi11*dAdgrad_chi121311 + F12*F31*chi12*dAdgrad_chi122311 + F12*F31*chi13*dAdgrad_chi123311 + F12*F32*chi11*dAdgrad_chi221311 + F12*F32*chi12*dAdgrad_chi222311 + F12*F32*chi13*dAdgrad_chi223311 + F12*F33*chi11*dAdgrad_chi321311 + F12*F33*chi12*dAdgrad_chi322311 + F12*F33*chi13*dAdgrad_chi323311 + F13*F31*chi11*dAdgrad_chi131311 + F13*F31*chi12*dAdgrad_chi132311 + F13*F31*chi13*dAdgrad_chi133311 + F13*F32*chi11*dAdgrad_chi231311 + F13*F32*chi12*dAdgrad_chi232311 + F13*F32*chi13*dAdgrad_chi233311 + F13*F33*chi11*dAdgrad_chi331311 + F13*F33*chi12*dAdgrad_chi332311 + F13*F33*chi13*dAdgrad_chi333311 + _311311;
        dadgrad_chi(18,19) = F11*F31*chi11*dAdgrad_chi111322 + F11*F31*chi12*dAdgrad_chi112322 + F11*F31*chi13*dAdgrad_chi113322 + F11*F32*chi11*dAdgrad_chi211322 + F11*F32*chi12*dAdgrad_chi212322 + F11*F32*chi13*dAdgrad_chi213322 + F11*F33*chi11*dAdgrad_chi311322 + F11*F33*chi12*dAdgrad_chi312322 + F11*F33*chi13*dAdgrad_chi313322 + F12*F31*chi11*dAdgrad_chi121322 + F12*F31*chi12*dAdgrad_chi122322 + F12*F31*chi13*dAdgrad_chi123322 + F12*F32*chi11*dAdgrad_chi221322 + F12*F32*chi12*dAdgrad_chi222322 + F12*F32*chi13*dAdgrad_chi223322 + F12*F33*chi11*dAdgrad_chi321322 + F12*F33*chi12*dAdgrad_chi322322 + F12*F33*chi13*dAdgrad_chi323322 + F13*F31*chi11*dAdgrad_chi131322 + F13*F31*chi12*dAdgrad_chi132322 + F13*F31*chi13*dAdgrad_chi133322 + F13*F32*chi11*dAdgrad_chi231322 + F13*F32*chi12*dAdgrad_chi232322 + F13*F32*chi13*dAdgrad_chi233322 + F13*F33*chi11*dAdgrad_chi331322 + F13*F33*chi12*dAdgrad_chi332322 + F13*F33*chi13*dAdgrad_chi333322 + _311322;
        dadgrad_chi(18,20) = F11*F31*chi11*dAdgrad_chi111333 + F11*F31*chi12*dAdgrad_chi112333 + F11*F31*chi13*dAdgrad_chi113333 + F11*F32*chi11*dAdgrad_chi211333 + F11*F32*chi12*dAdgrad_chi212333 + F11*F32*chi13*dAdgrad_chi213333 + F11*F33*chi11*dAdgrad_chi311333 + F11*F33*chi12*dAdgrad_chi312333 + F11*F33*chi13*dAdgrad_chi313333 + F12*F31*chi11*dAdgrad_chi121333 + F12*F31*chi12*dAdgrad_chi122333 + F12*F31*chi13*dAdgrad_chi123333 + F12*F32*chi11*dAdgrad_chi221333 + F12*F32*chi12*dAdgrad_chi222333 + F12*F32*chi13*dAdgrad_chi223333 + F12*F33*chi11*dAdgrad_chi321333 + F12*F33*chi12*dAdgrad_chi322333 + F12*F33*chi13*dAdgrad_chi323333 + F13*F31*chi11*dAdgrad_chi131333 + F13*F31*chi12*dAdgrad_chi132333 + F13*F31*chi13*dAdgrad_chi133333 + F13*F32*chi11*dAdgrad_chi231333 + F13*F32*chi12*dAdgrad_chi232333 + F13*F32*chi13*dAdgrad_chi233333 + F13*F33*chi11*dAdgrad_chi331333 + F13*F33*chi12*dAdgrad_chi332333 + F13*F33*chi13*dAdgrad_chi333333 + _311333;
        dadgrad_chi(18,21) = F11*F31*chi11*dAdgrad_chi111323 + F11*F31*chi12*dAdgrad_chi112323 + F11*F31*chi13*dAdgrad_chi113323 + F11*F32*chi11*dAdgrad_chi211323 + F11*F32*chi12*dAdgrad_chi212323 + F11*F32*chi13*dAdgrad_chi213323 + F11*F33*chi11*dAdgrad_chi311323 + F11*F33*chi12*dAdgrad_chi312323 + F11*F33*chi13*dAdgrad_chi313323 + F12*F31*chi11*dAdgrad_chi121323 + F12*F31*chi12*dAdgrad_chi122323 + F12*F31*chi13*dAdgrad_chi123323 + F12*F32*chi11*dAdgrad_chi221323 + F12*F32*chi12*dAdgrad_chi222323 + F12*F32*chi13*dAdgrad_chi223323 + F12*F33*chi11*dAdgrad_chi321323 + F12*F33*chi12*dAdgrad_chi322323 + F12*F33*chi13*dAdgrad_chi323323 + F13*F31*chi11*dAdgrad_chi131323 + F13*F31*chi12*dAdgrad_chi132323 + F13*F31*chi13*dAdgrad_chi133323 + F13*F32*chi11*dAdgrad_chi231323 + F13*F32*chi12*dAdgrad_chi232323 + F13*F32*chi13*dAdgrad_chi233323 + F13*F33*chi11*dAdgrad_chi331323 + F13*F33*chi12*dAdgrad_chi332323 + F13*F33*chi13*dAdgrad_chi333323 + _311323;
        dadgrad_chi(18,22) = F11*F31*chi11*dAdgrad_chi111313 + F11*F31*chi12*dAdgrad_chi112313 + F11*F31*chi13*dAdgrad_chi113313 + F11*F32*chi11*dAdgrad_chi211313 + F11*F32*chi12*dAdgrad_chi212313 + F11*F32*chi13*dAdgrad_chi213313 + F11*F33*chi11*dAdgrad_chi311313 + F11*F33*chi12*dAdgrad_chi312313 + F11*F33*chi13*dAdgrad_chi313313 + F12*F31*chi11*dAdgrad_chi121313 + F12*F31*chi12*dAdgrad_chi122313 + F12*F31*chi13*dAdgrad_chi123313 + F12*F32*chi11*dAdgrad_chi221313 + F12*F32*chi12*dAdgrad_chi222313 + F12*F32*chi13*dAdgrad_chi223313 + F12*F33*chi11*dAdgrad_chi321313 + F12*F33*chi12*dAdgrad_chi322313 + F12*F33*chi13*dAdgrad_chi323313 + F13*F31*chi11*dAdgrad_chi131313 + F13*F31*chi12*dAdgrad_chi132313 + F13*F31*chi13*dAdgrad_chi133313 + F13*F32*chi11*dAdgrad_chi231313 + F13*F32*chi12*dAdgrad_chi232313 + F13*F32*chi13*dAdgrad_chi233313 + F13*F33*chi11*dAdgrad_chi331313 + F13*F33*chi12*dAdgrad_chi332313 + F13*F33*chi13*dAdgrad_chi333313 + _311313;
        dadgrad_chi(18,23) = F11*F31*chi11*dAdgrad_chi111312 + F11*F31*chi12*dAdgrad_chi112312 + F11*F31*chi13*dAdgrad_chi113312 + F11*F32*chi11*dAdgrad_chi211312 + F11*F32*chi12*dAdgrad_chi212312 + F11*F32*chi13*dAdgrad_chi213312 + F11*F33*chi11*dAdgrad_chi311312 + F11*F33*chi12*dAdgrad_chi312312 + F11*F33*chi13*dAdgrad_chi313312 + F12*F31*chi11*dAdgrad_chi121312 + F12*F31*chi12*dAdgrad_chi122312 + F12*F31*chi13*dAdgrad_chi123312 + F12*F32*chi11*dAdgrad_chi221312 + F12*F32*chi12*dAdgrad_chi222312 + F12*F32*chi13*dAdgrad_chi223312 + F12*F33*chi11*dAdgrad_chi321312 + F12*F33*chi12*dAdgrad_chi322312 + F12*F33*chi13*dAdgrad_chi323312 + F13*F31*chi11*dAdgrad_chi131312 + F13*F31*chi12*dAdgrad_chi132312 + F13*F31*chi13*dAdgrad_chi133312 + F13*F32*chi11*dAdgrad_chi231312 + F13*F32*chi12*dAdgrad_chi232312 + F13*F32*chi13*dAdgrad_chi233312 + F13*F33*chi11*dAdgrad_chi331312 + F13*F33*chi12*dAdgrad_chi332312 + F13*F33*chi13*dAdgrad_chi333312 + _311312;
        dadgrad_chi(18,24) = F11*F31*chi11*dAdgrad_chi111332 + F11*F31*chi12*dAdgrad_chi112332 + F11*F31*chi13*dAdgrad_chi113332 + F11*F32*chi11*dAdgrad_chi211332 + F11*F32*chi12*dAdgrad_chi212332 + F11*F32*chi13*dAdgrad_chi213332 + F11*F33*chi11*dAdgrad_chi311332 + F11*F33*chi12*dAdgrad_chi312332 + F11*F33*chi13*dAdgrad_chi313332 + F12*F31*chi11*dAdgrad_chi121332 + F12*F31*chi12*dAdgrad_chi122332 + F12*F31*chi13*dAdgrad_chi123332 + F12*F32*chi11*dAdgrad_chi221332 + F12*F32*chi12*dAdgrad_chi222332 + F12*F32*chi13*dAdgrad_chi223332 + F12*F33*chi11*dAdgrad_chi321332 + F12*F33*chi12*dAdgrad_chi322332 + F12*F33*chi13*dAdgrad_chi323332 + F13*F31*chi11*dAdgrad_chi131332 + F13*F31*chi12*dAdgrad_chi132332 + F13*F31*chi13*dAdgrad_chi133332 + F13*F32*chi11*dAdgrad_chi231332 + F13*F32*chi12*dAdgrad_chi232332 + F13*F32*chi13*dAdgrad_chi233332 + F13*F33*chi11*dAdgrad_chi331332 + F13*F33*chi12*dAdgrad_chi332332 + F13*F33*chi13*dAdgrad_chi333332 + _311332;
        dadgrad_chi(18,25) = F11*F31*chi11*dAdgrad_chi111331 + F11*F31*chi12*dAdgrad_chi112331 + F11*F31*chi13*dAdgrad_chi113331 + F11*F32*chi11*dAdgrad_chi211331 + F11*F32*chi12*dAdgrad_chi212331 + F11*F32*chi13*dAdgrad_chi213331 + F11*F33*chi11*dAdgrad_chi311331 + F11*F33*chi12*dAdgrad_chi312331 + F11*F33*chi13*dAdgrad_chi313331 + F12*F31*chi11*dAdgrad_chi121331 + F12*F31*chi12*dAdgrad_chi122331 + F12*F31*chi13*dAdgrad_chi123331 + F12*F32*chi11*dAdgrad_chi221331 + F12*F32*chi12*dAdgrad_chi222331 + F12*F32*chi13*dAdgrad_chi223331 + F12*F33*chi11*dAdgrad_chi321331 + F12*F33*chi12*dAdgrad_chi322331 + F12*F33*chi13*dAdgrad_chi323331 + F13*F31*chi11*dAdgrad_chi131331 + F13*F31*chi12*dAdgrad_chi132331 + F13*F31*chi13*dAdgrad_chi133331 + F13*F32*chi11*dAdgrad_chi231331 + F13*F32*chi12*dAdgrad_chi232331 + F13*F32*chi13*dAdgrad_chi233331 + F13*F33*chi11*dAdgrad_chi331331 + F13*F33*chi12*dAdgrad_chi332331 + F13*F33*chi13*dAdgrad_chi333331 + _311331;
        dadgrad_chi(18,26) = F11*F31*chi11*dAdgrad_chi111321 + F11*F31*chi12*dAdgrad_chi112321 + F11*F31*chi13*dAdgrad_chi113321 + F11*F32*chi11*dAdgrad_chi211321 + F11*F32*chi12*dAdgrad_chi212321 + F11*F32*chi13*dAdgrad_chi213321 + F11*F33*chi11*dAdgrad_chi311321 + F11*F33*chi12*dAdgrad_chi312321 + F11*F33*chi13*dAdgrad_chi313321 + F12*F31*chi11*dAdgrad_chi121321 + F12*F31*chi12*dAdgrad_chi122321 + F12*F31*chi13*dAdgrad_chi123321 + F12*F32*chi11*dAdgrad_chi221321 + F12*F32*chi12*dAdgrad_chi222321 + F12*F32*chi13*dAdgrad_chi223321 + F12*F33*chi11*dAdgrad_chi321321 + F12*F33*chi12*dAdgrad_chi322321 + F12*F33*chi13*dAdgrad_chi323321 + F13*F31*chi11*dAdgrad_chi131321 + F13*F31*chi12*dAdgrad_chi132321 + F13*F31*chi13*dAdgrad_chi133321 + F13*F32*chi11*dAdgrad_chi231321 + F13*F32*chi12*dAdgrad_chi232321 + F13*F32*chi13*dAdgrad_chi233321 + F13*F33*chi11*dAdgrad_chi331321 + F13*F33*chi12*dAdgrad_chi332321 + F13*F33*chi13*dAdgrad_chi333321 + _311321;
        dadgrad_chi(19,0) = F21*F31*chi21*dAdgrad_chi111111 + F21*F31*chi22*dAdgrad_chi112111 + F21*F31*chi23*dAdgrad_chi113111 + F21*F32*chi21*dAdgrad_chi211111 + F21*F32*chi22*dAdgrad_chi212111 + F21*F32*chi23*dAdgrad_chi213111 + F21*F33*chi21*dAdgrad_chi311111 + F21*F33*chi22*dAdgrad_chi312111 + F21*F33*chi23*dAdgrad_chi313111 + F22*F31*chi21*dAdgrad_chi121111 + F22*F31*chi22*dAdgrad_chi122111 + F22*F31*chi23*dAdgrad_chi123111 + F22*F32*chi21*dAdgrad_chi221111 + F22*F32*chi22*dAdgrad_chi222111 + F22*F32*chi23*dAdgrad_chi223111 + F22*F33*chi21*dAdgrad_chi321111 + F22*F33*chi22*dAdgrad_chi322111 + F22*F33*chi23*dAdgrad_chi323111 + F23*F31*chi21*dAdgrad_chi131111 + F23*F31*chi22*dAdgrad_chi132111 + F23*F31*chi23*dAdgrad_chi133111 + F23*F32*chi21*dAdgrad_chi231111 + F23*F32*chi22*dAdgrad_chi232111 + F23*F32*chi23*dAdgrad_chi233111 + F23*F33*chi21*dAdgrad_chi331111 + F23*F33*chi22*dAdgrad_chi332111 + F23*F33*chi23*dAdgrad_chi333111 + _322111;
        dadgrad_chi(19,1) = F21*F31*chi21*dAdgrad_chi111122 + F21*F31*chi22*dAdgrad_chi112122 + F21*F31*chi23*dAdgrad_chi113122 + F21*F32*chi21*dAdgrad_chi211122 + F21*F32*chi22*dAdgrad_chi212122 + F21*F32*chi23*dAdgrad_chi213122 + F21*F33*chi21*dAdgrad_chi311122 + F21*F33*chi22*dAdgrad_chi312122 + F21*F33*chi23*dAdgrad_chi313122 + F22*F31*chi21*dAdgrad_chi121122 + F22*F31*chi22*dAdgrad_chi122122 + F22*F31*chi23*dAdgrad_chi123122 + F22*F32*chi21*dAdgrad_chi221122 + F22*F32*chi22*dAdgrad_chi222122 + F22*F32*chi23*dAdgrad_chi223122 + F22*F33*chi21*dAdgrad_chi321122 + F22*F33*chi22*dAdgrad_chi322122 + F22*F33*chi23*dAdgrad_chi323122 + F23*F31*chi21*dAdgrad_chi131122 + F23*F31*chi22*dAdgrad_chi132122 + F23*F31*chi23*dAdgrad_chi133122 + F23*F32*chi21*dAdgrad_chi231122 + F23*F32*chi22*dAdgrad_chi232122 + F23*F32*chi23*dAdgrad_chi233122 + F23*F33*chi21*dAdgrad_chi331122 + F23*F33*chi22*dAdgrad_chi332122 + F23*F33*chi23*dAdgrad_chi333122 + _322122;
        dadgrad_chi(19,2) = F21*F31*chi21*dAdgrad_chi111133 + F21*F31*chi22*dAdgrad_chi112133 + F21*F31*chi23*dAdgrad_chi113133 + F21*F32*chi21*dAdgrad_chi211133 + F21*F32*chi22*dAdgrad_chi212133 + F21*F32*chi23*dAdgrad_chi213133 + F21*F33*chi21*dAdgrad_chi311133 + F21*F33*chi22*dAdgrad_chi312133 + F21*F33*chi23*dAdgrad_chi313133 + F22*F31*chi21*dAdgrad_chi121133 + F22*F31*chi22*dAdgrad_chi122133 + F22*F31*chi23*dAdgrad_chi123133 + F22*F32*chi21*dAdgrad_chi221133 + F22*F32*chi22*dAdgrad_chi222133 + F22*F32*chi23*dAdgrad_chi223133 + F22*F33*chi21*dAdgrad_chi321133 + F22*F33*chi22*dAdgrad_chi322133 + F22*F33*chi23*dAdgrad_chi323133 + F23*F31*chi21*dAdgrad_chi131133 + F23*F31*chi22*dAdgrad_chi132133 + F23*F31*chi23*dAdgrad_chi133133 + F23*F32*chi21*dAdgrad_chi231133 + F23*F32*chi22*dAdgrad_chi232133 + F23*F32*chi23*dAdgrad_chi233133 + F23*F33*chi21*dAdgrad_chi331133 + F23*F33*chi22*dAdgrad_chi332133 + F23*F33*chi23*dAdgrad_chi333133 + _322133;
        dadgrad_chi(19,3) = F21*F31*chi21*dAdgrad_chi111123 + F21*F31*chi22*dAdgrad_chi112123 + F21*F31*chi23*dAdgrad_chi113123 + F21*F32*chi21*dAdgrad_chi211123 + F21*F32*chi22*dAdgrad_chi212123 + F21*F32*chi23*dAdgrad_chi213123 + F21*F33*chi21*dAdgrad_chi311123 + F21*F33*chi22*dAdgrad_chi312123 + F21*F33*chi23*dAdgrad_chi313123 + F22*F31*chi21*dAdgrad_chi121123 + F22*F31*chi22*dAdgrad_chi122123 + F22*F31*chi23*dAdgrad_chi123123 + F22*F32*chi21*dAdgrad_chi221123 + F22*F32*chi22*dAdgrad_chi222123 + F22*F32*chi23*dAdgrad_chi223123 + F22*F33*chi21*dAdgrad_chi321123 + F22*F33*chi22*dAdgrad_chi322123 + F22*F33*chi23*dAdgrad_chi323123 + F23*F31*chi21*dAdgrad_chi131123 + F23*F31*chi22*dAdgrad_chi132123 + F23*F31*chi23*dAdgrad_chi133123 + F23*F32*chi21*dAdgrad_chi231123 + F23*F32*chi22*dAdgrad_chi232123 + F23*F32*chi23*dAdgrad_chi233123 + F23*F33*chi21*dAdgrad_chi331123 + F23*F33*chi22*dAdgrad_chi332123 + F23*F33*chi23*dAdgrad_chi333123 + _322123;
        dadgrad_chi(19,4) = F21*F31*chi21*dAdgrad_chi111113 + F21*F31*chi22*dAdgrad_chi112113 + F21*F31*chi23*dAdgrad_chi113113 + F21*F32*chi21*dAdgrad_chi211113 + F21*F32*chi22*dAdgrad_chi212113 + F21*F32*chi23*dAdgrad_chi213113 + F21*F33*chi21*dAdgrad_chi311113 + F21*F33*chi22*dAdgrad_chi312113 + F21*F33*chi23*dAdgrad_chi313113 + F22*F31*chi21*dAdgrad_chi121113 + F22*F31*chi22*dAdgrad_chi122113 + F22*F31*chi23*dAdgrad_chi123113 + F22*F32*chi21*dAdgrad_chi221113 + F22*F32*chi22*dAdgrad_chi222113 + F22*F32*chi23*dAdgrad_chi223113 + F22*F33*chi21*dAdgrad_chi321113 + F22*F33*chi22*dAdgrad_chi322113 + F22*F33*chi23*dAdgrad_chi323113 + F23*F31*chi21*dAdgrad_chi131113 + F23*F31*chi22*dAdgrad_chi132113 + F23*F31*chi23*dAdgrad_chi133113 + F23*F32*chi21*dAdgrad_chi231113 + F23*F32*chi22*dAdgrad_chi232113 + F23*F32*chi23*dAdgrad_chi233113 + F23*F33*chi21*dAdgrad_chi331113 + F23*F33*chi22*dAdgrad_chi332113 + F23*F33*chi23*dAdgrad_chi333113 + _322113;
        dadgrad_chi(19,5) = F21*F31*chi21*dAdgrad_chi111112 + F21*F31*chi22*dAdgrad_chi112112 + F21*F31*chi23*dAdgrad_chi113112 + F21*F32*chi21*dAdgrad_chi211112 + F21*F32*chi22*dAdgrad_chi212112 + F21*F32*chi23*dAdgrad_chi213112 + F21*F33*chi21*dAdgrad_chi311112 + F21*F33*chi22*dAdgrad_chi312112 + F21*F33*chi23*dAdgrad_chi313112 + F22*F31*chi21*dAdgrad_chi121112 + F22*F31*chi22*dAdgrad_chi122112 + F22*F31*chi23*dAdgrad_chi123112 + F22*F32*chi21*dAdgrad_chi221112 + F22*F32*chi22*dAdgrad_chi222112 + F22*F32*chi23*dAdgrad_chi223112 + F22*F33*chi21*dAdgrad_chi321112 + F22*F33*chi22*dAdgrad_chi322112 + F22*F33*chi23*dAdgrad_chi323112 + F23*F31*chi21*dAdgrad_chi131112 + F23*F31*chi22*dAdgrad_chi132112 + F23*F31*chi23*dAdgrad_chi133112 + F23*F32*chi21*dAdgrad_chi231112 + F23*F32*chi22*dAdgrad_chi232112 + F23*F32*chi23*dAdgrad_chi233112 + F23*F33*chi21*dAdgrad_chi331112 + F23*F33*chi22*dAdgrad_chi332112 + F23*F33*chi23*dAdgrad_chi333112 + _322112;
        dadgrad_chi(19,6) = F21*F31*chi21*dAdgrad_chi111132 + F21*F31*chi22*dAdgrad_chi112132 + F21*F31*chi23*dAdgrad_chi113132 + F21*F32*chi21*dAdgrad_chi211132 + F21*F32*chi22*dAdgrad_chi212132 + F21*F32*chi23*dAdgrad_chi213132 + F21*F33*chi21*dAdgrad_chi311132 + F21*F33*chi22*dAdgrad_chi312132 + F21*F33*chi23*dAdgrad_chi313132 + F22*F31*chi21*dAdgrad_chi121132 + F22*F31*chi22*dAdgrad_chi122132 + F22*F31*chi23*dAdgrad_chi123132 + F22*F32*chi21*dAdgrad_chi221132 + F22*F32*chi22*dAdgrad_chi222132 + F22*F32*chi23*dAdgrad_chi223132 + F22*F33*chi21*dAdgrad_chi321132 + F22*F33*chi22*dAdgrad_chi322132 + F22*F33*chi23*dAdgrad_chi323132 + F23*F31*chi21*dAdgrad_chi131132 + F23*F31*chi22*dAdgrad_chi132132 + F23*F31*chi23*dAdgrad_chi133132 + F23*F32*chi21*dAdgrad_chi231132 + F23*F32*chi22*dAdgrad_chi232132 + F23*F32*chi23*dAdgrad_chi233132 + F23*F33*chi21*dAdgrad_chi331132 + F23*F33*chi22*dAdgrad_chi332132 + F23*F33*chi23*dAdgrad_chi333132 + _322132;
        dadgrad_chi(19,7) = F21*F31*chi21*dAdgrad_chi111131 + F21*F31*chi22*dAdgrad_chi112131 + F21*F31*chi23*dAdgrad_chi113131 + F21*F32*chi21*dAdgrad_chi211131 + F21*F32*chi22*dAdgrad_chi212131 + F21*F32*chi23*dAdgrad_chi213131 + F21*F33*chi21*dAdgrad_chi311131 + F21*F33*chi22*dAdgrad_chi312131 + F21*F33*chi23*dAdgrad_chi313131 + F22*F31*chi21*dAdgrad_chi121131 + F22*F31*chi22*dAdgrad_chi122131 + F22*F31*chi23*dAdgrad_chi123131 + F22*F32*chi21*dAdgrad_chi221131 + F22*F32*chi22*dAdgrad_chi222131 + F22*F32*chi23*dAdgrad_chi223131 + F22*F33*chi21*dAdgrad_chi321131 + F22*F33*chi22*dAdgrad_chi322131 + F22*F33*chi23*dAdgrad_chi323131 + F23*F31*chi21*dAdgrad_chi131131 + F23*F31*chi22*dAdgrad_chi132131 + F23*F31*chi23*dAdgrad_chi133131 + F23*F32*chi21*dAdgrad_chi231131 + F23*F32*chi22*dAdgrad_chi232131 + F23*F32*chi23*dAdgrad_chi233131 + F23*F33*chi21*dAdgrad_chi331131 + F23*F33*chi22*dAdgrad_chi332131 + F23*F33*chi23*dAdgrad_chi333131 + _322131;
        dadgrad_chi(19,8) = F21*F31*chi21*dAdgrad_chi111121 + F21*F31*chi22*dAdgrad_chi112121 + F21*F31*chi23*dAdgrad_chi113121 + F21*F32*chi21*dAdgrad_chi211121 + F21*F32*chi22*dAdgrad_chi212121 + F21*F32*chi23*dAdgrad_chi213121 + F21*F33*chi21*dAdgrad_chi311121 + F21*F33*chi22*dAdgrad_chi312121 + F21*F33*chi23*dAdgrad_chi313121 + F22*F31*chi21*dAdgrad_chi121121 + F22*F31*chi22*dAdgrad_chi122121 + F22*F31*chi23*dAdgrad_chi123121 + F22*F32*chi21*dAdgrad_chi221121 + F22*F32*chi22*dAdgrad_chi222121 + F22*F32*chi23*dAdgrad_chi223121 + F22*F33*chi21*dAdgrad_chi321121 + F22*F33*chi22*dAdgrad_chi322121 + F22*F33*chi23*dAdgrad_chi323121 + F23*F31*chi21*dAdgrad_chi131121 + F23*F31*chi22*dAdgrad_chi132121 + F23*F31*chi23*dAdgrad_chi133121 + F23*F32*chi21*dAdgrad_chi231121 + F23*F32*chi22*dAdgrad_chi232121 + F23*F32*chi23*dAdgrad_chi233121 + F23*F33*chi21*dAdgrad_chi331121 + F23*F33*chi22*dAdgrad_chi332121 + F23*F33*chi23*dAdgrad_chi333121 + _322121;
        dadgrad_chi(19,9) = F21*F31*chi21*dAdgrad_chi111211 + F21*F31*chi22*dAdgrad_chi112211 + F21*F31*chi23*dAdgrad_chi113211 + F21*F32*chi21*dAdgrad_chi211211 + F21*F32*chi22*dAdgrad_chi212211 + F21*F32*chi23*dAdgrad_chi213211 + F21*F33*chi21*dAdgrad_chi311211 + F21*F33*chi22*dAdgrad_chi312211 + F21*F33*chi23*dAdgrad_chi313211 + F22*F31*chi21*dAdgrad_chi121211 + F22*F31*chi22*dAdgrad_chi122211 + F22*F31*chi23*dAdgrad_chi123211 + F22*F32*chi21*dAdgrad_chi221211 + F22*F32*chi22*dAdgrad_chi222211 + F22*F32*chi23*dAdgrad_chi223211 + F22*F33*chi21*dAdgrad_chi321211 + F22*F33*chi22*dAdgrad_chi322211 + F22*F33*chi23*dAdgrad_chi323211 + F23*F31*chi21*dAdgrad_chi131211 + F23*F31*chi22*dAdgrad_chi132211 + F23*F31*chi23*dAdgrad_chi133211 + F23*F32*chi21*dAdgrad_chi231211 + F23*F32*chi22*dAdgrad_chi232211 + F23*F32*chi23*dAdgrad_chi233211 + F23*F33*chi21*dAdgrad_chi331211 + F23*F33*chi22*dAdgrad_chi332211 + F23*F33*chi23*dAdgrad_chi333211 + _322211;
        dadgrad_chi(19,10) = F21*F31*chi21*dAdgrad_chi111222 + F21*F31*chi22*dAdgrad_chi112222 + F21*F31*chi23*dAdgrad_chi113222 + F21*F32*chi21*dAdgrad_chi211222 + F21*F32*chi22*dAdgrad_chi212222 + F21*F32*chi23*dAdgrad_chi213222 + F21*F33*chi21*dAdgrad_chi311222 + F21*F33*chi22*dAdgrad_chi312222 + F21*F33*chi23*dAdgrad_chi313222 + F22*F31*chi21*dAdgrad_chi121222 + F22*F31*chi22*dAdgrad_chi122222 + F22*F31*chi23*dAdgrad_chi123222 + F22*F32*chi21*dAdgrad_chi221222 + F22*F32*chi22*dAdgrad_chi222222 + F22*F32*chi23*dAdgrad_chi223222 + F22*F33*chi21*dAdgrad_chi321222 + F22*F33*chi22*dAdgrad_chi322222 + F22*F33*chi23*dAdgrad_chi323222 + F23*F31*chi21*dAdgrad_chi131222 + F23*F31*chi22*dAdgrad_chi132222 + F23*F31*chi23*dAdgrad_chi133222 + F23*F32*chi21*dAdgrad_chi231222 + F23*F32*chi22*dAdgrad_chi232222 + F23*F32*chi23*dAdgrad_chi233222 + F23*F33*chi21*dAdgrad_chi331222 + F23*F33*chi22*dAdgrad_chi332222 + F23*F33*chi23*dAdgrad_chi333222 + _322222;
        dadgrad_chi(19,11) = F21*F31*chi21*dAdgrad_chi111233 + F21*F31*chi22*dAdgrad_chi112233 + F21*F31*chi23*dAdgrad_chi113233 + F21*F32*chi21*dAdgrad_chi211233 + F21*F32*chi22*dAdgrad_chi212233 + F21*F32*chi23*dAdgrad_chi213233 + F21*F33*chi21*dAdgrad_chi311233 + F21*F33*chi22*dAdgrad_chi312233 + F21*F33*chi23*dAdgrad_chi313233 + F22*F31*chi21*dAdgrad_chi121233 + F22*F31*chi22*dAdgrad_chi122233 + F22*F31*chi23*dAdgrad_chi123233 + F22*F32*chi21*dAdgrad_chi221233 + F22*F32*chi22*dAdgrad_chi222233 + F22*F32*chi23*dAdgrad_chi223233 + F22*F33*chi21*dAdgrad_chi321233 + F22*F33*chi22*dAdgrad_chi322233 + F22*F33*chi23*dAdgrad_chi323233 + F23*F31*chi21*dAdgrad_chi131233 + F23*F31*chi22*dAdgrad_chi132233 + F23*F31*chi23*dAdgrad_chi133233 + F23*F32*chi21*dAdgrad_chi231233 + F23*F32*chi22*dAdgrad_chi232233 + F23*F32*chi23*dAdgrad_chi233233 + F23*F33*chi21*dAdgrad_chi331233 + F23*F33*chi22*dAdgrad_chi332233 + F23*F33*chi23*dAdgrad_chi333233 + _322233;
        dadgrad_chi(19,12) = F21*F31*chi21*dAdgrad_chi111223 + F21*F31*chi22*dAdgrad_chi112223 + F21*F31*chi23*dAdgrad_chi113223 + F21*F32*chi21*dAdgrad_chi211223 + F21*F32*chi22*dAdgrad_chi212223 + F21*F32*chi23*dAdgrad_chi213223 + F21*F33*chi21*dAdgrad_chi311223 + F21*F33*chi22*dAdgrad_chi312223 + F21*F33*chi23*dAdgrad_chi313223 + F22*F31*chi21*dAdgrad_chi121223 + F22*F31*chi22*dAdgrad_chi122223 + F22*F31*chi23*dAdgrad_chi123223 + F22*F32*chi21*dAdgrad_chi221223 + F22*F32*chi22*dAdgrad_chi222223 + F22*F32*chi23*dAdgrad_chi223223 + F22*F33*chi21*dAdgrad_chi321223 + F22*F33*chi22*dAdgrad_chi322223 + F22*F33*chi23*dAdgrad_chi323223 + F23*F31*chi21*dAdgrad_chi131223 + F23*F31*chi22*dAdgrad_chi132223 + F23*F31*chi23*dAdgrad_chi133223 + F23*F32*chi21*dAdgrad_chi231223 + F23*F32*chi22*dAdgrad_chi232223 + F23*F32*chi23*dAdgrad_chi233223 + F23*F33*chi21*dAdgrad_chi331223 + F23*F33*chi22*dAdgrad_chi332223 + F23*F33*chi23*dAdgrad_chi333223 + _322223;
        dadgrad_chi(19,13) = F21*F31*chi21*dAdgrad_chi111213 + F21*F31*chi22*dAdgrad_chi112213 + F21*F31*chi23*dAdgrad_chi113213 + F21*F32*chi21*dAdgrad_chi211213 + F21*F32*chi22*dAdgrad_chi212213 + F21*F32*chi23*dAdgrad_chi213213 + F21*F33*chi21*dAdgrad_chi311213 + F21*F33*chi22*dAdgrad_chi312213 + F21*F33*chi23*dAdgrad_chi313213 + F22*F31*chi21*dAdgrad_chi121213 + F22*F31*chi22*dAdgrad_chi122213 + F22*F31*chi23*dAdgrad_chi123213 + F22*F32*chi21*dAdgrad_chi221213 + F22*F32*chi22*dAdgrad_chi222213 + F22*F32*chi23*dAdgrad_chi223213 + F22*F33*chi21*dAdgrad_chi321213 + F22*F33*chi22*dAdgrad_chi322213 + F22*F33*chi23*dAdgrad_chi323213 + F23*F31*chi21*dAdgrad_chi131213 + F23*F31*chi22*dAdgrad_chi132213 + F23*F31*chi23*dAdgrad_chi133213 + F23*F32*chi21*dAdgrad_chi231213 + F23*F32*chi22*dAdgrad_chi232213 + F23*F32*chi23*dAdgrad_chi233213 + F23*F33*chi21*dAdgrad_chi331213 + F23*F33*chi22*dAdgrad_chi332213 + F23*F33*chi23*dAdgrad_chi333213 + _322213;
        dadgrad_chi(19,14) = F21*F31*chi21*dAdgrad_chi111212 + F21*F31*chi22*dAdgrad_chi112212 + F21*F31*chi23*dAdgrad_chi113212 + F21*F32*chi21*dAdgrad_chi211212 + F21*F32*chi22*dAdgrad_chi212212 + F21*F32*chi23*dAdgrad_chi213212 + F21*F33*chi21*dAdgrad_chi311212 + F21*F33*chi22*dAdgrad_chi312212 + F21*F33*chi23*dAdgrad_chi313212 + F22*F31*chi21*dAdgrad_chi121212 + F22*F31*chi22*dAdgrad_chi122212 + F22*F31*chi23*dAdgrad_chi123212 + F22*F32*chi21*dAdgrad_chi221212 + F22*F32*chi22*dAdgrad_chi222212 + F22*F32*chi23*dAdgrad_chi223212 + F22*F33*chi21*dAdgrad_chi321212 + F22*F33*chi22*dAdgrad_chi322212 + F22*F33*chi23*dAdgrad_chi323212 + F23*F31*chi21*dAdgrad_chi131212 + F23*F31*chi22*dAdgrad_chi132212 + F23*F31*chi23*dAdgrad_chi133212 + F23*F32*chi21*dAdgrad_chi231212 + F23*F32*chi22*dAdgrad_chi232212 + F23*F32*chi23*dAdgrad_chi233212 + F23*F33*chi21*dAdgrad_chi331212 + F23*F33*chi22*dAdgrad_chi332212 + F23*F33*chi23*dAdgrad_chi333212 + _322212;
        dadgrad_chi(19,15) = F21*F31*chi21*dAdgrad_chi111232 + F21*F31*chi22*dAdgrad_chi112232 + F21*F31*chi23*dAdgrad_chi113232 + F21*F32*chi21*dAdgrad_chi211232 + F21*F32*chi22*dAdgrad_chi212232 + F21*F32*chi23*dAdgrad_chi213232 + F21*F33*chi21*dAdgrad_chi311232 + F21*F33*chi22*dAdgrad_chi312232 + F21*F33*chi23*dAdgrad_chi313232 + F22*F31*chi21*dAdgrad_chi121232 + F22*F31*chi22*dAdgrad_chi122232 + F22*F31*chi23*dAdgrad_chi123232 + F22*F32*chi21*dAdgrad_chi221232 + F22*F32*chi22*dAdgrad_chi222232 + F22*F32*chi23*dAdgrad_chi223232 + F22*F33*chi21*dAdgrad_chi321232 + F22*F33*chi22*dAdgrad_chi322232 + F22*F33*chi23*dAdgrad_chi323232 + F23*F31*chi21*dAdgrad_chi131232 + F23*F31*chi22*dAdgrad_chi132232 + F23*F31*chi23*dAdgrad_chi133232 + F23*F32*chi21*dAdgrad_chi231232 + F23*F32*chi22*dAdgrad_chi232232 + F23*F32*chi23*dAdgrad_chi233232 + F23*F33*chi21*dAdgrad_chi331232 + F23*F33*chi22*dAdgrad_chi332232 + F23*F33*chi23*dAdgrad_chi333232 + _322232;
        dadgrad_chi(19,16) = F21*F31*chi21*dAdgrad_chi111231 + F21*F31*chi22*dAdgrad_chi112231 + F21*F31*chi23*dAdgrad_chi113231 + F21*F32*chi21*dAdgrad_chi211231 + F21*F32*chi22*dAdgrad_chi212231 + F21*F32*chi23*dAdgrad_chi213231 + F21*F33*chi21*dAdgrad_chi311231 + F21*F33*chi22*dAdgrad_chi312231 + F21*F33*chi23*dAdgrad_chi313231 + F22*F31*chi21*dAdgrad_chi121231 + F22*F31*chi22*dAdgrad_chi122231 + F22*F31*chi23*dAdgrad_chi123231 + F22*F32*chi21*dAdgrad_chi221231 + F22*F32*chi22*dAdgrad_chi222231 + F22*F32*chi23*dAdgrad_chi223231 + F22*F33*chi21*dAdgrad_chi321231 + F22*F33*chi22*dAdgrad_chi322231 + F22*F33*chi23*dAdgrad_chi323231 + F23*F31*chi21*dAdgrad_chi131231 + F23*F31*chi22*dAdgrad_chi132231 + F23*F31*chi23*dAdgrad_chi133231 + F23*F32*chi21*dAdgrad_chi231231 + F23*F32*chi22*dAdgrad_chi232231 + F23*F32*chi23*dAdgrad_chi233231 + F23*F33*chi21*dAdgrad_chi331231 + F23*F33*chi22*dAdgrad_chi332231 + F23*F33*chi23*dAdgrad_chi333231 + _322231;
        dadgrad_chi(19,17) = F21*F31*chi21*dAdgrad_chi111221 + F21*F31*chi22*dAdgrad_chi112221 + F21*F31*chi23*dAdgrad_chi113221 + F21*F32*chi21*dAdgrad_chi211221 + F21*F32*chi22*dAdgrad_chi212221 + F21*F32*chi23*dAdgrad_chi213221 + F21*F33*chi21*dAdgrad_chi311221 + F21*F33*chi22*dAdgrad_chi312221 + F21*F33*chi23*dAdgrad_chi313221 + F22*F31*chi21*dAdgrad_chi121221 + F22*F31*chi22*dAdgrad_chi122221 + F22*F31*chi23*dAdgrad_chi123221 + F22*F32*chi21*dAdgrad_chi221221 + F22*F32*chi22*dAdgrad_chi222221 + F22*F32*chi23*dAdgrad_chi223221 + F22*F33*chi21*dAdgrad_chi321221 + F22*F33*chi22*dAdgrad_chi322221 + F22*F33*chi23*dAdgrad_chi323221 + F23*F31*chi21*dAdgrad_chi131221 + F23*F31*chi22*dAdgrad_chi132221 + F23*F31*chi23*dAdgrad_chi133221 + F23*F32*chi21*dAdgrad_chi231221 + F23*F32*chi22*dAdgrad_chi232221 + F23*F32*chi23*dAdgrad_chi233221 + F23*F33*chi21*dAdgrad_chi331221 + F23*F33*chi22*dAdgrad_chi332221 + F23*F33*chi23*dAdgrad_chi333221 + _322221;
        dadgrad_chi(19,18) = F21*F31*chi21*dAdgrad_chi111311 + F21*F31*chi22*dAdgrad_chi112311 + F21*F31*chi23*dAdgrad_chi113311 + F21*F32*chi21*dAdgrad_chi211311 + F21*F32*chi22*dAdgrad_chi212311 + F21*F32*chi23*dAdgrad_chi213311 + F21*F33*chi21*dAdgrad_chi311311 + F21*F33*chi22*dAdgrad_chi312311 + F21*F33*chi23*dAdgrad_chi313311 + F22*F31*chi21*dAdgrad_chi121311 + F22*F31*chi22*dAdgrad_chi122311 + F22*F31*chi23*dAdgrad_chi123311 + F22*F32*chi21*dAdgrad_chi221311 + F22*F32*chi22*dAdgrad_chi222311 + F22*F32*chi23*dAdgrad_chi223311 + F22*F33*chi21*dAdgrad_chi321311 + F22*F33*chi22*dAdgrad_chi322311 + F22*F33*chi23*dAdgrad_chi323311 + F23*F31*chi21*dAdgrad_chi131311 + F23*F31*chi22*dAdgrad_chi132311 + F23*F31*chi23*dAdgrad_chi133311 + F23*F32*chi21*dAdgrad_chi231311 + F23*F32*chi22*dAdgrad_chi232311 + F23*F32*chi23*dAdgrad_chi233311 + F23*F33*chi21*dAdgrad_chi331311 + F23*F33*chi22*dAdgrad_chi332311 + F23*F33*chi23*dAdgrad_chi333311 + _322311;
        dadgrad_chi(19,19) = F21*F31*chi21*dAdgrad_chi111322 + F21*F31*chi22*dAdgrad_chi112322 + F21*F31*chi23*dAdgrad_chi113322 + F21*F32*chi21*dAdgrad_chi211322 + F21*F32*chi22*dAdgrad_chi212322 + F21*F32*chi23*dAdgrad_chi213322 + F21*F33*chi21*dAdgrad_chi311322 + F21*F33*chi22*dAdgrad_chi312322 + F21*F33*chi23*dAdgrad_chi313322 + F22*F31*chi21*dAdgrad_chi121322 + F22*F31*chi22*dAdgrad_chi122322 + F22*F31*chi23*dAdgrad_chi123322 + F22*F32*chi21*dAdgrad_chi221322 + F22*F32*chi22*dAdgrad_chi222322 + F22*F32*chi23*dAdgrad_chi223322 + F22*F33*chi21*dAdgrad_chi321322 + F22*F33*chi22*dAdgrad_chi322322 + F22*F33*chi23*dAdgrad_chi323322 + F23*F31*chi21*dAdgrad_chi131322 + F23*F31*chi22*dAdgrad_chi132322 + F23*F31*chi23*dAdgrad_chi133322 + F23*F32*chi21*dAdgrad_chi231322 + F23*F32*chi22*dAdgrad_chi232322 + F23*F32*chi23*dAdgrad_chi233322 + F23*F33*chi21*dAdgrad_chi331322 + F23*F33*chi22*dAdgrad_chi332322 + F23*F33*chi23*dAdgrad_chi333322 + _322322;
        dadgrad_chi(19,20) = F21*F31*chi21*dAdgrad_chi111333 + F21*F31*chi22*dAdgrad_chi112333 + F21*F31*chi23*dAdgrad_chi113333 + F21*F32*chi21*dAdgrad_chi211333 + F21*F32*chi22*dAdgrad_chi212333 + F21*F32*chi23*dAdgrad_chi213333 + F21*F33*chi21*dAdgrad_chi311333 + F21*F33*chi22*dAdgrad_chi312333 + F21*F33*chi23*dAdgrad_chi313333 + F22*F31*chi21*dAdgrad_chi121333 + F22*F31*chi22*dAdgrad_chi122333 + F22*F31*chi23*dAdgrad_chi123333 + F22*F32*chi21*dAdgrad_chi221333 + F22*F32*chi22*dAdgrad_chi222333 + F22*F32*chi23*dAdgrad_chi223333 + F22*F33*chi21*dAdgrad_chi321333 + F22*F33*chi22*dAdgrad_chi322333 + F22*F33*chi23*dAdgrad_chi323333 + F23*F31*chi21*dAdgrad_chi131333 + F23*F31*chi22*dAdgrad_chi132333 + F23*F31*chi23*dAdgrad_chi133333 + F23*F32*chi21*dAdgrad_chi231333 + F23*F32*chi22*dAdgrad_chi232333 + F23*F32*chi23*dAdgrad_chi233333 + F23*F33*chi21*dAdgrad_chi331333 + F23*F33*chi22*dAdgrad_chi332333 + F23*F33*chi23*dAdgrad_chi333333 + _322333;
        dadgrad_chi(19,21) = F21*F31*chi21*dAdgrad_chi111323 + F21*F31*chi22*dAdgrad_chi112323 + F21*F31*chi23*dAdgrad_chi113323 + F21*F32*chi21*dAdgrad_chi211323 + F21*F32*chi22*dAdgrad_chi212323 + F21*F32*chi23*dAdgrad_chi213323 + F21*F33*chi21*dAdgrad_chi311323 + F21*F33*chi22*dAdgrad_chi312323 + F21*F33*chi23*dAdgrad_chi313323 + F22*F31*chi21*dAdgrad_chi121323 + F22*F31*chi22*dAdgrad_chi122323 + F22*F31*chi23*dAdgrad_chi123323 + F22*F32*chi21*dAdgrad_chi221323 + F22*F32*chi22*dAdgrad_chi222323 + F22*F32*chi23*dAdgrad_chi223323 + F22*F33*chi21*dAdgrad_chi321323 + F22*F33*chi22*dAdgrad_chi322323 + F22*F33*chi23*dAdgrad_chi323323 + F23*F31*chi21*dAdgrad_chi131323 + F23*F31*chi22*dAdgrad_chi132323 + F23*F31*chi23*dAdgrad_chi133323 + F23*F32*chi21*dAdgrad_chi231323 + F23*F32*chi22*dAdgrad_chi232323 + F23*F32*chi23*dAdgrad_chi233323 + F23*F33*chi21*dAdgrad_chi331323 + F23*F33*chi22*dAdgrad_chi332323 + F23*F33*chi23*dAdgrad_chi333323 + _322323;
        dadgrad_chi(19,22) = F21*F31*chi21*dAdgrad_chi111313 + F21*F31*chi22*dAdgrad_chi112313 + F21*F31*chi23*dAdgrad_chi113313 + F21*F32*chi21*dAdgrad_chi211313 + F21*F32*chi22*dAdgrad_chi212313 + F21*F32*chi23*dAdgrad_chi213313 + F21*F33*chi21*dAdgrad_chi311313 + F21*F33*chi22*dAdgrad_chi312313 + F21*F33*chi23*dAdgrad_chi313313 + F22*F31*chi21*dAdgrad_chi121313 + F22*F31*chi22*dAdgrad_chi122313 + F22*F31*chi23*dAdgrad_chi123313 + F22*F32*chi21*dAdgrad_chi221313 + F22*F32*chi22*dAdgrad_chi222313 + F22*F32*chi23*dAdgrad_chi223313 + F22*F33*chi21*dAdgrad_chi321313 + F22*F33*chi22*dAdgrad_chi322313 + F22*F33*chi23*dAdgrad_chi323313 + F23*F31*chi21*dAdgrad_chi131313 + F23*F31*chi22*dAdgrad_chi132313 + F23*F31*chi23*dAdgrad_chi133313 + F23*F32*chi21*dAdgrad_chi231313 + F23*F32*chi22*dAdgrad_chi232313 + F23*F32*chi23*dAdgrad_chi233313 + F23*F33*chi21*dAdgrad_chi331313 + F23*F33*chi22*dAdgrad_chi332313 + F23*F33*chi23*dAdgrad_chi333313 + _322313;
        dadgrad_chi(19,23) = F21*F31*chi21*dAdgrad_chi111312 + F21*F31*chi22*dAdgrad_chi112312 + F21*F31*chi23*dAdgrad_chi113312 + F21*F32*chi21*dAdgrad_chi211312 + F21*F32*chi22*dAdgrad_chi212312 + F21*F32*chi23*dAdgrad_chi213312 + F21*F33*chi21*dAdgrad_chi311312 + F21*F33*chi22*dAdgrad_chi312312 + F21*F33*chi23*dAdgrad_chi313312 + F22*F31*chi21*dAdgrad_chi121312 + F22*F31*chi22*dAdgrad_chi122312 + F22*F31*chi23*dAdgrad_chi123312 + F22*F32*chi21*dAdgrad_chi221312 + F22*F32*chi22*dAdgrad_chi222312 + F22*F32*chi23*dAdgrad_chi223312 + F22*F33*chi21*dAdgrad_chi321312 + F22*F33*chi22*dAdgrad_chi322312 + F22*F33*chi23*dAdgrad_chi323312 + F23*F31*chi21*dAdgrad_chi131312 + F23*F31*chi22*dAdgrad_chi132312 + F23*F31*chi23*dAdgrad_chi133312 + F23*F32*chi21*dAdgrad_chi231312 + F23*F32*chi22*dAdgrad_chi232312 + F23*F32*chi23*dAdgrad_chi233312 + F23*F33*chi21*dAdgrad_chi331312 + F23*F33*chi22*dAdgrad_chi332312 + F23*F33*chi23*dAdgrad_chi333312 + _322312;
        dadgrad_chi(19,24) = F21*F31*chi21*dAdgrad_chi111332 + F21*F31*chi22*dAdgrad_chi112332 + F21*F31*chi23*dAdgrad_chi113332 + F21*F32*chi21*dAdgrad_chi211332 + F21*F32*chi22*dAdgrad_chi212332 + F21*F32*chi23*dAdgrad_chi213332 + F21*F33*chi21*dAdgrad_chi311332 + F21*F33*chi22*dAdgrad_chi312332 + F21*F33*chi23*dAdgrad_chi313332 + F22*F31*chi21*dAdgrad_chi121332 + F22*F31*chi22*dAdgrad_chi122332 + F22*F31*chi23*dAdgrad_chi123332 + F22*F32*chi21*dAdgrad_chi221332 + F22*F32*chi22*dAdgrad_chi222332 + F22*F32*chi23*dAdgrad_chi223332 + F22*F33*chi21*dAdgrad_chi321332 + F22*F33*chi22*dAdgrad_chi322332 + F22*F33*chi23*dAdgrad_chi323332 + F23*F31*chi21*dAdgrad_chi131332 + F23*F31*chi22*dAdgrad_chi132332 + F23*F31*chi23*dAdgrad_chi133332 + F23*F32*chi21*dAdgrad_chi231332 + F23*F32*chi22*dAdgrad_chi232332 + F23*F32*chi23*dAdgrad_chi233332 + F23*F33*chi21*dAdgrad_chi331332 + F23*F33*chi22*dAdgrad_chi332332 + F23*F33*chi23*dAdgrad_chi333332 + _322332;
        dadgrad_chi(19,25) = F21*F31*chi21*dAdgrad_chi111331 + F21*F31*chi22*dAdgrad_chi112331 + F21*F31*chi23*dAdgrad_chi113331 + F21*F32*chi21*dAdgrad_chi211331 + F21*F32*chi22*dAdgrad_chi212331 + F21*F32*chi23*dAdgrad_chi213331 + F21*F33*chi21*dAdgrad_chi311331 + F21*F33*chi22*dAdgrad_chi312331 + F21*F33*chi23*dAdgrad_chi313331 + F22*F31*chi21*dAdgrad_chi121331 + F22*F31*chi22*dAdgrad_chi122331 + F22*F31*chi23*dAdgrad_chi123331 + F22*F32*chi21*dAdgrad_chi221331 + F22*F32*chi22*dAdgrad_chi222331 + F22*F32*chi23*dAdgrad_chi223331 + F22*F33*chi21*dAdgrad_chi321331 + F22*F33*chi22*dAdgrad_chi322331 + F22*F33*chi23*dAdgrad_chi323331 + F23*F31*chi21*dAdgrad_chi131331 + F23*F31*chi22*dAdgrad_chi132331 + F23*F31*chi23*dAdgrad_chi133331 + F23*F32*chi21*dAdgrad_chi231331 + F23*F32*chi22*dAdgrad_chi232331 + F23*F32*chi23*dAdgrad_chi233331 + F23*F33*chi21*dAdgrad_chi331331 + F23*F33*chi22*dAdgrad_chi332331 + F23*F33*chi23*dAdgrad_chi333331 + _322331;
        dadgrad_chi(19,26) = F21*F31*chi21*dAdgrad_chi111321 + F21*F31*chi22*dAdgrad_chi112321 + F21*F31*chi23*dAdgrad_chi113321 + F21*F32*chi21*dAdgrad_chi211321 + F21*F32*chi22*dAdgrad_chi212321 + F21*F32*chi23*dAdgrad_chi213321 + F21*F33*chi21*dAdgrad_chi311321 + F21*F33*chi22*dAdgrad_chi312321 + F21*F33*chi23*dAdgrad_chi313321 + F22*F31*chi21*dAdgrad_chi121321 + F22*F31*chi22*dAdgrad_chi122321 + F22*F31*chi23*dAdgrad_chi123321 + F22*F32*chi21*dAdgrad_chi221321 + F22*F32*chi22*dAdgrad_chi222321 + F22*F32*chi23*dAdgrad_chi223321 + F22*F33*chi21*dAdgrad_chi321321 + F22*F33*chi22*dAdgrad_chi322321 + F22*F33*chi23*dAdgrad_chi323321 + F23*F31*chi21*dAdgrad_chi131321 + F23*F31*chi22*dAdgrad_chi132321 + F23*F31*chi23*dAdgrad_chi133321 + F23*F32*chi21*dAdgrad_chi231321 + F23*F32*chi22*dAdgrad_chi232321 + F23*F32*chi23*dAdgrad_chi233321 + F23*F33*chi21*dAdgrad_chi331321 + F23*F33*chi22*dAdgrad_chi332321 + F23*F33*chi23*dAdgrad_chi333321 + _322321;
        dadgrad_chi(20,0) = F31*F31*chi31*dAdgrad_chi111111 + F31*F31*chi32*dAdgrad_chi112111 + F31*F31*chi33*dAdgrad_chi113111 + F31*F32*chi31*dAdgrad_chi121111 + F31*F32*chi31*dAdgrad_chi211111 + F31*F32*chi32*dAdgrad_chi122111 + F31*F32*chi32*dAdgrad_chi212111 + F31*F32*chi33*dAdgrad_chi123111 + F31*F32*chi33*dAdgrad_chi213111 + F31*F33*chi31*dAdgrad_chi131111 + F31*F33*chi31*dAdgrad_chi311111 + F31*F33*chi32*dAdgrad_chi132111 + F31*F33*chi32*dAdgrad_chi312111 + F31*F33*chi33*dAdgrad_chi133111 + F31*F33*chi33*dAdgrad_chi313111 + F32*F32*chi31*dAdgrad_chi221111 + F32*F32*chi32*dAdgrad_chi222111 + F32*F32*chi33*dAdgrad_chi223111 + F32*F33*chi31*dAdgrad_chi231111 + F32*F33*chi31*dAdgrad_chi321111 + F32*F33*chi32*dAdgrad_chi232111 + F32*F33*chi32*dAdgrad_chi322111 + F32*F33*chi33*dAdgrad_chi233111 + F32*F33*chi33*dAdgrad_chi323111 + F33*F33*chi31*dAdgrad_chi331111 + F33*F33*chi32*dAdgrad_chi332111 + F33*F33*chi33*dAdgrad_chi333111 + _333111;
        dadgrad_chi(20,1) = F31*F31*chi31*dAdgrad_chi111122 + F31*F31*chi32*dAdgrad_chi112122 + F31*F31*chi33*dAdgrad_chi113122 + F31*F32*chi31*dAdgrad_chi121122 + F31*F32*chi31*dAdgrad_chi211122 + F31*F32*chi32*dAdgrad_chi122122 + F31*F32*chi32*dAdgrad_chi212122 + F31*F32*chi33*dAdgrad_chi123122 + F31*F32*chi33*dAdgrad_chi213122 + F31*F33*chi31*dAdgrad_chi131122 + F31*F33*chi31*dAdgrad_chi311122 + F31*F33*chi32*dAdgrad_chi132122 + F31*F33*chi32*dAdgrad_chi312122 + F31*F33*chi33*dAdgrad_chi133122 + F31*F33*chi33*dAdgrad_chi313122 + F32*F32*chi31*dAdgrad_chi221122 + F32*F32*chi32*dAdgrad_chi222122 + F32*F32*chi33*dAdgrad_chi223122 + F32*F33*chi31*dAdgrad_chi231122 + F32*F33*chi31*dAdgrad_chi321122 + F32*F33*chi32*dAdgrad_chi232122 + F32*F33*chi32*dAdgrad_chi322122 + F32*F33*chi33*dAdgrad_chi233122 + F32*F33*chi33*dAdgrad_chi323122 + F33*F33*chi31*dAdgrad_chi331122 + F33*F33*chi32*dAdgrad_chi332122 + F33*F33*chi33*dAdgrad_chi333122 + _333122;
        dadgrad_chi(20,2) = F31*F31*chi31*dAdgrad_chi111133 + F31*F31*chi32*dAdgrad_chi112133 + F31*F31*chi33*dAdgrad_chi113133 + F31*F32*chi31*dAdgrad_chi121133 + F31*F32*chi31*dAdgrad_chi211133 + F31*F32*chi32*dAdgrad_chi122133 + F31*F32*chi32*dAdgrad_chi212133 + F31*F32*chi33*dAdgrad_chi123133 + F31*F32*chi33*dAdgrad_chi213133 + F31*F33*chi31*dAdgrad_chi131133 + F31*F33*chi31*dAdgrad_chi311133 + F31*F33*chi32*dAdgrad_chi132133 + F31*F33*chi32*dAdgrad_chi312133 + F31*F33*chi33*dAdgrad_chi133133 + F31*F33*chi33*dAdgrad_chi313133 + F32*F32*chi31*dAdgrad_chi221133 + F32*F32*chi32*dAdgrad_chi222133 + F32*F32*chi33*dAdgrad_chi223133 + F32*F33*chi31*dAdgrad_chi231133 + F32*F33*chi31*dAdgrad_chi321133 + F32*F33*chi32*dAdgrad_chi232133 + F32*F33*chi32*dAdgrad_chi322133 + F32*F33*chi33*dAdgrad_chi233133 + F32*F33*chi33*dAdgrad_chi323133 + F33*F33*chi31*dAdgrad_chi331133 + F33*F33*chi32*dAdgrad_chi332133 + F33*F33*chi33*dAdgrad_chi333133 + _333133;
        dadgrad_chi(20,3) = F31*F31*chi31*dAdgrad_chi111123 + F31*F31*chi32*dAdgrad_chi112123 + F31*F31*chi33*dAdgrad_chi113123 + F31*F32*chi31*dAdgrad_chi121123 + F31*F32*chi31*dAdgrad_chi211123 + F31*F32*chi32*dAdgrad_chi122123 + F31*F32*chi32*dAdgrad_chi212123 + F31*F32*chi33*dAdgrad_chi123123 + F31*F32*chi33*dAdgrad_chi213123 + F31*F33*chi31*dAdgrad_chi131123 + F31*F33*chi31*dAdgrad_chi311123 + F31*F33*chi32*dAdgrad_chi132123 + F31*F33*chi32*dAdgrad_chi312123 + F31*F33*chi33*dAdgrad_chi133123 + F31*F33*chi33*dAdgrad_chi313123 + F32*F32*chi31*dAdgrad_chi221123 + F32*F32*chi32*dAdgrad_chi222123 + F32*F32*chi33*dAdgrad_chi223123 + F32*F33*chi31*dAdgrad_chi231123 + F32*F33*chi31*dAdgrad_chi321123 + F32*F33*chi32*dAdgrad_chi232123 + F32*F33*chi32*dAdgrad_chi322123 + F32*F33*chi33*dAdgrad_chi233123 + F32*F33*chi33*dAdgrad_chi323123 + F33*F33*chi31*dAdgrad_chi331123 + F33*F33*chi32*dAdgrad_chi332123 + F33*F33*chi33*dAdgrad_chi333123 + _333123;
        dadgrad_chi(20,4) = F31*F31*chi31*dAdgrad_chi111113 + F31*F31*chi32*dAdgrad_chi112113 + F31*F31*chi33*dAdgrad_chi113113 + F31*F32*chi31*dAdgrad_chi121113 + F31*F32*chi31*dAdgrad_chi211113 + F31*F32*chi32*dAdgrad_chi122113 + F31*F32*chi32*dAdgrad_chi212113 + F31*F32*chi33*dAdgrad_chi123113 + F31*F32*chi33*dAdgrad_chi213113 + F31*F33*chi31*dAdgrad_chi131113 + F31*F33*chi31*dAdgrad_chi311113 + F31*F33*chi32*dAdgrad_chi132113 + F31*F33*chi32*dAdgrad_chi312113 + F31*F33*chi33*dAdgrad_chi133113 + F31*F33*chi33*dAdgrad_chi313113 + F32*F32*chi31*dAdgrad_chi221113 + F32*F32*chi32*dAdgrad_chi222113 + F32*F32*chi33*dAdgrad_chi223113 + F32*F33*chi31*dAdgrad_chi231113 + F32*F33*chi31*dAdgrad_chi321113 + F32*F33*chi32*dAdgrad_chi232113 + F32*F33*chi32*dAdgrad_chi322113 + F32*F33*chi33*dAdgrad_chi233113 + F32*F33*chi33*dAdgrad_chi323113 + F33*F33*chi31*dAdgrad_chi331113 + F33*F33*chi32*dAdgrad_chi332113 + F33*F33*chi33*dAdgrad_chi333113 + _333113;
        dadgrad_chi(20,5) = F31*F31*chi31*dAdgrad_chi111112 + F31*F31*chi32*dAdgrad_chi112112 + F31*F31*chi33*dAdgrad_chi113112 + F31*F32*chi31*dAdgrad_chi121112 + F31*F32*chi31*dAdgrad_chi211112 + F31*F32*chi32*dAdgrad_chi122112 + F31*F32*chi32*dAdgrad_chi212112 + F31*F32*chi33*dAdgrad_chi123112 + F31*F32*chi33*dAdgrad_chi213112 + F31*F33*chi31*dAdgrad_chi131112 + F31*F33*chi31*dAdgrad_chi311112 + F31*F33*chi32*dAdgrad_chi132112 + F31*F33*chi32*dAdgrad_chi312112 + F31*F33*chi33*dAdgrad_chi133112 + F31*F33*chi33*dAdgrad_chi313112 + F32*F32*chi31*dAdgrad_chi221112 + F32*F32*chi32*dAdgrad_chi222112 + F32*F32*chi33*dAdgrad_chi223112 + F32*F33*chi31*dAdgrad_chi231112 + F32*F33*chi31*dAdgrad_chi321112 + F32*F33*chi32*dAdgrad_chi232112 + F32*F33*chi32*dAdgrad_chi322112 + F32*F33*chi33*dAdgrad_chi233112 + F32*F33*chi33*dAdgrad_chi323112 + F33*F33*chi31*dAdgrad_chi331112 + F33*F33*chi32*dAdgrad_chi332112 + F33*F33*chi33*dAdgrad_chi333112 + _333112;
        dadgrad_chi(20,6) = F31*F31*chi31*dAdgrad_chi111132 + F31*F31*chi32*dAdgrad_chi112132 + F31*F31*chi33*dAdgrad_chi113132 + F31*F32*chi31*dAdgrad_chi121132 + F31*F32*chi31*dAdgrad_chi211132 + F31*F32*chi32*dAdgrad_chi122132 + F31*F32*chi32*dAdgrad_chi212132 + F31*F32*chi33*dAdgrad_chi123132 + F31*F32*chi33*dAdgrad_chi213132 + F31*F33*chi31*dAdgrad_chi131132 + F31*F33*chi31*dAdgrad_chi311132 + F31*F33*chi32*dAdgrad_chi132132 + F31*F33*chi32*dAdgrad_chi312132 + F31*F33*chi33*dAdgrad_chi133132 + F31*F33*chi33*dAdgrad_chi313132 + F32*F32*chi31*dAdgrad_chi221132 + F32*F32*chi32*dAdgrad_chi222132 + F32*F32*chi33*dAdgrad_chi223132 + F32*F33*chi31*dAdgrad_chi231132 + F32*F33*chi31*dAdgrad_chi321132 + F32*F33*chi32*dAdgrad_chi232132 + F32*F33*chi32*dAdgrad_chi322132 + F32*F33*chi33*dAdgrad_chi233132 + F32*F33*chi33*dAdgrad_chi323132 + F33*F33*chi31*dAdgrad_chi331132 + F33*F33*chi32*dAdgrad_chi332132 + F33*F33*chi33*dAdgrad_chi333132 + _333132;
        dadgrad_chi(20,7) = F31*F31*chi31*dAdgrad_chi111131 + F31*F31*chi32*dAdgrad_chi112131 + F31*F31*chi33*dAdgrad_chi113131 + F31*F32*chi31*dAdgrad_chi121131 + F31*F32*chi31*dAdgrad_chi211131 + F31*F32*chi32*dAdgrad_chi122131 + F31*F32*chi32*dAdgrad_chi212131 + F31*F32*chi33*dAdgrad_chi123131 + F31*F32*chi33*dAdgrad_chi213131 + F31*F33*chi31*dAdgrad_chi131131 + F31*F33*chi31*dAdgrad_chi311131 + F31*F33*chi32*dAdgrad_chi132131 + F31*F33*chi32*dAdgrad_chi312131 + F31*F33*chi33*dAdgrad_chi133131 + F31*F33*chi33*dAdgrad_chi313131 + F32*F32*chi31*dAdgrad_chi221131 + F32*F32*chi32*dAdgrad_chi222131 + F32*F32*chi33*dAdgrad_chi223131 + F32*F33*chi31*dAdgrad_chi231131 + F32*F33*chi31*dAdgrad_chi321131 + F32*F33*chi32*dAdgrad_chi232131 + F32*F33*chi32*dAdgrad_chi322131 + F32*F33*chi33*dAdgrad_chi233131 + F32*F33*chi33*dAdgrad_chi323131 + F33*F33*chi31*dAdgrad_chi331131 + F33*F33*chi32*dAdgrad_chi332131 + F33*F33*chi33*dAdgrad_chi333131 + _333131;
        dadgrad_chi(20,8) = F31*F31*chi31*dAdgrad_chi111121 + F31*F31*chi32*dAdgrad_chi112121 + F31*F31*chi33*dAdgrad_chi113121 + F31*F32*chi31*dAdgrad_chi121121 + F31*F32*chi31*dAdgrad_chi211121 + F31*F32*chi32*dAdgrad_chi122121 + F31*F32*chi32*dAdgrad_chi212121 + F31*F32*chi33*dAdgrad_chi123121 + F31*F32*chi33*dAdgrad_chi213121 + F31*F33*chi31*dAdgrad_chi131121 + F31*F33*chi31*dAdgrad_chi311121 + F31*F33*chi32*dAdgrad_chi132121 + F31*F33*chi32*dAdgrad_chi312121 + F31*F33*chi33*dAdgrad_chi133121 + F31*F33*chi33*dAdgrad_chi313121 + F32*F32*chi31*dAdgrad_chi221121 + F32*F32*chi32*dAdgrad_chi222121 + F32*F32*chi33*dAdgrad_chi223121 + F32*F33*chi31*dAdgrad_chi231121 + F32*F33*chi31*dAdgrad_chi321121 + F32*F33*chi32*dAdgrad_chi232121 + F32*F33*chi32*dAdgrad_chi322121 + F32*F33*chi33*dAdgrad_chi233121 + F32*F33*chi33*dAdgrad_chi323121 + F33*F33*chi31*dAdgrad_chi331121 + F33*F33*chi32*dAdgrad_chi332121 + F33*F33*chi33*dAdgrad_chi333121 + _333121;
        dadgrad_chi(20,9) = F31*F31*chi31*dAdgrad_chi111211 + F31*F31*chi32*dAdgrad_chi112211 + F31*F31*chi33*dAdgrad_chi113211 + F31*F32*chi31*dAdgrad_chi121211 + F31*F32*chi31*dAdgrad_chi211211 + F31*F32*chi32*dAdgrad_chi122211 + F31*F32*chi32*dAdgrad_chi212211 + F31*F32*chi33*dAdgrad_chi123211 + F31*F32*chi33*dAdgrad_chi213211 + F31*F33*chi31*dAdgrad_chi131211 + F31*F33*chi31*dAdgrad_chi311211 + F31*F33*chi32*dAdgrad_chi132211 + F31*F33*chi32*dAdgrad_chi312211 + F31*F33*chi33*dAdgrad_chi133211 + F31*F33*chi33*dAdgrad_chi313211 + F32*F32*chi31*dAdgrad_chi221211 + F32*F32*chi32*dAdgrad_chi222211 + F32*F32*chi33*dAdgrad_chi223211 + F32*F33*chi31*dAdgrad_chi231211 + F32*F33*chi31*dAdgrad_chi321211 + F32*F33*chi32*dAdgrad_chi232211 + F32*F33*chi32*dAdgrad_chi322211 + F32*F33*chi33*dAdgrad_chi233211 + F32*F33*chi33*dAdgrad_chi323211 + F33*F33*chi31*dAdgrad_chi331211 + F33*F33*chi32*dAdgrad_chi332211 + F33*F33*chi33*dAdgrad_chi333211 + _333211;
        dadgrad_chi(20,10) = F31*F31*chi31*dAdgrad_chi111222 + F31*F31*chi32*dAdgrad_chi112222 + F31*F31*chi33*dAdgrad_chi113222 + F31*F32*chi31*dAdgrad_chi121222 + F31*F32*chi31*dAdgrad_chi211222 + F31*F32*chi32*dAdgrad_chi122222 + F31*F32*chi32*dAdgrad_chi212222 + F31*F32*chi33*dAdgrad_chi123222 + F31*F32*chi33*dAdgrad_chi213222 + F31*F33*chi31*dAdgrad_chi131222 + F31*F33*chi31*dAdgrad_chi311222 + F31*F33*chi32*dAdgrad_chi132222 + F31*F33*chi32*dAdgrad_chi312222 + F31*F33*chi33*dAdgrad_chi133222 + F31*F33*chi33*dAdgrad_chi313222 + F32*F32*chi31*dAdgrad_chi221222 + F32*F32*chi32*dAdgrad_chi222222 + F32*F32*chi33*dAdgrad_chi223222 + F32*F33*chi31*dAdgrad_chi231222 + F32*F33*chi31*dAdgrad_chi321222 + F32*F33*chi32*dAdgrad_chi232222 + F32*F33*chi32*dAdgrad_chi322222 + F32*F33*chi33*dAdgrad_chi233222 + F32*F33*chi33*dAdgrad_chi323222 + F33*F33*chi31*dAdgrad_chi331222 + F33*F33*chi32*dAdgrad_chi332222 + F33*F33*chi33*dAdgrad_chi333222 + _333222;
        dadgrad_chi(20,11) = F31*F31*chi31*dAdgrad_chi111233 + F31*F31*chi32*dAdgrad_chi112233 + F31*F31*chi33*dAdgrad_chi113233 + F31*F32*chi31*dAdgrad_chi121233 + F31*F32*chi31*dAdgrad_chi211233 + F31*F32*chi32*dAdgrad_chi122233 + F31*F32*chi32*dAdgrad_chi212233 + F31*F32*chi33*dAdgrad_chi123233 + F31*F32*chi33*dAdgrad_chi213233 + F31*F33*chi31*dAdgrad_chi131233 + F31*F33*chi31*dAdgrad_chi311233 + F31*F33*chi32*dAdgrad_chi132233 + F31*F33*chi32*dAdgrad_chi312233 + F31*F33*chi33*dAdgrad_chi133233 + F31*F33*chi33*dAdgrad_chi313233 + F32*F32*chi31*dAdgrad_chi221233 + F32*F32*chi32*dAdgrad_chi222233 + F32*F32*chi33*dAdgrad_chi223233 + F32*F33*chi31*dAdgrad_chi231233 + F32*F33*chi31*dAdgrad_chi321233 + F32*F33*chi32*dAdgrad_chi232233 + F32*F33*chi32*dAdgrad_chi322233 + F32*F33*chi33*dAdgrad_chi233233 + F32*F33*chi33*dAdgrad_chi323233 + F33*F33*chi31*dAdgrad_chi331233 + F33*F33*chi32*dAdgrad_chi332233 + F33*F33*chi33*dAdgrad_chi333233 + _333233;
        dadgrad_chi(20,12) = F31*F31*chi31*dAdgrad_chi111223 + F31*F31*chi32*dAdgrad_chi112223 + F31*F31*chi33*dAdgrad_chi113223 + F31*F32*chi31*dAdgrad_chi121223 + F31*F32*chi31*dAdgrad_chi211223 + F31*F32*chi32*dAdgrad_chi122223 + F31*F32*chi32*dAdgrad_chi212223 + F31*F32*chi33*dAdgrad_chi123223 + F31*F32*chi33*dAdgrad_chi213223 + F31*F33*chi31*dAdgrad_chi131223 + F31*F33*chi31*dAdgrad_chi311223 + F31*F33*chi32*dAdgrad_chi132223 + F31*F33*chi32*dAdgrad_chi312223 + F31*F33*chi33*dAdgrad_chi133223 + F31*F33*chi33*dAdgrad_chi313223 + F32*F32*chi31*dAdgrad_chi221223 + F32*F32*chi32*dAdgrad_chi222223 + F32*F32*chi33*dAdgrad_chi223223 + F32*F33*chi31*dAdgrad_chi231223 + F32*F33*chi31*dAdgrad_chi321223 + F32*F33*chi32*dAdgrad_chi232223 + F32*F33*chi32*dAdgrad_chi322223 + F32*F33*chi33*dAdgrad_chi233223 + F32*F33*chi33*dAdgrad_chi323223 + F33*F33*chi31*dAdgrad_chi331223 + F33*F33*chi32*dAdgrad_chi332223 + F33*F33*chi33*dAdgrad_chi333223 + _333223;
        dadgrad_chi(20,13) = F31*F31*chi31*dAdgrad_chi111213 + F31*F31*chi32*dAdgrad_chi112213 + F31*F31*chi33*dAdgrad_chi113213 + F31*F32*chi31*dAdgrad_chi121213 + F31*F32*chi31*dAdgrad_chi211213 + F31*F32*chi32*dAdgrad_chi122213 + F31*F32*chi32*dAdgrad_chi212213 + F31*F32*chi33*dAdgrad_chi123213 + F31*F32*chi33*dAdgrad_chi213213 + F31*F33*chi31*dAdgrad_chi131213 + F31*F33*chi31*dAdgrad_chi311213 + F31*F33*chi32*dAdgrad_chi132213 + F31*F33*chi32*dAdgrad_chi312213 + F31*F33*chi33*dAdgrad_chi133213 + F31*F33*chi33*dAdgrad_chi313213 + F32*F32*chi31*dAdgrad_chi221213 + F32*F32*chi32*dAdgrad_chi222213 + F32*F32*chi33*dAdgrad_chi223213 + F32*F33*chi31*dAdgrad_chi231213 + F32*F33*chi31*dAdgrad_chi321213 + F32*F33*chi32*dAdgrad_chi232213 + F32*F33*chi32*dAdgrad_chi322213 + F32*F33*chi33*dAdgrad_chi233213 + F32*F33*chi33*dAdgrad_chi323213 + F33*F33*chi31*dAdgrad_chi331213 + F33*F33*chi32*dAdgrad_chi332213 + F33*F33*chi33*dAdgrad_chi333213 + _333213;
        dadgrad_chi(20,14) = F31*F31*chi31*dAdgrad_chi111212 + F31*F31*chi32*dAdgrad_chi112212 + F31*F31*chi33*dAdgrad_chi113212 + F31*F32*chi31*dAdgrad_chi121212 + F31*F32*chi31*dAdgrad_chi211212 + F31*F32*chi32*dAdgrad_chi122212 + F31*F32*chi32*dAdgrad_chi212212 + F31*F32*chi33*dAdgrad_chi123212 + F31*F32*chi33*dAdgrad_chi213212 + F31*F33*chi31*dAdgrad_chi131212 + F31*F33*chi31*dAdgrad_chi311212 + F31*F33*chi32*dAdgrad_chi132212 + F31*F33*chi32*dAdgrad_chi312212 + F31*F33*chi33*dAdgrad_chi133212 + F31*F33*chi33*dAdgrad_chi313212 + F32*F32*chi31*dAdgrad_chi221212 + F32*F32*chi32*dAdgrad_chi222212 + F32*F32*chi33*dAdgrad_chi223212 + F32*F33*chi31*dAdgrad_chi231212 + F32*F33*chi31*dAdgrad_chi321212 + F32*F33*chi32*dAdgrad_chi232212 + F32*F33*chi32*dAdgrad_chi322212 + F32*F33*chi33*dAdgrad_chi233212 + F32*F33*chi33*dAdgrad_chi323212 + F33*F33*chi31*dAdgrad_chi331212 + F33*F33*chi32*dAdgrad_chi332212 + F33*F33*chi33*dAdgrad_chi333212 + _333212;
        dadgrad_chi(20,15) = F31*F31*chi31*dAdgrad_chi111232 + F31*F31*chi32*dAdgrad_chi112232 + F31*F31*chi33*dAdgrad_chi113232 + F31*F32*chi31*dAdgrad_chi121232 + F31*F32*chi31*dAdgrad_chi211232 + F31*F32*chi32*dAdgrad_chi122232 + F31*F32*chi32*dAdgrad_chi212232 + F31*F32*chi33*dAdgrad_chi123232 + F31*F32*chi33*dAdgrad_chi213232 + F31*F33*chi31*dAdgrad_chi131232 + F31*F33*chi31*dAdgrad_chi311232 + F31*F33*chi32*dAdgrad_chi132232 + F31*F33*chi32*dAdgrad_chi312232 + F31*F33*chi33*dAdgrad_chi133232 + F31*F33*chi33*dAdgrad_chi313232 + F32*F32*chi31*dAdgrad_chi221232 + F32*F32*chi32*dAdgrad_chi222232 + F32*F32*chi33*dAdgrad_chi223232 + F32*F33*chi31*dAdgrad_chi231232 + F32*F33*chi31*dAdgrad_chi321232 + F32*F33*chi32*dAdgrad_chi232232 + F32*F33*chi32*dAdgrad_chi322232 + F32*F33*chi33*dAdgrad_chi233232 + F32*F33*chi33*dAdgrad_chi323232 + F33*F33*chi31*dAdgrad_chi331232 + F33*F33*chi32*dAdgrad_chi332232 + F33*F33*chi33*dAdgrad_chi333232 + _333232;
        dadgrad_chi(20,16) = F31*F31*chi31*dAdgrad_chi111231 + F31*F31*chi32*dAdgrad_chi112231 + F31*F31*chi33*dAdgrad_chi113231 + F31*F32*chi31*dAdgrad_chi121231 + F31*F32*chi31*dAdgrad_chi211231 + F31*F32*chi32*dAdgrad_chi122231 + F31*F32*chi32*dAdgrad_chi212231 + F31*F32*chi33*dAdgrad_chi123231 + F31*F32*chi33*dAdgrad_chi213231 + F31*F33*chi31*dAdgrad_chi131231 + F31*F33*chi31*dAdgrad_chi311231 + F31*F33*chi32*dAdgrad_chi132231 + F31*F33*chi32*dAdgrad_chi312231 + F31*F33*chi33*dAdgrad_chi133231 + F31*F33*chi33*dAdgrad_chi313231 + F32*F32*chi31*dAdgrad_chi221231 + F32*F32*chi32*dAdgrad_chi222231 + F32*F32*chi33*dAdgrad_chi223231 + F32*F33*chi31*dAdgrad_chi231231 + F32*F33*chi31*dAdgrad_chi321231 + F32*F33*chi32*dAdgrad_chi232231 + F32*F33*chi32*dAdgrad_chi322231 + F32*F33*chi33*dAdgrad_chi233231 + F32*F33*chi33*dAdgrad_chi323231 + F33*F33*chi31*dAdgrad_chi331231 + F33*F33*chi32*dAdgrad_chi332231 + F33*F33*chi33*dAdgrad_chi333231 + _333231;
        dadgrad_chi(20,17) = F31*F31*chi31*dAdgrad_chi111221 + F31*F31*chi32*dAdgrad_chi112221 + F31*F31*chi33*dAdgrad_chi113221 + F31*F32*chi31*dAdgrad_chi121221 + F31*F32*chi31*dAdgrad_chi211221 + F31*F32*chi32*dAdgrad_chi122221 + F31*F32*chi32*dAdgrad_chi212221 + F31*F32*chi33*dAdgrad_chi123221 + F31*F32*chi33*dAdgrad_chi213221 + F31*F33*chi31*dAdgrad_chi131221 + F31*F33*chi31*dAdgrad_chi311221 + F31*F33*chi32*dAdgrad_chi132221 + F31*F33*chi32*dAdgrad_chi312221 + F31*F33*chi33*dAdgrad_chi133221 + F31*F33*chi33*dAdgrad_chi313221 + F32*F32*chi31*dAdgrad_chi221221 + F32*F32*chi32*dAdgrad_chi222221 + F32*F32*chi33*dAdgrad_chi223221 + F32*F33*chi31*dAdgrad_chi231221 + F32*F33*chi31*dAdgrad_chi321221 + F32*F33*chi32*dAdgrad_chi232221 + F32*F33*chi32*dAdgrad_chi322221 + F32*F33*chi33*dAdgrad_chi233221 + F32*F33*chi33*dAdgrad_chi323221 + F33*F33*chi31*dAdgrad_chi331221 + F33*F33*chi32*dAdgrad_chi332221 + F33*F33*chi33*dAdgrad_chi333221 + _333221;
        dadgrad_chi(20,18) = F31*F31*chi31*dAdgrad_chi111311 + F31*F31*chi32*dAdgrad_chi112311 + F31*F31*chi33*dAdgrad_chi113311 + F31*F32*chi31*dAdgrad_chi121311 + F31*F32*chi31*dAdgrad_chi211311 + F31*F32*chi32*dAdgrad_chi122311 + F31*F32*chi32*dAdgrad_chi212311 + F31*F32*chi33*dAdgrad_chi123311 + F31*F32*chi33*dAdgrad_chi213311 + F31*F33*chi31*dAdgrad_chi131311 + F31*F33*chi31*dAdgrad_chi311311 + F31*F33*chi32*dAdgrad_chi132311 + F31*F33*chi32*dAdgrad_chi312311 + F31*F33*chi33*dAdgrad_chi133311 + F31*F33*chi33*dAdgrad_chi313311 + F32*F32*chi31*dAdgrad_chi221311 + F32*F32*chi32*dAdgrad_chi222311 + F32*F32*chi33*dAdgrad_chi223311 + F32*F33*chi31*dAdgrad_chi231311 + F32*F33*chi31*dAdgrad_chi321311 + F32*F33*chi32*dAdgrad_chi232311 + F32*F33*chi32*dAdgrad_chi322311 + F32*F33*chi33*dAdgrad_chi233311 + F32*F33*chi33*dAdgrad_chi323311 + F33*F33*chi31*dAdgrad_chi331311 + F33*F33*chi32*dAdgrad_chi332311 + F33*F33*chi33*dAdgrad_chi333311 + _333311;
        dadgrad_chi(20,19) = F31*F31*chi31*dAdgrad_chi111322 + F31*F31*chi32*dAdgrad_chi112322 + F31*F31*chi33*dAdgrad_chi113322 + F31*F32*chi31*dAdgrad_chi121322 + F31*F32*chi31*dAdgrad_chi211322 + F31*F32*chi32*dAdgrad_chi122322 + F31*F32*chi32*dAdgrad_chi212322 + F31*F32*chi33*dAdgrad_chi123322 + F31*F32*chi33*dAdgrad_chi213322 + F31*F33*chi31*dAdgrad_chi131322 + F31*F33*chi31*dAdgrad_chi311322 + F31*F33*chi32*dAdgrad_chi132322 + F31*F33*chi32*dAdgrad_chi312322 + F31*F33*chi33*dAdgrad_chi133322 + F31*F33*chi33*dAdgrad_chi313322 + F32*F32*chi31*dAdgrad_chi221322 + F32*F32*chi32*dAdgrad_chi222322 + F32*F32*chi33*dAdgrad_chi223322 + F32*F33*chi31*dAdgrad_chi231322 + F32*F33*chi31*dAdgrad_chi321322 + F32*F33*chi32*dAdgrad_chi232322 + F32*F33*chi32*dAdgrad_chi322322 + F32*F33*chi33*dAdgrad_chi233322 + F32*F33*chi33*dAdgrad_chi323322 + F33*F33*chi31*dAdgrad_chi331322 + F33*F33*chi32*dAdgrad_chi332322 + F33*F33*chi33*dAdgrad_chi333322 + _333322;
        dadgrad_chi(20,20) = F31*F31*chi31*dAdgrad_chi111333 + F31*F31*chi32*dAdgrad_chi112333 + F31*F31*chi33*dAdgrad_chi113333 + F31*F32*chi31*dAdgrad_chi121333 + F31*F32*chi31*dAdgrad_chi211333 + F31*F32*chi32*dAdgrad_chi122333 + F31*F32*chi32*dAdgrad_chi212333 + F31*F32*chi33*dAdgrad_chi123333 + F31*F32*chi33*dAdgrad_chi213333 + F31*F33*chi31*dAdgrad_chi131333 + F31*F33*chi31*dAdgrad_chi311333 + F31*F33*chi32*dAdgrad_chi132333 + F31*F33*chi32*dAdgrad_chi312333 + F31*F33*chi33*dAdgrad_chi133333 + F31*F33*chi33*dAdgrad_chi313333 + F32*F32*chi31*dAdgrad_chi221333 + F32*F32*chi32*dAdgrad_chi222333 + F32*F32*chi33*dAdgrad_chi223333 + F32*F33*chi31*dAdgrad_chi231333 + F32*F33*chi31*dAdgrad_chi321333 + F32*F33*chi32*dAdgrad_chi232333 + F32*F33*chi32*dAdgrad_chi322333 + F32*F33*chi33*dAdgrad_chi233333 + F32*F33*chi33*dAdgrad_chi323333 + F33*F33*chi31*dAdgrad_chi331333 + F33*F33*chi32*dAdgrad_chi332333 + F33*F33*chi33*dAdgrad_chi333333 + _333333;
        dadgrad_chi(20,21) = F31*F31*chi31*dAdgrad_chi111323 + F31*F31*chi32*dAdgrad_chi112323 + F31*F31*chi33*dAdgrad_chi113323 + F31*F32*chi31*dAdgrad_chi121323 + F31*F32*chi31*dAdgrad_chi211323 + F31*F32*chi32*dAdgrad_chi122323 + F31*F32*chi32*dAdgrad_chi212323 + F31*F32*chi33*dAdgrad_chi123323 + F31*F32*chi33*dAdgrad_chi213323 + F31*F33*chi31*dAdgrad_chi131323 + F31*F33*chi31*dAdgrad_chi311323 + F31*F33*chi32*dAdgrad_chi132323 + F31*F33*chi32*dAdgrad_chi312323 + F31*F33*chi33*dAdgrad_chi133323 + F31*F33*chi33*dAdgrad_chi313323 + F32*F32*chi31*dAdgrad_chi221323 + F32*F32*chi32*dAdgrad_chi222323 + F32*F32*chi33*dAdgrad_chi223323 + F32*F33*chi31*dAdgrad_chi231323 + F32*F33*chi31*dAdgrad_chi321323 + F32*F33*chi32*dAdgrad_chi232323 + F32*F33*chi32*dAdgrad_chi322323 + F32*F33*chi33*dAdgrad_chi233323 + F32*F33*chi33*dAdgrad_chi323323 + F33*F33*chi31*dAdgrad_chi331323 + F33*F33*chi32*dAdgrad_chi332323 + F33*F33*chi33*dAdgrad_chi333323 + _333323;
        dadgrad_chi(20,22) = F31*F31*chi31*dAdgrad_chi111313 + F31*F31*chi32*dAdgrad_chi112313 + F31*F31*chi33*dAdgrad_chi113313 + F31*F32*chi31*dAdgrad_chi121313 + F31*F32*chi31*dAdgrad_chi211313 + F31*F32*chi32*dAdgrad_chi122313 + F31*F32*chi32*dAdgrad_chi212313 + F31*F32*chi33*dAdgrad_chi123313 + F31*F32*chi33*dAdgrad_chi213313 + F31*F33*chi31*dAdgrad_chi131313 + F31*F33*chi31*dAdgrad_chi311313 + F31*F33*chi32*dAdgrad_chi132313 + F31*F33*chi32*dAdgrad_chi312313 + F31*F33*chi33*dAdgrad_chi133313 + F31*F33*chi33*dAdgrad_chi313313 + F32*F32*chi31*dAdgrad_chi221313 + F32*F32*chi32*dAdgrad_chi222313 + F32*F32*chi33*dAdgrad_chi223313 + F32*F33*chi31*dAdgrad_chi231313 + F32*F33*chi31*dAdgrad_chi321313 + F32*F33*chi32*dAdgrad_chi232313 + F32*F33*chi32*dAdgrad_chi322313 + F32*F33*chi33*dAdgrad_chi233313 + F32*F33*chi33*dAdgrad_chi323313 + F33*F33*chi31*dAdgrad_chi331313 + F33*F33*chi32*dAdgrad_chi332313 + F33*F33*chi33*dAdgrad_chi333313 + _333313;
        dadgrad_chi(20,23) = F31*F31*chi31*dAdgrad_chi111312 + F31*F31*chi32*dAdgrad_chi112312 + F31*F31*chi33*dAdgrad_chi113312 + F31*F32*chi31*dAdgrad_chi121312 + F31*F32*chi31*dAdgrad_chi211312 + F31*F32*chi32*dAdgrad_chi122312 + F31*F32*chi32*dAdgrad_chi212312 + F31*F32*chi33*dAdgrad_chi123312 + F31*F32*chi33*dAdgrad_chi213312 + F31*F33*chi31*dAdgrad_chi131312 + F31*F33*chi31*dAdgrad_chi311312 + F31*F33*chi32*dAdgrad_chi132312 + F31*F33*chi32*dAdgrad_chi312312 + F31*F33*chi33*dAdgrad_chi133312 + F31*F33*chi33*dAdgrad_chi313312 + F32*F32*chi31*dAdgrad_chi221312 + F32*F32*chi32*dAdgrad_chi222312 + F32*F32*chi33*dAdgrad_chi223312 + F32*F33*chi31*dAdgrad_chi231312 + F32*F33*chi31*dAdgrad_chi321312 + F32*F33*chi32*dAdgrad_chi232312 + F32*F33*chi32*dAdgrad_chi322312 + F32*F33*chi33*dAdgrad_chi233312 + F32*F33*chi33*dAdgrad_chi323312 + F33*F33*chi31*dAdgrad_chi331312 + F33*F33*chi32*dAdgrad_chi332312 + F33*F33*chi33*dAdgrad_chi333312 + _333312;
        dadgrad_chi(20,24) = F31*F31*chi31*dAdgrad_chi111332 + F31*F31*chi32*dAdgrad_chi112332 + F31*F31*chi33*dAdgrad_chi113332 + F31*F32*chi31*dAdgrad_chi121332 + F31*F32*chi31*dAdgrad_chi211332 + F31*F32*chi32*dAdgrad_chi122332 + F31*F32*chi32*dAdgrad_chi212332 + F31*F32*chi33*dAdgrad_chi123332 + F31*F32*chi33*dAdgrad_chi213332 + F31*F33*chi31*dAdgrad_chi131332 + F31*F33*chi31*dAdgrad_chi311332 + F31*F33*chi32*dAdgrad_chi132332 + F31*F33*chi32*dAdgrad_chi312332 + F31*F33*chi33*dAdgrad_chi133332 + F31*F33*chi33*dAdgrad_chi313332 + F32*F32*chi31*dAdgrad_chi221332 + F32*F32*chi32*dAdgrad_chi222332 + F32*F32*chi33*dAdgrad_chi223332 + F32*F33*chi31*dAdgrad_chi231332 + F32*F33*chi31*dAdgrad_chi321332 + F32*F33*chi32*dAdgrad_chi232332 + F32*F33*chi32*dAdgrad_chi322332 + F32*F33*chi33*dAdgrad_chi233332 + F32*F33*chi33*dAdgrad_chi323332 + F33*F33*chi31*dAdgrad_chi331332 + F33*F33*chi32*dAdgrad_chi332332 + F33*F33*chi33*dAdgrad_chi333332 + _333332;
        dadgrad_chi(20,25) = F31*F31*chi31*dAdgrad_chi111331 + F31*F31*chi32*dAdgrad_chi112331 + F31*F31*chi33*dAdgrad_chi113331 + F31*F32*chi31*dAdgrad_chi121331 + F31*F32*chi31*dAdgrad_chi211331 + F31*F32*chi32*dAdgrad_chi122331 + F31*F32*chi32*dAdgrad_chi212331 + F31*F32*chi33*dAdgrad_chi123331 + F31*F32*chi33*dAdgrad_chi213331 + F31*F33*chi31*dAdgrad_chi131331 + F31*F33*chi31*dAdgrad_chi311331 + F31*F33*chi32*dAdgrad_chi132331 + F31*F33*chi32*dAdgrad_chi312331 + F31*F33*chi33*dAdgrad_chi133331 + F31*F33*chi33*dAdgrad_chi313331 + F32*F32*chi31*dAdgrad_chi221331 + F32*F32*chi32*dAdgrad_chi222331 + F32*F32*chi33*dAdgrad_chi223331 + F32*F33*chi31*dAdgrad_chi231331 + F32*F33*chi31*dAdgrad_chi321331 + F32*F33*chi32*dAdgrad_chi232331 + F32*F33*chi32*dAdgrad_chi322331 + F32*F33*chi33*dAdgrad_chi233331 + F32*F33*chi33*dAdgrad_chi323331 + F33*F33*chi31*dAdgrad_chi331331 + F33*F33*chi32*dAdgrad_chi332331 + F33*F33*chi33*dAdgrad_chi333331 + _333331;
        dadgrad_chi(20,26) = F31*F31*chi31*dAdgrad_chi111321 + F31*F31*chi32*dAdgrad_chi112321 + F31*F31*chi33*dAdgrad_chi113321 + F31*F32*chi31*dAdgrad_chi121321 + F31*F32*chi31*dAdgrad_chi211321 + F31*F32*chi32*dAdgrad_chi122321 + F31*F32*chi32*dAdgrad_chi212321 + F31*F32*chi33*dAdgrad_chi123321 + F31*F32*chi33*dAdgrad_chi213321 + F31*F33*chi31*dAdgrad_chi131321 + F31*F33*chi31*dAdgrad_chi311321 + F31*F33*chi32*dAdgrad_chi132321 + F31*F33*chi32*dAdgrad_chi312321 + F31*F33*chi33*dAdgrad_chi133321 + F31*F33*chi33*dAdgrad_chi313321 + F32*F32*chi31*dAdgrad_chi221321 + F32*F32*chi32*dAdgrad_chi222321 + F32*F32*chi33*dAdgrad_chi223321 + F32*F33*chi31*dAdgrad_chi231321 + F32*F33*chi31*dAdgrad_chi321321 + F32*F33*chi32*dAdgrad_chi232321 + F32*F33*chi32*dAdgrad_chi322321 + F32*F33*chi33*dAdgrad_chi233321 + F32*F33*chi33*dAdgrad_chi323321 + F33*F33*chi31*dAdgrad_chi331321 + F33*F33*chi32*dAdgrad_chi332321 + F33*F33*chi33*dAdgrad_chi333321 + _333321;
        dadgrad_chi(21,0) = F21*F31*chi31*dAdgrad_chi111111 + F21*F31*chi32*dAdgrad_chi112111 + F21*F31*chi33*dAdgrad_chi113111 + F21*F32*chi31*dAdgrad_chi211111 + F21*F32*chi32*dAdgrad_chi212111 + F21*F32*chi33*dAdgrad_chi213111 + F21*F33*chi31*dAdgrad_chi311111 + F21*F33*chi32*dAdgrad_chi312111 + F21*F33*chi33*dAdgrad_chi313111 + F22*F31*chi31*dAdgrad_chi121111 + F22*F31*chi32*dAdgrad_chi122111 + F22*F31*chi33*dAdgrad_chi123111 + F22*F32*chi31*dAdgrad_chi221111 + F22*F32*chi32*dAdgrad_chi222111 + F22*F32*chi33*dAdgrad_chi223111 + F22*F33*chi31*dAdgrad_chi321111 + F22*F33*chi32*dAdgrad_chi322111 + F22*F33*chi33*dAdgrad_chi323111 + F23*F31*chi31*dAdgrad_chi131111 + F23*F31*chi32*dAdgrad_chi132111 + F23*F31*chi33*dAdgrad_chi133111 + F23*F32*chi31*dAdgrad_chi231111 + F23*F32*chi32*dAdgrad_chi232111 + F23*F32*chi33*dAdgrad_chi233111 + F23*F33*chi31*dAdgrad_chi331111 + F23*F33*chi32*dAdgrad_chi332111 + F23*F33*chi33*dAdgrad_chi333111 + _323111;
        dadgrad_chi(21,1) = F21*F31*chi31*dAdgrad_chi111122 + F21*F31*chi32*dAdgrad_chi112122 + F21*F31*chi33*dAdgrad_chi113122 + F21*F32*chi31*dAdgrad_chi211122 + F21*F32*chi32*dAdgrad_chi212122 + F21*F32*chi33*dAdgrad_chi213122 + F21*F33*chi31*dAdgrad_chi311122 + F21*F33*chi32*dAdgrad_chi312122 + F21*F33*chi33*dAdgrad_chi313122 + F22*F31*chi31*dAdgrad_chi121122 + F22*F31*chi32*dAdgrad_chi122122 + F22*F31*chi33*dAdgrad_chi123122 + F22*F32*chi31*dAdgrad_chi221122 + F22*F32*chi32*dAdgrad_chi222122 + F22*F32*chi33*dAdgrad_chi223122 + F22*F33*chi31*dAdgrad_chi321122 + F22*F33*chi32*dAdgrad_chi322122 + F22*F33*chi33*dAdgrad_chi323122 + F23*F31*chi31*dAdgrad_chi131122 + F23*F31*chi32*dAdgrad_chi132122 + F23*F31*chi33*dAdgrad_chi133122 + F23*F32*chi31*dAdgrad_chi231122 + F23*F32*chi32*dAdgrad_chi232122 + F23*F32*chi33*dAdgrad_chi233122 + F23*F33*chi31*dAdgrad_chi331122 + F23*F33*chi32*dAdgrad_chi332122 + F23*F33*chi33*dAdgrad_chi333122 + _323122;
        dadgrad_chi(21,2) = F21*F31*chi31*dAdgrad_chi111133 + F21*F31*chi32*dAdgrad_chi112133 + F21*F31*chi33*dAdgrad_chi113133 + F21*F32*chi31*dAdgrad_chi211133 + F21*F32*chi32*dAdgrad_chi212133 + F21*F32*chi33*dAdgrad_chi213133 + F21*F33*chi31*dAdgrad_chi311133 + F21*F33*chi32*dAdgrad_chi312133 + F21*F33*chi33*dAdgrad_chi313133 + F22*F31*chi31*dAdgrad_chi121133 + F22*F31*chi32*dAdgrad_chi122133 + F22*F31*chi33*dAdgrad_chi123133 + F22*F32*chi31*dAdgrad_chi221133 + F22*F32*chi32*dAdgrad_chi222133 + F22*F32*chi33*dAdgrad_chi223133 + F22*F33*chi31*dAdgrad_chi321133 + F22*F33*chi32*dAdgrad_chi322133 + F22*F33*chi33*dAdgrad_chi323133 + F23*F31*chi31*dAdgrad_chi131133 + F23*F31*chi32*dAdgrad_chi132133 + F23*F31*chi33*dAdgrad_chi133133 + F23*F32*chi31*dAdgrad_chi231133 + F23*F32*chi32*dAdgrad_chi232133 + F23*F32*chi33*dAdgrad_chi233133 + F23*F33*chi31*dAdgrad_chi331133 + F23*F33*chi32*dAdgrad_chi332133 + F23*F33*chi33*dAdgrad_chi333133 + _323133;
        dadgrad_chi(21,3) = F21*F31*chi31*dAdgrad_chi111123 + F21*F31*chi32*dAdgrad_chi112123 + F21*F31*chi33*dAdgrad_chi113123 + F21*F32*chi31*dAdgrad_chi211123 + F21*F32*chi32*dAdgrad_chi212123 + F21*F32*chi33*dAdgrad_chi213123 + F21*F33*chi31*dAdgrad_chi311123 + F21*F33*chi32*dAdgrad_chi312123 + F21*F33*chi33*dAdgrad_chi313123 + F22*F31*chi31*dAdgrad_chi121123 + F22*F31*chi32*dAdgrad_chi122123 + F22*F31*chi33*dAdgrad_chi123123 + F22*F32*chi31*dAdgrad_chi221123 + F22*F32*chi32*dAdgrad_chi222123 + F22*F32*chi33*dAdgrad_chi223123 + F22*F33*chi31*dAdgrad_chi321123 + F22*F33*chi32*dAdgrad_chi322123 + F22*F33*chi33*dAdgrad_chi323123 + F23*F31*chi31*dAdgrad_chi131123 + F23*F31*chi32*dAdgrad_chi132123 + F23*F31*chi33*dAdgrad_chi133123 + F23*F32*chi31*dAdgrad_chi231123 + F23*F32*chi32*dAdgrad_chi232123 + F23*F32*chi33*dAdgrad_chi233123 + F23*F33*chi31*dAdgrad_chi331123 + F23*F33*chi32*dAdgrad_chi332123 + F23*F33*chi33*dAdgrad_chi333123 + _323123;
        dadgrad_chi(21,4) = F21*F31*chi31*dAdgrad_chi111113 + F21*F31*chi32*dAdgrad_chi112113 + F21*F31*chi33*dAdgrad_chi113113 + F21*F32*chi31*dAdgrad_chi211113 + F21*F32*chi32*dAdgrad_chi212113 + F21*F32*chi33*dAdgrad_chi213113 + F21*F33*chi31*dAdgrad_chi311113 + F21*F33*chi32*dAdgrad_chi312113 + F21*F33*chi33*dAdgrad_chi313113 + F22*F31*chi31*dAdgrad_chi121113 + F22*F31*chi32*dAdgrad_chi122113 + F22*F31*chi33*dAdgrad_chi123113 + F22*F32*chi31*dAdgrad_chi221113 + F22*F32*chi32*dAdgrad_chi222113 + F22*F32*chi33*dAdgrad_chi223113 + F22*F33*chi31*dAdgrad_chi321113 + F22*F33*chi32*dAdgrad_chi322113 + F22*F33*chi33*dAdgrad_chi323113 + F23*F31*chi31*dAdgrad_chi131113 + F23*F31*chi32*dAdgrad_chi132113 + F23*F31*chi33*dAdgrad_chi133113 + F23*F32*chi31*dAdgrad_chi231113 + F23*F32*chi32*dAdgrad_chi232113 + F23*F32*chi33*dAdgrad_chi233113 + F23*F33*chi31*dAdgrad_chi331113 + F23*F33*chi32*dAdgrad_chi332113 + F23*F33*chi33*dAdgrad_chi333113 + _323113;
        dadgrad_chi(21,5) = F21*F31*chi31*dAdgrad_chi111112 + F21*F31*chi32*dAdgrad_chi112112 + F21*F31*chi33*dAdgrad_chi113112 + F21*F32*chi31*dAdgrad_chi211112 + F21*F32*chi32*dAdgrad_chi212112 + F21*F32*chi33*dAdgrad_chi213112 + F21*F33*chi31*dAdgrad_chi311112 + F21*F33*chi32*dAdgrad_chi312112 + F21*F33*chi33*dAdgrad_chi313112 + F22*F31*chi31*dAdgrad_chi121112 + F22*F31*chi32*dAdgrad_chi122112 + F22*F31*chi33*dAdgrad_chi123112 + F22*F32*chi31*dAdgrad_chi221112 + F22*F32*chi32*dAdgrad_chi222112 + F22*F32*chi33*dAdgrad_chi223112 + F22*F33*chi31*dAdgrad_chi321112 + F22*F33*chi32*dAdgrad_chi322112 + F22*F33*chi33*dAdgrad_chi323112 + F23*F31*chi31*dAdgrad_chi131112 + F23*F31*chi32*dAdgrad_chi132112 + F23*F31*chi33*dAdgrad_chi133112 + F23*F32*chi31*dAdgrad_chi231112 + F23*F32*chi32*dAdgrad_chi232112 + F23*F32*chi33*dAdgrad_chi233112 + F23*F33*chi31*dAdgrad_chi331112 + F23*F33*chi32*dAdgrad_chi332112 + F23*F33*chi33*dAdgrad_chi333112 + _323112;
        dadgrad_chi(21,6) = F21*F31*chi31*dAdgrad_chi111132 + F21*F31*chi32*dAdgrad_chi112132 + F21*F31*chi33*dAdgrad_chi113132 + F21*F32*chi31*dAdgrad_chi211132 + F21*F32*chi32*dAdgrad_chi212132 + F21*F32*chi33*dAdgrad_chi213132 + F21*F33*chi31*dAdgrad_chi311132 + F21*F33*chi32*dAdgrad_chi312132 + F21*F33*chi33*dAdgrad_chi313132 + F22*F31*chi31*dAdgrad_chi121132 + F22*F31*chi32*dAdgrad_chi122132 + F22*F31*chi33*dAdgrad_chi123132 + F22*F32*chi31*dAdgrad_chi221132 + F22*F32*chi32*dAdgrad_chi222132 + F22*F32*chi33*dAdgrad_chi223132 + F22*F33*chi31*dAdgrad_chi321132 + F22*F33*chi32*dAdgrad_chi322132 + F22*F33*chi33*dAdgrad_chi323132 + F23*F31*chi31*dAdgrad_chi131132 + F23*F31*chi32*dAdgrad_chi132132 + F23*F31*chi33*dAdgrad_chi133132 + F23*F32*chi31*dAdgrad_chi231132 + F23*F32*chi32*dAdgrad_chi232132 + F23*F32*chi33*dAdgrad_chi233132 + F23*F33*chi31*dAdgrad_chi331132 + F23*F33*chi32*dAdgrad_chi332132 + F23*F33*chi33*dAdgrad_chi333132 + _323132;
        dadgrad_chi(21,7) = F21*F31*chi31*dAdgrad_chi111131 + F21*F31*chi32*dAdgrad_chi112131 + F21*F31*chi33*dAdgrad_chi113131 + F21*F32*chi31*dAdgrad_chi211131 + F21*F32*chi32*dAdgrad_chi212131 + F21*F32*chi33*dAdgrad_chi213131 + F21*F33*chi31*dAdgrad_chi311131 + F21*F33*chi32*dAdgrad_chi312131 + F21*F33*chi33*dAdgrad_chi313131 + F22*F31*chi31*dAdgrad_chi121131 + F22*F31*chi32*dAdgrad_chi122131 + F22*F31*chi33*dAdgrad_chi123131 + F22*F32*chi31*dAdgrad_chi221131 + F22*F32*chi32*dAdgrad_chi222131 + F22*F32*chi33*dAdgrad_chi223131 + F22*F33*chi31*dAdgrad_chi321131 + F22*F33*chi32*dAdgrad_chi322131 + F22*F33*chi33*dAdgrad_chi323131 + F23*F31*chi31*dAdgrad_chi131131 + F23*F31*chi32*dAdgrad_chi132131 + F23*F31*chi33*dAdgrad_chi133131 + F23*F32*chi31*dAdgrad_chi231131 + F23*F32*chi32*dAdgrad_chi232131 + F23*F32*chi33*dAdgrad_chi233131 + F23*F33*chi31*dAdgrad_chi331131 + F23*F33*chi32*dAdgrad_chi332131 + F23*F33*chi33*dAdgrad_chi333131 + _323131;
        dadgrad_chi(21,8) = F21*F31*chi31*dAdgrad_chi111121 + F21*F31*chi32*dAdgrad_chi112121 + F21*F31*chi33*dAdgrad_chi113121 + F21*F32*chi31*dAdgrad_chi211121 + F21*F32*chi32*dAdgrad_chi212121 + F21*F32*chi33*dAdgrad_chi213121 + F21*F33*chi31*dAdgrad_chi311121 + F21*F33*chi32*dAdgrad_chi312121 + F21*F33*chi33*dAdgrad_chi313121 + F22*F31*chi31*dAdgrad_chi121121 + F22*F31*chi32*dAdgrad_chi122121 + F22*F31*chi33*dAdgrad_chi123121 + F22*F32*chi31*dAdgrad_chi221121 + F22*F32*chi32*dAdgrad_chi222121 + F22*F32*chi33*dAdgrad_chi223121 + F22*F33*chi31*dAdgrad_chi321121 + F22*F33*chi32*dAdgrad_chi322121 + F22*F33*chi33*dAdgrad_chi323121 + F23*F31*chi31*dAdgrad_chi131121 + F23*F31*chi32*dAdgrad_chi132121 + F23*F31*chi33*dAdgrad_chi133121 + F23*F32*chi31*dAdgrad_chi231121 + F23*F32*chi32*dAdgrad_chi232121 + F23*F32*chi33*dAdgrad_chi233121 + F23*F33*chi31*dAdgrad_chi331121 + F23*F33*chi32*dAdgrad_chi332121 + F23*F33*chi33*dAdgrad_chi333121 + _323121;
        dadgrad_chi(21,9) = F21*F31*chi31*dAdgrad_chi111211 + F21*F31*chi32*dAdgrad_chi112211 + F21*F31*chi33*dAdgrad_chi113211 + F21*F32*chi31*dAdgrad_chi211211 + F21*F32*chi32*dAdgrad_chi212211 + F21*F32*chi33*dAdgrad_chi213211 + F21*F33*chi31*dAdgrad_chi311211 + F21*F33*chi32*dAdgrad_chi312211 + F21*F33*chi33*dAdgrad_chi313211 + F22*F31*chi31*dAdgrad_chi121211 + F22*F31*chi32*dAdgrad_chi122211 + F22*F31*chi33*dAdgrad_chi123211 + F22*F32*chi31*dAdgrad_chi221211 + F22*F32*chi32*dAdgrad_chi222211 + F22*F32*chi33*dAdgrad_chi223211 + F22*F33*chi31*dAdgrad_chi321211 + F22*F33*chi32*dAdgrad_chi322211 + F22*F33*chi33*dAdgrad_chi323211 + F23*F31*chi31*dAdgrad_chi131211 + F23*F31*chi32*dAdgrad_chi132211 + F23*F31*chi33*dAdgrad_chi133211 + F23*F32*chi31*dAdgrad_chi231211 + F23*F32*chi32*dAdgrad_chi232211 + F23*F32*chi33*dAdgrad_chi233211 + F23*F33*chi31*dAdgrad_chi331211 + F23*F33*chi32*dAdgrad_chi332211 + F23*F33*chi33*dAdgrad_chi333211 + _323211;
        dadgrad_chi(21,10) = F21*F31*chi31*dAdgrad_chi111222 + F21*F31*chi32*dAdgrad_chi112222 + F21*F31*chi33*dAdgrad_chi113222 + F21*F32*chi31*dAdgrad_chi211222 + F21*F32*chi32*dAdgrad_chi212222 + F21*F32*chi33*dAdgrad_chi213222 + F21*F33*chi31*dAdgrad_chi311222 + F21*F33*chi32*dAdgrad_chi312222 + F21*F33*chi33*dAdgrad_chi313222 + F22*F31*chi31*dAdgrad_chi121222 + F22*F31*chi32*dAdgrad_chi122222 + F22*F31*chi33*dAdgrad_chi123222 + F22*F32*chi31*dAdgrad_chi221222 + F22*F32*chi32*dAdgrad_chi222222 + F22*F32*chi33*dAdgrad_chi223222 + F22*F33*chi31*dAdgrad_chi321222 + F22*F33*chi32*dAdgrad_chi322222 + F22*F33*chi33*dAdgrad_chi323222 + F23*F31*chi31*dAdgrad_chi131222 + F23*F31*chi32*dAdgrad_chi132222 + F23*F31*chi33*dAdgrad_chi133222 + F23*F32*chi31*dAdgrad_chi231222 + F23*F32*chi32*dAdgrad_chi232222 + F23*F32*chi33*dAdgrad_chi233222 + F23*F33*chi31*dAdgrad_chi331222 + F23*F33*chi32*dAdgrad_chi332222 + F23*F33*chi33*dAdgrad_chi333222 + _323222;
        dadgrad_chi(21,11) = F21*F31*chi31*dAdgrad_chi111233 + F21*F31*chi32*dAdgrad_chi112233 + F21*F31*chi33*dAdgrad_chi113233 + F21*F32*chi31*dAdgrad_chi211233 + F21*F32*chi32*dAdgrad_chi212233 + F21*F32*chi33*dAdgrad_chi213233 + F21*F33*chi31*dAdgrad_chi311233 + F21*F33*chi32*dAdgrad_chi312233 + F21*F33*chi33*dAdgrad_chi313233 + F22*F31*chi31*dAdgrad_chi121233 + F22*F31*chi32*dAdgrad_chi122233 + F22*F31*chi33*dAdgrad_chi123233 + F22*F32*chi31*dAdgrad_chi221233 + F22*F32*chi32*dAdgrad_chi222233 + F22*F32*chi33*dAdgrad_chi223233 + F22*F33*chi31*dAdgrad_chi321233 + F22*F33*chi32*dAdgrad_chi322233 + F22*F33*chi33*dAdgrad_chi323233 + F23*F31*chi31*dAdgrad_chi131233 + F23*F31*chi32*dAdgrad_chi132233 + F23*F31*chi33*dAdgrad_chi133233 + F23*F32*chi31*dAdgrad_chi231233 + F23*F32*chi32*dAdgrad_chi232233 + F23*F32*chi33*dAdgrad_chi233233 + F23*F33*chi31*dAdgrad_chi331233 + F23*F33*chi32*dAdgrad_chi332233 + F23*F33*chi33*dAdgrad_chi333233 + _323233;
        dadgrad_chi(21,12) = F21*F31*chi31*dAdgrad_chi111223 + F21*F31*chi32*dAdgrad_chi112223 + F21*F31*chi33*dAdgrad_chi113223 + F21*F32*chi31*dAdgrad_chi211223 + F21*F32*chi32*dAdgrad_chi212223 + F21*F32*chi33*dAdgrad_chi213223 + F21*F33*chi31*dAdgrad_chi311223 + F21*F33*chi32*dAdgrad_chi312223 + F21*F33*chi33*dAdgrad_chi313223 + F22*F31*chi31*dAdgrad_chi121223 + F22*F31*chi32*dAdgrad_chi122223 + F22*F31*chi33*dAdgrad_chi123223 + F22*F32*chi31*dAdgrad_chi221223 + F22*F32*chi32*dAdgrad_chi222223 + F22*F32*chi33*dAdgrad_chi223223 + F22*F33*chi31*dAdgrad_chi321223 + F22*F33*chi32*dAdgrad_chi322223 + F22*F33*chi33*dAdgrad_chi323223 + F23*F31*chi31*dAdgrad_chi131223 + F23*F31*chi32*dAdgrad_chi132223 + F23*F31*chi33*dAdgrad_chi133223 + F23*F32*chi31*dAdgrad_chi231223 + F23*F32*chi32*dAdgrad_chi232223 + F23*F32*chi33*dAdgrad_chi233223 + F23*F33*chi31*dAdgrad_chi331223 + F23*F33*chi32*dAdgrad_chi332223 + F23*F33*chi33*dAdgrad_chi333223 + _323223;
        dadgrad_chi(21,13) = F21*F31*chi31*dAdgrad_chi111213 + F21*F31*chi32*dAdgrad_chi112213 + F21*F31*chi33*dAdgrad_chi113213 + F21*F32*chi31*dAdgrad_chi211213 + F21*F32*chi32*dAdgrad_chi212213 + F21*F32*chi33*dAdgrad_chi213213 + F21*F33*chi31*dAdgrad_chi311213 + F21*F33*chi32*dAdgrad_chi312213 + F21*F33*chi33*dAdgrad_chi313213 + F22*F31*chi31*dAdgrad_chi121213 + F22*F31*chi32*dAdgrad_chi122213 + F22*F31*chi33*dAdgrad_chi123213 + F22*F32*chi31*dAdgrad_chi221213 + F22*F32*chi32*dAdgrad_chi222213 + F22*F32*chi33*dAdgrad_chi223213 + F22*F33*chi31*dAdgrad_chi321213 + F22*F33*chi32*dAdgrad_chi322213 + F22*F33*chi33*dAdgrad_chi323213 + F23*F31*chi31*dAdgrad_chi131213 + F23*F31*chi32*dAdgrad_chi132213 + F23*F31*chi33*dAdgrad_chi133213 + F23*F32*chi31*dAdgrad_chi231213 + F23*F32*chi32*dAdgrad_chi232213 + F23*F32*chi33*dAdgrad_chi233213 + F23*F33*chi31*dAdgrad_chi331213 + F23*F33*chi32*dAdgrad_chi332213 + F23*F33*chi33*dAdgrad_chi333213 + _323213;
        dadgrad_chi(21,14) = F21*F31*chi31*dAdgrad_chi111212 + F21*F31*chi32*dAdgrad_chi112212 + F21*F31*chi33*dAdgrad_chi113212 + F21*F32*chi31*dAdgrad_chi211212 + F21*F32*chi32*dAdgrad_chi212212 + F21*F32*chi33*dAdgrad_chi213212 + F21*F33*chi31*dAdgrad_chi311212 + F21*F33*chi32*dAdgrad_chi312212 + F21*F33*chi33*dAdgrad_chi313212 + F22*F31*chi31*dAdgrad_chi121212 + F22*F31*chi32*dAdgrad_chi122212 + F22*F31*chi33*dAdgrad_chi123212 + F22*F32*chi31*dAdgrad_chi221212 + F22*F32*chi32*dAdgrad_chi222212 + F22*F32*chi33*dAdgrad_chi223212 + F22*F33*chi31*dAdgrad_chi321212 + F22*F33*chi32*dAdgrad_chi322212 + F22*F33*chi33*dAdgrad_chi323212 + F23*F31*chi31*dAdgrad_chi131212 + F23*F31*chi32*dAdgrad_chi132212 + F23*F31*chi33*dAdgrad_chi133212 + F23*F32*chi31*dAdgrad_chi231212 + F23*F32*chi32*dAdgrad_chi232212 + F23*F32*chi33*dAdgrad_chi233212 + F23*F33*chi31*dAdgrad_chi331212 + F23*F33*chi32*dAdgrad_chi332212 + F23*F33*chi33*dAdgrad_chi333212 + _323212;
        dadgrad_chi(21,15) = F21*F31*chi31*dAdgrad_chi111232 + F21*F31*chi32*dAdgrad_chi112232 + F21*F31*chi33*dAdgrad_chi113232 + F21*F32*chi31*dAdgrad_chi211232 + F21*F32*chi32*dAdgrad_chi212232 + F21*F32*chi33*dAdgrad_chi213232 + F21*F33*chi31*dAdgrad_chi311232 + F21*F33*chi32*dAdgrad_chi312232 + F21*F33*chi33*dAdgrad_chi313232 + F22*F31*chi31*dAdgrad_chi121232 + F22*F31*chi32*dAdgrad_chi122232 + F22*F31*chi33*dAdgrad_chi123232 + F22*F32*chi31*dAdgrad_chi221232 + F22*F32*chi32*dAdgrad_chi222232 + F22*F32*chi33*dAdgrad_chi223232 + F22*F33*chi31*dAdgrad_chi321232 + F22*F33*chi32*dAdgrad_chi322232 + F22*F33*chi33*dAdgrad_chi323232 + F23*F31*chi31*dAdgrad_chi131232 + F23*F31*chi32*dAdgrad_chi132232 + F23*F31*chi33*dAdgrad_chi133232 + F23*F32*chi31*dAdgrad_chi231232 + F23*F32*chi32*dAdgrad_chi232232 + F23*F32*chi33*dAdgrad_chi233232 + F23*F33*chi31*dAdgrad_chi331232 + F23*F33*chi32*dAdgrad_chi332232 + F23*F33*chi33*dAdgrad_chi333232 + _323232;
        dadgrad_chi(21,16) = F21*F31*chi31*dAdgrad_chi111231 + F21*F31*chi32*dAdgrad_chi112231 + F21*F31*chi33*dAdgrad_chi113231 + F21*F32*chi31*dAdgrad_chi211231 + F21*F32*chi32*dAdgrad_chi212231 + F21*F32*chi33*dAdgrad_chi213231 + F21*F33*chi31*dAdgrad_chi311231 + F21*F33*chi32*dAdgrad_chi312231 + F21*F33*chi33*dAdgrad_chi313231 + F22*F31*chi31*dAdgrad_chi121231 + F22*F31*chi32*dAdgrad_chi122231 + F22*F31*chi33*dAdgrad_chi123231 + F22*F32*chi31*dAdgrad_chi221231 + F22*F32*chi32*dAdgrad_chi222231 + F22*F32*chi33*dAdgrad_chi223231 + F22*F33*chi31*dAdgrad_chi321231 + F22*F33*chi32*dAdgrad_chi322231 + F22*F33*chi33*dAdgrad_chi323231 + F23*F31*chi31*dAdgrad_chi131231 + F23*F31*chi32*dAdgrad_chi132231 + F23*F31*chi33*dAdgrad_chi133231 + F23*F32*chi31*dAdgrad_chi231231 + F23*F32*chi32*dAdgrad_chi232231 + F23*F32*chi33*dAdgrad_chi233231 + F23*F33*chi31*dAdgrad_chi331231 + F23*F33*chi32*dAdgrad_chi332231 + F23*F33*chi33*dAdgrad_chi333231 + _323231;
        dadgrad_chi(21,17) = F21*F31*chi31*dAdgrad_chi111221 + F21*F31*chi32*dAdgrad_chi112221 + F21*F31*chi33*dAdgrad_chi113221 + F21*F32*chi31*dAdgrad_chi211221 + F21*F32*chi32*dAdgrad_chi212221 + F21*F32*chi33*dAdgrad_chi213221 + F21*F33*chi31*dAdgrad_chi311221 + F21*F33*chi32*dAdgrad_chi312221 + F21*F33*chi33*dAdgrad_chi313221 + F22*F31*chi31*dAdgrad_chi121221 + F22*F31*chi32*dAdgrad_chi122221 + F22*F31*chi33*dAdgrad_chi123221 + F22*F32*chi31*dAdgrad_chi221221 + F22*F32*chi32*dAdgrad_chi222221 + F22*F32*chi33*dAdgrad_chi223221 + F22*F33*chi31*dAdgrad_chi321221 + F22*F33*chi32*dAdgrad_chi322221 + F22*F33*chi33*dAdgrad_chi323221 + F23*F31*chi31*dAdgrad_chi131221 + F23*F31*chi32*dAdgrad_chi132221 + F23*F31*chi33*dAdgrad_chi133221 + F23*F32*chi31*dAdgrad_chi231221 + F23*F32*chi32*dAdgrad_chi232221 + F23*F32*chi33*dAdgrad_chi233221 + F23*F33*chi31*dAdgrad_chi331221 + F23*F33*chi32*dAdgrad_chi332221 + F23*F33*chi33*dAdgrad_chi333221 + _323221;
        dadgrad_chi(21,18) = F21*F31*chi31*dAdgrad_chi111311 + F21*F31*chi32*dAdgrad_chi112311 + F21*F31*chi33*dAdgrad_chi113311 + F21*F32*chi31*dAdgrad_chi211311 + F21*F32*chi32*dAdgrad_chi212311 + F21*F32*chi33*dAdgrad_chi213311 + F21*F33*chi31*dAdgrad_chi311311 + F21*F33*chi32*dAdgrad_chi312311 + F21*F33*chi33*dAdgrad_chi313311 + F22*F31*chi31*dAdgrad_chi121311 + F22*F31*chi32*dAdgrad_chi122311 + F22*F31*chi33*dAdgrad_chi123311 + F22*F32*chi31*dAdgrad_chi221311 + F22*F32*chi32*dAdgrad_chi222311 + F22*F32*chi33*dAdgrad_chi223311 + F22*F33*chi31*dAdgrad_chi321311 + F22*F33*chi32*dAdgrad_chi322311 + F22*F33*chi33*dAdgrad_chi323311 + F23*F31*chi31*dAdgrad_chi131311 + F23*F31*chi32*dAdgrad_chi132311 + F23*F31*chi33*dAdgrad_chi133311 + F23*F32*chi31*dAdgrad_chi231311 + F23*F32*chi32*dAdgrad_chi232311 + F23*F32*chi33*dAdgrad_chi233311 + F23*F33*chi31*dAdgrad_chi331311 + F23*F33*chi32*dAdgrad_chi332311 + F23*F33*chi33*dAdgrad_chi333311 + _323311;
        dadgrad_chi(21,19) = F21*F31*chi31*dAdgrad_chi111322 + F21*F31*chi32*dAdgrad_chi112322 + F21*F31*chi33*dAdgrad_chi113322 + F21*F32*chi31*dAdgrad_chi211322 + F21*F32*chi32*dAdgrad_chi212322 + F21*F32*chi33*dAdgrad_chi213322 + F21*F33*chi31*dAdgrad_chi311322 + F21*F33*chi32*dAdgrad_chi312322 + F21*F33*chi33*dAdgrad_chi313322 + F22*F31*chi31*dAdgrad_chi121322 + F22*F31*chi32*dAdgrad_chi122322 + F22*F31*chi33*dAdgrad_chi123322 + F22*F32*chi31*dAdgrad_chi221322 + F22*F32*chi32*dAdgrad_chi222322 + F22*F32*chi33*dAdgrad_chi223322 + F22*F33*chi31*dAdgrad_chi321322 + F22*F33*chi32*dAdgrad_chi322322 + F22*F33*chi33*dAdgrad_chi323322 + F23*F31*chi31*dAdgrad_chi131322 + F23*F31*chi32*dAdgrad_chi132322 + F23*F31*chi33*dAdgrad_chi133322 + F23*F32*chi31*dAdgrad_chi231322 + F23*F32*chi32*dAdgrad_chi232322 + F23*F32*chi33*dAdgrad_chi233322 + F23*F33*chi31*dAdgrad_chi331322 + F23*F33*chi32*dAdgrad_chi332322 + F23*F33*chi33*dAdgrad_chi333322 + _323322;
        dadgrad_chi(21,20) = F21*F31*chi31*dAdgrad_chi111333 + F21*F31*chi32*dAdgrad_chi112333 + F21*F31*chi33*dAdgrad_chi113333 + F21*F32*chi31*dAdgrad_chi211333 + F21*F32*chi32*dAdgrad_chi212333 + F21*F32*chi33*dAdgrad_chi213333 + F21*F33*chi31*dAdgrad_chi311333 + F21*F33*chi32*dAdgrad_chi312333 + F21*F33*chi33*dAdgrad_chi313333 + F22*F31*chi31*dAdgrad_chi121333 + F22*F31*chi32*dAdgrad_chi122333 + F22*F31*chi33*dAdgrad_chi123333 + F22*F32*chi31*dAdgrad_chi221333 + F22*F32*chi32*dAdgrad_chi222333 + F22*F32*chi33*dAdgrad_chi223333 + F22*F33*chi31*dAdgrad_chi321333 + F22*F33*chi32*dAdgrad_chi322333 + F22*F33*chi33*dAdgrad_chi323333 + F23*F31*chi31*dAdgrad_chi131333 + F23*F31*chi32*dAdgrad_chi132333 + F23*F31*chi33*dAdgrad_chi133333 + F23*F32*chi31*dAdgrad_chi231333 + F23*F32*chi32*dAdgrad_chi232333 + F23*F32*chi33*dAdgrad_chi233333 + F23*F33*chi31*dAdgrad_chi331333 + F23*F33*chi32*dAdgrad_chi332333 + F23*F33*chi33*dAdgrad_chi333333 + _323333;
        dadgrad_chi(21,21) = F21*F31*chi31*dAdgrad_chi111323 + F21*F31*chi32*dAdgrad_chi112323 + F21*F31*chi33*dAdgrad_chi113323 + F21*F32*chi31*dAdgrad_chi211323 + F21*F32*chi32*dAdgrad_chi212323 + F21*F32*chi33*dAdgrad_chi213323 + F21*F33*chi31*dAdgrad_chi311323 + F21*F33*chi32*dAdgrad_chi312323 + F21*F33*chi33*dAdgrad_chi313323 + F22*F31*chi31*dAdgrad_chi121323 + F22*F31*chi32*dAdgrad_chi122323 + F22*F31*chi33*dAdgrad_chi123323 + F22*F32*chi31*dAdgrad_chi221323 + F22*F32*chi32*dAdgrad_chi222323 + F22*F32*chi33*dAdgrad_chi223323 + F22*F33*chi31*dAdgrad_chi321323 + F22*F33*chi32*dAdgrad_chi322323 + F22*F33*chi33*dAdgrad_chi323323 + F23*F31*chi31*dAdgrad_chi131323 + F23*F31*chi32*dAdgrad_chi132323 + F23*F31*chi33*dAdgrad_chi133323 + F23*F32*chi31*dAdgrad_chi231323 + F23*F32*chi32*dAdgrad_chi232323 + F23*F32*chi33*dAdgrad_chi233323 + F23*F33*chi31*dAdgrad_chi331323 + F23*F33*chi32*dAdgrad_chi332323 + F23*F33*chi33*dAdgrad_chi333323 + _323323;
        dadgrad_chi(21,22) = F21*F31*chi31*dAdgrad_chi111313 + F21*F31*chi32*dAdgrad_chi112313 + F21*F31*chi33*dAdgrad_chi113313 + F21*F32*chi31*dAdgrad_chi211313 + F21*F32*chi32*dAdgrad_chi212313 + F21*F32*chi33*dAdgrad_chi213313 + F21*F33*chi31*dAdgrad_chi311313 + F21*F33*chi32*dAdgrad_chi312313 + F21*F33*chi33*dAdgrad_chi313313 + F22*F31*chi31*dAdgrad_chi121313 + F22*F31*chi32*dAdgrad_chi122313 + F22*F31*chi33*dAdgrad_chi123313 + F22*F32*chi31*dAdgrad_chi221313 + F22*F32*chi32*dAdgrad_chi222313 + F22*F32*chi33*dAdgrad_chi223313 + F22*F33*chi31*dAdgrad_chi321313 + F22*F33*chi32*dAdgrad_chi322313 + F22*F33*chi33*dAdgrad_chi323313 + F23*F31*chi31*dAdgrad_chi131313 + F23*F31*chi32*dAdgrad_chi132313 + F23*F31*chi33*dAdgrad_chi133313 + F23*F32*chi31*dAdgrad_chi231313 + F23*F32*chi32*dAdgrad_chi232313 + F23*F32*chi33*dAdgrad_chi233313 + F23*F33*chi31*dAdgrad_chi331313 + F23*F33*chi32*dAdgrad_chi332313 + F23*F33*chi33*dAdgrad_chi333313 + _323313;
        dadgrad_chi(21,23) = F21*F31*chi31*dAdgrad_chi111312 + F21*F31*chi32*dAdgrad_chi112312 + F21*F31*chi33*dAdgrad_chi113312 + F21*F32*chi31*dAdgrad_chi211312 + F21*F32*chi32*dAdgrad_chi212312 + F21*F32*chi33*dAdgrad_chi213312 + F21*F33*chi31*dAdgrad_chi311312 + F21*F33*chi32*dAdgrad_chi312312 + F21*F33*chi33*dAdgrad_chi313312 + F22*F31*chi31*dAdgrad_chi121312 + F22*F31*chi32*dAdgrad_chi122312 + F22*F31*chi33*dAdgrad_chi123312 + F22*F32*chi31*dAdgrad_chi221312 + F22*F32*chi32*dAdgrad_chi222312 + F22*F32*chi33*dAdgrad_chi223312 + F22*F33*chi31*dAdgrad_chi321312 + F22*F33*chi32*dAdgrad_chi322312 + F22*F33*chi33*dAdgrad_chi323312 + F23*F31*chi31*dAdgrad_chi131312 + F23*F31*chi32*dAdgrad_chi132312 + F23*F31*chi33*dAdgrad_chi133312 + F23*F32*chi31*dAdgrad_chi231312 + F23*F32*chi32*dAdgrad_chi232312 + F23*F32*chi33*dAdgrad_chi233312 + F23*F33*chi31*dAdgrad_chi331312 + F23*F33*chi32*dAdgrad_chi332312 + F23*F33*chi33*dAdgrad_chi333312 + _323312;
        dadgrad_chi(21,24) = F21*F31*chi31*dAdgrad_chi111332 + F21*F31*chi32*dAdgrad_chi112332 + F21*F31*chi33*dAdgrad_chi113332 + F21*F32*chi31*dAdgrad_chi211332 + F21*F32*chi32*dAdgrad_chi212332 + F21*F32*chi33*dAdgrad_chi213332 + F21*F33*chi31*dAdgrad_chi311332 + F21*F33*chi32*dAdgrad_chi312332 + F21*F33*chi33*dAdgrad_chi313332 + F22*F31*chi31*dAdgrad_chi121332 + F22*F31*chi32*dAdgrad_chi122332 + F22*F31*chi33*dAdgrad_chi123332 + F22*F32*chi31*dAdgrad_chi221332 + F22*F32*chi32*dAdgrad_chi222332 + F22*F32*chi33*dAdgrad_chi223332 + F22*F33*chi31*dAdgrad_chi321332 + F22*F33*chi32*dAdgrad_chi322332 + F22*F33*chi33*dAdgrad_chi323332 + F23*F31*chi31*dAdgrad_chi131332 + F23*F31*chi32*dAdgrad_chi132332 + F23*F31*chi33*dAdgrad_chi133332 + F23*F32*chi31*dAdgrad_chi231332 + F23*F32*chi32*dAdgrad_chi232332 + F23*F32*chi33*dAdgrad_chi233332 + F23*F33*chi31*dAdgrad_chi331332 + F23*F33*chi32*dAdgrad_chi332332 + F23*F33*chi33*dAdgrad_chi333332 + _323332;
        dadgrad_chi(21,25) = F21*F31*chi31*dAdgrad_chi111331 + F21*F31*chi32*dAdgrad_chi112331 + F21*F31*chi33*dAdgrad_chi113331 + F21*F32*chi31*dAdgrad_chi211331 + F21*F32*chi32*dAdgrad_chi212331 + F21*F32*chi33*dAdgrad_chi213331 + F21*F33*chi31*dAdgrad_chi311331 + F21*F33*chi32*dAdgrad_chi312331 + F21*F33*chi33*dAdgrad_chi313331 + F22*F31*chi31*dAdgrad_chi121331 + F22*F31*chi32*dAdgrad_chi122331 + F22*F31*chi33*dAdgrad_chi123331 + F22*F32*chi31*dAdgrad_chi221331 + F22*F32*chi32*dAdgrad_chi222331 + F22*F32*chi33*dAdgrad_chi223331 + F22*F33*chi31*dAdgrad_chi321331 + F22*F33*chi32*dAdgrad_chi322331 + F22*F33*chi33*dAdgrad_chi323331 + F23*F31*chi31*dAdgrad_chi131331 + F23*F31*chi32*dAdgrad_chi132331 + F23*F31*chi33*dAdgrad_chi133331 + F23*F32*chi31*dAdgrad_chi231331 + F23*F32*chi32*dAdgrad_chi232331 + F23*F32*chi33*dAdgrad_chi233331 + F23*F33*chi31*dAdgrad_chi331331 + F23*F33*chi32*dAdgrad_chi332331 + F23*F33*chi33*dAdgrad_chi333331 + _323331;
        dadgrad_chi(21,26) = F21*F31*chi31*dAdgrad_chi111321 + F21*F31*chi32*dAdgrad_chi112321 + F21*F31*chi33*dAdgrad_chi113321 + F21*F32*chi31*dAdgrad_chi211321 + F21*F32*chi32*dAdgrad_chi212321 + F21*F32*chi33*dAdgrad_chi213321 + F21*F33*chi31*dAdgrad_chi311321 + F21*F33*chi32*dAdgrad_chi312321 + F21*F33*chi33*dAdgrad_chi313321 + F22*F31*chi31*dAdgrad_chi121321 + F22*F31*chi32*dAdgrad_chi122321 + F22*F31*chi33*dAdgrad_chi123321 + F22*F32*chi31*dAdgrad_chi221321 + F22*F32*chi32*dAdgrad_chi222321 + F22*F32*chi33*dAdgrad_chi223321 + F22*F33*chi31*dAdgrad_chi321321 + F22*F33*chi32*dAdgrad_chi322321 + F22*F33*chi33*dAdgrad_chi323321 + F23*F31*chi31*dAdgrad_chi131321 + F23*F31*chi32*dAdgrad_chi132321 + F23*F31*chi33*dAdgrad_chi133321 + F23*F32*chi31*dAdgrad_chi231321 + F23*F32*chi32*dAdgrad_chi232321 + F23*F32*chi33*dAdgrad_chi233321 + F23*F33*chi31*dAdgrad_chi331321 + F23*F33*chi32*dAdgrad_chi332321 + F23*F33*chi33*dAdgrad_chi333321 + _323321;
        dadgrad_chi(22,0) = F11*F31*chi31*dAdgrad_chi111111 + F11*F31*chi32*dAdgrad_chi112111 + F11*F31*chi33*dAdgrad_chi113111 + F11*F32*chi31*dAdgrad_chi211111 + F11*F32*chi32*dAdgrad_chi212111 + F11*F32*chi33*dAdgrad_chi213111 + F11*F33*chi31*dAdgrad_chi311111 + F11*F33*chi32*dAdgrad_chi312111 + F11*F33*chi33*dAdgrad_chi313111 + F12*F31*chi31*dAdgrad_chi121111 + F12*F31*chi32*dAdgrad_chi122111 + F12*F31*chi33*dAdgrad_chi123111 + F12*F32*chi31*dAdgrad_chi221111 + F12*F32*chi32*dAdgrad_chi222111 + F12*F32*chi33*dAdgrad_chi223111 + F12*F33*chi31*dAdgrad_chi321111 + F12*F33*chi32*dAdgrad_chi322111 + F12*F33*chi33*dAdgrad_chi323111 + F13*F31*chi31*dAdgrad_chi131111 + F13*F31*chi32*dAdgrad_chi132111 + F13*F31*chi33*dAdgrad_chi133111 + F13*F32*chi31*dAdgrad_chi231111 + F13*F32*chi32*dAdgrad_chi232111 + F13*F32*chi33*dAdgrad_chi233111 + F13*F33*chi31*dAdgrad_chi331111 + F13*F33*chi32*dAdgrad_chi332111 + F13*F33*chi33*dAdgrad_chi333111 + _313111;
        dadgrad_chi(22,1) = F11*F31*chi31*dAdgrad_chi111122 + F11*F31*chi32*dAdgrad_chi112122 + F11*F31*chi33*dAdgrad_chi113122 + F11*F32*chi31*dAdgrad_chi211122 + F11*F32*chi32*dAdgrad_chi212122 + F11*F32*chi33*dAdgrad_chi213122 + F11*F33*chi31*dAdgrad_chi311122 + F11*F33*chi32*dAdgrad_chi312122 + F11*F33*chi33*dAdgrad_chi313122 + F12*F31*chi31*dAdgrad_chi121122 + F12*F31*chi32*dAdgrad_chi122122 + F12*F31*chi33*dAdgrad_chi123122 + F12*F32*chi31*dAdgrad_chi221122 + F12*F32*chi32*dAdgrad_chi222122 + F12*F32*chi33*dAdgrad_chi223122 + F12*F33*chi31*dAdgrad_chi321122 + F12*F33*chi32*dAdgrad_chi322122 + F12*F33*chi33*dAdgrad_chi323122 + F13*F31*chi31*dAdgrad_chi131122 + F13*F31*chi32*dAdgrad_chi132122 + F13*F31*chi33*dAdgrad_chi133122 + F13*F32*chi31*dAdgrad_chi231122 + F13*F32*chi32*dAdgrad_chi232122 + F13*F32*chi33*dAdgrad_chi233122 + F13*F33*chi31*dAdgrad_chi331122 + F13*F33*chi32*dAdgrad_chi332122 + F13*F33*chi33*dAdgrad_chi333122 + _313122;
        dadgrad_chi(22,2) = F11*F31*chi31*dAdgrad_chi111133 + F11*F31*chi32*dAdgrad_chi112133 + F11*F31*chi33*dAdgrad_chi113133 + F11*F32*chi31*dAdgrad_chi211133 + F11*F32*chi32*dAdgrad_chi212133 + F11*F32*chi33*dAdgrad_chi213133 + F11*F33*chi31*dAdgrad_chi311133 + F11*F33*chi32*dAdgrad_chi312133 + F11*F33*chi33*dAdgrad_chi313133 + F12*F31*chi31*dAdgrad_chi121133 + F12*F31*chi32*dAdgrad_chi122133 + F12*F31*chi33*dAdgrad_chi123133 + F12*F32*chi31*dAdgrad_chi221133 + F12*F32*chi32*dAdgrad_chi222133 + F12*F32*chi33*dAdgrad_chi223133 + F12*F33*chi31*dAdgrad_chi321133 + F12*F33*chi32*dAdgrad_chi322133 + F12*F33*chi33*dAdgrad_chi323133 + F13*F31*chi31*dAdgrad_chi131133 + F13*F31*chi32*dAdgrad_chi132133 + F13*F31*chi33*dAdgrad_chi133133 + F13*F32*chi31*dAdgrad_chi231133 + F13*F32*chi32*dAdgrad_chi232133 + F13*F32*chi33*dAdgrad_chi233133 + F13*F33*chi31*dAdgrad_chi331133 + F13*F33*chi32*dAdgrad_chi332133 + F13*F33*chi33*dAdgrad_chi333133 + _313133;
        dadgrad_chi(22,3) = F11*F31*chi31*dAdgrad_chi111123 + F11*F31*chi32*dAdgrad_chi112123 + F11*F31*chi33*dAdgrad_chi113123 + F11*F32*chi31*dAdgrad_chi211123 + F11*F32*chi32*dAdgrad_chi212123 + F11*F32*chi33*dAdgrad_chi213123 + F11*F33*chi31*dAdgrad_chi311123 + F11*F33*chi32*dAdgrad_chi312123 + F11*F33*chi33*dAdgrad_chi313123 + F12*F31*chi31*dAdgrad_chi121123 + F12*F31*chi32*dAdgrad_chi122123 + F12*F31*chi33*dAdgrad_chi123123 + F12*F32*chi31*dAdgrad_chi221123 + F12*F32*chi32*dAdgrad_chi222123 + F12*F32*chi33*dAdgrad_chi223123 + F12*F33*chi31*dAdgrad_chi321123 + F12*F33*chi32*dAdgrad_chi322123 + F12*F33*chi33*dAdgrad_chi323123 + F13*F31*chi31*dAdgrad_chi131123 + F13*F31*chi32*dAdgrad_chi132123 + F13*F31*chi33*dAdgrad_chi133123 + F13*F32*chi31*dAdgrad_chi231123 + F13*F32*chi32*dAdgrad_chi232123 + F13*F32*chi33*dAdgrad_chi233123 + F13*F33*chi31*dAdgrad_chi331123 + F13*F33*chi32*dAdgrad_chi332123 + F13*F33*chi33*dAdgrad_chi333123 + _313123;
        dadgrad_chi(22,4) = F11*F31*chi31*dAdgrad_chi111113 + F11*F31*chi32*dAdgrad_chi112113 + F11*F31*chi33*dAdgrad_chi113113 + F11*F32*chi31*dAdgrad_chi211113 + F11*F32*chi32*dAdgrad_chi212113 + F11*F32*chi33*dAdgrad_chi213113 + F11*F33*chi31*dAdgrad_chi311113 + F11*F33*chi32*dAdgrad_chi312113 + F11*F33*chi33*dAdgrad_chi313113 + F12*F31*chi31*dAdgrad_chi121113 + F12*F31*chi32*dAdgrad_chi122113 + F12*F31*chi33*dAdgrad_chi123113 + F12*F32*chi31*dAdgrad_chi221113 + F12*F32*chi32*dAdgrad_chi222113 + F12*F32*chi33*dAdgrad_chi223113 + F12*F33*chi31*dAdgrad_chi321113 + F12*F33*chi32*dAdgrad_chi322113 + F12*F33*chi33*dAdgrad_chi323113 + F13*F31*chi31*dAdgrad_chi131113 + F13*F31*chi32*dAdgrad_chi132113 + F13*F31*chi33*dAdgrad_chi133113 + F13*F32*chi31*dAdgrad_chi231113 + F13*F32*chi32*dAdgrad_chi232113 + F13*F32*chi33*dAdgrad_chi233113 + F13*F33*chi31*dAdgrad_chi331113 + F13*F33*chi32*dAdgrad_chi332113 + F13*F33*chi33*dAdgrad_chi333113 + _313113;
        dadgrad_chi(22,5) = F11*F31*chi31*dAdgrad_chi111112 + F11*F31*chi32*dAdgrad_chi112112 + F11*F31*chi33*dAdgrad_chi113112 + F11*F32*chi31*dAdgrad_chi211112 + F11*F32*chi32*dAdgrad_chi212112 + F11*F32*chi33*dAdgrad_chi213112 + F11*F33*chi31*dAdgrad_chi311112 + F11*F33*chi32*dAdgrad_chi312112 + F11*F33*chi33*dAdgrad_chi313112 + F12*F31*chi31*dAdgrad_chi121112 + F12*F31*chi32*dAdgrad_chi122112 + F12*F31*chi33*dAdgrad_chi123112 + F12*F32*chi31*dAdgrad_chi221112 + F12*F32*chi32*dAdgrad_chi222112 + F12*F32*chi33*dAdgrad_chi223112 + F12*F33*chi31*dAdgrad_chi321112 + F12*F33*chi32*dAdgrad_chi322112 + F12*F33*chi33*dAdgrad_chi323112 + F13*F31*chi31*dAdgrad_chi131112 + F13*F31*chi32*dAdgrad_chi132112 + F13*F31*chi33*dAdgrad_chi133112 + F13*F32*chi31*dAdgrad_chi231112 + F13*F32*chi32*dAdgrad_chi232112 + F13*F32*chi33*dAdgrad_chi233112 + F13*F33*chi31*dAdgrad_chi331112 + F13*F33*chi32*dAdgrad_chi332112 + F13*F33*chi33*dAdgrad_chi333112 + _313112;
        dadgrad_chi(22,6) = F11*F31*chi31*dAdgrad_chi111132 + F11*F31*chi32*dAdgrad_chi112132 + F11*F31*chi33*dAdgrad_chi113132 + F11*F32*chi31*dAdgrad_chi211132 + F11*F32*chi32*dAdgrad_chi212132 + F11*F32*chi33*dAdgrad_chi213132 + F11*F33*chi31*dAdgrad_chi311132 + F11*F33*chi32*dAdgrad_chi312132 + F11*F33*chi33*dAdgrad_chi313132 + F12*F31*chi31*dAdgrad_chi121132 + F12*F31*chi32*dAdgrad_chi122132 + F12*F31*chi33*dAdgrad_chi123132 + F12*F32*chi31*dAdgrad_chi221132 + F12*F32*chi32*dAdgrad_chi222132 + F12*F32*chi33*dAdgrad_chi223132 + F12*F33*chi31*dAdgrad_chi321132 + F12*F33*chi32*dAdgrad_chi322132 + F12*F33*chi33*dAdgrad_chi323132 + F13*F31*chi31*dAdgrad_chi131132 + F13*F31*chi32*dAdgrad_chi132132 + F13*F31*chi33*dAdgrad_chi133132 + F13*F32*chi31*dAdgrad_chi231132 + F13*F32*chi32*dAdgrad_chi232132 + F13*F32*chi33*dAdgrad_chi233132 + F13*F33*chi31*dAdgrad_chi331132 + F13*F33*chi32*dAdgrad_chi332132 + F13*F33*chi33*dAdgrad_chi333132 + _313132;
        dadgrad_chi(22,7) = F11*F31*chi31*dAdgrad_chi111131 + F11*F31*chi32*dAdgrad_chi112131 + F11*F31*chi33*dAdgrad_chi113131 + F11*F32*chi31*dAdgrad_chi211131 + F11*F32*chi32*dAdgrad_chi212131 + F11*F32*chi33*dAdgrad_chi213131 + F11*F33*chi31*dAdgrad_chi311131 + F11*F33*chi32*dAdgrad_chi312131 + F11*F33*chi33*dAdgrad_chi313131 + F12*F31*chi31*dAdgrad_chi121131 + F12*F31*chi32*dAdgrad_chi122131 + F12*F31*chi33*dAdgrad_chi123131 + F12*F32*chi31*dAdgrad_chi221131 + F12*F32*chi32*dAdgrad_chi222131 + F12*F32*chi33*dAdgrad_chi223131 + F12*F33*chi31*dAdgrad_chi321131 + F12*F33*chi32*dAdgrad_chi322131 + F12*F33*chi33*dAdgrad_chi323131 + F13*F31*chi31*dAdgrad_chi131131 + F13*F31*chi32*dAdgrad_chi132131 + F13*F31*chi33*dAdgrad_chi133131 + F13*F32*chi31*dAdgrad_chi231131 + F13*F32*chi32*dAdgrad_chi232131 + F13*F32*chi33*dAdgrad_chi233131 + F13*F33*chi31*dAdgrad_chi331131 + F13*F33*chi32*dAdgrad_chi332131 + F13*F33*chi33*dAdgrad_chi333131 + _313131;
        dadgrad_chi(22,8) = F11*F31*chi31*dAdgrad_chi111121 + F11*F31*chi32*dAdgrad_chi112121 + F11*F31*chi33*dAdgrad_chi113121 + F11*F32*chi31*dAdgrad_chi211121 + F11*F32*chi32*dAdgrad_chi212121 + F11*F32*chi33*dAdgrad_chi213121 + F11*F33*chi31*dAdgrad_chi311121 + F11*F33*chi32*dAdgrad_chi312121 + F11*F33*chi33*dAdgrad_chi313121 + F12*F31*chi31*dAdgrad_chi121121 + F12*F31*chi32*dAdgrad_chi122121 + F12*F31*chi33*dAdgrad_chi123121 + F12*F32*chi31*dAdgrad_chi221121 + F12*F32*chi32*dAdgrad_chi222121 + F12*F32*chi33*dAdgrad_chi223121 + F12*F33*chi31*dAdgrad_chi321121 + F12*F33*chi32*dAdgrad_chi322121 + F12*F33*chi33*dAdgrad_chi323121 + F13*F31*chi31*dAdgrad_chi131121 + F13*F31*chi32*dAdgrad_chi132121 + F13*F31*chi33*dAdgrad_chi133121 + F13*F32*chi31*dAdgrad_chi231121 + F13*F32*chi32*dAdgrad_chi232121 + F13*F32*chi33*dAdgrad_chi233121 + F13*F33*chi31*dAdgrad_chi331121 + F13*F33*chi32*dAdgrad_chi332121 + F13*F33*chi33*dAdgrad_chi333121 + _313121;
        dadgrad_chi(22,9) = F11*F31*chi31*dAdgrad_chi111211 + F11*F31*chi32*dAdgrad_chi112211 + F11*F31*chi33*dAdgrad_chi113211 + F11*F32*chi31*dAdgrad_chi211211 + F11*F32*chi32*dAdgrad_chi212211 + F11*F32*chi33*dAdgrad_chi213211 + F11*F33*chi31*dAdgrad_chi311211 + F11*F33*chi32*dAdgrad_chi312211 + F11*F33*chi33*dAdgrad_chi313211 + F12*F31*chi31*dAdgrad_chi121211 + F12*F31*chi32*dAdgrad_chi122211 + F12*F31*chi33*dAdgrad_chi123211 + F12*F32*chi31*dAdgrad_chi221211 + F12*F32*chi32*dAdgrad_chi222211 + F12*F32*chi33*dAdgrad_chi223211 + F12*F33*chi31*dAdgrad_chi321211 + F12*F33*chi32*dAdgrad_chi322211 + F12*F33*chi33*dAdgrad_chi323211 + F13*F31*chi31*dAdgrad_chi131211 + F13*F31*chi32*dAdgrad_chi132211 + F13*F31*chi33*dAdgrad_chi133211 + F13*F32*chi31*dAdgrad_chi231211 + F13*F32*chi32*dAdgrad_chi232211 + F13*F32*chi33*dAdgrad_chi233211 + F13*F33*chi31*dAdgrad_chi331211 + F13*F33*chi32*dAdgrad_chi332211 + F13*F33*chi33*dAdgrad_chi333211 + _313211;
        dadgrad_chi(22,10) = F11*F31*chi31*dAdgrad_chi111222 + F11*F31*chi32*dAdgrad_chi112222 + F11*F31*chi33*dAdgrad_chi113222 + F11*F32*chi31*dAdgrad_chi211222 + F11*F32*chi32*dAdgrad_chi212222 + F11*F32*chi33*dAdgrad_chi213222 + F11*F33*chi31*dAdgrad_chi311222 + F11*F33*chi32*dAdgrad_chi312222 + F11*F33*chi33*dAdgrad_chi313222 + F12*F31*chi31*dAdgrad_chi121222 + F12*F31*chi32*dAdgrad_chi122222 + F12*F31*chi33*dAdgrad_chi123222 + F12*F32*chi31*dAdgrad_chi221222 + F12*F32*chi32*dAdgrad_chi222222 + F12*F32*chi33*dAdgrad_chi223222 + F12*F33*chi31*dAdgrad_chi321222 + F12*F33*chi32*dAdgrad_chi322222 + F12*F33*chi33*dAdgrad_chi323222 + F13*F31*chi31*dAdgrad_chi131222 + F13*F31*chi32*dAdgrad_chi132222 + F13*F31*chi33*dAdgrad_chi133222 + F13*F32*chi31*dAdgrad_chi231222 + F13*F32*chi32*dAdgrad_chi232222 + F13*F32*chi33*dAdgrad_chi233222 + F13*F33*chi31*dAdgrad_chi331222 + F13*F33*chi32*dAdgrad_chi332222 + F13*F33*chi33*dAdgrad_chi333222 + _313222;
        dadgrad_chi(22,11) = F11*F31*chi31*dAdgrad_chi111233 + F11*F31*chi32*dAdgrad_chi112233 + F11*F31*chi33*dAdgrad_chi113233 + F11*F32*chi31*dAdgrad_chi211233 + F11*F32*chi32*dAdgrad_chi212233 + F11*F32*chi33*dAdgrad_chi213233 + F11*F33*chi31*dAdgrad_chi311233 + F11*F33*chi32*dAdgrad_chi312233 + F11*F33*chi33*dAdgrad_chi313233 + F12*F31*chi31*dAdgrad_chi121233 + F12*F31*chi32*dAdgrad_chi122233 + F12*F31*chi33*dAdgrad_chi123233 + F12*F32*chi31*dAdgrad_chi221233 + F12*F32*chi32*dAdgrad_chi222233 + F12*F32*chi33*dAdgrad_chi223233 + F12*F33*chi31*dAdgrad_chi321233 + F12*F33*chi32*dAdgrad_chi322233 + F12*F33*chi33*dAdgrad_chi323233 + F13*F31*chi31*dAdgrad_chi131233 + F13*F31*chi32*dAdgrad_chi132233 + F13*F31*chi33*dAdgrad_chi133233 + F13*F32*chi31*dAdgrad_chi231233 + F13*F32*chi32*dAdgrad_chi232233 + F13*F32*chi33*dAdgrad_chi233233 + F13*F33*chi31*dAdgrad_chi331233 + F13*F33*chi32*dAdgrad_chi332233 + F13*F33*chi33*dAdgrad_chi333233 + _313233;
        dadgrad_chi(22,12) = F11*F31*chi31*dAdgrad_chi111223 + F11*F31*chi32*dAdgrad_chi112223 + F11*F31*chi33*dAdgrad_chi113223 + F11*F32*chi31*dAdgrad_chi211223 + F11*F32*chi32*dAdgrad_chi212223 + F11*F32*chi33*dAdgrad_chi213223 + F11*F33*chi31*dAdgrad_chi311223 + F11*F33*chi32*dAdgrad_chi312223 + F11*F33*chi33*dAdgrad_chi313223 + F12*F31*chi31*dAdgrad_chi121223 + F12*F31*chi32*dAdgrad_chi122223 + F12*F31*chi33*dAdgrad_chi123223 + F12*F32*chi31*dAdgrad_chi221223 + F12*F32*chi32*dAdgrad_chi222223 + F12*F32*chi33*dAdgrad_chi223223 + F12*F33*chi31*dAdgrad_chi321223 + F12*F33*chi32*dAdgrad_chi322223 + F12*F33*chi33*dAdgrad_chi323223 + F13*F31*chi31*dAdgrad_chi131223 + F13*F31*chi32*dAdgrad_chi132223 + F13*F31*chi33*dAdgrad_chi133223 + F13*F32*chi31*dAdgrad_chi231223 + F13*F32*chi32*dAdgrad_chi232223 + F13*F32*chi33*dAdgrad_chi233223 + F13*F33*chi31*dAdgrad_chi331223 + F13*F33*chi32*dAdgrad_chi332223 + F13*F33*chi33*dAdgrad_chi333223 + _313223;
        dadgrad_chi(22,13) = F11*F31*chi31*dAdgrad_chi111213 + F11*F31*chi32*dAdgrad_chi112213 + F11*F31*chi33*dAdgrad_chi113213 + F11*F32*chi31*dAdgrad_chi211213 + F11*F32*chi32*dAdgrad_chi212213 + F11*F32*chi33*dAdgrad_chi213213 + F11*F33*chi31*dAdgrad_chi311213 + F11*F33*chi32*dAdgrad_chi312213 + F11*F33*chi33*dAdgrad_chi313213 + F12*F31*chi31*dAdgrad_chi121213 + F12*F31*chi32*dAdgrad_chi122213 + F12*F31*chi33*dAdgrad_chi123213 + F12*F32*chi31*dAdgrad_chi221213 + F12*F32*chi32*dAdgrad_chi222213 + F12*F32*chi33*dAdgrad_chi223213 + F12*F33*chi31*dAdgrad_chi321213 + F12*F33*chi32*dAdgrad_chi322213 + F12*F33*chi33*dAdgrad_chi323213 + F13*F31*chi31*dAdgrad_chi131213 + F13*F31*chi32*dAdgrad_chi132213 + F13*F31*chi33*dAdgrad_chi133213 + F13*F32*chi31*dAdgrad_chi231213 + F13*F32*chi32*dAdgrad_chi232213 + F13*F32*chi33*dAdgrad_chi233213 + F13*F33*chi31*dAdgrad_chi331213 + F13*F33*chi32*dAdgrad_chi332213 + F13*F33*chi33*dAdgrad_chi333213 + _313213;
        dadgrad_chi(22,14) = F11*F31*chi31*dAdgrad_chi111212 + F11*F31*chi32*dAdgrad_chi112212 + F11*F31*chi33*dAdgrad_chi113212 + F11*F32*chi31*dAdgrad_chi211212 + F11*F32*chi32*dAdgrad_chi212212 + F11*F32*chi33*dAdgrad_chi213212 + F11*F33*chi31*dAdgrad_chi311212 + F11*F33*chi32*dAdgrad_chi312212 + F11*F33*chi33*dAdgrad_chi313212 + F12*F31*chi31*dAdgrad_chi121212 + F12*F31*chi32*dAdgrad_chi122212 + F12*F31*chi33*dAdgrad_chi123212 + F12*F32*chi31*dAdgrad_chi221212 + F12*F32*chi32*dAdgrad_chi222212 + F12*F32*chi33*dAdgrad_chi223212 + F12*F33*chi31*dAdgrad_chi321212 + F12*F33*chi32*dAdgrad_chi322212 + F12*F33*chi33*dAdgrad_chi323212 + F13*F31*chi31*dAdgrad_chi131212 + F13*F31*chi32*dAdgrad_chi132212 + F13*F31*chi33*dAdgrad_chi133212 + F13*F32*chi31*dAdgrad_chi231212 + F13*F32*chi32*dAdgrad_chi232212 + F13*F32*chi33*dAdgrad_chi233212 + F13*F33*chi31*dAdgrad_chi331212 + F13*F33*chi32*dAdgrad_chi332212 + F13*F33*chi33*dAdgrad_chi333212 + _313212;
        dadgrad_chi(22,15) = F11*F31*chi31*dAdgrad_chi111232 + F11*F31*chi32*dAdgrad_chi112232 + F11*F31*chi33*dAdgrad_chi113232 + F11*F32*chi31*dAdgrad_chi211232 + F11*F32*chi32*dAdgrad_chi212232 + F11*F32*chi33*dAdgrad_chi213232 + F11*F33*chi31*dAdgrad_chi311232 + F11*F33*chi32*dAdgrad_chi312232 + F11*F33*chi33*dAdgrad_chi313232 + F12*F31*chi31*dAdgrad_chi121232 + F12*F31*chi32*dAdgrad_chi122232 + F12*F31*chi33*dAdgrad_chi123232 + F12*F32*chi31*dAdgrad_chi221232 + F12*F32*chi32*dAdgrad_chi222232 + F12*F32*chi33*dAdgrad_chi223232 + F12*F33*chi31*dAdgrad_chi321232 + F12*F33*chi32*dAdgrad_chi322232 + F12*F33*chi33*dAdgrad_chi323232 + F13*F31*chi31*dAdgrad_chi131232 + F13*F31*chi32*dAdgrad_chi132232 + F13*F31*chi33*dAdgrad_chi133232 + F13*F32*chi31*dAdgrad_chi231232 + F13*F32*chi32*dAdgrad_chi232232 + F13*F32*chi33*dAdgrad_chi233232 + F13*F33*chi31*dAdgrad_chi331232 + F13*F33*chi32*dAdgrad_chi332232 + F13*F33*chi33*dAdgrad_chi333232 + _313232;
        dadgrad_chi(22,16) = F11*F31*chi31*dAdgrad_chi111231 + F11*F31*chi32*dAdgrad_chi112231 + F11*F31*chi33*dAdgrad_chi113231 + F11*F32*chi31*dAdgrad_chi211231 + F11*F32*chi32*dAdgrad_chi212231 + F11*F32*chi33*dAdgrad_chi213231 + F11*F33*chi31*dAdgrad_chi311231 + F11*F33*chi32*dAdgrad_chi312231 + F11*F33*chi33*dAdgrad_chi313231 + F12*F31*chi31*dAdgrad_chi121231 + F12*F31*chi32*dAdgrad_chi122231 + F12*F31*chi33*dAdgrad_chi123231 + F12*F32*chi31*dAdgrad_chi221231 + F12*F32*chi32*dAdgrad_chi222231 + F12*F32*chi33*dAdgrad_chi223231 + F12*F33*chi31*dAdgrad_chi321231 + F12*F33*chi32*dAdgrad_chi322231 + F12*F33*chi33*dAdgrad_chi323231 + F13*F31*chi31*dAdgrad_chi131231 + F13*F31*chi32*dAdgrad_chi132231 + F13*F31*chi33*dAdgrad_chi133231 + F13*F32*chi31*dAdgrad_chi231231 + F13*F32*chi32*dAdgrad_chi232231 + F13*F32*chi33*dAdgrad_chi233231 + F13*F33*chi31*dAdgrad_chi331231 + F13*F33*chi32*dAdgrad_chi332231 + F13*F33*chi33*dAdgrad_chi333231 + _313231;
        dadgrad_chi(22,17) = F11*F31*chi31*dAdgrad_chi111221 + F11*F31*chi32*dAdgrad_chi112221 + F11*F31*chi33*dAdgrad_chi113221 + F11*F32*chi31*dAdgrad_chi211221 + F11*F32*chi32*dAdgrad_chi212221 + F11*F32*chi33*dAdgrad_chi213221 + F11*F33*chi31*dAdgrad_chi311221 + F11*F33*chi32*dAdgrad_chi312221 + F11*F33*chi33*dAdgrad_chi313221 + F12*F31*chi31*dAdgrad_chi121221 + F12*F31*chi32*dAdgrad_chi122221 + F12*F31*chi33*dAdgrad_chi123221 + F12*F32*chi31*dAdgrad_chi221221 + F12*F32*chi32*dAdgrad_chi222221 + F12*F32*chi33*dAdgrad_chi223221 + F12*F33*chi31*dAdgrad_chi321221 + F12*F33*chi32*dAdgrad_chi322221 + F12*F33*chi33*dAdgrad_chi323221 + F13*F31*chi31*dAdgrad_chi131221 + F13*F31*chi32*dAdgrad_chi132221 + F13*F31*chi33*dAdgrad_chi133221 + F13*F32*chi31*dAdgrad_chi231221 + F13*F32*chi32*dAdgrad_chi232221 + F13*F32*chi33*dAdgrad_chi233221 + F13*F33*chi31*dAdgrad_chi331221 + F13*F33*chi32*dAdgrad_chi332221 + F13*F33*chi33*dAdgrad_chi333221 + _313221;
        dadgrad_chi(22,18) = F11*F31*chi31*dAdgrad_chi111311 + F11*F31*chi32*dAdgrad_chi112311 + F11*F31*chi33*dAdgrad_chi113311 + F11*F32*chi31*dAdgrad_chi211311 + F11*F32*chi32*dAdgrad_chi212311 + F11*F32*chi33*dAdgrad_chi213311 + F11*F33*chi31*dAdgrad_chi311311 + F11*F33*chi32*dAdgrad_chi312311 + F11*F33*chi33*dAdgrad_chi313311 + F12*F31*chi31*dAdgrad_chi121311 + F12*F31*chi32*dAdgrad_chi122311 + F12*F31*chi33*dAdgrad_chi123311 + F12*F32*chi31*dAdgrad_chi221311 + F12*F32*chi32*dAdgrad_chi222311 + F12*F32*chi33*dAdgrad_chi223311 + F12*F33*chi31*dAdgrad_chi321311 + F12*F33*chi32*dAdgrad_chi322311 + F12*F33*chi33*dAdgrad_chi323311 + F13*F31*chi31*dAdgrad_chi131311 + F13*F31*chi32*dAdgrad_chi132311 + F13*F31*chi33*dAdgrad_chi133311 + F13*F32*chi31*dAdgrad_chi231311 + F13*F32*chi32*dAdgrad_chi232311 + F13*F32*chi33*dAdgrad_chi233311 + F13*F33*chi31*dAdgrad_chi331311 + F13*F33*chi32*dAdgrad_chi332311 + F13*F33*chi33*dAdgrad_chi333311 + _313311;
        dadgrad_chi(22,19) = F11*F31*chi31*dAdgrad_chi111322 + F11*F31*chi32*dAdgrad_chi112322 + F11*F31*chi33*dAdgrad_chi113322 + F11*F32*chi31*dAdgrad_chi211322 + F11*F32*chi32*dAdgrad_chi212322 + F11*F32*chi33*dAdgrad_chi213322 + F11*F33*chi31*dAdgrad_chi311322 + F11*F33*chi32*dAdgrad_chi312322 + F11*F33*chi33*dAdgrad_chi313322 + F12*F31*chi31*dAdgrad_chi121322 + F12*F31*chi32*dAdgrad_chi122322 + F12*F31*chi33*dAdgrad_chi123322 + F12*F32*chi31*dAdgrad_chi221322 + F12*F32*chi32*dAdgrad_chi222322 + F12*F32*chi33*dAdgrad_chi223322 + F12*F33*chi31*dAdgrad_chi321322 + F12*F33*chi32*dAdgrad_chi322322 + F12*F33*chi33*dAdgrad_chi323322 + F13*F31*chi31*dAdgrad_chi131322 + F13*F31*chi32*dAdgrad_chi132322 + F13*F31*chi33*dAdgrad_chi133322 + F13*F32*chi31*dAdgrad_chi231322 + F13*F32*chi32*dAdgrad_chi232322 + F13*F32*chi33*dAdgrad_chi233322 + F13*F33*chi31*dAdgrad_chi331322 + F13*F33*chi32*dAdgrad_chi332322 + F13*F33*chi33*dAdgrad_chi333322 + _313322;
        dadgrad_chi(22,20) = F11*F31*chi31*dAdgrad_chi111333 + F11*F31*chi32*dAdgrad_chi112333 + F11*F31*chi33*dAdgrad_chi113333 + F11*F32*chi31*dAdgrad_chi211333 + F11*F32*chi32*dAdgrad_chi212333 + F11*F32*chi33*dAdgrad_chi213333 + F11*F33*chi31*dAdgrad_chi311333 + F11*F33*chi32*dAdgrad_chi312333 + F11*F33*chi33*dAdgrad_chi313333 + F12*F31*chi31*dAdgrad_chi121333 + F12*F31*chi32*dAdgrad_chi122333 + F12*F31*chi33*dAdgrad_chi123333 + F12*F32*chi31*dAdgrad_chi221333 + F12*F32*chi32*dAdgrad_chi222333 + F12*F32*chi33*dAdgrad_chi223333 + F12*F33*chi31*dAdgrad_chi321333 + F12*F33*chi32*dAdgrad_chi322333 + F12*F33*chi33*dAdgrad_chi323333 + F13*F31*chi31*dAdgrad_chi131333 + F13*F31*chi32*dAdgrad_chi132333 + F13*F31*chi33*dAdgrad_chi133333 + F13*F32*chi31*dAdgrad_chi231333 + F13*F32*chi32*dAdgrad_chi232333 + F13*F32*chi33*dAdgrad_chi233333 + F13*F33*chi31*dAdgrad_chi331333 + F13*F33*chi32*dAdgrad_chi332333 + F13*F33*chi33*dAdgrad_chi333333 + _313333;
        dadgrad_chi(22,21) = F11*F31*chi31*dAdgrad_chi111323 + F11*F31*chi32*dAdgrad_chi112323 + F11*F31*chi33*dAdgrad_chi113323 + F11*F32*chi31*dAdgrad_chi211323 + F11*F32*chi32*dAdgrad_chi212323 + F11*F32*chi33*dAdgrad_chi213323 + F11*F33*chi31*dAdgrad_chi311323 + F11*F33*chi32*dAdgrad_chi312323 + F11*F33*chi33*dAdgrad_chi313323 + F12*F31*chi31*dAdgrad_chi121323 + F12*F31*chi32*dAdgrad_chi122323 + F12*F31*chi33*dAdgrad_chi123323 + F12*F32*chi31*dAdgrad_chi221323 + F12*F32*chi32*dAdgrad_chi222323 + F12*F32*chi33*dAdgrad_chi223323 + F12*F33*chi31*dAdgrad_chi321323 + F12*F33*chi32*dAdgrad_chi322323 + F12*F33*chi33*dAdgrad_chi323323 + F13*F31*chi31*dAdgrad_chi131323 + F13*F31*chi32*dAdgrad_chi132323 + F13*F31*chi33*dAdgrad_chi133323 + F13*F32*chi31*dAdgrad_chi231323 + F13*F32*chi32*dAdgrad_chi232323 + F13*F32*chi33*dAdgrad_chi233323 + F13*F33*chi31*dAdgrad_chi331323 + F13*F33*chi32*dAdgrad_chi332323 + F13*F33*chi33*dAdgrad_chi333323 + _313323;
        dadgrad_chi(22,22) = F11*F31*chi31*dAdgrad_chi111313 + F11*F31*chi32*dAdgrad_chi112313 + F11*F31*chi33*dAdgrad_chi113313 + F11*F32*chi31*dAdgrad_chi211313 + F11*F32*chi32*dAdgrad_chi212313 + F11*F32*chi33*dAdgrad_chi213313 + F11*F33*chi31*dAdgrad_chi311313 + F11*F33*chi32*dAdgrad_chi312313 + F11*F33*chi33*dAdgrad_chi313313 + F12*F31*chi31*dAdgrad_chi121313 + F12*F31*chi32*dAdgrad_chi122313 + F12*F31*chi33*dAdgrad_chi123313 + F12*F32*chi31*dAdgrad_chi221313 + F12*F32*chi32*dAdgrad_chi222313 + F12*F32*chi33*dAdgrad_chi223313 + F12*F33*chi31*dAdgrad_chi321313 + F12*F33*chi32*dAdgrad_chi322313 + F12*F33*chi33*dAdgrad_chi323313 + F13*F31*chi31*dAdgrad_chi131313 + F13*F31*chi32*dAdgrad_chi132313 + F13*F31*chi33*dAdgrad_chi133313 + F13*F32*chi31*dAdgrad_chi231313 + F13*F32*chi32*dAdgrad_chi232313 + F13*F32*chi33*dAdgrad_chi233313 + F13*F33*chi31*dAdgrad_chi331313 + F13*F33*chi32*dAdgrad_chi332313 + F13*F33*chi33*dAdgrad_chi333313 + _313313;
        dadgrad_chi(22,23) = F11*F31*chi31*dAdgrad_chi111312 + F11*F31*chi32*dAdgrad_chi112312 + F11*F31*chi33*dAdgrad_chi113312 + F11*F32*chi31*dAdgrad_chi211312 + F11*F32*chi32*dAdgrad_chi212312 + F11*F32*chi33*dAdgrad_chi213312 + F11*F33*chi31*dAdgrad_chi311312 + F11*F33*chi32*dAdgrad_chi312312 + F11*F33*chi33*dAdgrad_chi313312 + F12*F31*chi31*dAdgrad_chi121312 + F12*F31*chi32*dAdgrad_chi122312 + F12*F31*chi33*dAdgrad_chi123312 + F12*F32*chi31*dAdgrad_chi221312 + F12*F32*chi32*dAdgrad_chi222312 + F12*F32*chi33*dAdgrad_chi223312 + F12*F33*chi31*dAdgrad_chi321312 + F12*F33*chi32*dAdgrad_chi322312 + F12*F33*chi33*dAdgrad_chi323312 + F13*F31*chi31*dAdgrad_chi131312 + F13*F31*chi32*dAdgrad_chi132312 + F13*F31*chi33*dAdgrad_chi133312 + F13*F32*chi31*dAdgrad_chi231312 + F13*F32*chi32*dAdgrad_chi232312 + F13*F32*chi33*dAdgrad_chi233312 + F13*F33*chi31*dAdgrad_chi331312 + F13*F33*chi32*dAdgrad_chi332312 + F13*F33*chi33*dAdgrad_chi333312 + _313312;
        dadgrad_chi(22,24) = F11*F31*chi31*dAdgrad_chi111332 + F11*F31*chi32*dAdgrad_chi112332 + F11*F31*chi33*dAdgrad_chi113332 + F11*F32*chi31*dAdgrad_chi211332 + F11*F32*chi32*dAdgrad_chi212332 + F11*F32*chi33*dAdgrad_chi213332 + F11*F33*chi31*dAdgrad_chi311332 + F11*F33*chi32*dAdgrad_chi312332 + F11*F33*chi33*dAdgrad_chi313332 + F12*F31*chi31*dAdgrad_chi121332 + F12*F31*chi32*dAdgrad_chi122332 + F12*F31*chi33*dAdgrad_chi123332 + F12*F32*chi31*dAdgrad_chi221332 + F12*F32*chi32*dAdgrad_chi222332 + F12*F32*chi33*dAdgrad_chi223332 + F12*F33*chi31*dAdgrad_chi321332 + F12*F33*chi32*dAdgrad_chi322332 + F12*F33*chi33*dAdgrad_chi323332 + F13*F31*chi31*dAdgrad_chi131332 + F13*F31*chi32*dAdgrad_chi132332 + F13*F31*chi33*dAdgrad_chi133332 + F13*F32*chi31*dAdgrad_chi231332 + F13*F32*chi32*dAdgrad_chi232332 + F13*F32*chi33*dAdgrad_chi233332 + F13*F33*chi31*dAdgrad_chi331332 + F13*F33*chi32*dAdgrad_chi332332 + F13*F33*chi33*dAdgrad_chi333332 + _313332;
        dadgrad_chi(22,25) = F11*F31*chi31*dAdgrad_chi111331 + F11*F31*chi32*dAdgrad_chi112331 + F11*F31*chi33*dAdgrad_chi113331 + F11*F32*chi31*dAdgrad_chi211331 + F11*F32*chi32*dAdgrad_chi212331 + F11*F32*chi33*dAdgrad_chi213331 + F11*F33*chi31*dAdgrad_chi311331 + F11*F33*chi32*dAdgrad_chi312331 + F11*F33*chi33*dAdgrad_chi313331 + F12*F31*chi31*dAdgrad_chi121331 + F12*F31*chi32*dAdgrad_chi122331 + F12*F31*chi33*dAdgrad_chi123331 + F12*F32*chi31*dAdgrad_chi221331 + F12*F32*chi32*dAdgrad_chi222331 + F12*F32*chi33*dAdgrad_chi223331 + F12*F33*chi31*dAdgrad_chi321331 + F12*F33*chi32*dAdgrad_chi322331 + F12*F33*chi33*dAdgrad_chi323331 + F13*F31*chi31*dAdgrad_chi131331 + F13*F31*chi32*dAdgrad_chi132331 + F13*F31*chi33*dAdgrad_chi133331 + F13*F32*chi31*dAdgrad_chi231331 + F13*F32*chi32*dAdgrad_chi232331 + F13*F32*chi33*dAdgrad_chi233331 + F13*F33*chi31*dAdgrad_chi331331 + F13*F33*chi32*dAdgrad_chi332331 + F13*F33*chi33*dAdgrad_chi333331 + _313331;
        dadgrad_chi(22,26) = F11*F31*chi31*dAdgrad_chi111321 + F11*F31*chi32*dAdgrad_chi112321 + F11*F31*chi33*dAdgrad_chi113321 + F11*F32*chi31*dAdgrad_chi211321 + F11*F32*chi32*dAdgrad_chi212321 + F11*F32*chi33*dAdgrad_chi213321 + F11*F33*chi31*dAdgrad_chi311321 + F11*F33*chi32*dAdgrad_chi312321 + F11*F33*chi33*dAdgrad_chi313321 + F12*F31*chi31*dAdgrad_chi121321 + F12*F31*chi32*dAdgrad_chi122321 + F12*F31*chi33*dAdgrad_chi123321 + F12*F32*chi31*dAdgrad_chi221321 + F12*F32*chi32*dAdgrad_chi222321 + F12*F32*chi33*dAdgrad_chi223321 + F12*F33*chi31*dAdgrad_chi321321 + F12*F33*chi32*dAdgrad_chi322321 + F12*F33*chi33*dAdgrad_chi323321 + F13*F31*chi31*dAdgrad_chi131321 + F13*F31*chi32*dAdgrad_chi132321 + F13*F31*chi33*dAdgrad_chi133321 + F13*F32*chi31*dAdgrad_chi231321 + F13*F32*chi32*dAdgrad_chi232321 + F13*F32*chi33*dAdgrad_chi233321 + F13*F33*chi31*dAdgrad_chi331321 + F13*F33*chi32*dAdgrad_chi332321 + F13*F33*chi33*dAdgrad_chi333321 + _313321;
        dadgrad_chi(23,0) = F11*F31*chi21*dAdgrad_chi111111 + F11*F31*chi22*dAdgrad_chi112111 + F11*F31*chi23*dAdgrad_chi113111 + F11*F32*chi21*dAdgrad_chi211111 + F11*F32*chi22*dAdgrad_chi212111 + F11*F32*chi23*dAdgrad_chi213111 + F11*F33*chi21*dAdgrad_chi311111 + F11*F33*chi22*dAdgrad_chi312111 + F11*F33*chi23*dAdgrad_chi313111 + F12*F31*chi21*dAdgrad_chi121111 + F12*F31*chi22*dAdgrad_chi122111 + F12*F31*chi23*dAdgrad_chi123111 + F12*F32*chi21*dAdgrad_chi221111 + F12*F32*chi22*dAdgrad_chi222111 + F12*F32*chi23*dAdgrad_chi223111 + F12*F33*chi21*dAdgrad_chi321111 + F12*F33*chi22*dAdgrad_chi322111 + F12*F33*chi23*dAdgrad_chi323111 + F13*F31*chi21*dAdgrad_chi131111 + F13*F31*chi22*dAdgrad_chi132111 + F13*F31*chi23*dAdgrad_chi133111 + F13*F32*chi21*dAdgrad_chi231111 + F13*F32*chi22*dAdgrad_chi232111 + F13*F32*chi23*dAdgrad_chi233111 + F13*F33*chi21*dAdgrad_chi331111 + F13*F33*chi22*dAdgrad_chi332111 + F13*F33*chi23*dAdgrad_chi333111 + _312111;
        dadgrad_chi(23,1) = F11*F31*chi21*dAdgrad_chi111122 + F11*F31*chi22*dAdgrad_chi112122 + F11*F31*chi23*dAdgrad_chi113122 + F11*F32*chi21*dAdgrad_chi211122 + F11*F32*chi22*dAdgrad_chi212122 + F11*F32*chi23*dAdgrad_chi213122 + F11*F33*chi21*dAdgrad_chi311122 + F11*F33*chi22*dAdgrad_chi312122 + F11*F33*chi23*dAdgrad_chi313122 + F12*F31*chi21*dAdgrad_chi121122 + F12*F31*chi22*dAdgrad_chi122122 + F12*F31*chi23*dAdgrad_chi123122 + F12*F32*chi21*dAdgrad_chi221122 + F12*F32*chi22*dAdgrad_chi222122 + F12*F32*chi23*dAdgrad_chi223122 + F12*F33*chi21*dAdgrad_chi321122 + F12*F33*chi22*dAdgrad_chi322122 + F12*F33*chi23*dAdgrad_chi323122 + F13*F31*chi21*dAdgrad_chi131122 + F13*F31*chi22*dAdgrad_chi132122 + F13*F31*chi23*dAdgrad_chi133122 + F13*F32*chi21*dAdgrad_chi231122 + F13*F32*chi22*dAdgrad_chi232122 + F13*F32*chi23*dAdgrad_chi233122 + F13*F33*chi21*dAdgrad_chi331122 + F13*F33*chi22*dAdgrad_chi332122 + F13*F33*chi23*dAdgrad_chi333122 + _312122;
        dadgrad_chi(23,2) = F11*F31*chi21*dAdgrad_chi111133 + F11*F31*chi22*dAdgrad_chi112133 + F11*F31*chi23*dAdgrad_chi113133 + F11*F32*chi21*dAdgrad_chi211133 + F11*F32*chi22*dAdgrad_chi212133 + F11*F32*chi23*dAdgrad_chi213133 + F11*F33*chi21*dAdgrad_chi311133 + F11*F33*chi22*dAdgrad_chi312133 + F11*F33*chi23*dAdgrad_chi313133 + F12*F31*chi21*dAdgrad_chi121133 + F12*F31*chi22*dAdgrad_chi122133 + F12*F31*chi23*dAdgrad_chi123133 + F12*F32*chi21*dAdgrad_chi221133 + F12*F32*chi22*dAdgrad_chi222133 + F12*F32*chi23*dAdgrad_chi223133 + F12*F33*chi21*dAdgrad_chi321133 + F12*F33*chi22*dAdgrad_chi322133 + F12*F33*chi23*dAdgrad_chi323133 + F13*F31*chi21*dAdgrad_chi131133 + F13*F31*chi22*dAdgrad_chi132133 + F13*F31*chi23*dAdgrad_chi133133 + F13*F32*chi21*dAdgrad_chi231133 + F13*F32*chi22*dAdgrad_chi232133 + F13*F32*chi23*dAdgrad_chi233133 + F13*F33*chi21*dAdgrad_chi331133 + F13*F33*chi22*dAdgrad_chi332133 + F13*F33*chi23*dAdgrad_chi333133 + _312133;
        dadgrad_chi(23,3) = F11*F31*chi21*dAdgrad_chi111123 + F11*F31*chi22*dAdgrad_chi112123 + F11*F31*chi23*dAdgrad_chi113123 + F11*F32*chi21*dAdgrad_chi211123 + F11*F32*chi22*dAdgrad_chi212123 + F11*F32*chi23*dAdgrad_chi213123 + F11*F33*chi21*dAdgrad_chi311123 + F11*F33*chi22*dAdgrad_chi312123 + F11*F33*chi23*dAdgrad_chi313123 + F12*F31*chi21*dAdgrad_chi121123 + F12*F31*chi22*dAdgrad_chi122123 + F12*F31*chi23*dAdgrad_chi123123 + F12*F32*chi21*dAdgrad_chi221123 + F12*F32*chi22*dAdgrad_chi222123 + F12*F32*chi23*dAdgrad_chi223123 + F12*F33*chi21*dAdgrad_chi321123 + F12*F33*chi22*dAdgrad_chi322123 + F12*F33*chi23*dAdgrad_chi323123 + F13*F31*chi21*dAdgrad_chi131123 + F13*F31*chi22*dAdgrad_chi132123 + F13*F31*chi23*dAdgrad_chi133123 + F13*F32*chi21*dAdgrad_chi231123 + F13*F32*chi22*dAdgrad_chi232123 + F13*F32*chi23*dAdgrad_chi233123 + F13*F33*chi21*dAdgrad_chi331123 + F13*F33*chi22*dAdgrad_chi332123 + F13*F33*chi23*dAdgrad_chi333123 + _312123;
        dadgrad_chi(23,4) = F11*F31*chi21*dAdgrad_chi111113 + F11*F31*chi22*dAdgrad_chi112113 + F11*F31*chi23*dAdgrad_chi113113 + F11*F32*chi21*dAdgrad_chi211113 + F11*F32*chi22*dAdgrad_chi212113 + F11*F32*chi23*dAdgrad_chi213113 + F11*F33*chi21*dAdgrad_chi311113 + F11*F33*chi22*dAdgrad_chi312113 + F11*F33*chi23*dAdgrad_chi313113 + F12*F31*chi21*dAdgrad_chi121113 + F12*F31*chi22*dAdgrad_chi122113 + F12*F31*chi23*dAdgrad_chi123113 + F12*F32*chi21*dAdgrad_chi221113 + F12*F32*chi22*dAdgrad_chi222113 + F12*F32*chi23*dAdgrad_chi223113 + F12*F33*chi21*dAdgrad_chi321113 + F12*F33*chi22*dAdgrad_chi322113 + F12*F33*chi23*dAdgrad_chi323113 + F13*F31*chi21*dAdgrad_chi131113 + F13*F31*chi22*dAdgrad_chi132113 + F13*F31*chi23*dAdgrad_chi133113 + F13*F32*chi21*dAdgrad_chi231113 + F13*F32*chi22*dAdgrad_chi232113 + F13*F32*chi23*dAdgrad_chi233113 + F13*F33*chi21*dAdgrad_chi331113 + F13*F33*chi22*dAdgrad_chi332113 + F13*F33*chi23*dAdgrad_chi333113 + _312113;
        dadgrad_chi(23,5) = F11*F31*chi21*dAdgrad_chi111112 + F11*F31*chi22*dAdgrad_chi112112 + F11*F31*chi23*dAdgrad_chi113112 + F11*F32*chi21*dAdgrad_chi211112 + F11*F32*chi22*dAdgrad_chi212112 + F11*F32*chi23*dAdgrad_chi213112 + F11*F33*chi21*dAdgrad_chi311112 + F11*F33*chi22*dAdgrad_chi312112 + F11*F33*chi23*dAdgrad_chi313112 + F12*F31*chi21*dAdgrad_chi121112 + F12*F31*chi22*dAdgrad_chi122112 + F12*F31*chi23*dAdgrad_chi123112 + F12*F32*chi21*dAdgrad_chi221112 + F12*F32*chi22*dAdgrad_chi222112 + F12*F32*chi23*dAdgrad_chi223112 + F12*F33*chi21*dAdgrad_chi321112 + F12*F33*chi22*dAdgrad_chi322112 + F12*F33*chi23*dAdgrad_chi323112 + F13*F31*chi21*dAdgrad_chi131112 + F13*F31*chi22*dAdgrad_chi132112 + F13*F31*chi23*dAdgrad_chi133112 + F13*F32*chi21*dAdgrad_chi231112 + F13*F32*chi22*dAdgrad_chi232112 + F13*F32*chi23*dAdgrad_chi233112 + F13*F33*chi21*dAdgrad_chi331112 + F13*F33*chi22*dAdgrad_chi332112 + F13*F33*chi23*dAdgrad_chi333112 + _312112;
        dadgrad_chi(23,6) = F11*F31*chi21*dAdgrad_chi111132 + F11*F31*chi22*dAdgrad_chi112132 + F11*F31*chi23*dAdgrad_chi113132 + F11*F32*chi21*dAdgrad_chi211132 + F11*F32*chi22*dAdgrad_chi212132 + F11*F32*chi23*dAdgrad_chi213132 + F11*F33*chi21*dAdgrad_chi311132 + F11*F33*chi22*dAdgrad_chi312132 + F11*F33*chi23*dAdgrad_chi313132 + F12*F31*chi21*dAdgrad_chi121132 + F12*F31*chi22*dAdgrad_chi122132 + F12*F31*chi23*dAdgrad_chi123132 + F12*F32*chi21*dAdgrad_chi221132 + F12*F32*chi22*dAdgrad_chi222132 + F12*F32*chi23*dAdgrad_chi223132 + F12*F33*chi21*dAdgrad_chi321132 + F12*F33*chi22*dAdgrad_chi322132 + F12*F33*chi23*dAdgrad_chi323132 + F13*F31*chi21*dAdgrad_chi131132 + F13*F31*chi22*dAdgrad_chi132132 + F13*F31*chi23*dAdgrad_chi133132 + F13*F32*chi21*dAdgrad_chi231132 + F13*F32*chi22*dAdgrad_chi232132 + F13*F32*chi23*dAdgrad_chi233132 + F13*F33*chi21*dAdgrad_chi331132 + F13*F33*chi22*dAdgrad_chi332132 + F13*F33*chi23*dAdgrad_chi333132 + _312132;
        dadgrad_chi(23,7) = F11*F31*chi21*dAdgrad_chi111131 + F11*F31*chi22*dAdgrad_chi112131 + F11*F31*chi23*dAdgrad_chi113131 + F11*F32*chi21*dAdgrad_chi211131 + F11*F32*chi22*dAdgrad_chi212131 + F11*F32*chi23*dAdgrad_chi213131 + F11*F33*chi21*dAdgrad_chi311131 + F11*F33*chi22*dAdgrad_chi312131 + F11*F33*chi23*dAdgrad_chi313131 + F12*F31*chi21*dAdgrad_chi121131 + F12*F31*chi22*dAdgrad_chi122131 + F12*F31*chi23*dAdgrad_chi123131 + F12*F32*chi21*dAdgrad_chi221131 + F12*F32*chi22*dAdgrad_chi222131 + F12*F32*chi23*dAdgrad_chi223131 + F12*F33*chi21*dAdgrad_chi321131 + F12*F33*chi22*dAdgrad_chi322131 + F12*F33*chi23*dAdgrad_chi323131 + F13*F31*chi21*dAdgrad_chi131131 + F13*F31*chi22*dAdgrad_chi132131 + F13*F31*chi23*dAdgrad_chi133131 + F13*F32*chi21*dAdgrad_chi231131 + F13*F32*chi22*dAdgrad_chi232131 + F13*F32*chi23*dAdgrad_chi233131 + F13*F33*chi21*dAdgrad_chi331131 + F13*F33*chi22*dAdgrad_chi332131 + F13*F33*chi23*dAdgrad_chi333131 + _312131;
        dadgrad_chi(23,8) = F11*F31*chi21*dAdgrad_chi111121 + F11*F31*chi22*dAdgrad_chi112121 + F11*F31*chi23*dAdgrad_chi113121 + F11*F32*chi21*dAdgrad_chi211121 + F11*F32*chi22*dAdgrad_chi212121 + F11*F32*chi23*dAdgrad_chi213121 + F11*F33*chi21*dAdgrad_chi311121 + F11*F33*chi22*dAdgrad_chi312121 + F11*F33*chi23*dAdgrad_chi313121 + F12*F31*chi21*dAdgrad_chi121121 + F12*F31*chi22*dAdgrad_chi122121 + F12*F31*chi23*dAdgrad_chi123121 + F12*F32*chi21*dAdgrad_chi221121 + F12*F32*chi22*dAdgrad_chi222121 + F12*F32*chi23*dAdgrad_chi223121 + F12*F33*chi21*dAdgrad_chi321121 + F12*F33*chi22*dAdgrad_chi322121 + F12*F33*chi23*dAdgrad_chi323121 + F13*F31*chi21*dAdgrad_chi131121 + F13*F31*chi22*dAdgrad_chi132121 + F13*F31*chi23*dAdgrad_chi133121 + F13*F32*chi21*dAdgrad_chi231121 + F13*F32*chi22*dAdgrad_chi232121 + F13*F32*chi23*dAdgrad_chi233121 + F13*F33*chi21*dAdgrad_chi331121 + F13*F33*chi22*dAdgrad_chi332121 + F13*F33*chi23*dAdgrad_chi333121 + _312121;
        dadgrad_chi(23,9) = F11*F31*chi21*dAdgrad_chi111211 + F11*F31*chi22*dAdgrad_chi112211 + F11*F31*chi23*dAdgrad_chi113211 + F11*F32*chi21*dAdgrad_chi211211 + F11*F32*chi22*dAdgrad_chi212211 + F11*F32*chi23*dAdgrad_chi213211 + F11*F33*chi21*dAdgrad_chi311211 + F11*F33*chi22*dAdgrad_chi312211 + F11*F33*chi23*dAdgrad_chi313211 + F12*F31*chi21*dAdgrad_chi121211 + F12*F31*chi22*dAdgrad_chi122211 + F12*F31*chi23*dAdgrad_chi123211 + F12*F32*chi21*dAdgrad_chi221211 + F12*F32*chi22*dAdgrad_chi222211 + F12*F32*chi23*dAdgrad_chi223211 + F12*F33*chi21*dAdgrad_chi321211 + F12*F33*chi22*dAdgrad_chi322211 + F12*F33*chi23*dAdgrad_chi323211 + F13*F31*chi21*dAdgrad_chi131211 + F13*F31*chi22*dAdgrad_chi132211 + F13*F31*chi23*dAdgrad_chi133211 + F13*F32*chi21*dAdgrad_chi231211 + F13*F32*chi22*dAdgrad_chi232211 + F13*F32*chi23*dAdgrad_chi233211 + F13*F33*chi21*dAdgrad_chi331211 + F13*F33*chi22*dAdgrad_chi332211 + F13*F33*chi23*dAdgrad_chi333211 + _312211;
        dadgrad_chi(23,10) = F11*F31*chi21*dAdgrad_chi111222 + F11*F31*chi22*dAdgrad_chi112222 + F11*F31*chi23*dAdgrad_chi113222 + F11*F32*chi21*dAdgrad_chi211222 + F11*F32*chi22*dAdgrad_chi212222 + F11*F32*chi23*dAdgrad_chi213222 + F11*F33*chi21*dAdgrad_chi311222 + F11*F33*chi22*dAdgrad_chi312222 + F11*F33*chi23*dAdgrad_chi313222 + F12*F31*chi21*dAdgrad_chi121222 + F12*F31*chi22*dAdgrad_chi122222 + F12*F31*chi23*dAdgrad_chi123222 + F12*F32*chi21*dAdgrad_chi221222 + F12*F32*chi22*dAdgrad_chi222222 + F12*F32*chi23*dAdgrad_chi223222 + F12*F33*chi21*dAdgrad_chi321222 + F12*F33*chi22*dAdgrad_chi322222 + F12*F33*chi23*dAdgrad_chi323222 + F13*F31*chi21*dAdgrad_chi131222 + F13*F31*chi22*dAdgrad_chi132222 + F13*F31*chi23*dAdgrad_chi133222 + F13*F32*chi21*dAdgrad_chi231222 + F13*F32*chi22*dAdgrad_chi232222 + F13*F32*chi23*dAdgrad_chi233222 + F13*F33*chi21*dAdgrad_chi331222 + F13*F33*chi22*dAdgrad_chi332222 + F13*F33*chi23*dAdgrad_chi333222 + _312222;
        dadgrad_chi(23,11) = F11*F31*chi21*dAdgrad_chi111233 + F11*F31*chi22*dAdgrad_chi112233 + F11*F31*chi23*dAdgrad_chi113233 + F11*F32*chi21*dAdgrad_chi211233 + F11*F32*chi22*dAdgrad_chi212233 + F11*F32*chi23*dAdgrad_chi213233 + F11*F33*chi21*dAdgrad_chi311233 + F11*F33*chi22*dAdgrad_chi312233 + F11*F33*chi23*dAdgrad_chi313233 + F12*F31*chi21*dAdgrad_chi121233 + F12*F31*chi22*dAdgrad_chi122233 + F12*F31*chi23*dAdgrad_chi123233 + F12*F32*chi21*dAdgrad_chi221233 + F12*F32*chi22*dAdgrad_chi222233 + F12*F32*chi23*dAdgrad_chi223233 + F12*F33*chi21*dAdgrad_chi321233 + F12*F33*chi22*dAdgrad_chi322233 + F12*F33*chi23*dAdgrad_chi323233 + F13*F31*chi21*dAdgrad_chi131233 + F13*F31*chi22*dAdgrad_chi132233 + F13*F31*chi23*dAdgrad_chi133233 + F13*F32*chi21*dAdgrad_chi231233 + F13*F32*chi22*dAdgrad_chi232233 + F13*F32*chi23*dAdgrad_chi233233 + F13*F33*chi21*dAdgrad_chi331233 + F13*F33*chi22*dAdgrad_chi332233 + F13*F33*chi23*dAdgrad_chi333233 + _312233;
        dadgrad_chi(23,12) = F11*F31*chi21*dAdgrad_chi111223 + F11*F31*chi22*dAdgrad_chi112223 + F11*F31*chi23*dAdgrad_chi113223 + F11*F32*chi21*dAdgrad_chi211223 + F11*F32*chi22*dAdgrad_chi212223 + F11*F32*chi23*dAdgrad_chi213223 + F11*F33*chi21*dAdgrad_chi311223 + F11*F33*chi22*dAdgrad_chi312223 + F11*F33*chi23*dAdgrad_chi313223 + F12*F31*chi21*dAdgrad_chi121223 + F12*F31*chi22*dAdgrad_chi122223 + F12*F31*chi23*dAdgrad_chi123223 + F12*F32*chi21*dAdgrad_chi221223 + F12*F32*chi22*dAdgrad_chi222223 + F12*F32*chi23*dAdgrad_chi223223 + F12*F33*chi21*dAdgrad_chi321223 + F12*F33*chi22*dAdgrad_chi322223 + F12*F33*chi23*dAdgrad_chi323223 + F13*F31*chi21*dAdgrad_chi131223 + F13*F31*chi22*dAdgrad_chi132223 + F13*F31*chi23*dAdgrad_chi133223 + F13*F32*chi21*dAdgrad_chi231223 + F13*F32*chi22*dAdgrad_chi232223 + F13*F32*chi23*dAdgrad_chi233223 + F13*F33*chi21*dAdgrad_chi331223 + F13*F33*chi22*dAdgrad_chi332223 + F13*F33*chi23*dAdgrad_chi333223 + _312223;
        dadgrad_chi(23,13) = F11*F31*chi21*dAdgrad_chi111213 + F11*F31*chi22*dAdgrad_chi112213 + F11*F31*chi23*dAdgrad_chi113213 + F11*F32*chi21*dAdgrad_chi211213 + F11*F32*chi22*dAdgrad_chi212213 + F11*F32*chi23*dAdgrad_chi213213 + F11*F33*chi21*dAdgrad_chi311213 + F11*F33*chi22*dAdgrad_chi312213 + F11*F33*chi23*dAdgrad_chi313213 + F12*F31*chi21*dAdgrad_chi121213 + F12*F31*chi22*dAdgrad_chi122213 + F12*F31*chi23*dAdgrad_chi123213 + F12*F32*chi21*dAdgrad_chi221213 + F12*F32*chi22*dAdgrad_chi222213 + F12*F32*chi23*dAdgrad_chi223213 + F12*F33*chi21*dAdgrad_chi321213 + F12*F33*chi22*dAdgrad_chi322213 + F12*F33*chi23*dAdgrad_chi323213 + F13*F31*chi21*dAdgrad_chi131213 + F13*F31*chi22*dAdgrad_chi132213 + F13*F31*chi23*dAdgrad_chi133213 + F13*F32*chi21*dAdgrad_chi231213 + F13*F32*chi22*dAdgrad_chi232213 + F13*F32*chi23*dAdgrad_chi233213 + F13*F33*chi21*dAdgrad_chi331213 + F13*F33*chi22*dAdgrad_chi332213 + F13*F33*chi23*dAdgrad_chi333213 + _312213;
        dadgrad_chi(23,14) = F11*F31*chi21*dAdgrad_chi111212 + F11*F31*chi22*dAdgrad_chi112212 + F11*F31*chi23*dAdgrad_chi113212 + F11*F32*chi21*dAdgrad_chi211212 + F11*F32*chi22*dAdgrad_chi212212 + F11*F32*chi23*dAdgrad_chi213212 + F11*F33*chi21*dAdgrad_chi311212 + F11*F33*chi22*dAdgrad_chi312212 + F11*F33*chi23*dAdgrad_chi313212 + F12*F31*chi21*dAdgrad_chi121212 + F12*F31*chi22*dAdgrad_chi122212 + F12*F31*chi23*dAdgrad_chi123212 + F12*F32*chi21*dAdgrad_chi221212 + F12*F32*chi22*dAdgrad_chi222212 + F12*F32*chi23*dAdgrad_chi223212 + F12*F33*chi21*dAdgrad_chi321212 + F12*F33*chi22*dAdgrad_chi322212 + F12*F33*chi23*dAdgrad_chi323212 + F13*F31*chi21*dAdgrad_chi131212 + F13*F31*chi22*dAdgrad_chi132212 + F13*F31*chi23*dAdgrad_chi133212 + F13*F32*chi21*dAdgrad_chi231212 + F13*F32*chi22*dAdgrad_chi232212 + F13*F32*chi23*dAdgrad_chi233212 + F13*F33*chi21*dAdgrad_chi331212 + F13*F33*chi22*dAdgrad_chi332212 + F13*F33*chi23*dAdgrad_chi333212 + _312212;
        dadgrad_chi(23,15) = F11*F31*chi21*dAdgrad_chi111232 + F11*F31*chi22*dAdgrad_chi112232 + F11*F31*chi23*dAdgrad_chi113232 + F11*F32*chi21*dAdgrad_chi211232 + F11*F32*chi22*dAdgrad_chi212232 + F11*F32*chi23*dAdgrad_chi213232 + F11*F33*chi21*dAdgrad_chi311232 + F11*F33*chi22*dAdgrad_chi312232 + F11*F33*chi23*dAdgrad_chi313232 + F12*F31*chi21*dAdgrad_chi121232 + F12*F31*chi22*dAdgrad_chi122232 + F12*F31*chi23*dAdgrad_chi123232 + F12*F32*chi21*dAdgrad_chi221232 + F12*F32*chi22*dAdgrad_chi222232 + F12*F32*chi23*dAdgrad_chi223232 + F12*F33*chi21*dAdgrad_chi321232 + F12*F33*chi22*dAdgrad_chi322232 + F12*F33*chi23*dAdgrad_chi323232 + F13*F31*chi21*dAdgrad_chi131232 + F13*F31*chi22*dAdgrad_chi132232 + F13*F31*chi23*dAdgrad_chi133232 + F13*F32*chi21*dAdgrad_chi231232 + F13*F32*chi22*dAdgrad_chi232232 + F13*F32*chi23*dAdgrad_chi233232 + F13*F33*chi21*dAdgrad_chi331232 + F13*F33*chi22*dAdgrad_chi332232 + F13*F33*chi23*dAdgrad_chi333232 + _312232;
        dadgrad_chi(23,16) = F11*F31*chi21*dAdgrad_chi111231 + F11*F31*chi22*dAdgrad_chi112231 + F11*F31*chi23*dAdgrad_chi113231 + F11*F32*chi21*dAdgrad_chi211231 + F11*F32*chi22*dAdgrad_chi212231 + F11*F32*chi23*dAdgrad_chi213231 + F11*F33*chi21*dAdgrad_chi311231 + F11*F33*chi22*dAdgrad_chi312231 + F11*F33*chi23*dAdgrad_chi313231 + F12*F31*chi21*dAdgrad_chi121231 + F12*F31*chi22*dAdgrad_chi122231 + F12*F31*chi23*dAdgrad_chi123231 + F12*F32*chi21*dAdgrad_chi221231 + F12*F32*chi22*dAdgrad_chi222231 + F12*F32*chi23*dAdgrad_chi223231 + F12*F33*chi21*dAdgrad_chi321231 + F12*F33*chi22*dAdgrad_chi322231 + F12*F33*chi23*dAdgrad_chi323231 + F13*F31*chi21*dAdgrad_chi131231 + F13*F31*chi22*dAdgrad_chi132231 + F13*F31*chi23*dAdgrad_chi133231 + F13*F32*chi21*dAdgrad_chi231231 + F13*F32*chi22*dAdgrad_chi232231 + F13*F32*chi23*dAdgrad_chi233231 + F13*F33*chi21*dAdgrad_chi331231 + F13*F33*chi22*dAdgrad_chi332231 + F13*F33*chi23*dAdgrad_chi333231 + _312231;
        dadgrad_chi(23,17) = F11*F31*chi21*dAdgrad_chi111221 + F11*F31*chi22*dAdgrad_chi112221 + F11*F31*chi23*dAdgrad_chi113221 + F11*F32*chi21*dAdgrad_chi211221 + F11*F32*chi22*dAdgrad_chi212221 + F11*F32*chi23*dAdgrad_chi213221 + F11*F33*chi21*dAdgrad_chi311221 + F11*F33*chi22*dAdgrad_chi312221 + F11*F33*chi23*dAdgrad_chi313221 + F12*F31*chi21*dAdgrad_chi121221 + F12*F31*chi22*dAdgrad_chi122221 + F12*F31*chi23*dAdgrad_chi123221 + F12*F32*chi21*dAdgrad_chi221221 + F12*F32*chi22*dAdgrad_chi222221 + F12*F32*chi23*dAdgrad_chi223221 + F12*F33*chi21*dAdgrad_chi321221 + F12*F33*chi22*dAdgrad_chi322221 + F12*F33*chi23*dAdgrad_chi323221 + F13*F31*chi21*dAdgrad_chi131221 + F13*F31*chi22*dAdgrad_chi132221 + F13*F31*chi23*dAdgrad_chi133221 + F13*F32*chi21*dAdgrad_chi231221 + F13*F32*chi22*dAdgrad_chi232221 + F13*F32*chi23*dAdgrad_chi233221 + F13*F33*chi21*dAdgrad_chi331221 + F13*F33*chi22*dAdgrad_chi332221 + F13*F33*chi23*dAdgrad_chi333221 + _312221;
        dadgrad_chi(23,18) = F11*F31*chi21*dAdgrad_chi111311 + F11*F31*chi22*dAdgrad_chi112311 + F11*F31*chi23*dAdgrad_chi113311 + F11*F32*chi21*dAdgrad_chi211311 + F11*F32*chi22*dAdgrad_chi212311 + F11*F32*chi23*dAdgrad_chi213311 + F11*F33*chi21*dAdgrad_chi311311 + F11*F33*chi22*dAdgrad_chi312311 + F11*F33*chi23*dAdgrad_chi313311 + F12*F31*chi21*dAdgrad_chi121311 + F12*F31*chi22*dAdgrad_chi122311 + F12*F31*chi23*dAdgrad_chi123311 + F12*F32*chi21*dAdgrad_chi221311 + F12*F32*chi22*dAdgrad_chi222311 + F12*F32*chi23*dAdgrad_chi223311 + F12*F33*chi21*dAdgrad_chi321311 + F12*F33*chi22*dAdgrad_chi322311 + F12*F33*chi23*dAdgrad_chi323311 + F13*F31*chi21*dAdgrad_chi131311 + F13*F31*chi22*dAdgrad_chi132311 + F13*F31*chi23*dAdgrad_chi133311 + F13*F32*chi21*dAdgrad_chi231311 + F13*F32*chi22*dAdgrad_chi232311 + F13*F32*chi23*dAdgrad_chi233311 + F13*F33*chi21*dAdgrad_chi331311 + F13*F33*chi22*dAdgrad_chi332311 + F13*F33*chi23*dAdgrad_chi333311 + _312311;
        dadgrad_chi(23,19) = F11*F31*chi21*dAdgrad_chi111322 + F11*F31*chi22*dAdgrad_chi112322 + F11*F31*chi23*dAdgrad_chi113322 + F11*F32*chi21*dAdgrad_chi211322 + F11*F32*chi22*dAdgrad_chi212322 + F11*F32*chi23*dAdgrad_chi213322 + F11*F33*chi21*dAdgrad_chi311322 + F11*F33*chi22*dAdgrad_chi312322 + F11*F33*chi23*dAdgrad_chi313322 + F12*F31*chi21*dAdgrad_chi121322 + F12*F31*chi22*dAdgrad_chi122322 + F12*F31*chi23*dAdgrad_chi123322 + F12*F32*chi21*dAdgrad_chi221322 + F12*F32*chi22*dAdgrad_chi222322 + F12*F32*chi23*dAdgrad_chi223322 + F12*F33*chi21*dAdgrad_chi321322 + F12*F33*chi22*dAdgrad_chi322322 + F12*F33*chi23*dAdgrad_chi323322 + F13*F31*chi21*dAdgrad_chi131322 + F13*F31*chi22*dAdgrad_chi132322 + F13*F31*chi23*dAdgrad_chi133322 + F13*F32*chi21*dAdgrad_chi231322 + F13*F32*chi22*dAdgrad_chi232322 + F13*F32*chi23*dAdgrad_chi233322 + F13*F33*chi21*dAdgrad_chi331322 + F13*F33*chi22*dAdgrad_chi332322 + F13*F33*chi23*dAdgrad_chi333322 + _312322;
        dadgrad_chi(23,20) = F11*F31*chi21*dAdgrad_chi111333 + F11*F31*chi22*dAdgrad_chi112333 + F11*F31*chi23*dAdgrad_chi113333 + F11*F32*chi21*dAdgrad_chi211333 + F11*F32*chi22*dAdgrad_chi212333 + F11*F32*chi23*dAdgrad_chi213333 + F11*F33*chi21*dAdgrad_chi311333 + F11*F33*chi22*dAdgrad_chi312333 + F11*F33*chi23*dAdgrad_chi313333 + F12*F31*chi21*dAdgrad_chi121333 + F12*F31*chi22*dAdgrad_chi122333 + F12*F31*chi23*dAdgrad_chi123333 + F12*F32*chi21*dAdgrad_chi221333 + F12*F32*chi22*dAdgrad_chi222333 + F12*F32*chi23*dAdgrad_chi223333 + F12*F33*chi21*dAdgrad_chi321333 + F12*F33*chi22*dAdgrad_chi322333 + F12*F33*chi23*dAdgrad_chi323333 + F13*F31*chi21*dAdgrad_chi131333 + F13*F31*chi22*dAdgrad_chi132333 + F13*F31*chi23*dAdgrad_chi133333 + F13*F32*chi21*dAdgrad_chi231333 + F13*F32*chi22*dAdgrad_chi232333 + F13*F32*chi23*dAdgrad_chi233333 + F13*F33*chi21*dAdgrad_chi331333 + F13*F33*chi22*dAdgrad_chi332333 + F13*F33*chi23*dAdgrad_chi333333 + _312333;
        dadgrad_chi(23,21) = F11*F31*chi21*dAdgrad_chi111323 + F11*F31*chi22*dAdgrad_chi112323 + F11*F31*chi23*dAdgrad_chi113323 + F11*F32*chi21*dAdgrad_chi211323 + F11*F32*chi22*dAdgrad_chi212323 + F11*F32*chi23*dAdgrad_chi213323 + F11*F33*chi21*dAdgrad_chi311323 + F11*F33*chi22*dAdgrad_chi312323 + F11*F33*chi23*dAdgrad_chi313323 + F12*F31*chi21*dAdgrad_chi121323 + F12*F31*chi22*dAdgrad_chi122323 + F12*F31*chi23*dAdgrad_chi123323 + F12*F32*chi21*dAdgrad_chi221323 + F12*F32*chi22*dAdgrad_chi222323 + F12*F32*chi23*dAdgrad_chi223323 + F12*F33*chi21*dAdgrad_chi321323 + F12*F33*chi22*dAdgrad_chi322323 + F12*F33*chi23*dAdgrad_chi323323 + F13*F31*chi21*dAdgrad_chi131323 + F13*F31*chi22*dAdgrad_chi132323 + F13*F31*chi23*dAdgrad_chi133323 + F13*F32*chi21*dAdgrad_chi231323 + F13*F32*chi22*dAdgrad_chi232323 + F13*F32*chi23*dAdgrad_chi233323 + F13*F33*chi21*dAdgrad_chi331323 + F13*F33*chi22*dAdgrad_chi332323 + F13*F33*chi23*dAdgrad_chi333323 + _312323;
        dadgrad_chi(23,22) = F11*F31*chi21*dAdgrad_chi111313 + F11*F31*chi22*dAdgrad_chi112313 + F11*F31*chi23*dAdgrad_chi113313 + F11*F32*chi21*dAdgrad_chi211313 + F11*F32*chi22*dAdgrad_chi212313 + F11*F32*chi23*dAdgrad_chi213313 + F11*F33*chi21*dAdgrad_chi311313 + F11*F33*chi22*dAdgrad_chi312313 + F11*F33*chi23*dAdgrad_chi313313 + F12*F31*chi21*dAdgrad_chi121313 + F12*F31*chi22*dAdgrad_chi122313 + F12*F31*chi23*dAdgrad_chi123313 + F12*F32*chi21*dAdgrad_chi221313 + F12*F32*chi22*dAdgrad_chi222313 + F12*F32*chi23*dAdgrad_chi223313 + F12*F33*chi21*dAdgrad_chi321313 + F12*F33*chi22*dAdgrad_chi322313 + F12*F33*chi23*dAdgrad_chi323313 + F13*F31*chi21*dAdgrad_chi131313 + F13*F31*chi22*dAdgrad_chi132313 + F13*F31*chi23*dAdgrad_chi133313 + F13*F32*chi21*dAdgrad_chi231313 + F13*F32*chi22*dAdgrad_chi232313 + F13*F32*chi23*dAdgrad_chi233313 + F13*F33*chi21*dAdgrad_chi331313 + F13*F33*chi22*dAdgrad_chi332313 + F13*F33*chi23*dAdgrad_chi333313 + _312313;
        dadgrad_chi(23,23) = F11*F31*chi21*dAdgrad_chi111312 + F11*F31*chi22*dAdgrad_chi112312 + F11*F31*chi23*dAdgrad_chi113312 + F11*F32*chi21*dAdgrad_chi211312 + F11*F32*chi22*dAdgrad_chi212312 + F11*F32*chi23*dAdgrad_chi213312 + F11*F33*chi21*dAdgrad_chi311312 + F11*F33*chi22*dAdgrad_chi312312 + F11*F33*chi23*dAdgrad_chi313312 + F12*F31*chi21*dAdgrad_chi121312 + F12*F31*chi22*dAdgrad_chi122312 + F12*F31*chi23*dAdgrad_chi123312 + F12*F32*chi21*dAdgrad_chi221312 + F12*F32*chi22*dAdgrad_chi222312 + F12*F32*chi23*dAdgrad_chi223312 + F12*F33*chi21*dAdgrad_chi321312 + F12*F33*chi22*dAdgrad_chi322312 + F12*F33*chi23*dAdgrad_chi323312 + F13*F31*chi21*dAdgrad_chi131312 + F13*F31*chi22*dAdgrad_chi132312 + F13*F31*chi23*dAdgrad_chi133312 + F13*F32*chi21*dAdgrad_chi231312 + F13*F32*chi22*dAdgrad_chi232312 + F13*F32*chi23*dAdgrad_chi233312 + F13*F33*chi21*dAdgrad_chi331312 + F13*F33*chi22*dAdgrad_chi332312 + F13*F33*chi23*dAdgrad_chi333312 + _312312;
        dadgrad_chi(23,24) = F11*F31*chi21*dAdgrad_chi111332 + F11*F31*chi22*dAdgrad_chi112332 + F11*F31*chi23*dAdgrad_chi113332 + F11*F32*chi21*dAdgrad_chi211332 + F11*F32*chi22*dAdgrad_chi212332 + F11*F32*chi23*dAdgrad_chi213332 + F11*F33*chi21*dAdgrad_chi311332 + F11*F33*chi22*dAdgrad_chi312332 + F11*F33*chi23*dAdgrad_chi313332 + F12*F31*chi21*dAdgrad_chi121332 + F12*F31*chi22*dAdgrad_chi122332 + F12*F31*chi23*dAdgrad_chi123332 + F12*F32*chi21*dAdgrad_chi221332 + F12*F32*chi22*dAdgrad_chi222332 + F12*F32*chi23*dAdgrad_chi223332 + F12*F33*chi21*dAdgrad_chi321332 + F12*F33*chi22*dAdgrad_chi322332 + F12*F33*chi23*dAdgrad_chi323332 + F13*F31*chi21*dAdgrad_chi131332 + F13*F31*chi22*dAdgrad_chi132332 + F13*F31*chi23*dAdgrad_chi133332 + F13*F32*chi21*dAdgrad_chi231332 + F13*F32*chi22*dAdgrad_chi232332 + F13*F32*chi23*dAdgrad_chi233332 + F13*F33*chi21*dAdgrad_chi331332 + F13*F33*chi22*dAdgrad_chi332332 + F13*F33*chi23*dAdgrad_chi333332 + _312332;
        dadgrad_chi(23,25) = F11*F31*chi21*dAdgrad_chi111331 + F11*F31*chi22*dAdgrad_chi112331 + F11*F31*chi23*dAdgrad_chi113331 + F11*F32*chi21*dAdgrad_chi211331 + F11*F32*chi22*dAdgrad_chi212331 + F11*F32*chi23*dAdgrad_chi213331 + F11*F33*chi21*dAdgrad_chi311331 + F11*F33*chi22*dAdgrad_chi312331 + F11*F33*chi23*dAdgrad_chi313331 + F12*F31*chi21*dAdgrad_chi121331 + F12*F31*chi22*dAdgrad_chi122331 + F12*F31*chi23*dAdgrad_chi123331 + F12*F32*chi21*dAdgrad_chi221331 + F12*F32*chi22*dAdgrad_chi222331 + F12*F32*chi23*dAdgrad_chi223331 + F12*F33*chi21*dAdgrad_chi321331 + F12*F33*chi22*dAdgrad_chi322331 + F12*F33*chi23*dAdgrad_chi323331 + F13*F31*chi21*dAdgrad_chi131331 + F13*F31*chi22*dAdgrad_chi132331 + F13*F31*chi23*dAdgrad_chi133331 + F13*F32*chi21*dAdgrad_chi231331 + F13*F32*chi22*dAdgrad_chi232331 + F13*F32*chi23*dAdgrad_chi233331 + F13*F33*chi21*dAdgrad_chi331331 + F13*F33*chi22*dAdgrad_chi332331 + F13*F33*chi23*dAdgrad_chi333331 + _312331;
        dadgrad_chi(23,26) = F11*F31*chi21*dAdgrad_chi111321 + F11*F31*chi22*dAdgrad_chi112321 + F11*F31*chi23*dAdgrad_chi113321 + F11*F32*chi21*dAdgrad_chi211321 + F11*F32*chi22*dAdgrad_chi212321 + F11*F32*chi23*dAdgrad_chi213321 + F11*F33*chi21*dAdgrad_chi311321 + F11*F33*chi22*dAdgrad_chi312321 + F11*F33*chi23*dAdgrad_chi313321 + F12*F31*chi21*dAdgrad_chi121321 + F12*F31*chi22*dAdgrad_chi122321 + F12*F31*chi23*dAdgrad_chi123321 + F12*F32*chi21*dAdgrad_chi221321 + F12*F32*chi22*dAdgrad_chi222321 + F12*F32*chi23*dAdgrad_chi223321 + F12*F33*chi21*dAdgrad_chi321321 + F12*F33*chi22*dAdgrad_chi322321 + F12*F33*chi23*dAdgrad_chi323321 + F13*F31*chi21*dAdgrad_chi131321 + F13*F31*chi22*dAdgrad_chi132321 + F13*F31*chi23*dAdgrad_chi133321 + F13*F32*chi21*dAdgrad_chi231321 + F13*F32*chi22*dAdgrad_chi232321 + F13*F32*chi23*dAdgrad_chi233321 + F13*F33*chi21*dAdgrad_chi331321 + F13*F33*chi22*dAdgrad_chi332321 + F13*F33*chi23*dAdgrad_chi333321 + _312321;
        dadgrad_chi(24,0) = F31*F31*chi21*dAdgrad_chi111111 + F31*F31*chi22*dAdgrad_chi112111 + F31*F31*chi23*dAdgrad_chi113111 + F31*F32*chi21*dAdgrad_chi121111 + F31*F32*chi21*dAdgrad_chi211111 + F31*F32*chi22*dAdgrad_chi122111 + F31*F32*chi22*dAdgrad_chi212111 + F31*F32*chi23*dAdgrad_chi123111 + F31*F32*chi23*dAdgrad_chi213111 + F31*F33*chi21*dAdgrad_chi131111 + F31*F33*chi21*dAdgrad_chi311111 + F31*F33*chi22*dAdgrad_chi132111 + F31*F33*chi22*dAdgrad_chi312111 + F31*F33*chi23*dAdgrad_chi133111 + F31*F33*chi23*dAdgrad_chi313111 + F32*F32*chi21*dAdgrad_chi221111 + F32*F32*chi22*dAdgrad_chi222111 + F32*F32*chi23*dAdgrad_chi223111 + F32*F33*chi21*dAdgrad_chi231111 + F32*F33*chi21*dAdgrad_chi321111 + F32*F33*chi22*dAdgrad_chi232111 + F32*F33*chi22*dAdgrad_chi322111 + F32*F33*chi23*dAdgrad_chi233111 + F32*F33*chi23*dAdgrad_chi323111 + F33*F33*chi21*dAdgrad_chi331111 + F33*F33*chi22*dAdgrad_chi332111 + F33*F33*chi23*dAdgrad_chi333111 + _332111;
        dadgrad_chi(24,1) = F31*F31*chi21*dAdgrad_chi111122 + F31*F31*chi22*dAdgrad_chi112122 + F31*F31*chi23*dAdgrad_chi113122 + F31*F32*chi21*dAdgrad_chi121122 + F31*F32*chi21*dAdgrad_chi211122 + F31*F32*chi22*dAdgrad_chi122122 + F31*F32*chi22*dAdgrad_chi212122 + F31*F32*chi23*dAdgrad_chi123122 + F31*F32*chi23*dAdgrad_chi213122 + F31*F33*chi21*dAdgrad_chi131122 + F31*F33*chi21*dAdgrad_chi311122 + F31*F33*chi22*dAdgrad_chi132122 + F31*F33*chi22*dAdgrad_chi312122 + F31*F33*chi23*dAdgrad_chi133122 + F31*F33*chi23*dAdgrad_chi313122 + F32*F32*chi21*dAdgrad_chi221122 + F32*F32*chi22*dAdgrad_chi222122 + F32*F32*chi23*dAdgrad_chi223122 + F32*F33*chi21*dAdgrad_chi231122 + F32*F33*chi21*dAdgrad_chi321122 + F32*F33*chi22*dAdgrad_chi232122 + F32*F33*chi22*dAdgrad_chi322122 + F32*F33*chi23*dAdgrad_chi233122 + F32*F33*chi23*dAdgrad_chi323122 + F33*F33*chi21*dAdgrad_chi331122 + F33*F33*chi22*dAdgrad_chi332122 + F33*F33*chi23*dAdgrad_chi333122 + _332122;
        dadgrad_chi(24,2) = F31*F31*chi21*dAdgrad_chi111133 + F31*F31*chi22*dAdgrad_chi112133 + F31*F31*chi23*dAdgrad_chi113133 + F31*F32*chi21*dAdgrad_chi121133 + F31*F32*chi21*dAdgrad_chi211133 + F31*F32*chi22*dAdgrad_chi122133 + F31*F32*chi22*dAdgrad_chi212133 + F31*F32*chi23*dAdgrad_chi123133 + F31*F32*chi23*dAdgrad_chi213133 + F31*F33*chi21*dAdgrad_chi131133 + F31*F33*chi21*dAdgrad_chi311133 + F31*F33*chi22*dAdgrad_chi132133 + F31*F33*chi22*dAdgrad_chi312133 + F31*F33*chi23*dAdgrad_chi133133 + F31*F33*chi23*dAdgrad_chi313133 + F32*F32*chi21*dAdgrad_chi221133 + F32*F32*chi22*dAdgrad_chi222133 + F32*F32*chi23*dAdgrad_chi223133 + F32*F33*chi21*dAdgrad_chi231133 + F32*F33*chi21*dAdgrad_chi321133 + F32*F33*chi22*dAdgrad_chi232133 + F32*F33*chi22*dAdgrad_chi322133 + F32*F33*chi23*dAdgrad_chi233133 + F32*F33*chi23*dAdgrad_chi323133 + F33*F33*chi21*dAdgrad_chi331133 + F33*F33*chi22*dAdgrad_chi332133 + F33*F33*chi23*dAdgrad_chi333133 + _332133;
        dadgrad_chi(24,3) = F31*F31*chi21*dAdgrad_chi111123 + F31*F31*chi22*dAdgrad_chi112123 + F31*F31*chi23*dAdgrad_chi113123 + F31*F32*chi21*dAdgrad_chi121123 + F31*F32*chi21*dAdgrad_chi211123 + F31*F32*chi22*dAdgrad_chi122123 + F31*F32*chi22*dAdgrad_chi212123 + F31*F32*chi23*dAdgrad_chi123123 + F31*F32*chi23*dAdgrad_chi213123 + F31*F33*chi21*dAdgrad_chi131123 + F31*F33*chi21*dAdgrad_chi311123 + F31*F33*chi22*dAdgrad_chi132123 + F31*F33*chi22*dAdgrad_chi312123 + F31*F33*chi23*dAdgrad_chi133123 + F31*F33*chi23*dAdgrad_chi313123 + F32*F32*chi21*dAdgrad_chi221123 + F32*F32*chi22*dAdgrad_chi222123 + F32*F32*chi23*dAdgrad_chi223123 + F32*F33*chi21*dAdgrad_chi231123 + F32*F33*chi21*dAdgrad_chi321123 + F32*F33*chi22*dAdgrad_chi232123 + F32*F33*chi22*dAdgrad_chi322123 + F32*F33*chi23*dAdgrad_chi233123 + F32*F33*chi23*dAdgrad_chi323123 + F33*F33*chi21*dAdgrad_chi331123 + F33*F33*chi22*dAdgrad_chi332123 + F33*F33*chi23*dAdgrad_chi333123 + _332123;
        dadgrad_chi(24,4) = F31*F31*chi21*dAdgrad_chi111113 + F31*F31*chi22*dAdgrad_chi112113 + F31*F31*chi23*dAdgrad_chi113113 + F31*F32*chi21*dAdgrad_chi121113 + F31*F32*chi21*dAdgrad_chi211113 + F31*F32*chi22*dAdgrad_chi122113 + F31*F32*chi22*dAdgrad_chi212113 + F31*F32*chi23*dAdgrad_chi123113 + F31*F32*chi23*dAdgrad_chi213113 + F31*F33*chi21*dAdgrad_chi131113 + F31*F33*chi21*dAdgrad_chi311113 + F31*F33*chi22*dAdgrad_chi132113 + F31*F33*chi22*dAdgrad_chi312113 + F31*F33*chi23*dAdgrad_chi133113 + F31*F33*chi23*dAdgrad_chi313113 + F32*F32*chi21*dAdgrad_chi221113 + F32*F32*chi22*dAdgrad_chi222113 + F32*F32*chi23*dAdgrad_chi223113 + F32*F33*chi21*dAdgrad_chi231113 + F32*F33*chi21*dAdgrad_chi321113 + F32*F33*chi22*dAdgrad_chi232113 + F32*F33*chi22*dAdgrad_chi322113 + F32*F33*chi23*dAdgrad_chi233113 + F32*F33*chi23*dAdgrad_chi323113 + F33*F33*chi21*dAdgrad_chi331113 + F33*F33*chi22*dAdgrad_chi332113 + F33*F33*chi23*dAdgrad_chi333113 + _332113;
        dadgrad_chi(24,5) = F31*F31*chi21*dAdgrad_chi111112 + F31*F31*chi22*dAdgrad_chi112112 + F31*F31*chi23*dAdgrad_chi113112 + F31*F32*chi21*dAdgrad_chi121112 + F31*F32*chi21*dAdgrad_chi211112 + F31*F32*chi22*dAdgrad_chi122112 + F31*F32*chi22*dAdgrad_chi212112 + F31*F32*chi23*dAdgrad_chi123112 + F31*F32*chi23*dAdgrad_chi213112 + F31*F33*chi21*dAdgrad_chi131112 + F31*F33*chi21*dAdgrad_chi311112 + F31*F33*chi22*dAdgrad_chi132112 + F31*F33*chi22*dAdgrad_chi312112 + F31*F33*chi23*dAdgrad_chi133112 + F31*F33*chi23*dAdgrad_chi313112 + F32*F32*chi21*dAdgrad_chi221112 + F32*F32*chi22*dAdgrad_chi222112 + F32*F32*chi23*dAdgrad_chi223112 + F32*F33*chi21*dAdgrad_chi231112 + F32*F33*chi21*dAdgrad_chi321112 + F32*F33*chi22*dAdgrad_chi232112 + F32*F33*chi22*dAdgrad_chi322112 + F32*F33*chi23*dAdgrad_chi233112 + F32*F33*chi23*dAdgrad_chi323112 + F33*F33*chi21*dAdgrad_chi331112 + F33*F33*chi22*dAdgrad_chi332112 + F33*F33*chi23*dAdgrad_chi333112 + _332112;
        dadgrad_chi(24,6) = F31*F31*chi21*dAdgrad_chi111132 + F31*F31*chi22*dAdgrad_chi112132 + F31*F31*chi23*dAdgrad_chi113132 + F31*F32*chi21*dAdgrad_chi121132 + F31*F32*chi21*dAdgrad_chi211132 + F31*F32*chi22*dAdgrad_chi122132 + F31*F32*chi22*dAdgrad_chi212132 + F31*F32*chi23*dAdgrad_chi123132 + F31*F32*chi23*dAdgrad_chi213132 + F31*F33*chi21*dAdgrad_chi131132 + F31*F33*chi21*dAdgrad_chi311132 + F31*F33*chi22*dAdgrad_chi132132 + F31*F33*chi22*dAdgrad_chi312132 + F31*F33*chi23*dAdgrad_chi133132 + F31*F33*chi23*dAdgrad_chi313132 + F32*F32*chi21*dAdgrad_chi221132 + F32*F32*chi22*dAdgrad_chi222132 + F32*F32*chi23*dAdgrad_chi223132 + F32*F33*chi21*dAdgrad_chi231132 + F32*F33*chi21*dAdgrad_chi321132 + F32*F33*chi22*dAdgrad_chi232132 + F32*F33*chi22*dAdgrad_chi322132 + F32*F33*chi23*dAdgrad_chi233132 + F32*F33*chi23*dAdgrad_chi323132 + F33*F33*chi21*dAdgrad_chi331132 + F33*F33*chi22*dAdgrad_chi332132 + F33*F33*chi23*dAdgrad_chi333132 + _332132;
        dadgrad_chi(24,7) = F31*F31*chi21*dAdgrad_chi111131 + F31*F31*chi22*dAdgrad_chi112131 + F31*F31*chi23*dAdgrad_chi113131 + F31*F32*chi21*dAdgrad_chi121131 + F31*F32*chi21*dAdgrad_chi211131 + F31*F32*chi22*dAdgrad_chi122131 + F31*F32*chi22*dAdgrad_chi212131 + F31*F32*chi23*dAdgrad_chi123131 + F31*F32*chi23*dAdgrad_chi213131 + F31*F33*chi21*dAdgrad_chi131131 + F31*F33*chi21*dAdgrad_chi311131 + F31*F33*chi22*dAdgrad_chi132131 + F31*F33*chi22*dAdgrad_chi312131 + F31*F33*chi23*dAdgrad_chi133131 + F31*F33*chi23*dAdgrad_chi313131 + F32*F32*chi21*dAdgrad_chi221131 + F32*F32*chi22*dAdgrad_chi222131 + F32*F32*chi23*dAdgrad_chi223131 + F32*F33*chi21*dAdgrad_chi231131 + F32*F33*chi21*dAdgrad_chi321131 + F32*F33*chi22*dAdgrad_chi232131 + F32*F33*chi22*dAdgrad_chi322131 + F32*F33*chi23*dAdgrad_chi233131 + F32*F33*chi23*dAdgrad_chi323131 + F33*F33*chi21*dAdgrad_chi331131 + F33*F33*chi22*dAdgrad_chi332131 + F33*F33*chi23*dAdgrad_chi333131 + _332131;
        dadgrad_chi(24,8) = F31*F31*chi21*dAdgrad_chi111121 + F31*F31*chi22*dAdgrad_chi112121 + F31*F31*chi23*dAdgrad_chi113121 + F31*F32*chi21*dAdgrad_chi121121 + F31*F32*chi21*dAdgrad_chi211121 + F31*F32*chi22*dAdgrad_chi122121 + F31*F32*chi22*dAdgrad_chi212121 + F31*F32*chi23*dAdgrad_chi123121 + F31*F32*chi23*dAdgrad_chi213121 + F31*F33*chi21*dAdgrad_chi131121 + F31*F33*chi21*dAdgrad_chi311121 + F31*F33*chi22*dAdgrad_chi132121 + F31*F33*chi22*dAdgrad_chi312121 + F31*F33*chi23*dAdgrad_chi133121 + F31*F33*chi23*dAdgrad_chi313121 + F32*F32*chi21*dAdgrad_chi221121 + F32*F32*chi22*dAdgrad_chi222121 + F32*F32*chi23*dAdgrad_chi223121 + F32*F33*chi21*dAdgrad_chi231121 + F32*F33*chi21*dAdgrad_chi321121 + F32*F33*chi22*dAdgrad_chi232121 + F32*F33*chi22*dAdgrad_chi322121 + F32*F33*chi23*dAdgrad_chi233121 + F32*F33*chi23*dAdgrad_chi323121 + F33*F33*chi21*dAdgrad_chi331121 + F33*F33*chi22*dAdgrad_chi332121 + F33*F33*chi23*dAdgrad_chi333121 + _332121;
        dadgrad_chi(24,9) = F31*F31*chi21*dAdgrad_chi111211 + F31*F31*chi22*dAdgrad_chi112211 + F31*F31*chi23*dAdgrad_chi113211 + F31*F32*chi21*dAdgrad_chi121211 + F31*F32*chi21*dAdgrad_chi211211 + F31*F32*chi22*dAdgrad_chi122211 + F31*F32*chi22*dAdgrad_chi212211 + F31*F32*chi23*dAdgrad_chi123211 + F31*F32*chi23*dAdgrad_chi213211 + F31*F33*chi21*dAdgrad_chi131211 + F31*F33*chi21*dAdgrad_chi311211 + F31*F33*chi22*dAdgrad_chi132211 + F31*F33*chi22*dAdgrad_chi312211 + F31*F33*chi23*dAdgrad_chi133211 + F31*F33*chi23*dAdgrad_chi313211 + F32*F32*chi21*dAdgrad_chi221211 + F32*F32*chi22*dAdgrad_chi222211 + F32*F32*chi23*dAdgrad_chi223211 + F32*F33*chi21*dAdgrad_chi231211 + F32*F33*chi21*dAdgrad_chi321211 + F32*F33*chi22*dAdgrad_chi232211 + F32*F33*chi22*dAdgrad_chi322211 + F32*F33*chi23*dAdgrad_chi233211 + F32*F33*chi23*dAdgrad_chi323211 + F33*F33*chi21*dAdgrad_chi331211 + F33*F33*chi22*dAdgrad_chi332211 + F33*F33*chi23*dAdgrad_chi333211 + _332211;
        dadgrad_chi(24,10) = F31*F31*chi21*dAdgrad_chi111222 + F31*F31*chi22*dAdgrad_chi112222 + F31*F31*chi23*dAdgrad_chi113222 + F31*F32*chi21*dAdgrad_chi121222 + F31*F32*chi21*dAdgrad_chi211222 + F31*F32*chi22*dAdgrad_chi122222 + F31*F32*chi22*dAdgrad_chi212222 + F31*F32*chi23*dAdgrad_chi123222 + F31*F32*chi23*dAdgrad_chi213222 + F31*F33*chi21*dAdgrad_chi131222 + F31*F33*chi21*dAdgrad_chi311222 + F31*F33*chi22*dAdgrad_chi132222 + F31*F33*chi22*dAdgrad_chi312222 + F31*F33*chi23*dAdgrad_chi133222 + F31*F33*chi23*dAdgrad_chi313222 + F32*F32*chi21*dAdgrad_chi221222 + F32*F32*chi22*dAdgrad_chi222222 + F32*F32*chi23*dAdgrad_chi223222 + F32*F33*chi21*dAdgrad_chi231222 + F32*F33*chi21*dAdgrad_chi321222 + F32*F33*chi22*dAdgrad_chi232222 + F32*F33*chi22*dAdgrad_chi322222 + F32*F33*chi23*dAdgrad_chi233222 + F32*F33*chi23*dAdgrad_chi323222 + F33*F33*chi21*dAdgrad_chi331222 + F33*F33*chi22*dAdgrad_chi332222 + F33*F33*chi23*dAdgrad_chi333222 + _332222;
        dadgrad_chi(24,11) = F31*F31*chi21*dAdgrad_chi111233 + F31*F31*chi22*dAdgrad_chi112233 + F31*F31*chi23*dAdgrad_chi113233 + F31*F32*chi21*dAdgrad_chi121233 + F31*F32*chi21*dAdgrad_chi211233 + F31*F32*chi22*dAdgrad_chi122233 + F31*F32*chi22*dAdgrad_chi212233 + F31*F32*chi23*dAdgrad_chi123233 + F31*F32*chi23*dAdgrad_chi213233 + F31*F33*chi21*dAdgrad_chi131233 + F31*F33*chi21*dAdgrad_chi311233 + F31*F33*chi22*dAdgrad_chi132233 + F31*F33*chi22*dAdgrad_chi312233 + F31*F33*chi23*dAdgrad_chi133233 + F31*F33*chi23*dAdgrad_chi313233 + F32*F32*chi21*dAdgrad_chi221233 + F32*F32*chi22*dAdgrad_chi222233 + F32*F32*chi23*dAdgrad_chi223233 + F32*F33*chi21*dAdgrad_chi231233 + F32*F33*chi21*dAdgrad_chi321233 + F32*F33*chi22*dAdgrad_chi232233 + F32*F33*chi22*dAdgrad_chi322233 + F32*F33*chi23*dAdgrad_chi233233 + F32*F33*chi23*dAdgrad_chi323233 + F33*F33*chi21*dAdgrad_chi331233 + F33*F33*chi22*dAdgrad_chi332233 + F33*F33*chi23*dAdgrad_chi333233 + _332233;
        dadgrad_chi(24,12) = F31*F31*chi21*dAdgrad_chi111223 + F31*F31*chi22*dAdgrad_chi112223 + F31*F31*chi23*dAdgrad_chi113223 + F31*F32*chi21*dAdgrad_chi121223 + F31*F32*chi21*dAdgrad_chi211223 + F31*F32*chi22*dAdgrad_chi122223 + F31*F32*chi22*dAdgrad_chi212223 + F31*F32*chi23*dAdgrad_chi123223 + F31*F32*chi23*dAdgrad_chi213223 + F31*F33*chi21*dAdgrad_chi131223 + F31*F33*chi21*dAdgrad_chi311223 + F31*F33*chi22*dAdgrad_chi132223 + F31*F33*chi22*dAdgrad_chi312223 + F31*F33*chi23*dAdgrad_chi133223 + F31*F33*chi23*dAdgrad_chi313223 + F32*F32*chi21*dAdgrad_chi221223 + F32*F32*chi22*dAdgrad_chi222223 + F32*F32*chi23*dAdgrad_chi223223 + F32*F33*chi21*dAdgrad_chi231223 + F32*F33*chi21*dAdgrad_chi321223 + F32*F33*chi22*dAdgrad_chi232223 + F32*F33*chi22*dAdgrad_chi322223 + F32*F33*chi23*dAdgrad_chi233223 + F32*F33*chi23*dAdgrad_chi323223 + F33*F33*chi21*dAdgrad_chi331223 + F33*F33*chi22*dAdgrad_chi332223 + F33*F33*chi23*dAdgrad_chi333223 + _332223;
        dadgrad_chi(24,13) = F31*F31*chi21*dAdgrad_chi111213 + F31*F31*chi22*dAdgrad_chi112213 + F31*F31*chi23*dAdgrad_chi113213 + F31*F32*chi21*dAdgrad_chi121213 + F31*F32*chi21*dAdgrad_chi211213 + F31*F32*chi22*dAdgrad_chi122213 + F31*F32*chi22*dAdgrad_chi212213 + F31*F32*chi23*dAdgrad_chi123213 + F31*F32*chi23*dAdgrad_chi213213 + F31*F33*chi21*dAdgrad_chi131213 + F31*F33*chi21*dAdgrad_chi311213 + F31*F33*chi22*dAdgrad_chi132213 + F31*F33*chi22*dAdgrad_chi312213 + F31*F33*chi23*dAdgrad_chi133213 + F31*F33*chi23*dAdgrad_chi313213 + F32*F32*chi21*dAdgrad_chi221213 + F32*F32*chi22*dAdgrad_chi222213 + F32*F32*chi23*dAdgrad_chi223213 + F32*F33*chi21*dAdgrad_chi231213 + F32*F33*chi21*dAdgrad_chi321213 + F32*F33*chi22*dAdgrad_chi232213 + F32*F33*chi22*dAdgrad_chi322213 + F32*F33*chi23*dAdgrad_chi233213 + F32*F33*chi23*dAdgrad_chi323213 + F33*F33*chi21*dAdgrad_chi331213 + F33*F33*chi22*dAdgrad_chi332213 + F33*F33*chi23*dAdgrad_chi333213 + _332213;
        dadgrad_chi(24,14) = F31*F31*chi21*dAdgrad_chi111212 + F31*F31*chi22*dAdgrad_chi112212 + F31*F31*chi23*dAdgrad_chi113212 + F31*F32*chi21*dAdgrad_chi121212 + F31*F32*chi21*dAdgrad_chi211212 + F31*F32*chi22*dAdgrad_chi122212 + F31*F32*chi22*dAdgrad_chi212212 + F31*F32*chi23*dAdgrad_chi123212 + F31*F32*chi23*dAdgrad_chi213212 + F31*F33*chi21*dAdgrad_chi131212 + F31*F33*chi21*dAdgrad_chi311212 + F31*F33*chi22*dAdgrad_chi132212 + F31*F33*chi22*dAdgrad_chi312212 + F31*F33*chi23*dAdgrad_chi133212 + F31*F33*chi23*dAdgrad_chi313212 + F32*F32*chi21*dAdgrad_chi221212 + F32*F32*chi22*dAdgrad_chi222212 + F32*F32*chi23*dAdgrad_chi223212 + F32*F33*chi21*dAdgrad_chi231212 + F32*F33*chi21*dAdgrad_chi321212 + F32*F33*chi22*dAdgrad_chi232212 + F32*F33*chi22*dAdgrad_chi322212 + F32*F33*chi23*dAdgrad_chi233212 + F32*F33*chi23*dAdgrad_chi323212 + F33*F33*chi21*dAdgrad_chi331212 + F33*F33*chi22*dAdgrad_chi332212 + F33*F33*chi23*dAdgrad_chi333212 + _332212;
        dadgrad_chi(24,15) = F31*F31*chi21*dAdgrad_chi111232 + F31*F31*chi22*dAdgrad_chi112232 + F31*F31*chi23*dAdgrad_chi113232 + F31*F32*chi21*dAdgrad_chi121232 + F31*F32*chi21*dAdgrad_chi211232 + F31*F32*chi22*dAdgrad_chi122232 + F31*F32*chi22*dAdgrad_chi212232 + F31*F32*chi23*dAdgrad_chi123232 + F31*F32*chi23*dAdgrad_chi213232 + F31*F33*chi21*dAdgrad_chi131232 + F31*F33*chi21*dAdgrad_chi311232 + F31*F33*chi22*dAdgrad_chi132232 + F31*F33*chi22*dAdgrad_chi312232 + F31*F33*chi23*dAdgrad_chi133232 + F31*F33*chi23*dAdgrad_chi313232 + F32*F32*chi21*dAdgrad_chi221232 + F32*F32*chi22*dAdgrad_chi222232 + F32*F32*chi23*dAdgrad_chi223232 + F32*F33*chi21*dAdgrad_chi231232 + F32*F33*chi21*dAdgrad_chi321232 + F32*F33*chi22*dAdgrad_chi232232 + F32*F33*chi22*dAdgrad_chi322232 + F32*F33*chi23*dAdgrad_chi233232 + F32*F33*chi23*dAdgrad_chi323232 + F33*F33*chi21*dAdgrad_chi331232 + F33*F33*chi22*dAdgrad_chi332232 + F33*F33*chi23*dAdgrad_chi333232 + _332232;
        dadgrad_chi(24,16) = F31*F31*chi21*dAdgrad_chi111231 + F31*F31*chi22*dAdgrad_chi112231 + F31*F31*chi23*dAdgrad_chi113231 + F31*F32*chi21*dAdgrad_chi121231 + F31*F32*chi21*dAdgrad_chi211231 + F31*F32*chi22*dAdgrad_chi122231 + F31*F32*chi22*dAdgrad_chi212231 + F31*F32*chi23*dAdgrad_chi123231 + F31*F32*chi23*dAdgrad_chi213231 + F31*F33*chi21*dAdgrad_chi131231 + F31*F33*chi21*dAdgrad_chi311231 + F31*F33*chi22*dAdgrad_chi132231 + F31*F33*chi22*dAdgrad_chi312231 + F31*F33*chi23*dAdgrad_chi133231 + F31*F33*chi23*dAdgrad_chi313231 + F32*F32*chi21*dAdgrad_chi221231 + F32*F32*chi22*dAdgrad_chi222231 + F32*F32*chi23*dAdgrad_chi223231 + F32*F33*chi21*dAdgrad_chi231231 + F32*F33*chi21*dAdgrad_chi321231 + F32*F33*chi22*dAdgrad_chi232231 + F32*F33*chi22*dAdgrad_chi322231 + F32*F33*chi23*dAdgrad_chi233231 + F32*F33*chi23*dAdgrad_chi323231 + F33*F33*chi21*dAdgrad_chi331231 + F33*F33*chi22*dAdgrad_chi332231 + F33*F33*chi23*dAdgrad_chi333231 + _332231;
        dadgrad_chi(24,17) = F31*F31*chi21*dAdgrad_chi111221 + F31*F31*chi22*dAdgrad_chi112221 + F31*F31*chi23*dAdgrad_chi113221 + F31*F32*chi21*dAdgrad_chi121221 + F31*F32*chi21*dAdgrad_chi211221 + F31*F32*chi22*dAdgrad_chi122221 + F31*F32*chi22*dAdgrad_chi212221 + F31*F32*chi23*dAdgrad_chi123221 + F31*F32*chi23*dAdgrad_chi213221 + F31*F33*chi21*dAdgrad_chi131221 + F31*F33*chi21*dAdgrad_chi311221 + F31*F33*chi22*dAdgrad_chi132221 + F31*F33*chi22*dAdgrad_chi312221 + F31*F33*chi23*dAdgrad_chi133221 + F31*F33*chi23*dAdgrad_chi313221 + F32*F32*chi21*dAdgrad_chi221221 + F32*F32*chi22*dAdgrad_chi222221 + F32*F32*chi23*dAdgrad_chi223221 + F32*F33*chi21*dAdgrad_chi231221 + F32*F33*chi21*dAdgrad_chi321221 + F32*F33*chi22*dAdgrad_chi232221 + F32*F33*chi22*dAdgrad_chi322221 + F32*F33*chi23*dAdgrad_chi233221 + F32*F33*chi23*dAdgrad_chi323221 + F33*F33*chi21*dAdgrad_chi331221 + F33*F33*chi22*dAdgrad_chi332221 + F33*F33*chi23*dAdgrad_chi333221 + _332221;
        dadgrad_chi(24,18) = F31*F31*chi21*dAdgrad_chi111311 + F31*F31*chi22*dAdgrad_chi112311 + F31*F31*chi23*dAdgrad_chi113311 + F31*F32*chi21*dAdgrad_chi121311 + F31*F32*chi21*dAdgrad_chi211311 + F31*F32*chi22*dAdgrad_chi122311 + F31*F32*chi22*dAdgrad_chi212311 + F31*F32*chi23*dAdgrad_chi123311 + F31*F32*chi23*dAdgrad_chi213311 + F31*F33*chi21*dAdgrad_chi131311 + F31*F33*chi21*dAdgrad_chi311311 + F31*F33*chi22*dAdgrad_chi132311 + F31*F33*chi22*dAdgrad_chi312311 + F31*F33*chi23*dAdgrad_chi133311 + F31*F33*chi23*dAdgrad_chi313311 + F32*F32*chi21*dAdgrad_chi221311 + F32*F32*chi22*dAdgrad_chi222311 + F32*F32*chi23*dAdgrad_chi223311 + F32*F33*chi21*dAdgrad_chi231311 + F32*F33*chi21*dAdgrad_chi321311 + F32*F33*chi22*dAdgrad_chi232311 + F32*F33*chi22*dAdgrad_chi322311 + F32*F33*chi23*dAdgrad_chi233311 + F32*F33*chi23*dAdgrad_chi323311 + F33*F33*chi21*dAdgrad_chi331311 + F33*F33*chi22*dAdgrad_chi332311 + F33*F33*chi23*dAdgrad_chi333311 + _332311;
        dadgrad_chi(24,19) = F31*F31*chi21*dAdgrad_chi111322 + F31*F31*chi22*dAdgrad_chi112322 + F31*F31*chi23*dAdgrad_chi113322 + F31*F32*chi21*dAdgrad_chi121322 + F31*F32*chi21*dAdgrad_chi211322 + F31*F32*chi22*dAdgrad_chi122322 + F31*F32*chi22*dAdgrad_chi212322 + F31*F32*chi23*dAdgrad_chi123322 + F31*F32*chi23*dAdgrad_chi213322 + F31*F33*chi21*dAdgrad_chi131322 + F31*F33*chi21*dAdgrad_chi311322 + F31*F33*chi22*dAdgrad_chi132322 + F31*F33*chi22*dAdgrad_chi312322 + F31*F33*chi23*dAdgrad_chi133322 + F31*F33*chi23*dAdgrad_chi313322 + F32*F32*chi21*dAdgrad_chi221322 + F32*F32*chi22*dAdgrad_chi222322 + F32*F32*chi23*dAdgrad_chi223322 + F32*F33*chi21*dAdgrad_chi231322 + F32*F33*chi21*dAdgrad_chi321322 + F32*F33*chi22*dAdgrad_chi232322 + F32*F33*chi22*dAdgrad_chi322322 + F32*F33*chi23*dAdgrad_chi233322 + F32*F33*chi23*dAdgrad_chi323322 + F33*F33*chi21*dAdgrad_chi331322 + F33*F33*chi22*dAdgrad_chi332322 + F33*F33*chi23*dAdgrad_chi333322 + _332322;
        dadgrad_chi(24,20) = F31*F31*chi21*dAdgrad_chi111333 + F31*F31*chi22*dAdgrad_chi112333 + F31*F31*chi23*dAdgrad_chi113333 + F31*F32*chi21*dAdgrad_chi121333 + F31*F32*chi21*dAdgrad_chi211333 + F31*F32*chi22*dAdgrad_chi122333 + F31*F32*chi22*dAdgrad_chi212333 + F31*F32*chi23*dAdgrad_chi123333 + F31*F32*chi23*dAdgrad_chi213333 + F31*F33*chi21*dAdgrad_chi131333 + F31*F33*chi21*dAdgrad_chi311333 + F31*F33*chi22*dAdgrad_chi132333 + F31*F33*chi22*dAdgrad_chi312333 + F31*F33*chi23*dAdgrad_chi133333 + F31*F33*chi23*dAdgrad_chi313333 + F32*F32*chi21*dAdgrad_chi221333 + F32*F32*chi22*dAdgrad_chi222333 + F32*F32*chi23*dAdgrad_chi223333 + F32*F33*chi21*dAdgrad_chi231333 + F32*F33*chi21*dAdgrad_chi321333 + F32*F33*chi22*dAdgrad_chi232333 + F32*F33*chi22*dAdgrad_chi322333 + F32*F33*chi23*dAdgrad_chi233333 + F32*F33*chi23*dAdgrad_chi323333 + F33*F33*chi21*dAdgrad_chi331333 + F33*F33*chi22*dAdgrad_chi332333 + F33*F33*chi23*dAdgrad_chi333333 + _332333;
        dadgrad_chi(24,21) = F31*F31*chi21*dAdgrad_chi111323 + F31*F31*chi22*dAdgrad_chi112323 + F31*F31*chi23*dAdgrad_chi113323 + F31*F32*chi21*dAdgrad_chi121323 + F31*F32*chi21*dAdgrad_chi211323 + F31*F32*chi22*dAdgrad_chi122323 + F31*F32*chi22*dAdgrad_chi212323 + F31*F32*chi23*dAdgrad_chi123323 + F31*F32*chi23*dAdgrad_chi213323 + F31*F33*chi21*dAdgrad_chi131323 + F31*F33*chi21*dAdgrad_chi311323 + F31*F33*chi22*dAdgrad_chi132323 + F31*F33*chi22*dAdgrad_chi312323 + F31*F33*chi23*dAdgrad_chi133323 + F31*F33*chi23*dAdgrad_chi313323 + F32*F32*chi21*dAdgrad_chi221323 + F32*F32*chi22*dAdgrad_chi222323 + F32*F32*chi23*dAdgrad_chi223323 + F32*F33*chi21*dAdgrad_chi231323 + F32*F33*chi21*dAdgrad_chi321323 + F32*F33*chi22*dAdgrad_chi232323 + F32*F33*chi22*dAdgrad_chi322323 + F32*F33*chi23*dAdgrad_chi233323 + F32*F33*chi23*dAdgrad_chi323323 + F33*F33*chi21*dAdgrad_chi331323 + F33*F33*chi22*dAdgrad_chi332323 + F33*F33*chi23*dAdgrad_chi333323 + _332323;
        dadgrad_chi(24,22) = F31*F31*chi21*dAdgrad_chi111313 + F31*F31*chi22*dAdgrad_chi112313 + F31*F31*chi23*dAdgrad_chi113313 + F31*F32*chi21*dAdgrad_chi121313 + F31*F32*chi21*dAdgrad_chi211313 + F31*F32*chi22*dAdgrad_chi122313 + F31*F32*chi22*dAdgrad_chi212313 + F31*F32*chi23*dAdgrad_chi123313 + F31*F32*chi23*dAdgrad_chi213313 + F31*F33*chi21*dAdgrad_chi131313 + F31*F33*chi21*dAdgrad_chi311313 + F31*F33*chi22*dAdgrad_chi132313 + F31*F33*chi22*dAdgrad_chi312313 + F31*F33*chi23*dAdgrad_chi133313 + F31*F33*chi23*dAdgrad_chi313313 + F32*F32*chi21*dAdgrad_chi221313 + F32*F32*chi22*dAdgrad_chi222313 + F32*F32*chi23*dAdgrad_chi223313 + F32*F33*chi21*dAdgrad_chi231313 + F32*F33*chi21*dAdgrad_chi321313 + F32*F33*chi22*dAdgrad_chi232313 + F32*F33*chi22*dAdgrad_chi322313 + F32*F33*chi23*dAdgrad_chi233313 + F32*F33*chi23*dAdgrad_chi323313 + F33*F33*chi21*dAdgrad_chi331313 + F33*F33*chi22*dAdgrad_chi332313 + F33*F33*chi23*dAdgrad_chi333313 + _332313;
        dadgrad_chi(24,23) = F31*F31*chi21*dAdgrad_chi111312 + F31*F31*chi22*dAdgrad_chi112312 + F31*F31*chi23*dAdgrad_chi113312 + F31*F32*chi21*dAdgrad_chi121312 + F31*F32*chi21*dAdgrad_chi211312 + F31*F32*chi22*dAdgrad_chi122312 + F31*F32*chi22*dAdgrad_chi212312 + F31*F32*chi23*dAdgrad_chi123312 + F31*F32*chi23*dAdgrad_chi213312 + F31*F33*chi21*dAdgrad_chi131312 + F31*F33*chi21*dAdgrad_chi311312 + F31*F33*chi22*dAdgrad_chi132312 + F31*F33*chi22*dAdgrad_chi312312 + F31*F33*chi23*dAdgrad_chi133312 + F31*F33*chi23*dAdgrad_chi313312 + F32*F32*chi21*dAdgrad_chi221312 + F32*F32*chi22*dAdgrad_chi222312 + F32*F32*chi23*dAdgrad_chi223312 + F32*F33*chi21*dAdgrad_chi231312 + F32*F33*chi21*dAdgrad_chi321312 + F32*F33*chi22*dAdgrad_chi232312 + F32*F33*chi22*dAdgrad_chi322312 + F32*F33*chi23*dAdgrad_chi233312 + F32*F33*chi23*dAdgrad_chi323312 + F33*F33*chi21*dAdgrad_chi331312 + F33*F33*chi22*dAdgrad_chi332312 + F33*F33*chi23*dAdgrad_chi333312 + _332312;
        dadgrad_chi(24,24) = F31*F31*chi21*dAdgrad_chi111332 + F31*F31*chi22*dAdgrad_chi112332 + F31*F31*chi23*dAdgrad_chi113332 + F31*F32*chi21*dAdgrad_chi121332 + F31*F32*chi21*dAdgrad_chi211332 + F31*F32*chi22*dAdgrad_chi122332 + F31*F32*chi22*dAdgrad_chi212332 + F31*F32*chi23*dAdgrad_chi123332 + F31*F32*chi23*dAdgrad_chi213332 + F31*F33*chi21*dAdgrad_chi131332 + F31*F33*chi21*dAdgrad_chi311332 + F31*F33*chi22*dAdgrad_chi132332 + F31*F33*chi22*dAdgrad_chi312332 + F31*F33*chi23*dAdgrad_chi133332 + F31*F33*chi23*dAdgrad_chi313332 + F32*F32*chi21*dAdgrad_chi221332 + F32*F32*chi22*dAdgrad_chi222332 + F32*F32*chi23*dAdgrad_chi223332 + F32*F33*chi21*dAdgrad_chi231332 + F32*F33*chi21*dAdgrad_chi321332 + F32*F33*chi22*dAdgrad_chi232332 + F32*F33*chi22*dAdgrad_chi322332 + F32*F33*chi23*dAdgrad_chi233332 + F32*F33*chi23*dAdgrad_chi323332 + F33*F33*chi21*dAdgrad_chi331332 + F33*F33*chi22*dAdgrad_chi332332 + F33*F33*chi23*dAdgrad_chi333332 + _332332;
        dadgrad_chi(24,25) = F31*F31*chi21*dAdgrad_chi111331 + F31*F31*chi22*dAdgrad_chi112331 + F31*F31*chi23*dAdgrad_chi113331 + F31*F32*chi21*dAdgrad_chi121331 + F31*F32*chi21*dAdgrad_chi211331 + F31*F32*chi22*dAdgrad_chi122331 + F31*F32*chi22*dAdgrad_chi212331 + F31*F32*chi23*dAdgrad_chi123331 + F31*F32*chi23*dAdgrad_chi213331 + F31*F33*chi21*dAdgrad_chi131331 + F31*F33*chi21*dAdgrad_chi311331 + F31*F33*chi22*dAdgrad_chi132331 + F31*F33*chi22*dAdgrad_chi312331 + F31*F33*chi23*dAdgrad_chi133331 + F31*F33*chi23*dAdgrad_chi313331 + F32*F32*chi21*dAdgrad_chi221331 + F32*F32*chi22*dAdgrad_chi222331 + F32*F32*chi23*dAdgrad_chi223331 + F32*F33*chi21*dAdgrad_chi231331 + F32*F33*chi21*dAdgrad_chi321331 + F32*F33*chi22*dAdgrad_chi232331 + F32*F33*chi22*dAdgrad_chi322331 + F32*F33*chi23*dAdgrad_chi233331 + F32*F33*chi23*dAdgrad_chi323331 + F33*F33*chi21*dAdgrad_chi331331 + F33*F33*chi22*dAdgrad_chi332331 + F33*F33*chi23*dAdgrad_chi333331 + _332331;
        dadgrad_chi(24,26) = F31*F31*chi21*dAdgrad_chi111321 + F31*F31*chi22*dAdgrad_chi112321 + F31*F31*chi23*dAdgrad_chi113321 + F31*F32*chi21*dAdgrad_chi121321 + F31*F32*chi21*dAdgrad_chi211321 + F31*F32*chi22*dAdgrad_chi122321 + F31*F32*chi22*dAdgrad_chi212321 + F31*F32*chi23*dAdgrad_chi123321 + F31*F32*chi23*dAdgrad_chi213321 + F31*F33*chi21*dAdgrad_chi131321 + F31*F33*chi21*dAdgrad_chi311321 + F31*F33*chi22*dAdgrad_chi132321 + F31*F33*chi22*dAdgrad_chi312321 + F31*F33*chi23*dAdgrad_chi133321 + F31*F33*chi23*dAdgrad_chi313321 + F32*F32*chi21*dAdgrad_chi221321 + F32*F32*chi22*dAdgrad_chi222321 + F32*F32*chi23*dAdgrad_chi223321 + F32*F33*chi21*dAdgrad_chi231321 + F32*F33*chi21*dAdgrad_chi321321 + F32*F33*chi22*dAdgrad_chi232321 + F32*F33*chi22*dAdgrad_chi322321 + F32*F33*chi23*dAdgrad_chi233321 + F32*F33*chi23*dAdgrad_chi323321 + F33*F33*chi21*dAdgrad_chi331321 + F33*F33*chi22*dAdgrad_chi332321 + F33*F33*chi23*dAdgrad_chi333321 + _332321;
        dadgrad_chi(25,0) = F31*F31*chi11*dAdgrad_chi111111 + F31*F31*chi12*dAdgrad_chi112111 + F31*F31*chi13*dAdgrad_chi113111 + F31*F32*chi11*dAdgrad_chi121111 + F31*F32*chi11*dAdgrad_chi211111 + F31*F32*chi12*dAdgrad_chi122111 + F31*F32*chi12*dAdgrad_chi212111 + F31*F32*chi13*dAdgrad_chi123111 + F31*F32*chi13*dAdgrad_chi213111 + F31*F33*chi11*dAdgrad_chi131111 + F31*F33*chi11*dAdgrad_chi311111 + F31*F33*chi12*dAdgrad_chi132111 + F31*F33*chi12*dAdgrad_chi312111 + F31*F33*chi13*dAdgrad_chi133111 + F31*F33*chi13*dAdgrad_chi313111 + F32*F32*chi11*dAdgrad_chi221111 + F32*F32*chi12*dAdgrad_chi222111 + F32*F32*chi13*dAdgrad_chi223111 + F32*F33*chi11*dAdgrad_chi231111 + F32*F33*chi11*dAdgrad_chi321111 + F32*F33*chi12*dAdgrad_chi232111 + F32*F33*chi12*dAdgrad_chi322111 + F32*F33*chi13*dAdgrad_chi233111 + F32*F33*chi13*dAdgrad_chi323111 + F33*F33*chi11*dAdgrad_chi331111 + F33*F33*chi12*dAdgrad_chi332111 + F33*F33*chi13*dAdgrad_chi333111 + _331111;
        dadgrad_chi(25,1) = F31*F31*chi11*dAdgrad_chi111122 + F31*F31*chi12*dAdgrad_chi112122 + F31*F31*chi13*dAdgrad_chi113122 + F31*F32*chi11*dAdgrad_chi121122 + F31*F32*chi11*dAdgrad_chi211122 + F31*F32*chi12*dAdgrad_chi122122 + F31*F32*chi12*dAdgrad_chi212122 + F31*F32*chi13*dAdgrad_chi123122 + F31*F32*chi13*dAdgrad_chi213122 + F31*F33*chi11*dAdgrad_chi131122 + F31*F33*chi11*dAdgrad_chi311122 + F31*F33*chi12*dAdgrad_chi132122 + F31*F33*chi12*dAdgrad_chi312122 + F31*F33*chi13*dAdgrad_chi133122 + F31*F33*chi13*dAdgrad_chi313122 + F32*F32*chi11*dAdgrad_chi221122 + F32*F32*chi12*dAdgrad_chi222122 + F32*F32*chi13*dAdgrad_chi223122 + F32*F33*chi11*dAdgrad_chi231122 + F32*F33*chi11*dAdgrad_chi321122 + F32*F33*chi12*dAdgrad_chi232122 + F32*F33*chi12*dAdgrad_chi322122 + F32*F33*chi13*dAdgrad_chi233122 + F32*F33*chi13*dAdgrad_chi323122 + F33*F33*chi11*dAdgrad_chi331122 + F33*F33*chi12*dAdgrad_chi332122 + F33*F33*chi13*dAdgrad_chi333122 + _331122;
        dadgrad_chi(25,2) = F31*F31*chi11*dAdgrad_chi111133 + F31*F31*chi12*dAdgrad_chi112133 + F31*F31*chi13*dAdgrad_chi113133 + F31*F32*chi11*dAdgrad_chi121133 + F31*F32*chi11*dAdgrad_chi211133 + F31*F32*chi12*dAdgrad_chi122133 + F31*F32*chi12*dAdgrad_chi212133 + F31*F32*chi13*dAdgrad_chi123133 + F31*F32*chi13*dAdgrad_chi213133 + F31*F33*chi11*dAdgrad_chi131133 + F31*F33*chi11*dAdgrad_chi311133 + F31*F33*chi12*dAdgrad_chi132133 + F31*F33*chi12*dAdgrad_chi312133 + F31*F33*chi13*dAdgrad_chi133133 + F31*F33*chi13*dAdgrad_chi313133 + F32*F32*chi11*dAdgrad_chi221133 + F32*F32*chi12*dAdgrad_chi222133 + F32*F32*chi13*dAdgrad_chi223133 + F32*F33*chi11*dAdgrad_chi231133 + F32*F33*chi11*dAdgrad_chi321133 + F32*F33*chi12*dAdgrad_chi232133 + F32*F33*chi12*dAdgrad_chi322133 + F32*F33*chi13*dAdgrad_chi233133 + F32*F33*chi13*dAdgrad_chi323133 + F33*F33*chi11*dAdgrad_chi331133 + F33*F33*chi12*dAdgrad_chi332133 + F33*F33*chi13*dAdgrad_chi333133 + _331133;
        dadgrad_chi(25,3) = F31*F31*chi11*dAdgrad_chi111123 + F31*F31*chi12*dAdgrad_chi112123 + F31*F31*chi13*dAdgrad_chi113123 + F31*F32*chi11*dAdgrad_chi121123 + F31*F32*chi11*dAdgrad_chi211123 + F31*F32*chi12*dAdgrad_chi122123 + F31*F32*chi12*dAdgrad_chi212123 + F31*F32*chi13*dAdgrad_chi123123 + F31*F32*chi13*dAdgrad_chi213123 + F31*F33*chi11*dAdgrad_chi131123 + F31*F33*chi11*dAdgrad_chi311123 + F31*F33*chi12*dAdgrad_chi132123 + F31*F33*chi12*dAdgrad_chi312123 + F31*F33*chi13*dAdgrad_chi133123 + F31*F33*chi13*dAdgrad_chi313123 + F32*F32*chi11*dAdgrad_chi221123 + F32*F32*chi12*dAdgrad_chi222123 + F32*F32*chi13*dAdgrad_chi223123 + F32*F33*chi11*dAdgrad_chi231123 + F32*F33*chi11*dAdgrad_chi321123 + F32*F33*chi12*dAdgrad_chi232123 + F32*F33*chi12*dAdgrad_chi322123 + F32*F33*chi13*dAdgrad_chi233123 + F32*F33*chi13*dAdgrad_chi323123 + F33*F33*chi11*dAdgrad_chi331123 + F33*F33*chi12*dAdgrad_chi332123 + F33*F33*chi13*dAdgrad_chi333123 + _331123;
        dadgrad_chi(25,4) = F31*F31*chi11*dAdgrad_chi111113 + F31*F31*chi12*dAdgrad_chi112113 + F31*F31*chi13*dAdgrad_chi113113 + F31*F32*chi11*dAdgrad_chi121113 + F31*F32*chi11*dAdgrad_chi211113 + F31*F32*chi12*dAdgrad_chi122113 + F31*F32*chi12*dAdgrad_chi212113 + F31*F32*chi13*dAdgrad_chi123113 + F31*F32*chi13*dAdgrad_chi213113 + F31*F33*chi11*dAdgrad_chi131113 + F31*F33*chi11*dAdgrad_chi311113 + F31*F33*chi12*dAdgrad_chi132113 + F31*F33*chi12*dAdgrad_chi312113 + F31*F33*chi13*dAdgrad_chi133113 + F31*F33*chi13*dAdgrad_chi313113 + F32*F32*chi11*dAdgrad_chi221113 + F32*F32*chi12*dAdgrad_chi222113 + F32*F32*chi13*dAdgrad_chi223113 + F32*F33*chi11*dAdgrad_chi231113 + F32*F33*chi11*dAdgrad_chi321113 + F32*F33*chi12*dAdgrad_chi232113 + F32*F33*chi12*dAdgrad_chi322113 + F32*F33*chi13*dAdgrad_chi233113 + F32*F33*chi13*dAdgrad_chi323113 + F33*F33*chi11*dAdgrad_chi331113 + F33*F33*chi12*dAdgrad_chi332113 + F33*F33*chi13*dAdgrad_chi333113 + _331113;
        dadgrad_chi(25,5) = F31*F31*chi11*dAdgrad_chi111112 + F31*F31*chi12*dAdgrad_chi112112 + F31*F31*chi13*dAdgrad_chi113112 + F31*F32*chi11*dAdgrad_chi121112 + F31*F32*chi11*dAdgrad_chi211112 + F31*F32*chi12*dAdgrad_chi122112 + F31*F32*chi12*dAdgrad_chi212112 + F31*F32*chi13*dAdgrad_chi123112 + F31*F32*chi13*dAdgrad_chi213112 + F31*F33*chi11*dAdgrad_chi131112 + F31*F33*chi11*dAdgrad_chi311112 + F31*F33*chi12*dAdgrad_chi132112 + F31*F33*chi12*dAdgrad_chi312112 + F31*F33*chi13*dAdgrad_chi133112 + F31*F33*chi13*dAdgrad_chi313112 + F32*F32*chi11*dAdgrad_chi221112 + F32*F32*chi12*dAdgrad_chi222112 + F32*F32*chi13*dAdgrad_chi223112 + F32*F33*chi11*dAdgrad_chi231112 + F32*F33*chi11*dAdgrad_chi321112 + F32*F33*chi12*dAdgrad_chi232112 + F32*F33*chi12*dAdgrad_chi322112 + F32*F33*chi13*dAdgrad_chi233112 + F32*F33*chi13*dAdgrad_chi323112 + F33*F33*chi11*dAdgrad_chi331112 + F33*F33*chi12*dAdgrad_chi332112 + F33*F33*chi13*dAdgrad_chi333112 + _331112;
        dadgrad_chi(25,6) = F31*F31*chi11*dAdgrad_chi111132 + F31*F31*chi12*dAdgrad_chi112132 + F31*F31*chi13*dAdgrad_chi113132 + F31*F32*chi11*dAdgrad_chi121132 + F31*F32*chi11*dAdgrad_chi211132 + F31*F32*chi12*dAdgrad_chi122132 + F31*F32*chi12*dAdgrad_chi212132 + F31*F32*chi13*dAdgrad_chi123132 + F31*F32*chi13*dAdgrad_chi213132 + F31*F33*chi11*dAdgrad_chi131132 + F31*F33*chi11*dAdgrad_chi311132 + F31*F33*chi12*dAdgrad_chi132132 + F31*F33*chi12*dAdgrad_chi312132 + F31*F33*chi13*dAdgrad_chi133132 + F31*F33*chi13*dAdgrad_chi313132 + F32*F32*chi11*dAdgrad_chi221132 + F32*F32*chi12*dAdgrad_chi222132 + F32*F32*chi13*dAdgrad_chi223132 + F32*F33*chi11*dAdgrad_chi231132 + F32*F33*chi11*dAdgrad_chi321132 + F32*F33*chi12*dAdgrad_chi232132 + F32*F33*chi12*dAdgrad_chi322132 + F32*F33*chi13*dAdgrad_chi233132 + F32*F33*chi13*dAdgrad_chi323132 + F33*F33*chi11*dAdgrad_chi331132 + F33*F33*chi12*dAdgrad_chi332132 + F33*F33*chi13*dAdgrad_chi333132 + _331132;
        dadgrad_chi(25,7) = F31*F31*chi11*dAdgrad_chi111131 + F31*F31*chi12*dAdgrad_chi112131 + F31*F31*chi13*dAdgrad_chi113131 + F31*F32*chi11*dAdgrad_chi121131 + F31*F32*chi11*dAdgrad_chi211131 + F31*F32*chi12*dAdgrad_chi122131 + F31*F32*chi12*dAdgrad_chi212131 + F31*F32*chi13*dAdgrad_chi123131 + F31*F32*chi13*dAdgrad_chi213131 + F31*F33*chi11*dAdgrad_chi131131 + F31*F33*chi11*dAdgrad_chi311131 + F31*F33*chi12*dAdgrad_chi132131 + F31*F33*chi12*dAdgrad_chi312131 + F31*F33*chi13*dAdgrad_chi133131 + F31*F33*chi13*dAdgrad_chi313131 + F32*F32*chi11*dAdgrad_chi221131 + F32*F32*chi12*dAdgrad_chi222131 + F32*F32*chi13*dAdgrad_chi223131 + F32*F33*chi11*dAdgrad_chi231131 + F32*F33*chi11*dAdgrad_chi321131 + F32*F33*chi12*dAdgrad_chi232131 + F32*F33*chi12*dAdgrad_chi322131 + F32*F33*chi13*dAdgrad_chi233131 + F32*F33*chi13*dAdgrad_chi323131 + F33*F33*chi11*dAdgrad_chi331131 + F33*F33*chi12*dAdgrad_chi332131 + F33*F33*chi13*dAdgrad_chi333131 + _331131;
        dadgrad_chi(25,8) = F31*F31*chi11*dAdgrad_chi111121 + F31*F31*chi12*dAdgrad_chi112121 + F31*F31*chi13*dAdgrad_chi113121 + F31*F32*chi11*dAdgrad_chi121121 + F31*F32*chi11*dAdgrad_chi211121 + F31*F32*chi12*dAdgrad_chi122121 + F31*F32*chi12*dAdgrad_chi212121 + F31*F32*chi13*dAdgrad_chi123121 + F31*F32*chi13*dAdgrad_chi213121 + F31*F33*chi11*dAdgrad_chi131121 + F31*F33*chi11*dAdgrad_chi311121 + F31*F33*chi12*dAdgrad_chi132121 + F31*F33*chi12*dAdgrad_chi312121 + F31*F33*chi13*dAdgrad_chi133121 + F31*F33*chi13*dAdgrad_chi313121 + F32*F32*chi11*dAdgrad_chi221121 + F32*F32*chi12*dAdgrad_chi222121 + F32*F32*chi13*dAdgrad_chi223121 + F32*F33*chi11*dAdgrad_chi231121 + F32*F33*chi11*dAdgrad_chi321121 + F32*F33*chi12*dAdgrad_chi232121 + F32*F33*chi12*dAdgrad_chi322121 + F32*F33*chi13*dAdgrad_chi233121 + F32*F33*chi13*dAdgrad_chi323121 + F33*F33*chi11*dAdgrad_chi331121 + F33*F33*chi12*dAdgrad_chi332121 + F33*F33*chi13*dAdgrad_chi333121 + _331121;
        dadgrad_chi(25,9) = F31*F31*chi11*dAdgrad_chi111211 + F31*F31*chi12*dAdgrad_chi112211 + F31*F31*chi13*dAdgrad_chi113211 + F31*F32*chi11*dAdgrad_chi121211 + F31*F32*chi11*dAdgrad_chi211211 + F31*F32*chi12*dAdgrad_chi122211 + F31*F32*chi12*dAdgrad_chi212211 + F31*F32*chi13*dAdgrad_chi123211 + F31*F32*chi13*dAdgrad_chi213211 + F31*F33*chi11*dAdgrad_chi131211 + F31*F33*chi11*dAdgrad_chi311211 + F31*F33*chi12*dAdgrad_chi132211 + F31*F33*chi12*dAdgrad_chi312211 + F31*F33*chi13*dAdgrad_chi133211 + F31*F33*chi13*dAdgrad_chi313211 + F32*F32*chi11*dAdgrad_chi221211 + F32*F32*chi12*dAdgrad_chi222211 + F32*F32*chi13*dAdgrad_chi223211 + F32*F33*chi11*dAdgrad_chi231211 + F32*F33*chi11*dAdgrad_chi321211 + F32*F33*chi12*dAdgrad_chi232211 + F32*F33*chi12*dAdgrad_chi322211 + F32*F33*chi13*dAdgrad_chi233211 + F32*F33*chi13*dAdgrad_chi323211 + F33*F33*chi11*dAdgrad_chi331211 + F33*F33*chi12*dAdgrad_chi332211 + F33*F33*chi13*dAdgrad_chi333211 + _331211;
        dadgrad_chi(25,10) = F31*F31*chi11*dAdgrad_chi111222 + F31*F31*chi12*dAdgrad_chi112222 + F31*F31*chi13*dAdgrad_chi113222 + F31*F32*chi11*dAdgrad_chi121222 + F31*F32*chi11*dAdgrad_chi211222 + F31*F32*chi12*dAdgrad_chi122222 + F31*F32*chi12*dAdgrad_chi212222 + F31*F32*chi13*dAdgrad_chi123222 + F31*F32*chi13*dAdgrad_chi213222 + F31*F33*chi11*dAdgrad_chi131222 + F31*F33*chi11*dAdgrad_chi311222 + F31*F33*chi12*dAdgrad_chi132222 + F31*F33*chi12*dAdgrad_chi312222 + F31*F33*chi13*dAdgrad_chi133222 + F31*F33*chi13*dAdgrad_chi313222 + F32*F32*chi11*dAdgrad_chi221222 + F32*F32*chi12*dAdgrad_chi222222 + F32*F32*chi13*dAdgrad_chi223222 + F32*F33*chi11*dAdgrad_chi231222 + F32*F33*chi11*dAdgrad_chi321222 + F32*F33*chi12*dAdgrad_chi232222 + F32*F33*chi12*dAdgrad_chi322222 + F32*F33*chi13*dAdgrad_chi233222 + F32*F33*chi13*dAdgrad_chi323222 + F33*F33*chi11*dAdgrad_chi331222 + F33*F33*chi12*dAdgrad_chi332222 + F33*F33*chi13*dAdgrad_chi333222 + _331222;
        dadgrad_chi(25,11) = F31*F31*chi11*dAdgrad_chi111233 + F31*F31*chi12*dAdgrad_chi112233 + F31*F31*chi13*dAdgrad_chi113233 + F31*F32*chi11*dAdgrad_chi121233 + F31*F32*chi11*dAdgrad_chi211233 + F31*F32*chi12*dAdgrad_chi122233 + F31*F32*chi12*dAdgrad_chi212233 + F31*F32*chi13*dAdgrad_chi123233 + F31*F32*chi13*dAdgrad_chi213233 + F31*F33*chi11*dAdgrad_chi131233 + F31*F33*chi11*dAdgrad_chi311233 + F31*F33*chi12*dAdgrad_chi132233 + F31*F33*chi12*dAdgrad_chi312233 + F31*F33*chi13*dAdgrad_chi133233 + F31*F33*chi13*dAdgrad_chi313233 + F32*F32*chi11*dAdgrad_chi221233 + F32*F32*chi12*dAdgrad_chi222233 + F32*F32*chi13*dAdgrad_chi223233 + F32*F33*chi11*dAdgrad_chi231233 + F32*F33*chi11*dAdgrad_chi321233 + F32*F33*chi12*dAdgrad_chi232233 + F32*F33*chi12*dAdgrad_chi322233 + F32*F33*chi13*dAdgrad_chi233233 + F32*F33*chi13*dAdgrad_chi323233 + F33*F33*chi11*dAdgrad_chi331233 + F33*F33*chi12*dAdgrad_chi332233 + F33*F33*chi13*dAdgrad_chi333233 + _331233;
        dadgrad_chi(25,12) = F31*F31*chi11*dAdgrad_chi111223 + F31*F31*chi12*dAdgrad_chi112223 + F31*F31*chi13*dAdgrad_chi113223 + F31*F32*chi11*dAdgrad_chi121223 + F31*F32*chi11*dAdgrad_chi211223 + F31*F32*chi12*dAdgrad_chi122223 + F31*F32*chi12*dAdgrad_chi212223 + F31*F32*chi13*dAdgrad_chi123223 + F31*F32*chi13*dAdgrad_chi213223 + F31*F33*chi11*dAdgrad_chi131223 + F31*F33*chi11*dAdgrad_chi311223 + F31*F33*chi12*dAdgrad_chi132223 + F31*F33*chi12*dAdgrad_chi312223 + F31*F33*chi13*dAdgrad_chi133223 + F31*F33*chi13*dAdgrad_chi313223 + F32*F32*chi11*dAdgrad_chi221223 + F32*F32*chi12*dAdgrad_chi222223 + F32*F32*chi13*dAdgrad_chi223223 + F32*F33*chi11*dAdgrad_chi231223 + F32*F33*chi11*dAdgrad_chi321223 + F32*F33*chi12*dAdgrad_chi232223 + F32*F33*chi12*dAdgrad_chi322223 + F32*F33*chi13*dAdgrad_chi233223 + F32*F33*chi13*dAdgrad_chi323223 + F33*F33*chi11*dAdgrad_chi331223 + F33*F33*chi12*dAdgrad_chi332223 + F33*F33*chi13*dAdgrad_chi333223 + _331223;
        dadgrad_chi(25,13) = F31*F31*chi11*dAdgrad_chi111213 + F31*F31*chi12*dAdgrad_chi112213 + F31*F31*chi13*dAdgrad_chi113213 + F31*F32*chi11*dAdgrad_chi121213 + F31*F32*chi11*dAdgrad_chi211213 + F31*F32*chi12*dAdgrad_chi122213 + F31*F32*chi12*dAdgrad_chi212213 + F31*F32*chi13*dAdgrad_chi123213 + F31*F32*chi13*dAdgrad_chi213213 + F31*F33*chi11*dAdgrad_chi131213 + F31*F33*chi11*dAdgrad_chi311213 + F31*F33*chi12*dAdgrad_chi132213 + F31*F33*chi12*dAdgrad_chi312213 + F31*F33*chi13*dAdgrad_chi133213 + F31*F33*chi13*dAdgrad_chi313213 + F32*F32*chi11*dAdgrad_chi221213 + F32*F32*chi12*dAdgrad_chi222213 + F32*F32*chi13*dAdgrad_chi223213 + F32*F33*chi11*dAdgrad_chi231213 + F32*F33*chi11*dAdgrad_chi321213 + F32*F33*chi12*dAdgrad_chi232213 + F32*F33*chi12*dAdgrad_chi322213 + F32*F33*chi13*dAdgrad_chi233213 + F32*F33*chi13*dAdgrad_chi323213 + F33*F33*chi11*dAdgrad_chi331213 + F33*F33*chi12*dAdgrad_chi332213 + F33*F33*chi13*dAdgrad_chi333213 + _331213;
        dadgrad_chi(25,14) = F31*F31*chi11*dAdgrad_chi111212 + F31*F31*chi12*dAdgrad_chi112212 + F31*F31*chi13*dAdgrad_chi113212 + F31*F32*chi11*dAdgrad_chi121212 + F31*F32*chi11*dAdgrad_chi211212 + F31*F32*chi12*dAdgrad_chi122212 + F31*F32*chi12*dAdgrad_chi212212 + F31*F32*chi13*dAdgrad_chi123212 + F31*F32*chi13*dAdgrad_chi213212 + F31*F33*chi11*dAdgrad_chi131212 + F31*F33*chi11*dAdgrad_chi311212 + F31*F33*chi12*dAdgrad_chi132212 + F31*F33*chi12*dAdgrad_chi312212 + F31*F33*chi13*dAdgrad_chi133212 + F31*F33*chi13*dAdgrad_chi313212 + F32*F32*chi11*dAdgrad_chi221212 + F32*F32*chi12*dAdgrad_chi222212 + F32*F32*chi13*dAdgrad_chi223212 + F32*F33*chi11*dAdgrad_chi231212 + F32*F33*chi11*dAdgrad_chi321212 + F32*F33*chi12*dAdgrad_chi232212 + F32*F33*chi12*dAdgrad_chi322212 + F32*F33*chi13*dAdgrad_chi233212 + F32*F33*chi13*dAdgrad_chi323212 + F33*F33*chi11*dAdgrad_chi331212 + F33*F33*chi12*dAdgrad_chi332212 + F33*F33*chi13*dAdgrad_chi333212 + _331212;
        dadgrad_chi(25,15) = F31*F31*chi11*dAdgrad_chi111232 + F31*F31*chi12*dAdgrad_chi112232 + F31*F31*chi13*dAdgrad_chi113232 + F31*F32*chi11*dAdgrad_chi121232 + F31*F32*chi11*dAdgrad_chi211232 + F31*F32*chi12*dAdgrad_chi122232 + F31*F32*chi12*dAdgrad_chi212232 + F31*F32*chi13*dAdgrad_chi123232 + F31*F32*chi13*dAdgrad_chi213232 + F31*F33*chi11*dAdgrad_chi131232 + F31*F33*chi11*dAdgrad_chi311232 + F31*F33*chi12*dAdgrad_chi132232 + F31*F33*chi12*dAdgrad_chi312232 + F31*F33*chi13*dAdgrad_chi133232 + F31*F33*chi13*dAdgrad_chi313232 + F32*F32*chi11*dAdgrad_chi221232 + F32*F32*chi12*dAdgrad_chi222232 + F32*F32*chi13*dAdgrad_chi223232 + F32*F33*chi11*dAdgrad_chi231232 + F32*F33*chi11*dAdgrad_chi321232 + F32*F33*chi12*dAdgrad_chi232232 + F32*F33*chi12*dAdgrad_chi322232 + F32*F33*chi13*dAdgrad_chi233232 + F32*F33*chi13*dAdgrad_chi323232 + F33*F33*chi11*dAdgrad_chi331232 + F33*F33*chi12*dAdgrad_chi332232 + F33*F33*chi13*dAdgrad_chi333232 + _331232;
        dadgrad_chi(25,16) = F31*F31*chi11*dAdgrad_chi111231 + F31*F31*chi12*dAdgrad_chi112231 + F31*F31*chi13*dAdgrad_chi113231 + F31*F32*chi11*dAdgrad_chi121231 + F31*F32*chi11*dAdgrad_chi211231 + F31*F32*chi12*dAdgrad_chi122231 + F31*F32*chi12*dAdgrad_chi212231 + F31*F32*chi13*dAdgrad_chi123231 + F31*F32*chi13*dAdgrad_chi213231 + F31*F33*chi11*dAdgrad_chi131231 + F31*F33*chi11*dAdgrad_chi311231 + F31*F33*chi12*dAdgrad_chi132231 + F31*F33*chi12*dAdgrad_chi312231 + F31*F33*chi13*dAdgrad_chi133231 + F31*F33*chi13*dAdgrad_chi313231 + F32*F32*chi11*dAdgrad_chi221231 + F32*F32*chi12*dAdgrad_chi222231 + F32*F32*chi13*dAdgrad_chi223231 + F32*F33*chi11*dAdgrad_chi231231 + F32*F33*chi11*dAdgrad_chi321231 + F32*F33*chi12*dAdgrad_chi232231 + F32*F33*chi12*dAdgrad_chi322231 + F32*F33*chi13*dAdgrad_chi233231 + F32*F33*chi13*dAdgrad_chi323231 + F33*F33*chi11*dAdgrad_chi331231 + F33*F33*chi12*dAdgrad_chi332231 + F33*F33*chi13*dAdgrad_chi333231 + _331231;
        dadgrad_chi(25,17) = F31*F31*chi11*dAdgrad_chi111221 + F31*F31*chi12*dAdgrad_chi112221 + F31*F31*chi13*dAdgrad_chi113221 + F31*F32*chi11*dAdgrad_chi121221 + F31*F32*chi11*dAdgrad_chi211221 + F31*F32*chi12*dAdgrad_chi122221 + F31*F32*chi12*dAdgrad_chi212221 + F31*F32*chi13*dAdgrad_chi123221 + F31*F32*chi13*dAdgrad_chi213221 + F31*F33*chi11*dAdgrad_chi131221 + F31*F33*chi11*dAdgrad_chi311221 + F31*F33*chi12*dAdgrad_chi132221 + F31*F33*chi12*dAdgrad_chi312221 + F31*F33*chi13*dAdgrad_chi133221 + F31*F33*chi13*dAdgrad_chi313221 + F32*F32*chi11*dAdgrad_chi221221 + F32*F32*chi12*dAdgrad_chi222221 + F32*F32*chi13*dAdgrad_chi223221 + F32*F33*chi11*dAdgrad_chi231221 + F32*F33*chi11*dAdgrad_chi321221 + F32*F33*chi12*dAdgrad_chi232221 + F32*F33*chi12*dAdgrad_chi322221 + F32*F33*chi13*dAdgrad_chi233221 + F32*F33*chi13*dAdgrad_chi323221 + F33*F33*chi11*dAdgrad_chi331221 + F33*F33*chi12*dAdgrad_chi332221 + F33*F33*chi13*dAdgrad_chi333221 + _331221;
        dadgrad_chi(25,18) = F31*F31*chi11*dAdgrad_chi111311 + F31*F31*chi12*dAdgrad_chi112311 + F31*F31*chi13*dAdgrad_chi113311 + F31*F32*chi11*dAdgrad_chi121311 + F31*F32*chi11*dAdgrad_chi211311 + F31*F32*chi12*dAdgrad_chi122311 + F31*F32*chi12*dAdgrad_chi212311 + F31*F32*chi13*dAdgrad_chi123311 + F31*F32*chi13*dAdgrad_chi213311 + F31*F33*chi11*dAdgrad_chi131311 + F31*F33*chi11*dAdgrad_chi311311 + F31*F33*chi12*dAdgrad_chi132311 + F31*F33*chi12*dAdgrad_chi312311 + F31*F33*chi13*dAdgrad_chi133311 + F31*F33*chi13*dAdgrad_chi313311 + F32*F32*chi11*dAdgrad_chi221311 + F32*F32*chi12*dAdgrad_chi222311 + F32*F32*chi13*dAdgrad_chi223311 + F32*F33*chi11*dAdgrad_chi231311 + F32*F33*chi11*dAdgrad_chi321311 + F32*F33*chi12*dAdgrad_chi232311 + F32*F33*chi12*dAdgrad_chi322311 + F32*F33*chi13*dAdgrad_chi233311 + F32*F33*chi13*dAdgrad_chi323311 + F33*F33*chi11*dAdgrad_chi331311 + F33*F33*chi12*dAdgrad_chi332311 + F33*F33*chi13*dAdgrad_chi333311 + _331311;
        dadgrad_chi(25,19) = F31*F31*chi11*dAdgrad_chi111322 + F31*F31*chi12*dAdgrad_chi112322 + F31*F31*chi13*dAdgrad_chi113322 + F31*F32*chi11*dAdgrad_chi121322 + F31*F32*chi11*dAdgrad_chi211322 + F31*F32*chi12*dAdgrad_chi122322 + F31*F32*chi12*dAdgrad_chi212322 + F31*F32*chi13*dAdgrad_chi123322 + F31*F32*chi13*dAdgrad_chi213322 + F31*F33*chi11*dAdgrad_chi131322 + F31*F33*chi11*dAdgrad_chi311322 + F31*F33*chi12*dAdgrad_chi132322 + F31*F33*chi12*dAdgrad_chi312322 + F31*F33*chi13*dAdgrad_chi133322 + F31*F33*chi13*dAdgrad_chi313322 + F32*F32*chi11*dAdgrad_chi221322 + F32*F32*chi12*dAdgrad_chi222322 + F32*F32*chi13*dAdgrad_chi223322 + F32*F33*chi11*dAdgrad_chi231322 + F32*F33*chi11*dAdgrad_chi321322 + F32*F33*chi12*dAdgrad_chi232322 + F32*F33*chi12*dAdgrad_chi322322 + F32*F33*chi13*dAdgrad_chi233322 + F32*F33*chi13*dAdgrad_chi323322 + F33*F33*chi11*dAdgrad_chi331322 + F33*F33*chi12*dAdgrad_chi332322 + F33*F33*chi13*dAdgrad_chi333322 + _331322;
        dadgrad_chi(25,20) = F31*F31*chi11*dAdgrad_chi111333 + F31*F31*chi12*dAdgrad_chi112333 + F31*F31*chi13*dAdgrad_chi113333 + F31*F32*chi11*dAdgrad_chi121333 + F31*F32*chi11*dAdgrad_chi211333 + F31*F32*chi12*dAdgrad_chi122333 + F31*F32*chi12*dAdgrad_chi212333 + F31*F32*chi13*dAdgrad_chi123333 + F31*F32*chi13*dAdgrad_chi213333 + F31*F33*chi11*dAdgrad_chi131333 + F31*F33*chi11*dAdgrad_chi311333 + F31*F33*chi12*dAdgrad_chi132333 + F31*F33*chi12*dAdgrad_chi312333 + F31*F33*chi13*dAdgrad_chi133333 + F31*F33*chi13*dAdgrad_chi313333 + F32*F32*chi11*dAdgrad_chi221333 + F32*F32*chi12*dAdgrad_chi222333 + F32*F32*chi13*dAdgrad_chi223333 + F32*F33*chi11*dAdgrad_chi231333 + F32*F33*chi11*dAdgrad_chi321333 + F32*F33*chi12*dAdgrad_chi232333 + F32*F33*chi12*dAdgrad_chi322333 + F32*F33*chi13*dAdgrad_chi233333 + F32*F33*chi13*dAdgrad_chi323333 + F33*F33*chi11*dAdgrad_chi331333 + F33*F33*chi12*dAdgrad_chi332333 + F33*F33*chi13*dAdgrad_chi333333 + _331333;
        dadgrad_chi(25,21) = F31*F31*chi11*dAdgrad_chi111323 + F31*F31*chi12*dAdgrad_chi112323 + F31*F31*chi13*dAdgrad_chi113323 + F31*F32*chi11*dAdgrad_chi121323 + F31*F32*chi11*dAdgrad_chi211323 + F31*F32*chi12*dAdgrad_chi122323 + F31*F32*chi12*dAdgrad_chi212323 + F31*F32*chi13*dAdgrad_chi123323 + F31*F32*chi13*dAdgrad_chi213323 + F31*F33*chi11*dAdgrad_chi131323 + F31*F33*chi11*dAdgrad_chi311323 + F31*F33*chi12*dAdgrad_chi132323 + F31*F33*chi12*dAdgrad_chi312323 + F31*F33*chi13*dAdgrad_chi133323 + F31*F33*chi13*dAdgrad_chi313323 + F32*F32*chi11*dAdgrad_chi221323 + F32*F32*chi12*dAdgrad_chi222323 + F32*F32*chi13*dAdgrad_chi223323 + F32*F33*chi11*dAdgrad_chi231323 + F32*F33*chi11*dAdgrad_chi321323 + F32*F33*chi12*dAdgrad_chi232323 + F32*F33*chi12*dAdgrad_chi322323 + F32*F33*chi13*dAdgrad_chi233323 + F32*F33*chi13*dAdgrad_chi323323 + F33*F33*chi11*dAdgrad_chi331323 + F33*F33*chi12*dAdgrad_chi332323 + F33*F33*chi13*dAdgrad_chi333323 + _331323;
        dadgrad_chi(25,22) = F31*F31*chi11*dAdgrad_chi111313 + F31*F31*chi12*dAdgrad_chi112313 + F31*F31*chi13*dAdgrad_chi113313 + F31*F32*chi11*dAdgrad_chi121313 + F31*F32*chi11*dAdgrad_chi211313 + F31*F32*chi12*dAdgrad_chi122313 + F31*F32*chi12*dAdgrad_chi212313 + F31*F32*chi13*dAdgrad_chi123313 + F31*F32*chi13*dAdgrad_chi213313 + F31*F33*chi11*dAdgrad_chi131313 + F31*F33*chi11*dAdgrad_chi311313 + F31*F33*chi12*dAdgrad_chi132313 + F31*F33*chi12*dAdgrad_chi312313 + F31*F33*chi13*dAdgrad_chi133313 + F31*F33*chi13*dAdgrad_chi313313 + F32*F32*chi11*dAdgrad_chi221313 + F32*F32*chi12*dAdgrad_chi222313 + F32*F32*chi13*dAdgrad_chi223313 + F32*F33*chi11*dAdgrad_chi231313 + F32*F33*chi11*dAdgrad_chi321313 + F32*F33*chi12*dAdgrad_chi232313 + F32*F33*chi12*dAdgrad_chi322313 + F32*F33*chi13*dAdgrad_chi233313 + F32*F33*chi13*dAdgrad_chi323313 + F33*F33*chi11*dAdgrad_chi331313 + F33*F33*chi12*dAdgrad_chi332313 + F33*F33*chi13*dAdgrad_chi333313 + _331313;
        dadgrad_chi(25,23) = F31*F31*chi11*dAdgrad_chi111312 + F31*F31*chi12*dAdgrad_chi112312 + F31*F31*chi13*dAdgrad_chi113312 + F31*F32*chi11*dAdgrad_chi121312 + F31*F32*chi11*dAdgrad_chi211312 + F31*F32*chi12*dAdgrad_chi122312 + F31*F32*chi12*dAdgrad_chi212312 + F31*F32*chi13*dAdgrad_chi123312 + F31*F32*chi13*dAdgrad_chi213312 + F31*F33*chi11*dAdgrad_chi131312 + F31*F33*chi11*dAdgrad_chi311312 + F31*F33*chi12*dAdgrad_chi132312 + F31*F33*chi12*dAdgrad_chi312312 + F31*F33*chi13*dAdgrad_chi133312 + F31*F33*chi13*dAdgrad_chi313312 + F32*F32*chi11*dAdgrad_chi221312 + F32*F32*chi12*dAdgrad_chi222312 + F32*F32*chi13*dAdgrad_chi223312 + F32*F33*chi11*dAdgrad_chi231312 + F32*F33*chi11*dAdgrad_chi321312 + F32*F33*chi12*dAdgrad_chi232312 + F32*F33*chi12*dAdgrad_chi322312 + F32*F33*chi13*dAdgrad_chi233312 + F32*F33*chi13*dAdgrad_chi323312 + F33*F33*chi11*dAdgrad_chi331312 + F33*F33*chi12*dAdgrad_chi332312 + F33*F33*chi13*dAdgrad_chi333312 + _331312;
        dadgrad_chi(25,24) = F31*F31*chi11*dAdgrad_chi111332 + F31*F31*chi12*dAdgrad_chi112332 + F31*F31*chi13*dAdgrad_chi113332 + F31*F32*chi11*dAdgrad_chi121332 + F31*F32*chi11*dAdgrad_chi211332 + F31*F32*chi12*dAdgrad_chi122332 + F31*F32*chi12*dAdgrad_chi212332 + F31*F32*chi13*dAdgrad_chi123332 + F31*F32*chi13*dAdgrad_chi213332 + F31*F33*chi11*dAdgrad_chi131332 + F31*F33*chi11*dAdgrad_chi311332 + F31*F33*chi12*dAdgrad_chi132332 + F31*F33*chi12*dAdgrad_chi312332 + F31*F33*chi13*dAdgrad_chi133332 + F31*F33*chi13*dAdgrad_chi313332 + F32*F32*chi11*dAdgrad_chi221332 + F32*F32*chi12*dAdgrad_chi222332 + F32*F32*chi13*dAdgrad_chi223332 + F32*F33*chi11*dAdgrad_chi231332 + F32*F33*chi11*dAdgrad_chi321332 + F32*F33*chi12*dAdgrad_chi232332 + F32*F33*chi12*dAdgrad_chi322332 + F32*F33*chi13*dAdgrad_chi233332 + F32*F33*chi13*dAdgrad_chi323332 + F33*F33*chi11*dAdgrad_chi331332 + F33*F33*chi12*dAdgrad_chi332332 + F33*F33*chi13*dAdgrad_chi333332 + _331332;
        dadgrad_chi(25,25) = F31*F31*chi11*dAdgrad_chi111331 + F31*F31*chi12*dAdgrad_chi112331 + F31*F31*chi13*dAdgrad_chi113331 + F31*F32*chi11*dAdgrad_chi121331 + F31*F32*chi11*dAdgrad_chi211331 + F31*F32*chi12*dAdgrad_chi122331 + F31*F32*chi12*dAdgrad_chi212331 + F31*F32*chi13*dAdgrad_chi123331 + F31*F32*chi13*dAdgrad_chi213331 + F31*F33*chi11*dAdgrad_chi131331 + F31*F33*chi11*dAdgrad_chi311331 + F31*F33*chi12*dAdgrad_chi132331 + F31*F33*chi12*dAdgrad_chi312331 + F31*F33*chi13*dAdgrad_chi133331 + F31*F33*chi13*dAdgrad_chi313331 + F32*F32*chi11*dAdgrad_chi221331 + F32*F32*chi12*dAdgrad_chi222331 + F32*F32*chi13*dAdgrad_chi223331 + F32*F33*chi11*dAdgrad_chi231331 + F32*F33*chi11*dAdgrad_chi321331 + F32*F33*chi12*dAdgrad_chi232331 + F32*F33*chi12*dAdgrad_chi322331 + F32*F33*chi13*dAdgrad_chi233331 + F32*F33*chi13*dAdgrad_chi323331 + F33*F33*chi11*dAdgrad_chi331331 + F33*F33*chi12*dAdgrad_chi332331 + F33*F33*chi13*dAdgrad_chi333331 + _331331;
        dadgrad_chi(25,26) = F31*F31*chi11*dAdgrad_chi111321 + F31*F31*chi12*dAdgrad_chi112321 + F31*F31*chi13*dAdgrad_chi113321 + F31*F32*chi11*dAdgrad_chi121321 + F31*F32*chi11*dAdgrad_chi211321 + F31*F32*chi12*dAdgrad_chi122321 + F31*F32*chi12*dAdgrad_chi212321 + F31*F32*chi13*dAdgrad_chi123321 + F31*F32*chi13*dAdgrad_chi213321 + F31*F33*chi11*dAdgrad_chi131321 + F31*F33*chi11*dAdgrad_chi311321 + F31*F33*chi12*dAdgrad_chi132321 + F31*F33*chi12*dAdgrad_chi312321 + F31*F33*chi13*dAdgrad_chi133321 + F31*F33*chi13*dAdgrad_chi313321 + F32*F32*chi11*dAdgrad_chi221321 + F32*F32*chi12*dAdgrad_chi222321 + F32*F32*chi13*dAdgrad_chi223321 + F32*F33*chi11*dAdgrad_chi231321 + F32*F33*chi11*dAdgrad_chi321321 + F32*F33*chi12*dAdgrad_chi232321 + F32*F33*chi12*dAdgrad_chi322321 + F32*F33*chi13*dAdgrad_chi233321 + F32*F33*chi13*dAdgrad_chi323321 + F33*F33*chi11*dAdgrad_chi331321 + F33*F33*chi12*dAdgrad_chi332321 + F33*F33*chi13*dAdgrad_chi333321 + _331321;
        dadgrad_chi(26,0) = F21*F31*chi11*dAdgrad_chi111111 + F21*F31*chi12*dAdgrad_chi112111 + F21*F31*chi13*dAdgrad_chi113111 + F21*F32*chi11*dAdgrad_chi211111 + F21*F32*chi12*dAdgrad_chi212111 + F21*F32*chi13*dAdgrad_chi213111 + F21*F33*chi11*dAdgrad_chi311111 + F21*F33*chi12*dAdgrad_chi312111 + F21*F33*chi13*dAdgrad_chi313111 + F22*F31*chi11*dAdgrad_chi121111 + F22*F31*chi12*dAdgrad_chi122111 + F22*F31*chi13*dAdgrad_chi123111 + F22*F32*chi11*dAdgrad_chi221111 + F22*F32*chi12*dAdgrad_chi222111 + F22*F32*chi13*dAdgrad_chi223111 + F22*F33*chi11*dAdgrad_chi321111 + F22*F33*chi12*dAdgrad_chi322111 + F22*F33*chi13*dAdgrad_chi323111 + F23*F31*chi11*dAdgrad_chi131111 + F23*F31*chi12*dAdgrad_chi132111 + F23*F31*chi13*dAdgrad_chi133111 + F23*F32*chi11*dAdgrad_chi231111 + F23*F32*chi12*dAdgrad_chi232111 + F23*F32*chi13*dAdgrad_chi233111 + F23*F33*chi11*dAdgrad_chi331111 + F23*F33*chi12*dAdgrad_chi332111 + F23*F33*chi13*dAdgrad_chi333111 + _321111;
        dadgrad_chi(26,1) = F21*F31*chi11*dAdgrad_chi111122 + F21*F31*chi12*dAdgrad_chi112122 + F21*F31*chi13*dAdgrad_chi113122 + F21*F32*chi11*dAdgrad_chi211122 + F21*F32*chi12*dAdgrad_chi212122 + F21*F32*chi13*dAdgrad_chi213122 + F21*F33*chi11*dAdgrad_chi311122 + F21*F33*chi12*dAdgrad_chi312122 + F21*F33*chi13*dAdgrad_chi313122 + F22*F31*chi11*dAdgrad_chi121122 + F22*F31*chi12*dAdgrad_chi122122 + F22*F31*chi13*dAdgrad_chi123122 + F22*F32*chi11*dAdgrad_chi221122 + F22*F32*chi12*dAdgrad_chi222122 + F22*F32*chi13*dAdgrad_chi223122 + F22*F33*chi11*dAdgrad_chi321122 + F22*F33*chi12*dAdgrad_chi322122 + F22*F33*chi13*dAdgrad_chi323122 + F23*F31*chi11*dAdgrad_chi131122 + F23*F31*chi12*dAdgrad_chi132122 + F23*F31*chi13*dAdgrad_chi133122 + F23*F32*chi11*dAdgrad_chi231122 + F23*F32*chi12*dAdgrad_chi232122 + F23*F32*chi13*dAdgrad_chi233122 + F23*F33*chi11*dAdgrad_chi331122 + F23*F33*chi12*dAdgrad_chi332122 + F23*F33*chi13*dAdgrad_chi333122 + _321122;
        dadgrad_chi(26,2) = F21*F31*chi11*dAdgrad_chi111133 + F21*F31*chi12*dAdgrad_chi112133 + F21*F31*chi13*dAdgrad_chi113133 + F21*F32*chi11*dAdgrad_chi211133 + F21*F32*chi12*dAdgrad_chi212133 + F21*F32*chi13*dAdgrad_chi213133 + F21*F33*chi11*dAdgrad_chi311133 + F21*F33*chi12*dAdgrad_chi312133 + F21*F33*chi13*dAdgrad_chi313133 + F22*F31*chi11*dAdgrad_chi121133 + F22*F31*chi12*dAdgrad_chi122133 + F22*F31*chi13*dAdgrad_chi123133 + F22*F32*chi11*dAdgrad_chi221133 + F22*F32*chi12*dAdgrad_chi222133 + F22*F32*chi13*dAdgrad_chi223133 + F22*F33*chi11*dAdgrad_chi321133 + F22*F33*chi12*dAdgrad_chi322133 + F22*F33*chi13*dAdgrad_chi323133 + F23*F31*chi11*dAdgrad_chi131133 + F23*F31*chi12*dAdgrad_chi132133 + F23*F31*chi13*dAdgrad_chi133133 + F23*F32*chi11*dAdgrad_chi231133 + F23*F32*chi12*dAdgrad_chi232133 + F23*F32*chi13*dAdgrad_chi233133 + F23*F33*chi11*dAdgrad_chi331133 + F23*F33*chi12*dAdgrad_chi332133 + F23*F33*chi13*dAdgrad_chi333133 + _321133;
        dadgrad_chi(26,3) = F21*F31*chi11*dAdgrad_chi111123 + F21*F31*chi12*dAdgrad_chi112123 + F21*F31*chi13*dAdgrad_chi113123 + F21*F32*chi11*dAdgrad_chi211123 + F21*F32*chi12*dAdgrad_chi212123 + F21*F32*chi13*dAdgrad_chi213123 + F21*F33*chi11*dAdgrad_chi311123 + F21*F33*chi12*dAdgrad_chi312123 + F21*F33*chi13*dAdgrad_chi313123 + F22*F31*chi11*dAdgrad_chi121123 + F22*F31*chi12*dAdgrad_chi122123 + F22*F31*chi13*dAdgrad_chi123123 + F22*F32*chi11*dAdgrad_chi221123 + F22*F32*chi12*dAdgrad_chi222123 + F22*F32*chi13*dAdgrad_chi223123 + F22*F33*chi11*dAdgrad_chi321123 + F22*F33*chi12*dAdgrad_chi322123 + F22*F33*chi13*dAdgrad_chi323123 + F23*F31*chi11*dAdgrad_chi131123 + F23*F31*chi12*dAdgrad_chi132123 + F23*F31*chi13*dAdgrad_chi133123 + F23*F32*chi11*dAdgrad_chi231123 + F23*F32*chi12*dAdgrad_chi232123 + F23*F32*chi13*dAdgrad_chi233123 + F23*F33*chi11*dAdgrad_chi331123 + F23*F33*chi12*dAdgrad_chi332123 + F23*F33*chi13*dAdgrad_chi333123 + _321123;
        dadgrad_chi(26,4) = F21*F31*chi11*dAdgrad_chi111113 + F21*F31*chi12*dAdgrad_chi112113 + F21*F31*chi13*dAdgrad_chi113113 + F21*F32*chi11*dAdgrad_chi211113 + F21*F32*chi12*dAdgrad_chi212113 + F21*F32*chi13*dAdgrad_chi213113 + F21*F33*chi11*dAdgrad_chi311113 + F21*F33*chi12*dAdgrad_chi312113 + F21*F33*chi13*dAdgrad_chi313113 + F22*F31*chi11*dAdgrad_chi121113 + F22*F31*chi12*dAdgrad_chi122113 + F22*F31*chi13*dAdgrad_chi123113 + F22*F32*chi11*dAdgrad_chi221113 + F22*F32*chi12*dAdgrad_chi222113 + F22*F32*chi13*dAdgrad_chi223113 + F22*F33*chi11*dAdgrad_chi321113 + F22*F33*chi12*dAdgrad_chi322113 + F22*F33*chi13*dAdgrad_chi323113 + F23*F31*chi11*dAdgrad_chi131113 + F23*F31*chi12*dAdgrad_chi132113 + F23*F31*chi13*dAdgrad_chi133113 + F23*F32*chi11*dAdgrad_chi231113 + F23*F32*chi12*dAdgrad_chi232113 + F23*F32*chi13*dAdgrad_chi233113 + F23*F33*chi11*dAdgrad_chi331113 + F23*F33*chi12*dAdgrad_chi332113 + F23*F33*chi13*dAdgrad_chi333113 + _321113;
        dadgrad_chi(26,5) = F21*F31*chi11*dAdgrad_chi111112 + F21*F31*chi12*dAdgrad_chi112112 + F21*F31*chi13*dAdgrad_chi113112 + F21*F32*chi11*dAdgrad_chi211112 + F21*F32*chi12*dAdgrad_chi212112 + F21*F32*chi13*dAdgrad_chi213112 + F21*F33*chi11*dAdgrad_chi311112 + F21*F33*chi12*dAdgrad_chi312112 + F21*F33*chi13*dAdgrad_chi313112 + F22*F31*chi11*dAdgrad_chi121112 + F22*F31*chi12*dAdgrad_chi122112 + F22*F31*chi13*dAdgrad_chi123112 + F22*F32*chi11*dAdgrad_chi221112 + F22*F32*chi12*dAdgrad_chi222112 + F22*F32*chi13*dAdgrad_chi223112 + F22*F33*chi11*dAdgrad_chi321112 + F22*F33*chi12*dAdgrad_chi322112 + F22*F33*chi13*dAdgrad_chi323112 + F23*F31*chi11*dAdgrad_chi131112 + F23*F31*chi12*dAdgrad_chi132112 + F23*F31*chi13*dAdgrad_chi133112 + F23*F32*chi11*dAdgrad_chi231112 + F23*F32*chi12*dAdgrad_chi232112 + F23*F32*chi13*dAdgrad_chi233112 + F23*F33*chi11*dAdgrad_chi331112 + F23*F33*chi12*dAdgrad_chi332112 + F23*F33*chi13*dAdgrad_chi333112 + _321112;
        dadgrad_chi(26,6) = F21*F31*chi11*dAdgrad_chi111132 + F21*F31*chi12*dAdgrad_chi112132 + F21*F31*chi13*dAdgrad_chi113132 + F21*F32*chi11*dAdgrad_chi211132 + F21*F32*chi12*dAdgrad_chi212132 + F21*F32*chi13*dAdgrad_chi213132 + F21*F33*chi11*dAdgrad_chi311132 + F21*F33*chi12*dAdgrad_chi312132 + F21*F33*chi13*dAdgrad_chi313132 + F22*F31*chi11*dAdgrad_chi121132 + F22*F31*chi12*dAdgrad_chi122132 + F22*F31*chi13*dAdgrad_chi123132 + F22*F32*chi11*dAdgrad_chi221132 + F22*F32*chi12*dAdgrad_chi222132 + F22*F32*chi13*dAdgrad_chi223132 + F22*F33*chi11*dAdgrad_chi321132 + F22*F33*chi12*dAdgrad_chi322132 + F22*F33*chi13*dAdgrad_chi323132 + F23*F31*chi11*dAdgrad_chi131132 + F23*F31*chi12*dAdgrad_chi132132 + F23*F31*chi13*dAdgrad_chi133132 + F23*F32*chi11*dAdgrad_chi231132 + F23*F32*chi12*dAdgrad_chi232132 + F23*F32*chi13*dAdgrad_chi233132 + F23*F33*chi11*dAdgrad_chi331132 + F23*F33*chi12*dAdgrad_chi332132 + F23*F33*chi13*dAdgrad_chi333132 + _321132;
        dadgrad_chi(26,7) = F21*F31*chi11*dAdgrad_chi111131 + F21*F31*chi12*dAdgrad_chi112131 + F21*F31*chi13*dAdgrad_chi113131 + F21*F32*chi11*dAdgrad_chi211131 + F21*F32*chi12*dAdgrad_chi212131 + F21*F32*chi13*dAdgrad_chi213131 + F21*F33*chi11*dAdgrad_chi311131 + F21*F33*chi12*dAdgrad_chi312131 + F21*F33*chi13*dAdgrad_chi313131 + F22*F31*chi11*dAdgrad_chi121131 + F22*F31*chi12*dAdgrad_chi122131 + F22*F31*chi13*dAdgrad_chi123131 + F22*F32*chi11*dAdgrad_chi221131 + F22*F32*chi12*dAdgrad_chi222131 + F22*F32*chi13*dAdgrad_chi223131 + F22*F33*chi11*dAdgrad_chi321131 + F22*F33*chi12*dAdgrad_chi322131 + F22*F33*chi13*dAdgrad_chi323131 + F23*F31*chi11*dAdgrad_chi131131 + F23*F31*chi12*dAdgrad_chi132131 + F23*F31*chi13*dAdgrad_chi133131 + F23*F32*chi11*dAdgrad_chi231131 + F23*F32*chi12*dAdgrad_chi232131 + F23*F32*chi13*dAdgrad_chi233131 + F23*F33*chi11*dAdgrad_chi331131 + F23*F33*chi12*dAdgrad_chi332131 + F23*F33*chi13*dAdgrad_chi333131 + _321131;
        dadgrad_chi(26,8) = F21*F31*chi11*dAdgrad_chi111121 + F21*F31*chi12*dAdgrad_chi112121 + F21*F31*chi13*dAdgrad_chi113121 + F21*F32*chi11*dAdgrad_chi211121 + F21*F32*chi12*dAdgrad_chi212121 + F21*F32*chi13*dAdgrad_chi213121 + F21*F33*chi11*dAdgrad_chi311121 + F21*F33*chi12*dAdgrad_chi312121 + F21*F33*chi13*dAdgrad_chi313121 + F22*F31*chi11*dAdgrad_chi121121 + F22*F31*chi12*dAdgrad_chi122121 + F22*F31*chi13*dAdgrad_chi123121 + F22*F32*chi11*dAdgrad_chi221121 + F22*F32*chi12*dAdgrad_chi222121 + F22*F32*chi13*dAdgrad_chi223121 + F22*F33*chi11*dAdgrad_chi321121 + F22*F33*chi12*dAdgrad_chi322121 + F22*F33*chi13*dAdgrad_chi323121 + F23*F31*chi11*dAdgrad_chi131121 + F23*F31*chi12*dAdgrad_chi132121 + F23*F31*chi13*dAdgrad_chi133121 + F23*F32*chi11*dAdgrad_chi231121 + F23*F32*chi12*dAdgrad_chi232121 + F23*F32*chi13*dAdgrad_chi233121 + F23*F33*chi11*dAdgrad_chi331121 + F23*F33*chi12*dAdgrad_chi332121 + F23*F33*chi13*dAdgrad_chi333121 + _321121;
        dadgrad_chi(26,9) = F21*F31*chi11*dAdgrad_chi111211 + F21*F31*chi12*dAdgrad_chi112211 + F21*F31*chi13*dAdgrad_chi113211 + F21*F32*chi11*dAdgrad_chi211211 + F21*F32*chi12*dAdgrad_chi212211 + F21*F32*chi13*dAdgrad_chi213211 + F21*F33*chi11*dAdgrad_chi311211 + F21*F33*chi12*dAdgrad_chi312211 + F21*F33*chi13*dAdgrad_chi313211 + F22*F31*chi11*dAdgrad_chi121211 + F22*F31*chi12*dAdgrad_chi122211 + F22*F31*chi13*dAdgrad_chi123211 + F22*F32*chi11*dAdgrad_chi221211 + F22*F32*chi12*dAdgrad_chi222211 + F22*F32*chi13*dAdgrad_chi223211 + F22*F33*chi11*dAdgrad_chi321211 + F22*F33*chi12*dAdgrad_chi322211 + F22*F33*chi13*dAdgrad_chi323211 + F23*F31*chi11*dAdgrad_chi131211 + F23*F31*chi12*dAdgrad_chi132211 + F23*F31*chi13*dAdgrad_chi133211 + F23*F32*chi11*dAdgrad_chi231211 + F23*F32*chi12*dAdgrad_chi232211 + F23*F32*chi13*dAdgrad_chi233211 + F23*F33*chi11*dAdgrad_chi331211 + F23*F33*chi12*dAdgrad_chi332211 + F23*F33*chi13*dAdgrad_chi333211 + _321211;
        dadgrad_chi(26,10) = F21*F31*chi11*dAdgrad_chi111222 + F21*F31*chi12*dAdgrad_chi112222 + F21*F31*chi13*dAdgrad_chi113222 + F21*F32*chi11*dAdgrad_chi211222 + F21*F32*chi12*dAdgrad_chi212222 + F21*F32*chi13*dAdgrad_chi213222 + F21*F33*chi11*dAdgrad_chi311222 + F21*F33*chi12*dAdgrad_chi312222 + F21*F33*chi13*dAdgrad_chi313222 + F22*F31*chi11*dAdgrad_chi121222 + F22*F31*chi12*dAdgrad_chi122222 + F22*F31*chi13*dAdgrad_chi123222 + F22*F32*chi11*dAdgrad_chi221222 + F22*F32*chi12*dAdgrad_chi222222 + F22*F32*chi13*dAdgrad_chi223222 + F22*F33*chi11*dAdgrad_chi321222 + F22*F33*chi12*dAdgrad_chi322222 + F22*F33*chi13*dAdgrad_chi323222 + F23*F31*chi11*dAdgrad_chi131222 + F23*F31*chi12*dAdgrad_chi132222 + F23*F31*chi13*dAdgrad_chi133222 + F23*F32*chi11*dAdgrad_chi231222 + F23*F32*chi12*dAdgrad_chi232222 + F23*F32*chi13*dAdgrad_chi233222 + F23*F33*chi11*dAdgrad_chi331222 + F23*F33*chi12*dAdgrad_chi332222 + F23*F33*chi13*dAdgrad_chi333222 + _321222;
        dadgrad_chi(26,11) = F21*F31*chi11*dAdgrad_chi111233 + F21*F31*chi12*dAdgrad_chi112233 + F21*F31*chi13*dAdgrad_chi113233 + F21*F32*chi11*dAdgrad_chi211233 + F21*F32*chi12*dAdgrad_chi212233 + F21*F32*chi13*dAdgrad_chi213233 + F21*F33*chi11*dAdgrad_chi311233 + F21*F33*chi12*dAdgrad_chi312233 + F21*F33*chi13*dAdgrad_chi313233 + F22*F31*chi11*dAdgrad_chi121233 + F22*F31*chi12*dAdgrad_chi122233 + F22*F31*chi13*dAdgrad_chi123233 + F22*F32*chi11*dAdgrad_chi221233 + F22*F32*chi12*dAdgrad_chi222233 + F22*F32*chi13*dAdgrad_chi223233 + F22*F33*chi11*dAdgrad_chi321233 + F22*F33*chi12*dAdgrad_chi322233 + F22*F33*chi13*dAdgrad_chi323233 + F23*F31*chi11*dAdgrad_chi131233 + F23*F31*chi12*dAdgrad_chi132233 + F23*F31*chi13*dAdgrad_chi133233 + F23*F32*chi11*dAdgrad_chi231233 + F23*F32*chi12*dAdgrad_chi232233 + F23*F32*chi13*dAdgrad_chi233233 + F23*F33*chi11*dAdgrad_chi331233 + F23*F33*chi12*dAdgrad_chi332233 + F23*F33*chi13*dAdgrad_chi333233 + _321233;
        dadgrad_chi(26,12) = F21*F31*chi11*dAdgrad_chi111223 + F21*F31*chi12*dAdgrad_chi112223 + F21*F31*chi13*dAdgrad_chi113223 + F21*F32*chi11*dAdgrad_chi211223 + F21*F32*chi12*dAdgrad_chi212223 + F21*F32*chi13*dAdgrad_chi213223 + F21*F33*chi11*dAdgrad_chi311223 + F21*F33*chi12*dAdgrad_chi312223 + F21*F33*chi13*dAdgrad_chi313223 + F22*F31*chi11*dAdgrad_chi121223 + F22*F31*chi12*dAdgrad_chi122223 + F22*F31*chi13*dAdgrad_chi123223 + F22*F32*chi11*dAdgrad_chi221223 + F22*F32*chi12*dAdgrad_chi222223 + F22*F32*chi13*dAdgrad_chi223223 + F22*F33*chi11*dAdgrad_chi321223 + F22*F33*chi12*dAdgrad_chi322223 + F22*F33*chi13*dAdgrad_chi323223 + F23*F31*chi11*dAdgrad_chi131223 + F23*F31*chi12*dAdgrad_chi132223 + F23*F31*chi13*dAdgrad_chi133223 + F23*F32*chi11*dAdgrad_chi231223 + F23*F32*chi12*dAdgrad_chi232223 + F23*F32*chi13*dAdgrad_chi233223 + F23*F33*chi11*dAdgrad_chi331223 + F23*F33*chi12*dAdgrad_chi332223 + F23*F33*chi13*dAdgrad_chi333223 + _321223;
        dadgrad_chi(26,13) = F21*F31*chi11*dAdgrad_chi111213 + F21*F31*chi12*dAdgrad_chi112213 + F21*F31*chi13*dAdgrad_chi113213 + F21*F32*chi11*dAdgrad_chi211213 + F21*F32*chi12*dAdgrad_chi212213 + F21*F32*chi13*dAdgrad_chi213213 + F21*F33*chi11*dAdgrad_chi311213 + F21*F33*chi12*dAdgrad_chi312213 + F21*F33*chi13*dAdgrad_chi313213 + F22*F31*chi11*dAdgrad_chi121213 + F22*F31*chi12*dAdgrad_chi122213 + F22*F31*chi13*dAdgrad_chi123213 + F22*F32*chi11*dAdgrad_chi221213 + F22*F32*chi12*dAdgrad_chi222213 + F22*F32*chi13*dAdgrad_chi223213 + F22*F33*chi11*dAdgrad_chi321213 + F22*F33*chi12*dAdgrad_chi322213 + F22*F33*chi13*dAdgrad_chi323213 + F23*F31*chi11*dAdgrad_chi131213 + F23*F31*chi12*dAdgrad_chi132213 + F23*F31*chi13*dAdgrad_chi133213 + F23*F32*chi11*dAdgrad_chi231213 + F23*F32*chi12*dAdgrad_chi232213 + F23*F32*chi13*dAdgrad_chi233213 + F23*F33*chi11*dAdgrad_chi331213 + F23*F33*chi12*dAdgrad_chi332213 + F23*F33*chi13*dAdgrad_chi333213 + _321213;
        dadgrad_chi(26,14) = F21*F31*chi11*dAdgrad_chi111212 + F21*F31*chi12*dAdgrad_chi112212 + F21*F31*chi13*dAdgrad_chi113212 + F21*F32*chi11*dAdgrad_chi211212 + F21*F32*chi12*dAdgrad_chi212212 + F21*F32*chi13*dAdgrad_chi213212 + F21*F33*chi11*dAdgrad_chi311212 + F21*F33*chi12*dAdgrad_chi312212 + F21*F33*chi13*dAdgrad_chi313212 + F22*F31*chi11*dAdgrad_chi121212 + F22*F31*chi12*dAdgrad_chi122212 + F22*F31*chi13*dAdgrad_chi123212 + F22*F32*chi11*dAdgrad_chi221212 + F22*F32*chi12*dAdgrad_chi222212 + F22*F32*chi13*dAdgrad_chi223212 + F22*F33*chi11*dAdgrad_chi321212 + F22*F33*chi12*dAdgrad_chi322212 + F22*F33*chi13*dAdgrad_chi323212 + F23*F31*chi11*dAdgrad_chi131212 + F23*F31*chi12*dAdgrad_chi132212 + F23*F31*chi13*dAdgrad_chi133212 + F23*F32*chi11*dAdgrad_chi231212 + F23*F32*chi12*dAdgrad_chi232212 + F23*F32*chi13*dAdgrad_chi233212 + F23*F33*chi11*dAdgrad_chi331212 + F23*F33*chi12*dAdgrad_chi332212 + F23*F33*chi13*dAdgrad_chi333212 + _321212;
        dadgrad_chi(26,15) = F21*F31*chi11*dAdgrad_chi111232 + F21*F31*chi12*dAdgrad_chi112232 + F21*F31*chi13*dAdgrad_chi113232 + F21*F32*chi11*dAdgrad_chi211232 + F21*F32*chi12*dAdgrad_chi212232 + F21*F32*chi13*dAdgrad_chi213232 + F21*F33*chi11*dAdgrad_chi311232 + F21*F33*chi12*dAdgrad_chi312232 + F21*F33*chi13*dAdgrad_chi313232 + F22*F31*chi11*dAdgrad_chi121232 + F22*F31*chi12*dAdgrad_chi122232 + F22*F31*chi13*dAdgrad_chi123232 + F22*F32*chi11*dAdgrad_chi221232 + F22*F32*chi12*dAdgrad_chi222232 + F22*F32*chi13*dAdgrad_chi223232 + F22*F33*chi11*dAdgrad_chi321232 + F22*F33*chi12*dAdgrad_chi322232 + F22*F33*chi13*dAdgrad_chi323232 + F23*F31*chi11*dAdgrad_chi131232 + F23*F31*chi12*dAdgrad_chi132232 + F23*F31*chi13*dAdgrad_chi133232 + F23*F32*chi11*dAdgrad_chi231232 + F23*F32*chi12*dAdgrad_chi232232 + F23*F32*chi13*dAdgrad_chi233232 + F23*F33*chi11*dAdgrad_chi331232 + F23*F33*chi12*dAdgrad_chi332232 + F23*F33*chi13*dAdgrad_chi333232 + _321232;
        dadgrad_chi(26,16) = F21*F31*chi11*dAdgrad_chi111231 + F21*F31*chi12*dAdgrad_chi112231 + F21*F31*chi13*dAdgrad_chi113231 + F21*F32*chi11*dAdgrad_chi211231 + F21*F32*chi12*dAdgrad_chi212231 + F21*F32*chi13*dAdgrad_chi213231 + F21*F33*chi11*dAdgrad_chi311231 + F21*F33*chi12*dAdgrad_chi312231 + F21*F33*chi13*dAdgrad_chi313231 + F22*F31*chi11*dAdgrad_chi121231 + F22*F31*chi12*dAdgrad_chi122231 + F22*F31*chi13*dAdgrad_chi123231 + F22*F32*chi11*dAdgrad_chi221231 + F22*F32*chi12*dAdgrad_chi222231 + F22*F32*chi13*dAdgrad_chi223231 + F22*F33*chi11*dAdgrad_chi321231 + F22*F33*chi12*dAdgrad_chi322231 + F22*F33*chi13*dAdgrad_chi323231 + F23*F31*chi11*dAdgrad_chi131231 + F23*F31*chi12*dAdgrad_chi132231 + F23*F31*chi13*dAdgrad_chi133231 + F23*F32*chi11*dAdgrad_chi231231 + F23*F32*chi12*dAdgrad_chi232231 + F23*F32*chi13*dAdgrad_chi233231 + F23*F33*chi11*dAdgrad_chi331231 + F23*F33*chi12*dAdgrad_chi332231 + F23*F33*chi13*dAdgrad_chi333231 + _321231;
        dadgrad_chi(26,17) = F21*F31*chi11*dAdgrad_chi111221 + F21*F31*chi12*dAdgrad_chi112221 + F21*F31*chi13*dAdgrad_chi113221 + F21*F32*chi11*dAdgrad_chi211221 + F21*F32*chi12*dAdgrad_chi212221 + F21*F32*chi13*dAdgrad_chi213221 + F21*F33*chi11*dAdgrad_chi311221 + F21*F33*chi12*dAdgrad_chi312221 + F21*F33*chi13*dAdgrad_chi313221 + F22*F31*chi11*dAdgrad_chi121221 + F22*F31*chi12*dAdgrad_chi122221 + F22*F31*chi13*dAdgrad_chi123221 + F22*F32*chi11*dAdgrad_chi221221 + F22*F32*chi12*dAdgrad_chi222221 + F22*F32*chi13*dAdgrad_chi223221 + F22*F33*chi11*dAdgrad_chi321221 + F22*F33*chi12*dAdgrad_chi322221 + F22*F33*chi13*dAdgrad_chi323221 + F23*F31*chi11*dAdgrad_chi131221 + F23*F31*chi12*dAdgrad_chi132221 + F23*F31*chi13*dAdgrad_chi133221 + F23*F32*chi11*dAdgrad_chi231221 + F23*F32*chi12*dAdgrad_chi232221 + F23*F32*chi13*dAdgrad_chi233221 + F23*F33*chi11*dAdgrad_chi331221 + F23*F33*chi12*dAdgrad_chi332221 + F23*F33*chi13*dAdgrad_chi333221 + _321221;
        dadgrad_chi(26,18) = F21*F31*chi11*dAdgrad_chi111311 + F21*F31*chi12*dAdgrad_chi112311 + F21*F31*chi13*dAdgrad_chi113311 + F21*F32*chi11*dAdgrad_chi211311 + F21*F32*chi12*dAdgrad_chi212311 + F21*F32*chi13*dAdgrad_chi213311 + F21*F33*chi11*dAdgrad_chi311311 + F21*F33*chi12*dAdgrad_chi312311 + F21*F33*chi13*dAdgrad_chi313311 + F22*F31*chi11*dAdgrad_chi121311 + F22*F31*chi12*dAdgrad_chi122311 + F22*F31*chi13*dAdgrad_chi123311 + F22*F32*chi11*dAdgrad_chi221311 + F22*F32*chi12*dAdgrad_chi222311 + F22*F32*chi13*dAdgrad_chi223311 + F22*F33*chi11*dAdgrad_chi321311 + F22*F33*chi12*dAdgrad_chi322311 + F22*F33*chi13*dAdgrad_chi323311 + F23*F31*chi11*dAdgrad_chi131311 + F23*F31*chi12*dAdgrad_chi132311 + F23*F31*chi13*dAdgrad_chi133311 + F23*F32*chi11*dAdgrad_chi231311 + F23*F32*chi12*dAdgrad_chi232311 + F23*F32*chi13*dAdgrad_chi233311 + F23*F33*chi11*dAdgrad_chi331311 + F23*F33*chi12*dAdgrad_chi332311 + F23*F33*chi13*dAdgrad_chi333311 + _321311;
        dadgrad_chi(26,19) = F21*F31*chi11*dAdgrad_chi111322 + F21*F31*chi12*dAdgrad_chi112322 + F21*F31*chi13*dAdgrad_chi113322 + F21*F32*chi11*dAdgrad_chi211322 + F21*F32*chi12*dAdgrad_chi212322 + F21*F32*chi13*dAdgrad_chi213322 + F21*F33*chi11*dAdgrad_chi311322 + F21*F33*chi12*dAdgrad_chi312322 + F21*F33*chi13*dAdgrad_chi313322 + F22*F31*chi11*dAdgrad_chi121322 + F22*F31*chi12*dAdgrad_chi122322 + F22*F31*chi13*dAdgrad_chi123322 + F22*F32*chi11*dAdgrad_chi221322 + F22*F32*chi12*dAdgrad_chi222322 + F22*F32*chi13*dAdgrad_chi223322 + F22*F33*chi11*dAdgrad_chi321322 + F22*F33*chi12*dAdgrad_chi322322 + F22*F33*chi13*dAdgrad_chi323322 + F23*F31*chi11*dAdgrad_chi131322 + F23*F31*chi12*dAdgrad_chi132322 + F23*F31*chi13*dAdgrad_chi133322 + F23*F32*chi11*dAdgrad_chi231322 + F23*F32*chi12*dAdgrad_chi232322 + F23*F32*chi13*dAdgrad_chi233322 + F23*F33*chi11*dAdgrad_chi331322 + F23*F33*chi12*dAdgrad_chi332322 + F23*F33*chi13*dAdgrad_chi333322 + _321322;
        dadgrad_chi(26,20) = F21*F31*chi11*dAdgrad_chi111333 + F21*F31*chi12*dAdgrad_chi112333 + F21*F31*chi13*dAdgrad_chi113333 + F21*F32*chi11*dAdgrad_chi211333 + F21*F32*chi12*dAdgrad_chi212333 + F21*F32*chi13*dAdgrad_chi213333 + F21*F33*chi11*dAdgrad_chi311333 + F21*F33*chi12*dAdgrad_chi312333 + F21*F33*chi13*dAdgrad_chi313333 + F22*F31*chi11*dAdgrad_chi121333 + F22*F31*chi12*dAdgrad_chi122333 + F22*F31*chi13*dAdgrad_chi123333 + F22*F32*chi11*dAdgrad_chi221333 + F22*F32*chi12*dAdgrad_chi222333 + F22*F32*chi13*dAdgrad_chi223333 + F22*F33*chi11*dAdgrad_chi321333 + F22*F33*chi12*dAdgrad_chi322333 + F22*F33*chi13*dAdgrad_chi323333 + F23*F31*chi11*dAdgrad_chi131333 + F23*F31*chi12*dAdgrad_chi132333 + F23*F31*chi13*dAdgrad_chi133333 + F23*F32*chi11*dAdgrad_chi231333 + F23*F32*chi12*dAdgrad_chi232333 + F23*F32*chi13*dAdgrad_chi233333 + F23*F33*chi11*dAdgrad_chi331333 + F23*F33*chi12*dAdgrad_chi332333 + F23*F33*chi13*dAdgrad_chi333333 + _321333;
        dadgrad_chi(26,21) = F21*F31*chi11*dAdgrad_chi111323 + F21*F31*chi12*dAdgrad_chi112323 + F21*F31*chi13*dAdgrad_chi113323 + F21*F32*chi11*dAdgrad_chi211323 + F21*F32*chi12*dAdgrad_chi212323 + F21*F32*chi13*dAdgrad_chi213323 + F21*F33*chi11*dAdgrad_chi311323 + F21*F33*chi12*dAdgrad_chi312323 + F21*F33*chi13*dAdgrad_chi313323 + F22*F31*chi11*dAdgrad_chi121323 + F22*F31*chi12*dAdgrad_chi122323 + F22*F31*chi13*dAdgrad_chi123323 + F22*F32*chi11*dAdgrad_chi221323 + F22*F32*chi12*dAdgrad_chi222323 + F22*F32*chi13*dAdgrad_chi223323 + F22*F33*chi11*dAdgrad_chi321323 + F22*F33*chi12*dAdgrad_chi322323 + F22*F33*chi13*dAdgrad_chi323323 + F23*F31*chi11*dAdgrad_chi131323 + F23*F31*chi12*dAdgrad_chi132323 + F23*F31*chi13*dAdgrad_chi133323 + F23*F32*chi11*dAdgrad_chi231323 + F23*F32*chi12*dAdgrad_chi232323 + F23*F32*chi13*dAdgrad_chi233323 + F23*F33*chi11*dAdgrad_chi331323 + F23*F33*chi12*dAdgrad_chi332323 + F23*F33*chi13*dAdgrad_chi333323 + _321323;
        dadgrad_chi(26,22) = F21*F31*chi11*dAdgrad_chi111313 + F21*F31*chi12*dAdgrad_chi112313 + F21*F31*chi13*dAdgrad_chi113313 + F21*F32*chi11*dAdgrad_chi211313 + F21*F32*chi12*dAdgrad_chi212313 + F21*F32*chi13*dAdgrad_chi213313 + F21*F33*chi11*dAdgrad_chi311313 + F21*F33*chi12*dAdgrad_chi312313 + F21*F33*chi13*dAdgrad_chi313313 + F22*F31*chi11*dAdgrad_chi121313 + F22*F31*chi12*dAdgrad_chi122313 + F22*F31*chi13*dAdgrad_chi123313 + F22*F32*chi11*dAdgrad_chi221313 + F22*F32*chi12*dAdgrad_chi222313 + F22*F32*chi13*dAdgrad_chi223313 + F22*F33*chi11*dAdgrad_chi321313 + F22*F33*chi12*dAdgrad_chi322313 + F22*F33*chi13*dAdgrad_chi323313 + F23*F31*chi11*dAdgrad_chi131313 + F23*F31*chi12*dAdgrad_chi132313 + F23*F31*chi13*dAdgrad_chi133313 + F23*F32*chi11*dAdgrad_chi231313 + F23*F32*chi12*dAdgrad_chi232313 + F23*F32*chi13*dAdgrad_chi233313 + F23*F33*chi11*dAdgrad_chi331313 + F23*F33*chi12*dAdgrad_chi332313 + F23*F33*chi13*dAdgrad_chi333313 + _321313;
        dadgrad_chi(26,23) = F21*F31*chi11*dAdgrad_chi111312 + F21*F31*chi12*dAdgrad_chi112312 + F21*F31*chi13*dAdgrad_chi113312 + F21*F32*chi11*dAdgrad_chi211312 + F21*F32*chi12*dAdgrad_chi212312 + F21*F32*chi13*dAdgrad_chi213312 + F21*F33*chi11*dAdgrad_chi311312 + F21*F33*chi12*dAdgrad_chi312312 + F21*F33*chi13*dAdgrad_chi313312 + F22*F31*chi11*dAdgrad_chi121312 + F22*F31*chi12*dAdgrad_chi122312 + F22*F31*chi13*dAdgrad_chi123312 + F22*F32*chi11*dAdgrad_chi221312 + F22*F32*chi12*dAdgrad_chi222312 + F22*F32*chi13*dAdgrad_chi223312 + F22*F33*chi11*dAdgrad_chi321312 + F22*F33*chi12*dAdgrad_chi322312 + F22*F33*chi13*dAdgrad_chi323312 + F23*F31*chi11*dAdgrad_chi131312 + F23*F31*chi12*dAdgrad_chi132312 + F23*F31*chi13*dAdgrad_chi133312 + F23*F32*chi11*dAdgrad_chi231312 + F23*F32*chi12*dAdgrad_chi232312 + F23*F32*chi13*dAdgrad_chi233312 + F23*F33*chi11*dAdgrad_chi331312 + F23*F33*chi12*dAdgrad_chi332312 + F23*F33*chi13*dAdgrad_chi333312 + _321312;
        dadgrad_chi(26,24) = F21*F31*chi11*dAdgrad_chi111332 + F21*F31*chi12*dAdgrad_chi112332 + F21*F31*chi13*dAdgrad_chi113332 + F21*F32*chi11*dAdgrad_chi211332 + F21*F32*chi12*dAdgrad_chi212332 + F21*F32*chi13*dAdgrad_chi213332 + F21*F33*chi11*dAdgrad_chi311332 + F21*F33*chi12*dAdgrad_chi312332 + F21*F33*chi13*dAdgrad_chi313332 + F22*F31*chi11*dAdgrad_chi121332 + F22*F31*chi12*dAdgrad_chi122332 + F22*F31*chi13*dAdgrad_chi123332 + F22*F32*chi11*dAdgrad_chi221332 + F22*F32*chi12*dAdgrad_chi222332 + F22*F32*chi13*dAdgrad_chi223332 + F22*F33*chi11*dAdgrad_chi321332 + F22*F33*chi12*dAdgrad_chi322332 + F22*F33*chi13*dAdgrad_chi323332 + F23*F31*chi11*dAdgrad_chi131332 + F23*F31*chi12*dAdgrad_chi132332 + F23*F31*chi13*dAdgrad_chi133332 + F23*F32*chi11*dAdgrad_chi231332 + F23*F32*chi12*dAdgrad_chi232332 + F23*F32*chi13*dAdgrad_chi233332 + F23*F33*chi11*dAdgrad_chi331332 + F23*F33*chi12*dAdgrad_chi332332 + F23*F33*chi13*dAdgrad_chi333332 + _321332;
        dadgrad_chi(26,25) = F21*F31*chi11*dAdgrad_chi111331 + F21*F31*chi12*dAdgrad_chi112331 + F21*F31*chi13*dAdgrad_chi113331 + F21*F32*chi11*dAdgrad_chi211331 + F21*F32*chi12*dAdgrad_chi212331 + F21*F32*chi13*dAdgrad_chi213331 + F21*F33*chi11*dAdgrad_chi311331 + F21*F33*chi12*dAdgrad_chi312331 + F21*F33*chi13*dAdgrad_chi313331 + F22*F31*chi11*dAdgrad_chi121331 + F22*F31*chi12*dAdgrad_chi122331 + F22*F31*chi13*dAdgrad_chi123331 + F22*F32*chi11*dAdgrad_chi221331 + F22*F32*chi12*dAdgrad_chi222331 + F22*F32*chi13*dAdgrad_chi223331 + F22*F33*chi11*dAdgrad_chi321331 + F22*F33*chi12*dAdgrad_chi322331 + F22*F33*chi13*dAdgrad_chi323331 + F23*F31*chi11*dAdgrad_chi131331 + F23*F31*chi12*dAdgrad_chi132331 + F23*F31*chi13*dAdgrad_chi133331 + F23*F32*chi11*dAdgrad_chi231331 + F23*F32*chi12*dAdgrad_chi232331 + F23*F32*chi13*dAdgrad_chi233331 + F23*F33*chi11*dAdgrad_chi331331 + F23*F33*chi12*dAdgrad_chi332331 + F23*F33*chi13*dAdgrad_chi333331 + _321331;
        dadgrad_chi(26,26) = F21*F31*chi11*dAdgrad_chi111321 + F21*F31*chi12*dAdgrad_chi112321 + F21*F31*chi13*dAdgrad_chi113321 + F21*F32*chi11*dAdgrad_chi211321 + F21*F32*chi12*dAdgrad_chi212321 + F21*F32*chi13*dAdgrad_chi213321 + F21*F33*chi11*dAdgrad_chi311321 + F21*F33*chi12*dAdgrad_chi312321 + F21*F33*chi13*dAdgrad_chi313321 + F22*F31*chi11*dAdgrad_chi121321 + F22*F31*chi12*dAdgrad_chi122321 + F22*F31*chi13*dAdgrad_chi123321 + F22*F32*chi11*dAdgrad_chi221321 + F22*F32*chi12*dAdgrad_chi222321 + F22*F32*chi13*dAdgrad_chi223321 + F22*F33*chi11*dAdgrad_chi321321 + F22*F33*chi12*dAdgrad_chi322321 + F22*F33*chi13*dAdgrad_chi323321 + F23*F31*chi11*dAdgrad_chi131321 + F23*F31*chi12*dAdgrad_chi132321 + F23*F31*chi13*dAdgrad_chi133321 + F23*F32*chi11*dAdgrad_chi231321 + F23*F32*chi12*dAdgrad_chi232321 + F23*F32*chi13*dAdgrad_chi233321 + F23*F33*chi11*dAdgrad_chi331321 + F23*F33*chi12*dAdgrad_chi332321 + F23*F33*chi13*dAdgrad_chi333321 + _321321;


        dadgrad_chi /= J;
        
    }
   
}
