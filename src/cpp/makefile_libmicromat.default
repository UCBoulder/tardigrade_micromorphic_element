#Compiler option
CC=COMPILER_COMMAND

#Standard option
STD=-std=gnu++11

#Compiler flags
CFLAGS=-I. -O3 -flto -fpic -Wall

#Include Eigen Library
EIGEN = -I EIGEN_LOCATION

#Object files to produce (Add your model's object file output here)
OBJ = micromorphic_material_library.o deformation_measures.o
OBJ += micromorphic_linear_elasticity_voigt.o

#Debugging flag
DBG =
ifeq ($(METHOD),dbg)
        DBG = -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -g
endif
ifeq ($(METHOD),oprof)
        DBG = -pg
endif

#Define the objects made by the makefile
OBJECTS = libmicromat.so libmicromat.so.1 micromorphic_material_library.o deformation_measures.o micromorphic_linear_elasticity_voigt.o

#Terminate after N errors
ERRORFLG=-fmax-errors=5

all: libmicromat.so

libmicromat.so: libmicromat.so.1
	ln -s libmicromat.so.1 $@

libmicromat.so.1: $(OBJ)
	$(CC) $(STD) -shared -Wl,-soname,libmicromat.so.1 -o $@ $^ $(CFLAGS) $(EIGEN) $(ERRORFLG) $(DBG)

micromorphic_material_library.o: micromorphic_material_library.h micromorphic_material_library.cpp
	$(CC) $(STD) -o $@ -c micromorphic_material_library.cpp $(CFLAGS) $(EIGEN) $(ERRORFLG) $(DBG)

deformation_measures.o: deformation_measures.h deformation_measures.cpp
	$(CC) $(STD) -o $@ -c deformation_measures.cpp $(CFLAGS) $(EIGEN) $(ERRORFLG) $(DBG)

#Material Models included in the library follow here
#If you add a new material model make sure you add it
#to the linker at the top which generates the shared library

micromorphic_linear_elasticity_voigt.o: micromorphic_linear_elasticity_voigt.h micromorphic_linear_elasticity_voigt.cpp deformation_measures.h
	$(CC) $(STD) -o $@ -c micromorphic_linear_elasticity_voigt.cpp $(CFLAGS) $(EIGEN) $(ERRORFLG) $(DBG)

clean:
	rm $(OBJECTS)

.PHONY: all clean
