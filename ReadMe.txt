####################
# Micromorphic_UEL #
####################

------------------------------------------------------
Developed by:                 | Nathan A. Miller     |
------------------------------|----------------------|
Contact info:                 | nathanm@lanl.gov     |
------------------------------|----------------------|
Under the supervision of:     | Dr. Richard Regueiro |
                              | The University of    |
                              | Colorado at Boulder  |
------------------------------------------------------

An implementation of a micromorphic hex8 element. The form is 
intended to be used for easy implementation into an Abaqus 
user element (UEL).

## Python Requirements

Requires default python libraries (python.org) as well as numpy (numpy.org). These packages are 
available for download in a convenient package at www.continuum.io/downloads.

## LaTeX Requirements

The documentation requires an installation of LaTeX and Bibtex. It is assumed that the commands for these 
functions are pdflatex and bibtex respectively

### LaTeX packages include:

#### Report/Users Manual/Programmers Manual:
\usepackage{listings, color, subcaption, placeins}
\usepackage{undertilde}
\usepackage{algorithm,algpseudocode}
\usepackage{multicol}
\usepackage{makecell}
\usepackage[table]{colortbl}

#### Theory Manual:

beamer theme Pittsburg
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{undertilde}
\usepackage{bm}
\usepackage{subcaption}

## Code Setup

The code can be tested and the documentation generated by issuing the command >python setup.py
where "python" is the call to the python 2.7 installation. The results of the tests can be viewed in
the directory .\doc\Report\

A full test of the code can be executed with the command >python run_tests.py -v

where "python" is the call to the python 2.7 installation. This will run the unittest module 
which will execute the test functions in the code. The -v option allows more information to 
be printed to the screen. This is useful to understand which tests are being executed.



